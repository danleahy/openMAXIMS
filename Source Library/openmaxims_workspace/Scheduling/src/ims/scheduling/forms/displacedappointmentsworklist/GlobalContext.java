//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.forms.displacedappointmentsworklist;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		Core = new CoreContext(context);
		RefMan = new RefManContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getDisplacedAppointmentsSearchCriteriaIsNotNull()
		{
			return !cx_SchedulingDisplacedAppointmentsSearchCriteria.getValueIsNull(context);
		}
		public ims.scheduling.vo.DisplacedAppointmentsSearchCriteriaVo getDisplacedAppointmentsSearchCriteria()
		{
			return (ims.scheduling.vo.DisplacedAppointmentsSearchCriteriaVo)cx_SchedulingDisplacedAppointmentsSearchCriteria.getValue(context);
		}
		public void setDisplacedAppointmentsSearchCriteria(ims.scheduling.vo.DisplacedAppointmentsSearchCriteriaVo value)
		{
			cx_SchedulingDisplacedAppointmentsSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingDisplacedAppointmentsSearchCriteria = new ims.framework.ContextVariable("Scheduling.DisplacedAppointmentsSearchCriteria", "_cvp_Scheduling.DisplacedAppointmentsSearchCriteria");
		public boolean getSelectedHCPsIsNotNull()
		{
			return !cx_SchedulingSelectedHCPs.getValueIsNull(context);
		}
		public ims.core.vo.HcpLiteVoCollection getSelectedHCPs()
		{
			return (ims.core.vo.HcpLiteVoCollection)cx_SchedulingSelectedHCPs.getValue(context);
		}
		public void setSelectedHCPs(ims.core.vo.HcpLiteVoCollection value)
		{
			cx_SchedulingSelectedHCPs.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingSelectedHCPs = new ims.framework.ContextVariable("Scheduling.SelectedHCPs", "_cv_Scheduling.SelectedHCPs");
		public boolean getBookingAppointmentIsNotNull()
		{
			return !cx_SchedulingBookingAppointment.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentVo getBookingAppointment()
		{
			return (ims.scheduling.vo.Booking_AppointmentVo)cx_SchedulingBookingAppointment.getValue(context);
		}
		public void setBookingAppointment(ims.scheduling.vo.Booking_AppointmentVo value)
		{
			cx_SchedulingBookingAppointment.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingAppointment = new ims.framework.ContextVariable("Scheduling.BookingAppointment", "_cv_Scheduling.BookingAppointment");
		public boolean getBookingActivityIsNotNull()
		{
			return !cx_SchedulingBookingActivity.getValueIsNull(context);
		}
		public ims.core.resource.place.vo.ActivityRefVo getBookingActivity()
		{
			return (ims.core.resource.place.vo.ActivityRefVo)cx_SchedulingBookingActivity.getValue(context);
		}
		public void setBookingActivity(ims.core.resource.place.vo.ActivityRefVo value)
		{
			cx_SchedulingBookingActivity.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingActivity = new ims.framework.ContextVariable("Scheduling.BookingActivity", "_cv_Scheduling.BookingActivity");
		public boolean getBookingHospitalIsNotNull()
		{
			return !cx_SchedulingBookingHospital.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVo getBookingHospital()
		{
			return (ims.core.vo.LocationLiteVo)cx_SchedulingBookingHospital.getValue(context);
		}
		public void setBookingHospital(ims.core.vo.LocationLiteVo value)
		{
			cx_SchedulingBookingHospital.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingHospital = new ims.framework.ContextVariable("Scheduling.BookingHospital", "_cv_Scheduling.BookingHospital");
		public boolean getBookingListTypeIsNotNull()
		{
			return !cx_SchedulingBookingListType.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.ProfileListType getBookingListType()
		{
			return (ims.scheduling.vo.lookups.ProfileListType)cx_SchedulingBookingListType.getValue(context);
		}
		public void setBookingListType(ims.scheduling.vo.lookups.ProfileListType value)
		{
			cx_SchedulingBookingListType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingListType = new ims.framework.ContextVariable("Scheduling.BookingListType", "_cv_Scheduling.BookingListType");
		public boolean getBookingLocationIsNotNull()
		{
			return !cx_SchedulingBookingLocation.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVo getBookingLocation()
		{
			return (ims.core.vo.LocationLiteVo)cx_SchedulingBookingLocation.getValue(context);
		}
		public void setBookingLocation(ims.core.vo.LocationLiteVo value)
		{
			cx_SchedulingBookingLocation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingLocation = new ims.framework.ContextVariable("Scheduling.BookingLocation", "_cv_Scheduling.BookingLocation");
		public boolean getBookingUrgencyIsNotNull()
		{
			return !cx_SchedulingBookingUrgency.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.SchedulingPriority getBookingUrgency()
		{
			return (ims.scheduling.vo.lookups.SchedulingPriority)cx_SchedulingBookingUrgency.getValue(context);
		}
		public void setBookingUrgency(ims.scheduling.vo.lookups.SchedulingPriority value)
		{
			cx_SchedulingBookingUrgency.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingUrgency = new ims.framework.ContextVariable("Scheduling.BookingUrgency", "_cv_Scheduling.BookingUrgency");
		public boolean getBookingServiceIsNotNull()
		{
			return !cx_SchedulingBookingService.getValueIsNull(context);
		}
		public ims.core.clinical.vo.ServiceRefVo getBookingService()
		{
			return (ims.core.clinical.vo.ServiceRefVo)cx_SchedulingBookingService.getValue(context);
		}
		public void setBookingService(ims.core.clinical.vo.ServiceRefVo value)
		{
			cx_SchedulingBookingService.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingService = new ims.framework.ContextVariable("Scheduling.BookingService", "_cv_Scheduling.BookingService");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");

		private ims.framework.Context context;
	}

	public SchedulingContext Scheduling;
	public CoreContext Core;
	public RefManContext RefMan;
}
