//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.forms.futureappointmentworklist;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		RefMan = new RefManContext(context);
		Core = new CoreContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getBookingAppointmentRefIsNotNull()
		{
			return !cx_SchedulingBookingAppointmentRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentRefVo getBookingAppointmentRef()
		{
			return (ims.scheduling.vo.Booking_AppointmentRefVo)cx_SchedulingBookingAppointmentRef.getValue(context);
		}
		public void setBookingAppointmentRef(ims.scheduling.vo.Booking_AppointmentRefVo value)
		{
			cx_SchedulingBookingAppointmentRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingAppointmentRef = new ims.framework.ContextVariable("Scheduling.BookingAppointmentRef", "_cv_Scheduling.BookingAppointmentRef");
		public boolean getFutureAppointmentWorklistSearchCriteriaIsNotNull()
		{
			return !cx_SchedulingFutureAppointmentWorklistSearchCriteria.getValueIsNull(context);
		}
		public ims.scheduling.vo.FutureAppointmentWorklistSearchCriteriaVo getFutureAppointmentWorklistSearchCriteria()
		{
			return (ims.scheduling.vo.FutureAppointmentWorklistSearchCriteriaVo)cx_SchedulingFutureAppointmentWorklistSearchCriteria.getValue(context);
		}
		public void setFutureAppointmentWorklistSearchCriteria(ims.scheduling.vo.FutureAppointmentWorklistSearchCriteriaVo value)
		{
			cx_SchedulingFutureAppointmentWorklistSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingFutureAppointmentWorklistSearchCriteria = new ims.framework.ContextVariable("Scheduling.FutureAppointmentWorklistSearchCriteria", "_cvp_Scheduling.FutureAppointmentWorklistSearchCriteria");
		public boolean getServiceFunctionRefIsNotNull()
		{
			return !cx_SchedulingServiceFunctionRef.getValueIsNull(context);
		}
		public ims.core.clinical.vo.ServiceFunctionRefVo getServiceFunctionRef()
		{
			return (ims.core.clinical.vo.ServiceFunctionRefVo)cx_SchedulingServiceFunctionRef.getValue(context);
		}
		public void setServiceFunctionRef(ims.core.clinical.vo.ServiceFunctionRefVo value)
		{
			cx_SchedulingServiceFunctionRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingServiceFunctionRef = new ims.framework.ContextVariable("Scheduling.ServiceFunctionRef", "_cv_Scheduling.ServiceFunctionRef");
		public boolean getFutureAppointmentRemovalIsNotNull()
		{
			return !cx_SchedulingFutureAppointmentRemoval.getValueIsNull(context);
		}
		public ims.scheduling.vo.FutureAppointmentRemovalVo getFutureAppointmentRemoval()
		{
			return (ims.scheduling.vo.FutureAppointmentRemovalVo)cx_SchedulingFutureAppointmentRemoval.getValue(context);
		}
		public void setFutureAppointmentRemoval(ims.scheduling.vo.FutureAppointmentRemovalVo value)
		{
			cx_SchedulingFutureAppointmentRemoval.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingFutureAppointmentRemoval = new ims.framework.ContextVariable("Scheduling.FutureAppointmentRemoval", "_cv_Scheduling.FutureAppointmentRemoval");
		public boolean getBookingServiceIsNotNull()
		{
			return !cx_SchedulingBookingService.getValueIsNull(context);
		}
		public ims.core.clinical.vo.ServiceRefVo getBookingService()
		{
			return (ims.core.clinical.vo.ServiceRefVo)cx_SchedulingBookingService.getValue(context);
		}
		public void setBookingService(ims.core.clinical.vo.ServiceRefVo value)
		{
			cx_SchedulingBookingService.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingService = new ims.framework.ContextVariable("Scheduling.BookingService", "_cv_Scheduling.BookingService");
		public boolean getFutureAppointmentDetailsIsNotNull()
		{
			return !cx_SchedulingFutureAppointmentDetails.getValueIsNull(context);
		}
		public ims.scheduling.vo.FutureAppointmentDetailsVo getFutureAppointmentDetails()
		{
			return (ims.scheduling.vo.FutureAppointmentDetailsVo)cx_SchedulingFutureAppointmentDetails.getValue(context);
		}
		public void setFutureAppointmentDetails(ims.scheduling.vo.FutureAppointmentDetailsVo value)
		{
			cx_SchedulingFutureAppointmentDetails.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingFutureAppointmentDetails = new ims.framework.ContextVariable("Scheduling.FutureAppointmentDetails", "_cv_Scheduling.FutureAppointmentDetails");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");
		public boolean getAppointmentSavedIsNotNull()
		{
			return !cx_RefManAppointmentSaved.getValueIsNull(context);
		}
		public Boolean getAppointmentSaved()
		{
			return (Boolean)cx_RefManAppointmentSaved.getValue(context);
		}
		public void setAppointmentSaved(Boolean value)
		{
			cx_RefManAppointmentSaved.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManAppointmentSaved = new ims.framework.ContextVariable("RefMan.AppointmentSaved", "_cv_RefMan.AppointmentSaved");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");

		private ims.framework.Context context;
	}

	public SchedulingContext Scheduling;
	public RefManContext RefMan;
	public CoreContext Core;
}
