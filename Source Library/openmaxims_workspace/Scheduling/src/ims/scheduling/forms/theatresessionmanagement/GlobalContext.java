//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.forms.theatresessionmanagement;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		Core = new CoreContext(context);
		ChooseAndBook = new ChooseAndBookContext(context);
		RefMan = new RefManContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getSessionParentChildSlotIsNotNull()
		{
			return !cx_SchedulingSessionParentChildSlot.getValueIsNull(context);
		}
		public ims.scheduling.vo.SessionParentChildSlotVo getSessionParentChildSlot()
		{
			return (ims.scheduling.vo.SessionParentChildSlotVo)cx_SchedulingSessionParentChildSlot.getValue(context);
		}
		public void setSessionParentChildSlot(ims.scheduling.vo.SessionParentChildSlotVo value)
		{
			cx_SchedulingSessionParentChildSlot.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingSessionParentChildSlot = new ims.framework.ContextVariable("Scheduling.SessionParentChildSlot", "_cv_Scheduling.SessionParentChildSlot");
		public boolean getSelectedHCPsIsNotNull()
		{
			return !cx_SchedulingSelectedHCPs.getValueIsNull(context);
		}
		public ims.core.vo.HcpLiteVoCollection getSelectedHCPs()
		{
			return (ims.core.vo.HcpLiteVoCollection)cx_SchedulingSelectedHCPs.getValue(context);
		}
		public void setSelectedHCPs(ims.core.vo.HcpLiteVoCollection value)
		{
			cx_SchedulingSelectedHCPs.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingSelectedHCPs = new ims.framework.ContextVariable("Scheduling.SelectedHCPs", "_cv_Scheduling.SelectedHCPs");
		public boolean getCancelBlockReasonForSessionManagementIsNotNull()
		{
			return !cx_SchedulingCancelBlockReasonForSessionManagement.getValueIsNull(context);
		}
		public ims.scheduling.vo.CancelBlockReasonForSessionManagementVo getCancelBlockReasonForSessionManagement()
		{
			return (ims.scheduling.vo.CancelBlockReasonForSessionManagementVo)cx_SchedulingCancelBlockReasonForSessionManagement.getValue(context);
		}
		public void setCancelBlockReasonForSessionManagement(ims.scheduling.vo.CancelBlockReasonForSessionManagementVo value)
		{
			cx_SchedulingCancelBlockReasonForSessionManagement.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingCancelBlockReasonForSessionManagement = new ims.framework.ContextVariable("Scheduling.CancelBlockReasonForSessionManagement", "_cv_Scheduling.CancelBlockReasonForSessionManagement");
		public boolean getTheatreProcedureIsNotNull()
		{
			return !cx_SchedulingTheatreProcedure.getValueIsNull(context);
		}
		public ims.core.vo.ProcedureLiteVo getTheatreProcedure()
		{
			return (ims.core.vo.ProcedureLiteVo)cx_SchedulingTheatreProcedure.getValue(context);
		}
		public void setTheatreProcedure(ims.core.vo.ProcedureLiteVo value)
		{
			cx_SchedulingTheatreProcedure.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreProcedure = new ims.framework.ContextVariable("Scheduling.TheatreProcedure", "_cv_Scheduling.TheatreProcedure");
		public boolean getTheatreConsultantIsNotNull()
		{
			return !cx_SchedulingTheatreConsultant.getValueIsNull(context);
		}
		public ims.vo.interfaces.IMos getTheatreConsultant()
		{
			return (ims.vo.interfaces.IMos)cx_SchedulingTheatreConsultant.getValue(context);
		}
		public void setTheatreConsultant(ims.vo.interfaces.IMos value)
		{
			cx_SchedulingTheatreConsultant.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreConsultant = new ims.framework.ContextVariable("Scheduling.TheatreConsultant", "_cv_Scheduling.TheatreConsultant");
		public boolean getTheatreServiceIsNotNull()
		{
			return !cx_SchedulingTheatreService.getValueIsNull(context);
		}
		public ims.core.vo.ServiceLiteVo getTheatreService()
		{
			return (ims.core.vo.ServiceLiteVo)cx_SchedulingTheatreService.getValue(context);
		}
		public void setTheatreService(ims.core.vo.ServiceLiteVo value)
		{
			cx_SchedulingTheatreService.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreService = new ims.framework.ContextVariable("Scheduling.TheatreService", "_cv_Scheduling.TheatreService");
		public boolean getTheatreAppointmentIsNotNull()
		{
			return !cx_SchedulingTheatreAppointment.getValueIsNull(context);
		}
		public ims.scheduling.vo.BookingAppointmentTheatreVo getTheatreAppointment()
		{
			return (ims.scheduling.vo.BookingAppointmentTheatreVo)cx_SchedulingTheatreAppointment.getValue(context);
		}
		public void setTheatreAppointment(ims.scheduling.vo.BookingAppointmentTheatreVo value)
		{
			cx_SchedulingTheatreAppointment.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreAppointment = new ims.framework.ContextVariable("Scheduling.TheatreAppointment", "_cv_Scheduling.TheatreAppointment");
		public boolean getTheatreTypeIsNotNull()
		{
			return !cx_SchedulingTheatreType.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.TheatreType getTheatreType()
		{
			return (ims.scheduling.vo.lookups.TheatreType)cx_SchedulingTheatreType.getValue(context);
		}
		public void setTheatreType(ims.scheduling.vo.lookups.TheatreType value)
		{
			cx_SchedulingTheatreType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreType = new ims.framework.ContextVariable("Scheduling.TheatreType", "_cv_Scheduling.TheatreType");
		public boolean getTheatreSessionManagementSearchCriteriaIsNotNull()
		{
			return !cx_SchedulingTheatreSessionManagementSearchCriteria.getValueIsNull(context);
		}
		public ims.scheduling.vo.SessionManagementSearchCriteriaVo getTheatreSessionManagementSearchCriteria()
		{
			return (ims.scheduling.vo.SessionManagementSearchCriteriaVo)cx_SchedulingTheatreSessionManagementSearchCriteria.getValue(context);
		}
		public void setTheatreSessionManagementSearchCriteria(ims.scheduling.vo.SessionManagementSearchCriteriaVo value)
		{
			cx_SchedulingTheatreSessionManagementSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreSessionManagementSearchCriteria = new ims.framework.ContextVariable("Scheduling.TheatreSessionManagementSearchCriteria", "_cvp_Scheduling.TheatreSessionManagementSearchCriteria");
		public boolean getApptCancelStatusIsNotNull()
		{
			return !cx_SchedulingApptCancelStatus.getValueIsNull(context);
		}
		public ims.scheduling.vo.Appointment_StatusVo getApptCancelStatus()
		{
			return (ims.scheduling.vo.Appointment_StatusVo)cx_SchedulingApptCancelStatus.getValue(context);
		}
		public void setApptCancelStatus(ims.scheduling.vo.Appointment_StatusVo value)
		{
			cx_SchedulingApptCancelStatus.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingApptCancelStatus = new ims.framework.ContextVariable("Scheduling.ApptCancelStatus", "_cv_Scheduling.ApptCancelStatus");
		public boolean getBookingAppointmentRefIsNotNull()
		{
			return !cx_SchedulingBookingAppointmentRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentRefVo getBookingAppointmentRef()
		{
			return (ims.scheduling.vo.Booking_AppointmentRefVo)cx_SchedulingBookingAppointmentRef.getValue(context);
		}
		public void setBookingAppointmentRef(ims.scheduling.vo.Booking_AppointmentRefVo value)
		{
			cx_SchedulingBookingAppointmentRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingAppointmentRef = new ims.framework.ContextVariable("Scheduling.BookingAppointmentRef", "_cv_Scheduling.BookingAppointmentRef");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCommentDialogStringIsNotNull()
		{
			return !cx_CoreCommentDialogString.getValueIsNull(context);
		}
		public String getCommentDialogString()
		{
			return (String)cx_CoreCommentDialogString.getValue(context);
		}
		public void setCommentDialogString(String value)
		{
			cx_CoreCommentDialogString.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCommentDialogString = new ims.framework.ContextVariable("Core.CommentDialogString", "_cv_Core.CommentDialogString");
		public boolean getCommentDialogTitleIsNotNull()
		{
			return !cx_CoreCommentDialogTitle.getValueIsNull(context);
		}
		public String getCommentDialogTitle()
		{
			return (String)cx_CoreCommentDialogTitle.getValue(context);
		}
		public void setCommentDialogTitle(String value)
		{
			cx_CoreCommentDialogTitle.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCommentDialogTitle = new ims.framework.ContextVariable("Core.CommentDialogTitle", "_cv_Core.CommentDialogTitle");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}
	public final class ChooseAndBookContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ChooseAndBookContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getisCABApptIsNotNull()
		{
			return !cx_ChooseAndBookisCABAppt.getValueIsNull(context);
		}
		public Boolean getisCABAppt()
		{
			return (Boolean)cx_ChooseAndBookisCABAppt.getValue(context);
		}
		public void setisCABAppt(Boolean value)
		{
			cx_ChooseAndBookisCABAppt.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookisCABAppt = new ims.framework.ContextVariable("ChooseAndBook.isCABAppt", "_cv_ChooseAndBook.isCABAppt");
		public boolean getSessionSlotStatusReasonIsNotNull()
		{
			return !cx_ChooseAndBookSessionSlotStatusReason.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.Status_Reason getSessionSlotStatusReason()
		{
			return (ims.scheduling.vo.lookups.Status_Reason)cx_ChooseAndBookSessionSlotStatusReason.getValue(context);
		}
		public void setSessionSlotStatusReason(ims.scheduling.vo.lookups.Status_Reason value)
		{
			cx_ChooseAndBookSessionSlotStatusReason.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookSessionSlotStatusReason = new ims.framework.ContextVariable("ChooseAndBook.SessionSlotStatusReason", "_cv_ChooseAndBook.SessionSlotStatusReason");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");

		private ims.framework.Context context;
	}
	public boolean getPatientShortIsNotNull()
	{
		return !cx_PatientShort.getValueIsNull(context);
	}
	public ims.core.vo.PatientShort getPatientShort()
	{
		return (ims.core.vo.PatientShort)cx_PatientShort.getValue(context);
	}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
		cx_PatientShort.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_PatientShort = new ims.framework.ContextVariable("PatientShort", "_cv_PatientShort");

	public SchedulingContext Scheduling;
	public CoreContext Core;
	public ChooseAndBookContext ChooseAndBook;
	public RefManContext RefMan;
}
