//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Florin Blindu using IMS Development Environment (version 1.80 build 5527.24259)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.

package ims.scheduling.domain.impl;

import ims.core.clinical.domain.objects.ServiceFunction;
import ims.core.vo.domain.ServiceFunctionLiteVoAssembler;
import ims.domain.DomainFactory;
import ims.scheduling.domain.CancelAppointmentDialog;
import ims.scheduling.domain.ProfileMaintenance;
import ims.scheduling.domain.base.impl.BaseInactivateProfileSlotsImpl;
import ims.scheduling.vo.CancellationTypeReasonVoCollection;
import ims.scheduling.vo.lookups.Status_Reason;

public class InactivateProfileSlotsImpl extends BaseInactivateProfileSlotsImpl
{

	private static final long serialVersionUID = 1L;

	public ims.scheduling.vo.ProfileRippleVo save(ims.scheduling.vo.ProfileRippleVo profileRippleToSave) throws ims.domain.exceptions.StaleObjectException
	{
		ProfileMaintenance impl = (ProfileMaintenance) getDomainImpl(ProfileMaintenanceImpl.class);
		return impl.saveProfileRipple(profileRippleToSave);
	}

	public ims.core.vo.ServiceFunctionLiteVo getServiceFunction(ims.core.clinical.vo.ServiceFunctionRefVo serviceFunctionRef)
	{
		DomainFactory factory = getDomainFactory();
		
		ServiceFunction domServiceFunction = (ServiceFunction)factory.getDomainObject(ServiceFunction.class, serviceFunctionRef.getID_ServiceFunction());
		return ServiceFunctionLiteVoAssembler.create(domServiceFunction);
	}

	public CancellationTypeReasonVoCollection listCancellationReasonByType(Status_Reason statusReasonType)
	{
		CancelAppointmentDialog impl = (CancelAppointmentDialog) getDomainImpl(CancelAppointmentDialogImpl.class);
		return impl.listCancellationReasonByType(statusReasonType,true,false);
	}
}
