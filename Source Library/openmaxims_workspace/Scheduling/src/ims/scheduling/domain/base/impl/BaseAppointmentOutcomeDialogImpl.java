//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseAppointmentOutcomeDialogImpl extends DomainImpl implements ims.scheduling.domain.AppointmentOutcomeDialog, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatesaveBookingAppointment(ims.scheduling.vo.BookingAppointmentOutcomeVo appt, ims.RefMan.vo.PatientElectiveListDetailsToSaveVo patientElectiveListToSave, ims.pathways.vo.EventLiteVo firstDefinitiveTreatmentEvent, Boolean wasMarkedAsSeen, ims.RefMan.vo.CatsReferralRefVo parrentCatsReferral, ims.scheduling.vo.enums.AppointmentOutcomeAction appointmentAction)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.BookingAppointmentOutcomeVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatethereAreActivePatientElectiveListsForCurrentCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validateisCurrentPathwayClockActive(ims.scheduling.vo.Booking_AppointmentRefVo bookAppointment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientProcedure(ims.core.clinical.vo.PatientProcedureRefVo patientProcedureRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContext(ims.scheduling.vo.Booking_AppointmentRefVo bookApptId)
	{
	}

	@SuppressWarnings("unused")
	public void validategetAppointmentOutcomeConfigByApptOutcomeLookup(ims.scheduling.vo.lookups.ApptOutcome apptOutcomeLookup)
	{
	}

	@SuppressWarnings("unused")
	public void validatehasReferralActivePatientElectiveList(ims.scheduling.vo.Booking_AppointmentRefVo bookApptRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientDiagnosis(ims.core.clinical.vo.PatientDiagnosisRefVo patientDiagnosisRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.scheduling.vo.Booking_AppointmentRefVo bookApptRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatehasTCI(ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}

	@SuppressWarnings("unused")
	public void validateundoAppointmentOutcome(ims.scheduling.vo.Booking_AppointmentRefVo appointmentRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetChildReferralForTransferOfCareVo(ims.RefMan.vo.CatsReferralRefVo catsReferralRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveChildCatsReferralForTransferOfCare(ims.RefMan.vo.CatsReferralForRequestServiceVo chillCatsReferralForTransferOfCare, ims.RefMan.vo.CatsReferralRefVo parentRef, ims.scheduling.vo.BookingAppointmentOutcomeVo appointment)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAppointmentOutcomeByAppointmentStatusAndRTTSTatus(ims.scheduling.vo.lookups.Status_Reason appointmentStatus, ims.pathways.configuration.vo.RTTStatusPointRefVo statusPoint)
	{
		if(appointmentStatus == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appointmentStatus' of type 'ims.scheduling.vo.lookups.Status_Reason' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetListOwnersForSession(String value, ims.scheduling.vo.Sch_SessionRefVo session)
	{
	}

	@SuppressWarnings("unused")
	public void validategetFormMenuAction(Integer formID)
	{
	}

	@SuppressWarnings("unused")
	public void validatemarkAsRIE_OutcomeAndActions(ims.scheduling.vo.Booking_AppointmentRefVo bookingAppointment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetParentCatsReferrall(ims.RefMan.vo.CatsReferralRefVo referral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetParentCatsReferrall(ims.scheduling.vo.Booking_AppointmentRefVo bookingAppointment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetMasterCatsReferral(ims.RefMan.vo.CatsReferralRefVo referral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetRTTStatus(ims.pathways.vo.PathwayRTTStatusRefVo rttStatus)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAppointmentOutcomeByAppointmentStatus(ims.scheduling.vo.lookups.Status_Reason appointmentStatus)
	{
		if(appointmentStatus == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appointmentStatus' of type 'ims.scheduling.vo.lookups.Status_Reason' cannot be null.");
	}
}
