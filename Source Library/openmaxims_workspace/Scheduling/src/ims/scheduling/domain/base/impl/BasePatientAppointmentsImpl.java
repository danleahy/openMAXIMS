//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BasePatientAppointmentsImpl extends DomainImpl implements ims.scheduling.domain.PatientAppointments, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistBookingAppointmentByPatientAndDates(ims.core.patient.vo.PatientRefVo patient, ims.framework.utils.Date apptFromDate, ims.framework.utils.Date appToDate)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveBookingAppt(ims.scheduling.vo.Booking_AppointmentShortVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetServiceAndActivityByAppt(ims.scheduling.vo.Booking_AppointmentRefVo appt, Boolean isFlexible)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralForAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralForCancelledAppt(ims.RefMan.vo.CatsReferralRefVo catsRef)
	{
		if(catsRef == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsRef' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralForCancelledAppt(ims.RefMan.vo.CatsReferralRefVo catsRef, ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(catsRef == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsRef' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetServiceProcedureConsultantByAppt(ims.scheduling.vo.Booking_AppointmentShortVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSession(ims.scheduling.vo.Sch_SessionRefVo sessionRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTheatreAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAppointmentHistory(ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}

	@SuppressWarnings("unused")
	public void validateisReferralICPCompleted(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralStatus(ims.scheduling.vo.Booking_AppointmentRefVo appointmentRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelTCIAndReferralEROD(ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.Booking_AppointmentRefVo apptRef,  ims.scheduling.vo.lookups.CancelAppointmentReason cancellationReason, String cancellationComments, Boolean isProviderCancellation, Boolean isPatientCancellation, Boolean cancelledForNonmedicalReason)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveListForAppt(ims.scheduling.vo.Booking_AppointmentRefVo bookApptRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPendingEmergencyTheatreForAppt(ims.scheduling.vo.Booking_AppointmentRefVo apptRefVo)
	{
	}
}
