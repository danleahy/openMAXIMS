//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.domain;

// Generated from form domain impl
public interface AppointmentOutcomeDialog extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	/**
	* saveBookingAppointment
	*/
	public void saveBookingAppointment(ims.scheduling.vo.BookingAppointmentOutcomeVo appt, ims.RefMan.vo.PatientElectiveListDetailsToSaveVo patientElectiveListToSave, ims.pathways.vo.EventLiteVo firstDefinitiveTreatmentEvent, Boolean wasMarkedAsSeen, ims.RefMan.vo.CatsReferralRefVo parrentCatsReferral, ims.scheduling.vo.enums.AppointmentOutcomeAction appointmentAction) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* getBookingAppointment
	*/
	public ims.scheduling.vo.BookingAppointmentOutcomeVo getBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt);

	// Generated from form domain interface definition
	public Boolean thereAreActivePatientElectiveListsForCurrentCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsRef);

	// Generated from form domain interface definition
	public Boolean isCurrentPathwayClockActive(ims.scheduling.vo.Booking_AppointmentRefVo bookAppointment);

	// Generated from form domain interface definition
	public ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVo getPatientProcedure(ims.core.clinical.vo.PatientProcedureRefVo patientProcedureRef);

	// Generated from form domain interface definition
	public ims.core.vo.CareContextShortVo getCareContext(ims.scheduling.vo.Booking_AppointmentRefVo bookApptId);

	// Generated from form domain interface definition
	public ims.admin.vo.AppointmentOutcomeConfigVo getAppointmentOutcomeConfigByApptOutcomeLookup(ims.scheduling.vo.lookups.ApptOutcome apptOutcomeLookup);

	// Generated from form domain interface definition
	public Boolean hasReferralActivePatientElectiveList(ims.scheduling.vo.Booking_AppointmentRefVo bookApptRef);

	// Generated from form domain interface definition
	public ims.RefMan.vo.PatientDiagnosisForAppointmentOutcomeVo getPatientDiagnosis(ims.core.clinical.vo.PatientDiagnosisRefVo patientDiagnosisRef);

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralForSessionManagementVo getCatsReferral(ims.scheduling.vo.Booking_AppointmentRefVo bookApptRef);

	// Generated from form domain interface definition
	public Boolean hasTCI(ims.scheduling.vo.Booking_AppointmentRefVo appointment);

	// Generated from form domain interface definition
	/**
	* Method used to undo the appointment outcome.
	* CAUTION: It will throw a DomainInterfaceException if the the outcome of the appointment had an RTT Clock Impact
	*/
	public Integer undoAppointmentOutcome(ims.scheduling.vo.Booking_AppointmentRefVo appointmentRef) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralForRequestServiceVo getChildReferralForTransferOfCareVo(ims.RefMan.vo.CatsReferralRefVo catsReferralRef);

	// Generated from form domain interface definition
	public void saveChildCatsReferralForTransferOfCare(ims.RefMan.vo.CatsReferralForRequestServiceVo chillCatsReferralForTransferOfCare, ims.RefMan.vo.CatsReferralRefVo parentRef, ims.scheduling.vo.BookingAppointmentOutcomeVo appointment) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* Return the possible list of appointment outcomes based on the current appointment status and RTT status
	*/
	public ims.admin.vo.AppointmentOutcomeConfigVoCollection listAppointmentOutcomeByAppointmentStatusAndRTTSTatus(ims.scheduling.vo.lookups.Status_Reason appointmentStatus, ims.pathways.configuration.vo.RTTStatusPointRefVo statusPoint);

	// Generated from form domain interface definition
	public ims.core.vo.HcpLiteVoCollection getListOwnersForSession(String value, ims.scheduling.vo.Sch_SessionRefVo session);

	// Generated from form domain interface definition
	public ims.emergency.vo.AppFormForTrackingVo getFormMenuAction(Integer formID);

	// Generated from form domain interface definition
	public Integer markAsRIE_OutcomeAndActions(ims.scheduling.vo.Booking_AppointmentRefVo bookingAppointment) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralParentVo getParentCatsReferrall(ims.RefMan.vo.CatsReferralRefVo referral);

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralParentVo getParentCatsReferrall(ims.scheduling.vo.Booking_AppointmentRefVo bookingAppointment);

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralMasterVo getMasterCatsReferral(ims.RefMan.vo.CatsReferralRefVo referral);

	// Generated from form domain interface definition
	public ims.pathways.vo.PathwayRTTStatusVo getRTTStatus(ims.pathways.vo.PathwayRTTStatusRefVo rttStatus);

	// Generated from form domain interface definition
	/**
	* Return the possible list of appointment outcomes based on the current appointment status and RTT status
	*/
	public ims.admin.vo.AppointmentOutcomeConfigVoCollection listAppointmentOutcomeByAppointmentStatus(ims.scheduling.vo.lookups.Status_Reason appointmentStatus);
}
