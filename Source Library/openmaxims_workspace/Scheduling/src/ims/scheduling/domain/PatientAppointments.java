//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.domain;

// Generated from form domain impl
public interface PatientAppointments extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	/**
	* listBookingAppointmentByPatientAndDates
	*/
	public ims.scheduling.vo.Booking_AppointmentShortVoCollection listBookingAppointmentByPatientAndDates(ims.core.patient.vo.PatientRefVo patient, ims.framework.utils.Date apptFromDate, ims.framework.utils.Date appToDate);

	// Generated from form domain interface definition
	/**
	* saveBookingAppt
	*/
	public ims.scheduling.vo.Booking_AppointmentVo saveBookingAppt(ims.scheduling.vo.Booking_AppointmentShortVo appt) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* getServiceAndActivityByAppt
	*/
	public ims.scheduling.vo.SessionServiceAndSlotActivityVo getServiceAndActivityByAppt(ims.scheduling.vo.Booking_AppointmentRefVo appt, Boolean isFlexible);

	// Generated from form domain interface definition
	/**
	* getCatsReferralForAppointment
	*/
	public ims.RefMan.vo.CatsReferralListVo getCatsReferralForAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt);

	// Generated from form domain interface definition
	public void updateCatsReferralForCancelledAppt(ims.RefMan.vo.CatsReferralRefVo catsRef) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public void updateCatsReferralForCancelledAppt(ims.RefMan.vo.CatsReferralRefVo catsRef, ims.scheduling.vo.Booking_AppointmentRefVo appt) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.scheduling.vo.SessionServiceProcedureConsultantVo getServiceProcedureConsultantByAppt(ims.scheduling.vo.Booking_AppointmentShortVo appt);

	// Generated from form domain interface definition
	public ims.scheduling.vo.SessionIntermediateVo getSession(ims.scheduling.vo.Sch_SessionRefVo sessionRef);

	// Generated from form domain interface definition
	public ims.scheduling.vo.BookingAppointmentTheatreVo getTheatreAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt);

	// Generated from form domain interface definition
	public ims.scheduling.vo.Appointment_StatusVoCollection listAppointmentHistory(ims.scheduling.vo.Booking_AppointmentRefVo appointment);

	// Generated from form domain interface definition
	public Boolean isReferralICPCompleted(ims.RefMan.vo.CatsReferralRefVo catsReferral);

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralForTheatreListVo getCatsReferralStatus(ims.scheduling.vo.Booking_AppointmentRefVo appointmentRef);

	// Generated from form domain interface definition
	public void cancelTCIAndReferralEROD(ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.Booking_AppointmentRefVo apptRef,  ims.scheduling.vo.lookups.CancelAppointmentReason cancellationReason, String cancellationComments, Boolean isProviderCancellation, Boolean isPatientCancellation, Boolean cancelledForNonmedicalReason) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.RefMan.vo.PatientElectiveListRefVo getPatientElectiveListForAppt(ims.scheduling.vo.Booking_AppointmentRefVo bookApptRefVo);

	// Generated from form domain interface definition
	public ims.scheduling.vo.PendingEmergencyTheatreRefVo getPendingEmergencyTheatreForAppt(ims.scheduling.vo.Booking_AppointmentRefVo apptRefVo);
}
