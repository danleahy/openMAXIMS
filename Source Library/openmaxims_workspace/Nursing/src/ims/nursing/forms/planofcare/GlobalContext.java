//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.nursing.forms.planofcare;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Nursing = new NursingContext(context);
		Core = new CoreContext(context);
	}
	public final class NursingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private NursingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getFormActionIsNotNull()
		{
			return !cx_NursingFormAction.getValueIsNull(context);
		}
		public String getFormAction()
		{
			return (String)cx_NursingFormAction.getValue(context);
		}
		public void setFormAction(String value)
		{
			cx_NursingFormAction.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingFormAction = new ims.framework.ContextVariable("Nursing.FormAction", "_cv_Nursing.FormAction");
		public boolean getPlanOfCareIdIsNotNull()
		{
			return !cx_NursingPlanOfCareId.getValueIsNull(context);
		}
		public Integer getPlanOfCareId()
		{
			return (Integer)cx_NursingPlanOfCareId.getValue(context);
		}
		public void setPlanOfCareId(Integer value)
		{
			cx_NursingPlanOfCareId.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingPlanOfCareId = new ims.framework.ContextVariable("Nursing.PlanOfCareId", "_cv_Nursing.PlanOfCareId");
		public boolean getPlanOfCareSearchCriteriaIsNotNull()
		{
			return !cx_NursingPlanOfCareSearchCriteria.getValueIsNull(context);
		}
		public ims.nursing.vo.PlanOfCareSearchCriteriaVo getPlanOfCareSearchCriteria()
		{
			return (ims.nursing.vo.PlanOfCareSearchCriteriaVo)cx_NursingPlanOfCareSearchCriteria.getValue(context);
		}
		public void setPlanOfCareSearchCriteria(ims.nursing.vo.PlanOfCareSearchCriteriaVo value)
		{
			cx_NursingPlanOfCareSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_NursingPlanOfCareSearchCriteria = new ims.framework.ContextVariable("Nursing.PlanOfCareSearchCriteria", "_cvp_Nursing.PlanOfCareSearchCriteria");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");

		private ims.framework.Context context;
	}

	public NursingContext Nursing;
	public CoreContext Core;
}
