//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cristian Belciug using IMS Development Environment (version 1.62 build 3086.19026)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.pci.domain.impl;

import ims.core.patient.vo.PatientRefVo;
import ims.core.vo.CommChannelVoCollection;
import ims.core.vo.PatientShortCollection;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.exceptions.UniqueKeyViolationException;
import ims.framework.exceptions.CodingRuntimeException;
import ims.pci.domain.FamilyRecords;
import ims.pci.domain.base.impl.BaseUpdateAddressDialogImpl;
import ims.pci.vo.ClientAddressVo;

public class UpdateAddressImpl extends BaseUpdateAddressDialogImpl
{

	private static final long serialVersionUID = 1L;

	public PatientShortCollection listChilds(PatientRefVo parent) 
	{
		FamilyRecords impl = (FamilyRecords) getDomainImpl(FamilyRecordsImpl.class);
		
		return impl.listChilds(parent);
	}

	public Integer saveFamilyAddress(PatientShortCollection clients, ClientAddressVo newAddress, CommChannelVoCollection commChannel) throws StaleObjectException, UniqueKeyViolationException 
	{
		if(clients == null || newAddress == null || (newAddress !=null && !newAddress.getPersonAddressIsNotNull()))
			throw new CodingRuntimeException("Cannot save client in saveFamilyAddress method.");
		
		FamilyRecords impl = (FamilyRecords) getDomainImpl(FamilyRecordsImpl.class);
		Integer numberOfAddressChanged = 0;
		
		for(int i=0; i<clients.size(); i++)
		{
			if(clients.get(i) != null)
			{
				numberOfAddressChanged += impl.saveClient(clients.get(i), newAddress, null, commChannel);
			}
		}
		
		return numberOfAddressChanged;
	}
}
