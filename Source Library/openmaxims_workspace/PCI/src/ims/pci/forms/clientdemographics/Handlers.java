//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.pci.forms.clientdemographics;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbConfidentialReasonLookup();
	abstract protected void defaultcmbConfidentialReasonLookupValue();
	abstract protected void bindcmbUserField5Lookup();
	abstract protected void defaultcmbUserField5LookupValue();
	abstract protected void bindcmbUserField4Lookup();
	abstract protected void defaultcmbUserField4LookupValue();
	abstract protected void bindcmbUserField3Lookup();
	abstract protected void defaultcmbUserField3LookupValue();
	abstract protected void bindcmbUserField2Lookup();
	abstract protected void defaultcmbUserField2LookupValue();
	abstract protected void bindcmbUserField1Lookup();
	abstract protected void defaultcmbUserField1LookupValue();
	abstract protected void bindcmbSourceOfInfoLookup();
	abstract protected void defaultcmbSourceOfInfoLookupValue();
	abstract protected void bindcmbDODSourceLookup();
	abstract protected void defaultcmbDODSourceLookupValue();
	abstract protected void bindcmbNationalityLookup();
	abstract protected void defaultcmbNationalityLookupValue();
	abstract protected void bindcmbMaritalStatusLookup();
	abstract protected void defaultcmbMaritalStatusLookupValue();
	abstract protected void bindcmbSexLookup();
	abstract protected void defaultcmbSexLookupValue();
	abstract protected void bindcmbTitleLookup();
	abstract protected void defaultcmbTitleLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnViewFamilyLinksClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCloneRecordClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearSchoolClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchSchoolClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbConfidentialReasonValueSet(Object value);
	abstract protected void oncmbUserField5ValueSet(Object value);
	abstract protected void oncmbUserField4ValueSet(Object value);
	abstract protected void oncmbUserField3ValueSet(Object value);
	abstract protected void oncmbUserField2ValueSet(Object value);
	abstract protected void oncmbUserField1ValueSet(Object value);
	abstract protected void oncmbSourceOfInfoValueSet(Object value);
	abstract protected void onChkSCFlagValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTxtGMSIDValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteDOBValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbDODSourceValueSet(Object value);
	abstract protected void onDteDODValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbNationalityValueSet(Object value);
	abstract protected void oncmbMaritalStatusValueSet(Object value);
	abstract protected void oncmbSexValueSet(Object value);
	abstract protected void oncmbTitleValueSet(Object value);
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearRegisteredGpClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearContactGPClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbGPRegisteredClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbGPContractClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteGPRegisteredDateValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUpdateAddressClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnViewFamilyLinks().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnViewFamilyLinksClick();
			}
		});
		this.form.btnCloneRecord().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCloneRecordClick();
			}
		});
		this.form.imbClearSchool().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearSchoolClick();
			}
		});
		this.form.imbSearchSchool().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchSchoolClick();
			}
		});
		this.form.cmbConfidentialReason().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbConfidentialReasonValueSet(value);
			}
		});
		this.form.cmbUserField5().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbUserField5ValueSet(value);
			}
		});
		this.form.cmbUserField4().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbUserField4ValueSet(value);
			}
		});
		this.form.cmbUserField3().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbUserField3ValueSet(value);
			}
		});
		this.form.cmbUserField2().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbUserField2ValueSet(value);
			}
		});
		this.form.cmbUserField1().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbUserField1ValueSet(value);
			}
		});
		this.form.cmbSourceOfInfo().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceOfInfoValueSet(value);
			}
		});
		this.form.chkSCFlag().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkSCFlagValueChanged();
			}
		});
		this.form.txtGMSID().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onTxtGMSIDValueChanged();
			}
		});
		this.form.dteDOB().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteDOBValueChanged();
			}
		});
		this.form.cmbDODSource().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbDODSourceValueSet(value);
			}
		});
		this.form.dteDOD().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteDODValueChanged();
			}
		});
		this.form.cmbNationality().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbNationalityValueSet(value);
			}
		});
		this.form.cmbMaritalStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbMaritalStatusValueSet(value);
			}
		});
		this.form.cmbSex().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSexValueSet(value);
			}
		});
		this.form.cmbTitle().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTitleValueSet(value);
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.imbClearRegisteredGp().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearRegisteredGpClick();
			}
		});
		this.form.imbClearContactGP().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearContactGPClick();
			}
		});
		this.form.imbGPRegistered().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbGPRegisteredClick();
			}
		});
		this.form.imbGPContract().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbGPContractClick();
			}
		});
		this.form.dteGPRegisteredDate().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteGPRegisteredDateValueChanged();
			}
		});
		this.form.btnUpdateAddress().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateAddressClick();
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbConfidentialReasonLookup();
		bindcmbUserField5Lookup();
		bindcmbUserField4Lookup();
		bindcmbUserField3Lookup();
		bindcmbUserField2Lookup();
		bindcmbUserField1Lookup();
		bindcmbSourceOfInfoLookup();
		bindcmbDODSourceLookup();
		bindcmbNationalityLookup();
		bindcmbMaritalStatusLookup();
		bindcmbSexLookup();
		bindcmbTitleLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbConfidentialReasonLookup();
		bindcmbUserField5Lookup();
		bindcmbUserField4Lookup();
		bindcmbUserField3Lookup();
		bindcmbUserField2Lookup();
		bindcmbUserField1Lookup();
		bindcmbSourceOfInfoLookup();
		bindcmbDODSourceLookup();
		bindcmbNationalityLookup();
		bindcmbMaritalStatusLookup();
		bindcmbSexLookup();
		bindcmbTitleLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbConfidentialReasonLookupValue();
		defaultcmbUserField5LookupValue();
		defaultcmbUserField4LookupValue();
		defaultcmbUserField3LookupValue();
		defaultcmbUserField2LookupValue();
		defaultcmbUserField1LookupValue();
		defaultcmbSourceOfInfoLookupValue();
		defaultcmbDODSourceLookupValue();
		defaultcmbNationalityLookupValue();
		defaultcmbMaritalStatusLookupValue();
		defaultcmbSexLookupValue();
		defaultcmbTitleLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
