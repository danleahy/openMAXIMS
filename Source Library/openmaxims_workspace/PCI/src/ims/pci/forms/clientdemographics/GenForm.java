//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.pci.forms.clientdemographics;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class cmbConfidentialReasonComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.ConfidentialReason value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.ConfidentialReason value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.ConfidentialReason value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.ConfidentialReason value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.ConfidentialReason value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.ConfidentialReason getValue()
		{
			return (ims.core.vo.lookups.ConfidentialReason)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.ConfidentialReason value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbUserField5ComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.pci.vo.lookups.UserDefinedType5 value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType5 value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType5 value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType5 value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.pci.vo.lookups.UserDefinedType5 value)
		{
			return super.control.removeRow(value);
		}
		public ims.pci.vo.lookups.UserDefinedType5 getValue()
		{
			return (ims.pci.vo.lookups.UserDefinedType5)super.control.getValue();
		}
		public void setValue(ims.pci.vo.lookups.UserDefinedType5 value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbUserField4ComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.pci.vo.lookups.UserDefinedType4 value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType4 value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType4 value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType4 value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.pci.vo.lookups.UserDefinedType4 value)
		{
			return super.control.removeRow(value);
		}
		public ims.pci.vo.lookups.UserDefinedType4 getValue()
		{
			return (ims.pci.vo.lookups.UserDefinedType4)super.control.getValue();
		}
		public void setValue(ims.pci.vo.lookups.UserDefinedType4 value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbUserField3ComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.pci.vo.lookups.UserDefinedType3 value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType3 value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType3 value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType3 value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.pci.vo.lookups.UserDefinedType3 value)
		{
			return super.control.removeRow(value);
		}
		public ims.pci.vo.lookups.UserDefinedType3 getValue()
		{
			return (ims.pci.vo.lookups.UserDefinedType3)super.control.getValue();
		}
		public void setValue(ims.pci.vo.lookups.UserDefinedType3 value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbUserField2ComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.pci.vo.lookups.UserDefinedType2 value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType2 value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType2 value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType2 value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.pci.vo.lookups.UserDefinedType2 value)
		{
			return super.control.removeRow(value);
		}
		public ims.pci.vo.lookups.UserDefinedType2 getValue()
		{
			return (ims.pci.vo.lookups.UserDefinedType2)super.control.getValue();
		}
		public void setValue(ims.pci.vo.lookups.UserDefinedType2 value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbUserField1ComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.pci.vo.lookups.UserDefinedType1 value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType1 value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType1 value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.pci.vo.lookups.UserDefinedType1 value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.pci.vo.lookups.UserDefinedType1 value)
		{
			return super.control.removeRow(value);
		}
		public ims.pci.vo.lookups.UserDefinedType1 getValue()
		{
			return (ims.pci.vo.lookups.UserDefinedType1)super.control.getValue();
		}
		public void setValue(ims.pci.vo.lookups.UserDefinedType1 value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbSourceOfInfoComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.RegistrationSourceOfInfo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.RegistrationSourceOfInfo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.RegistrationSourceOfInfo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.RegistrationSourceOfInfo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.RegistrationSourceOfInfo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.RegistrationSourceOfInfo getValue()
		{
			return (ims.core.vo.lookups.RegistrationSourceOfInfo)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.RegistrationSourceOfInfo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbDODSourceComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.DodSource value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.DodSource value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.DodSource value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.DodSource value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.DodSource value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.DodSource getValue()
		{
			return (ims.core.vo.lookups.DodSource)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.DodSource value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbNationalityComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.Nationality value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.Nationality value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.Nationality value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.Nationality value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.Nationality value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.Nationality getValue()
		{
			return (ims.core.vo.lookups.Nationality)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.Nationality value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbMaritalStatusComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.MaritalStatus value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.MaritalStatus value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.MaritalStatus value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.MaritalStatus value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.MaritalStatus value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.MaritalStatus getValue()
		{
			return (ims.core.vo.lookups.MaritalStatus)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.MaritalStatus value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbSexComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.Sex value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.Sex value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.Sex value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.Sex value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.Sex value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.Sex getValue()
		{
			return (ims.core.vo.lookups.Sex)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.Sex value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbTitleComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.PersonTitle value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.PersonTitle value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.PersonTitle value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.PersonTitle value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.PersonTitle value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.PersonTitle getValue()
		{
			return (ims.core.vo.lookups.PersonTitle)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.PersonTitle value)
		{
			super.control.setValue(value);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
		if(!context.isValidContextType(ims.core.vo.PatientFilter.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientFilter' of the global context variable 'Core.PatientFilter' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return true;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return this.getLocalContext().getCurrentClient();
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Panel Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 432, 320, 408, 272, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT,"Reports Settings", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 432, 200, 408, 112, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,"Client Identifiers", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 432, 8, 408, 184, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,"Client Details", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 8, 256, 416, 336, ims.framework.enumerations.ControlAnchoring.ALL);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Client Address", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 416, 128, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Client Name", new Integer(2), ""}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 8, 144, 416, 104, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"GP Details", new Integer(2), ""}));

		// Custom Controls
		ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 16, 272, 408, 272, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ims.framework.FormUiLogic m_customControlAddressForm = loader.loadComponent(133111, appForm, startControlID * 10 + 1000, anchoringHelper7.getSize(), instance1, startTabIndex.intValue() + 12, skipContextValidation);
		//ims.framework.Control m_customControlAddressControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(16), new Integer(272), new Integer(408), new Integer(272), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 12), m_customControlAddressForm, instance1 } );
		ims.framework.Control m_customControlAddressControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1007),  new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 12), m_customControlAddressForm, instance1, Boolean.FALSE } );
		super.addControl(m_customControlAddressControl);
		Menu[] menus1 = m_customControlAddressForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus1.length; x++)
		{
			form.registerMenu(menus1[x]);
		}

		// Label Controls
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 448, 558, 46, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "School:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 448, 474, 123, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "User Defined Field 5:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 448, 446, 123, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "User Defined Field 4:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 448, 418, 123, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "User Defined Field 3:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 448, 390, 123, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "User Defined Field 2:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 448, 362, 123, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "User Defined Field 1:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 448, 530, 89, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Source of Info:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 448, 502, 176, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Sensitive/Confidential Flag ? :", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 712, 234, 96, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "PPSN Validated:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 448, 234, 39, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "PPSN:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 448, 258, 48, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "GMSID:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 448, 282, 59, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Client ID:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 448, 66, 88, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Marital Status:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 448, 162, 133, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Date of Death Source :", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 448, 90, 71, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Nationality:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 448, 42, 29, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Sex:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 448, 114, 81, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Date of Birth:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 448, 138, 87, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Date of Death:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 24, 570, 85, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Mobile Phone:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 24, 546, 80, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Home Phone:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 24, 34, 33, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Title:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 24, 106, 95, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Other Surname:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 24, 58, 59, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Surname:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 24, 82, 65, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Forename:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 24, 194, 89, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Registered GP:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 24, 170, 71, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Contact GP:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 24, 218, 100, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Date Registered:", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 232, 600, 137, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), new Integer(startTabIndex.intValue() + 50), ControlState.ENABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "View Family Links", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 88, 600, 137, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), new Integer(startTabIndex.intValue() + 49), ControlState.UNKNOWN, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Register Child Record", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 8, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), new Integer(startTabIndex.intValue() + 48), ControlState.ENABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit", Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 687, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), new Integer(startTabIndex.intValue() + 52), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 767, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), new Integer(startTabIndex.intValue() + 53), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 376, 600, 152, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1040), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), new Integer(startTabIndex.intValue() + 51), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Review/Update Address", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper41 = new RuntimeAnchoring(designSize, runtimeSize, 576, 556, 200, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1041), new Integer(anchoringHelper41.getX()), new Integer(anchoringHelper41.getY()), new Integer(anchoringHelper41.getWidth()), new Integer(anchoringHelper41.getHeight()), new Integer(startTabIndex.intValue() + 45), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper42 = new RuntimeAnchoring(designSize, runtimeSize, 576, 280, 128, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1042), new Integer(anchoringHelper42.getX()), new Integer(anchoringHelper42.getY()), new Integer(anchoringHelper42.getWidth()), new Integer(anchoringHelper42.getHeight()), new Integer(startTabIndex.intValue() + 36), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper43 = new RuntimeAnchoring(designSize, runtimeSize, 576, 256, 128, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1043), new Integer(anchoringHelper43.getX()), new Integer(anchoringHelper43.getY()), new Integer(anchoringHelper43.getWidth()), new Integer(anchoringHelper43.getHeight()), new Integer(startTabIndex.intValue() + 35), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(50), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper44 = new RuntimeAnchoring(designSize, runtimeSize, 576, 232, 128, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1044), new Integer(anchoringHelper44.getX()), new Integer(anchoringHelper44.getY()), new Integer(anchoringHelper44.getWidth()), new Integer(anchoringHelper44.getHeight()), new Integer(startTabIndex.intValue() + 33), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(50), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper45 = new RuntimeAnchoring(designSize, runtimeSize, 128, 568, 256, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1045), new Integer(anchoringHelper45.getX()), new Integer(anchoringHelper45.getY()), new Integer(anchoringHelper45.getWidth()), new Integer(anchoringHelper45.getHeight()), new Integer(startTabIndex.intValue() + 26), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper46 = new RuntimeAnchoring(designSize, runtimeSize, 128, 544, 256, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1046), new Integer(anchoringHelper46.getX()), new Integer(anchoringHelper46.getY()), new Integer(anchoringHelper46.getWidth()), new Integer(anchoringHelper46.getHeight()), new Integer(startTabIndex.intValue() + 25), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper47 = new RuntimeAnchoring(designSize, runtimeSize, 128, 56, 280, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1047), new Integer(anchoringHelper47.getX()), new Integer(anchoringHelper47.getY()), new Integer(anchoringHelper47.getWidth()), new Integer(anchoringHelper47.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper48 = new RuntimeAnchoring(designSize, runtimeSize, 128, 80, 280, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1048), new Integer(anchoringHelper48.getX()), new Integer(anchoringHelper48.getY()), new Integer(anchoringHelper48.getWidth()), new Integer(anchoringHelper48.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper49 = new RuntimeAnchoring(designSize, runtimeSize, 128, 104, 280, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1049), new Integer(anchoringHelper49.getX()), new Integer(anchoringHelper49.getY()), new Integer(anchoringHelper49.getWidth()), new Integer(anchoringHelper49.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper50 = new RuntimeAnchoring(designSize, runtimeSize, 128, 192, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1050), new Integer(anchoringHelper50.getX()), new Integer(anchoringHelper50.getY()), new Integer(anchoringHelper50.getWidth()), new Integer(anchoringHelper50.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper51 = new RuntimeAnchoring(designSize, runtimeSize, 128, 168, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1051), new Integer(anchoringHelper51.getX()), new Integer(anchoringHelper51.getY()), new Integer(anchoringHelper51.getWidth()), new Integer(anchoringHelper51.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.TRUE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Controls
		RuntimeAnchoring anchoringHelper52 = new RuntimeAnchoring(designSize, runtimeSize, 576, 109, 128, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1052), new Integer(anchoringHelper52.getX()), new Integer(anchoringHelper52.getY()), new Integer(anchoringHelper52.getWidth()), new Integer(anchoringHelper52.getHeight()), new Integer(startTabIndex.intValue() + 30), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper53 = new RuntimeAnchoring(designSize, runtimeSize, 576, 136, 128, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1053), new Integer(anchoringHelper53.getX()), new Integer(anchoringHelper53.getY()), new Integer(anchoringHelper53.getWidth()), new Integer(anchoringHelper53.getHeight()), new Integer(startTabIndex.intValue() + 31), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper54 = new RuntimeAnchoring(designSize, runtimeSize, 128, 213, 280, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1054), new Integer(anchoringHelper54.getX()), new Integer(anchoringHelper54.getY()), new Integer(anchoringHelper54.getWidth()), new Integer(anchoringHelper54.getHeight()), new Integer(startTabIndex.intValue() + 11), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.TRUE, null}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper55 = new RuntimeAnchoring(designSize, runtimeSize, 664, 500, 160, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbConfidentialReasonTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1055), new Integer(anchoringHelper55.getX()), new Integer(anchoringHelper55.getY()), new Integer(anchoringHelper55.getWidth()), new Integer(anchoringHelper55.getHeight()), new Integer(startTabIndex.intValue() + 43), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbConfidentialReasonTemp);
		cmbConfidentialReasonComboBox cmbConfidentialReason = (cmbConfidentialReasonComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbConfidentialReasonComboBox.class, m_cmbConfidentialReasonTemp);
		super.addComboBox(cmbConfidentialReason);
		RuntimeAnchoring anchoringHelper56 = new RuntimeAnchoring(designSize, runtimeSize, 576, 472, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbUserField5Temp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1056), new Integer(anchoringHelper56.getX()), new Integer(anchoringHelper56.getY()), new Integer(anchoringHelper56.getWidth()), new Integer(anchoringHelper56.getHeight()), new Integer(startTabIndex.intValue() + 41), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbUserField5Temp);
		cmbUserField5ComboBox cmbUserField5 = (cmbUserField5ComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbUserField5ComboBox.class, m_cmbUserField5Temp);
		super.addComboBox(cmbUserField5);
		RuntimeAnchoring anchoringHelper57 = new RuntimeAnchoring(designSize, runtimeSize, 576, 444, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbUserField4Temp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1057), new Integer(anchoringHelper57.getX()), new Integer(anchoringHelper57.getY()), new Integer(anchoringHelper57.getWidth()), new Integer(anchoringHelper57.getHeight()), new Integer(startTabIndex.intValue() + 40), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbUserField4Temp);
		cmbUserField4ComboBox cmbUserField4 = (cmbUserField4ComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbUserField4ComboBox.class, m_cmbUserField4Temp);
		super.addComboBox(cmbUserField4);
		RuntimeAnchoring anchoringHelper58 = new RuntimeAnchoring(designSize, runtimeSize, 576, 416, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbUserField3Temp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1058), new Integer(anchoringHelper58.getX()), new Integer(anchoringHelper58.getY()), new Integer(anchoringHelper58.getWidth()), new Integer(anchoringHelper58.getHeight()), new Integer(startTabIndex.intValue() + 39), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbUserField3Temp);
		cmbUserField3ComboBox cmbUserField3 = (cmbUserField3ComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbUserField3ComboBox.class, m_cmbUserField3Temp);
		super.addComboBox(cmbUserField3);
		RuntimeAnchoring anchoringHelper59 = new RuntimeAnchoring(designSize, runtimeSize, 576, 388, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbUserField2Temp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1059), new Integer(anchoringHelper59.getX()), new Integer(anchoringHelper59.getY()), new Integer(anchoringHelper59.getWidth()), new Integer(anchoringHelper59.getHeight()), new Integer(startTabIndex.intValue() + 38), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbUserField2Temp);
		cmbUserField2ComboBox cmbUserField2 = (cmbUserField2ComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbUserField2ComboBox.class, m_cmbUserField2Temp);
		super.addComboBox(cmbUserField2);
		RuntimeAnchoring anchoringHelper60 = new RuntimeAnchoring(designSize, runtimeSize, 576, 360, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbUserField1Temp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1060), new Integer(anchoringHelper60.getX()), new Integer(anchoringHelper60.getY()), new Integer(anchoringHelper60.getWidth()), new Integer(anchoringHelper60.getHeight()), new Integer(startTabIndex.intValue() + 37), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbUserField1Temp);
		cmbUserField1ComboBox cmbUserField1 = (cmbUserField1ComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbUserField1ComboBox.class, m_cmbUserField1Temp);
		super.addComboBox(cmbUserField1);
		RuntimeAnchoring anchoringHelper61 = new RuntimeAnchoring(designSize, runtimeSize, 576, 528, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbSourceOfInfoTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1061), new Integer(anchoringHelper61.getX()), new Integer(anchoringHelper61.getY()), new Integer(anchoringHelper61.getWidth()), new Integer(anchoringHelper61.getHeight()), new Integer(startTabIndex.intValue() + 44), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbSourceOfInfoTemp);
		cmbSourceOfInfoComboBox cmbSourceOfInfo = (cmbSourceOfInfoComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbSourceOfInfoComboBox.class, m_cmbSourceOfInfoTemp);
		super.addComboBox(cmbSourceOfInfo);
		RuntimeAnchoring anchoringHelper62 = new RuntimeAnchoring(designSize, runtimeSize, 576, 160, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbDODSourceTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1062), new Integer(anchoringHelper62.getX()), new Integer(anchoringHelper62.getY()), new Integer(anchoringHelper62.getWidth()), new Integer(anchoringHelper62.getHeight()), new Integer(startTabIndex.intValue() + 32), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbDODSourceTemp);
		cmbDODSourceComboBox cmbDODSource = (cmbDODSourceComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbDODSourceComboBox.class, m_cmbDODSourceTemp);
		super.addComboBox(cmbDODSource);
		RuntimeAnchoring anchoringHelper63 = new RuntimeAnchoring(designSize, runtimeSize, 576, 88, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbNationalityTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1063), new Integer(anchoringHelper63.getX()), new Integer(anchoringHelper63.getY()), new Integer(anchoringHelper63.getWidth()), new Integer(anchoringHelper63.getHeight()), new Integer(startTabIndex.intValue() + 29), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbNationalityTemp);
		cmbNationalityComboBox cmbNationality = (cmbNationalityComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbNationalityComboBox.class, m_cmbNationalityTemp);
		super.addComboBox(cmbNationality);
		RuntimeAnchoring anchoringHelper64 = new RuntimeAnchoring(designSize, runtimeSize, 576, 64, 248, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbMaritalStatusTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1064), new Integer(anchoringHelper64.getX()), new Integer(anchoringHelper64.getY()), new Integer(anchoringHelper64.getWidth()), new Integer(anchoringHelper64.getHeight()), new Integer(startTabIndex.intValue() + 28), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbMaritalStatusTemp);
		cmbMaritalStatusComboBox cmbMaritalStatus = (cmbMaritalStatusComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbMaritalStatusComboBox.class, m_cmbMaritalStatusTemp);
		super.addComboBox(cmbMaritalStatus);
		RuntimeAnchoring anchoringHelper65 = new RuntimeAnchoring(designSize, runtimeSize, 576, 40, 120, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		ComboBox m_cmbSexTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1065), new Integer(anchoringHelper65.getX()), new Integer(anchoringHelper65.getY()), new Integer(anchoringHelper65.getWidth()), new Integer(anchoringHelper65.getHeight()), new Integer(startTabIndex.intValue() + 27), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbSexTemp);
		cmbSexComboBox cmbSex = (cmbSexComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbSexComboBox.class, m_cmbSexTemp);
		super.addComboBox(cmbSex);
		RuntimeAnchoring anchoringHelper66 = new RuntimeAnchoring(designSize, runtimeSize, 128, 32, 256, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ComboBox m_cmbTitleTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1066), new Integer(anchoringHelper66.getX()), new Integer(anchoringHelper66.getY()), new Integer(anchoringHelper66.getWidth()), new Integer(anchoringHelper66.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbTitleTemp);
		cmbTitleComboBox cmbTitle = (cmbTitleComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbTitleComboBox.class, m_cmbTitleTemp);
		super.addComboBox(cmbTitle);

		// CheckBox Controls
		RuntimeAnchoring anchoringHelper67 = new RuntimeAnchoring(designSize, runtimeSize, 632, 502, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1067), new Integer(anchoringHelper67.getX()), new Integer(anchoringHelper67.getY()), new Integer(anchoringHelper67.getWidth()), new Integer(anchoringHelper67.getHeight()), new Integer(startTabIndex.intValue() + 42), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper68 = new RuntimeAnchoring(designSize, runtimeSize, 808, 234, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1068), new Integer(anchoringHelper68.getX()), new Integer(anchoringHelper68.getY()), new Integer(anchoringHelper68.getWidth()), new Integer(anchoringHelper68.getHeight()), new Integer(startTabIndex.intValue() + 34), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"", Boolean.FALSE, null}));

		// Image Buttons Controls
		RuntimeAnchoring anchoringHelper69 = new RuntimeAnchoring(designSize, runtimeSize, 800, 555, 24, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1069), new Integer(anchoringHelper69.getX()), new Integer(anchoringHelper69.getY()), new Integer(anchoringHelper69.getWidth()), new Integer(anchoringHelper69.getHeight()), new Integer(startTabIndex.intValue() + 47), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.ClearEnabled16, this.getImages().Core.ClearDisabled16, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper70 = new RuntimeAnchoring(designSize, runtimeSize, 776, 555, 24, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1070), new Integer(anchoringHelper70.getX()), new Integer(anchoringHelper70.getY()), new Integer(anchoringHelper70.getWidth()), new Integer(anchoringHelper70.getHeight()), new Integer(startTabIndex.intValue() + 46), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.ZoomInEnabled16, this.getImages().Core.ZoomInDisabled16, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper71 = new RuntimeAnchoring(designSize, runtimeSize, 384, 191, 24, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1071), new Integer(anchoringHelper71.getX()), new Integer(anchoringHelper71.getY()), new Integer(anchoringHelper71.getWidth()), new Integer(anchoringHelper71.getHeight()), new Integer(startTabIndex.intValue() + 10), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.ClearEnabled16, this.getImages().Core.ClearDisabled16, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper72 = new RuntimeAnchoring(designSize, runtimeSize, 384, 167, 24, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1072), new Integer(anchoringHelper72.getX()), new Integer(anchoringHelper72.getY()), new Integer(anchoringHelper72.getWidth()), new Integer(anchoringHelper72.getHeight()), new Integer(startTabIndex.intValue() + 7), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.ClearEnabled16, this.getImages().Core.ClearDisabled16, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper73 = new RuntimeAnchoring(designSize, runtimeSize, 360, 191, 24, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1073), new Integer(anchoringHelper73.getX()), new Integer(anchoringHelper73.getY()), new Integer(anchoringHelper73.getWidth()), new Integer(anchoringHelper73.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.ZoomInEnabled16, this.getImages().Core.ZoomInDisabled16, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper74 = new RuntimeAnchoring(designSize, runtimeSize, 360, 167, 24, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1074), new Integer(anchoringHelper74.getX()), new Integer(anchoringHelper74.getY()), new Integer(anchoringHelper74.getWidth()), new Integer(anchoringHelper74.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.ZoomInEnabled16, this.getImages().Core.ZoomInDisabled16, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public Panel pnlClientAddress()
	{
		return (Panel)super.getControl(3);
	}
	public ims.pci.forms.clientaddress.IComponent customControlAddress()
	{
		return (ims.pci.forms.clientaddress.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(6)).getLogic();
	}
	public void setcustomControlAddressValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(6)).setValueChangedEvent(delegate);
	}
	public void setcustomControlAddressVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(6)).setVisible(value);
	}
	public boolean iscustomControlAddressVisible()
	{
		return ((ims.framework.Control)super.getControl(6)).isVisible();
	}
	public void setcustomControlAddressEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(6)).setEnabled(value);
	}
	public boolean iscustomControlAddressEnabled()
	{
		return ((ims.framework.Control)super.getControl(6)).isEnabled();
	}
	public Button btnViewFamilyLinks()
	{
		return (Button)super.getControl(34);
	}
	public Button btnCloneRecord()
	{
		return (Button)super.getControl(35);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(36);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(37);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(38);
	}
	public Button btnUpdateAddress()
	{
		return (Button)super.getControl(39);
	}
	public TextBox txtSchool()
	{
		return (TextBox)super.getControl(40);
	}
	public TextBox txtClientID()
	{
		return (TextBox)super.getControl(41);
	}
	public TextBox txtGMSID()
	{
		return (TextBox)super.getControl(42);
	}
	public TextBox txtPPSN()
	{
		return (TextBox)super.getControl(43);
	}
	public TextBox txtMobilePhone()
	{
		return (TextBox)super.getControl(44);
	}
	public TextBox txtHomePhone()
	{
		return (TextBox)super.getControl(45);
	}
	public TextBox txtSurname()
	{
		return (TextBox)super.getControl(46);
	}
	public TextBox txtForename1()
	{
		return (TextBox)super.getControl(47);
	}
	public TextBox txtOtherSurname()
	{
		return (TextBox)super.getControl(48);
	}
	public TextBox txtGPRegistered()
	{
		return (TextBox)super.getControl(49);
	}
	public TextBox txtGPContact()
	{
		return (TextBox)super.getControl(50);
	}
	public DateControl dteDOB()
	{
		return (DateControl)super.getControl(51);
	}
	public DateControl dteDOD()
	{
		return (DateControl)super.getControl(52);
	}
	public DateControl dteGPRegisteredDate()
	{
		return (DateControl)super.getControl(53);
	}
	public cmbConfidentialReasonComboBox cmbConfidentialReason()
	{
		return (cmbConfidentialReasonComboBox)super.getComboBox(0);
	}
	public cmbUserField5ComboBox cmbUserField5()
	{
		return (cmbUserField5ComboBox)super.getComboBox(1);
	}
	public cmbUserField4ComboBox cmbUserField4()
	{
		return (cmbUserField4ComboBox)super.getComboBox(2);
	}
	public cmbUserField3ComboBox cmbUserField3()
	{
		return (cmbUserField3ComboBox)super.getComboBox(3);
	}
	public cmbUserField2ComboBox cmbUserField2()
	{
		return (cmbUserField2ComboBox)super.getComboBox(4);
	}
	public cmbUserField1ComboBox cmbUserField1()
	{
		return (cmbUserField1ComboBox)super.getComboBox(5);
	}
	public cmbSourceOfInfoComboBox cmbSourceOfInfo()
	{
		return (cmbSourceOfInfoComboBox)super.getComboBox(6);
	}
	public cmbDODSourceComboBox cmbDODSource()
	{
		return (cmbDODSourceComboBox)super.getComboBox(7);
	}
	public cmbNationalityComboBox cmbNationality()
	{
		return (cmbNationalityComboBox)super.getComboBox(8);
	}
	public cmbMaritalStatusComboBox cmbMaritalStatus()
	{
		return (cmbMaritalStatusComboBox)super.getComboBox(9);
	}
	public cmbSexComboBox cmbSex()
	{
		return (cmbSexComboBox)super.getComboBox(10);
	}
	public cmbTitleComboBox cmbTitle()
	{
		return (cmbTitleComboBox)super.getComboBox(11);
	}
	public CheckBox chkSCFlag()
	{
		return (CheckBox)super.getControl(66);
	}
	public CheckBox chkPPSN()
	{
		return (CheckBox)super.getControl(67);
	}
	public ImageButton imbClearSchool()
	{
		return (ImageButton)super.getControl(68);
	}
	public ImageButton imbSearchSchool()
	{
		return (ImageButton)super.getControl(69);
	}
	public ImageButton imbClearRegisteredGp()
	{
		return (ImageButton)super.getControl(70);
	}
	public ImageButton imbClearContactGP()
	{
		return (ImageButton)super.getControl(71);
	}
	public ImageButton imbGPRegistered()
	{
		return (ImageButton)super.getControl(72);
	}
	public ImageButton imbGPContract()
	{
		return (ImageButton)super.getControl(73);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			PCI = new PCIForms();
			Core = new CoreForms();
		}
		public final class PCIForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private PCIForms()
			{
				GPNominationDialog = new LocalFormName(133104);
				AddressHistoryDialog = new LocalFormName(133113);
				ClientSearch = new LocalFormName(133115);
				BirthDetails = new LocalFormName(133101);
				FamilyRecords = new LocalFormName(133102);
				FamilyRecordsDialog = new LocalFormName(133123);
				SchoolQueryDialog = new LocalFormName(133131);
			}
			public final FormName GPNominationDialog;
			public final FormName AddressHistoryDialog;
			public final FormName ClientSearch;
			public final FormName BirthDetails;
			public final FormName FamilyRecords;
			public final FormName FamilyRecordsDialog;
			public final FormName SchoolQueryDialog;
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				GPSelection = new LocalFormName(102137);
				GpSelectionOnly = new LocalFormName(102251);
			}
			public final FormName GPSelection;
			public final FormName GpSelectionOnly;
		}

		public PCIForms PCI;
		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				ZoomInEnabled16 = new ImageHelper(102158, "Images/Core/zoom.png", new Integer(16), new Integer(16));
				ZoomInDisabled16 = new ImageHelper(102159, "Images/Core/zoom_disabled.png", new Integer(16), new Integer(16));
				ClearEnabled16 = new ImageHelper(102168, "Images/Core/Clear.gif", new Integer(16), new Integer(16));
				ClearDisabled16 = new ImageHelper(102167, "Images/Core/ClearDisabled16.gif", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image ZoomInEnabled16;
			public final ims.framework.utils.Image ZoomInDisabled16;
			public final ims.framework.utils.Image ClearEnabled16;
			public final ims.framework.utils.Image ClearDisabled16;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_CurrentClient = new ims.framework.ContextVariable("CurrentClient", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier + "");
			cxl_ContactGP = new ims.framework.ContextVariable("ContactGP", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ContactGP_" + componentIdentifier + "");
			cxl_RegisteredGP = new ims.framework.ContextVariable("RegisteredGP", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__RegisteredGP_" + componentIdentifier + "");
			cxl_OpenDialogForGpContact = new ims.framework.ContextVariable("OpenDialogForGpContact", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__OpenDialogForGpContact_" + componentIdentifier + "");
			cxl_OpenDialogForGPRegistered = new ims.framework.ContextVariable("OpenDialogForGPRegistered", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__OpenDialogForGPRegistered_" + componentIdentifier + "");
			cxl_idMessageBox = new ims.framework.ContextVariable("idMessageBox", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__idMessageBox_" + componentIdentifier + "");
			cxl_ParentClient = new ims.framework.ContextVariable("ParentClient", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier + "");
			cxl_idChildMessageBox = new ims.framework.ContextVariable("idChildMessageBox", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__idChildMessageBox_" + componentIdentifier + "");
			cxl_idSaveAsChildMessageBox = new ims.framework.ContextVariable("idSaveAsChildMessageBox", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__idSaveAsChildMessageBox_" + componentIdentifier + "");
			cxl_AllowSaveChild = new ims.framework.ContextVariable("AllowSaveChild", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__AllowSaveChild_" + componentIdentifier + "");
			cxl_idBirthDetailsMesageBox = new ims.framework.ContextVariable("idBirthDetailsMesageBox", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__idBirthDetailsMesageBox_" + componentIdentifier + "");
			cxl_isDOBChanged = new ims.framework.ContextVariable("isDOBChanged", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__isDOBChanged_" + componentIdentifier + "");
			cxl_idSaveDOBChangedMessageBox = new ims.framework.ContextVariable("idSaveDOBChangedMessageBox", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__idSaveDOBChangedMessageBox_" + componentIdentifier + "");
			cxl_idUpdateFamilyAddress = new ims.framework.ContextVariable("idUpdateFamilyAddress", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__idUpdateFamilyAddress_" + componentIdentifier + "");
			cxl_FamilyAddress = new ims.framework.ContextVariable("FamilyAddress", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__FamilyAddress_" + componentIdentifier + "");
			cxl_CurrentSchool = new ims.framework.ContextVariable("CurrentSchool", prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentSchool_" + componentIdentifier + "");
		}
		
		public boolean getCurrentClientIsNotNull()
		{
			return !cxl_CurrentClient.getValueIsNull(context);
		}
		public ims.pci.vo.ClientVo getCurrentClient()
		{
			return (ims.pci.vo.ClientVo)cxl_CurrentClient.getValue(context);
		}
		public void setCurrentClient(ims.pci.vo.ClientVo value)
		{
			cxl_CurrentClient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentClient = null;
		public boolean getContactGPIsNotNull()
		{
			return !cxl_ContactGP.getValueIsNull(context);
		}
		public ims.core.vo.GpShortVo getContactGP()
		{
			return (ims.core.vo.GpShortVo)cxl_ContactGP.getValue(context);
		}
		public void setContactGP(ims.core.vo.GpShortVo value)
		{
			cxl_ContactGP.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ContactGP = null;
		public boolean getRegisteredGPIsNotNull()
		{
			return !cxl_RegisteredGP.getValueIsNull(context);
		}
		public ims.core.vo.GpLiteWithNameVo getRegisteredGP()
		{
			return (ims.core.vo.GpLiteWithNameVo)cxl_RegisteredGP.getValue(context);
		}
		public void setRegisteredGP(ims.core.vo.GpLiteWithNameVo value)
		{
			cxl_RegisteredGP.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_RegisteredGP = null;
		public boolean getOpenDialogForGpContactIsNotNull()
		{
			return !cxl_OpenDialogForGpContact.getValueIsNull(context);
		}
		public Boolean getOpenDialogForGpContact()
		{
			return (Boolean)cxl_OpenDialogForGpContact.getValue(context);
		}
		public void setOpenDialogForGpContact(Boolean value)
		{
			cxl_OpenDialogForGpContact.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_OpenDialogForGpContact = null;
		public boolean getOpenDialogForGPRegisteredIsNotNull()
		{
			return !cxl_OpenDialogForGPRegistered.getValueIsNull(context);
		}
		public Boolean getOpenDialogForGPRegistered()
		{
			return (Boolean)cxl_OpenDialogForGPRegistered.getValue(context);
		}
		public void setOpenDialogForGPRegistered(Boolean value)
		{
			cxl_OpenDialogForGPRegistered.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_OpenDialogForGPRegistered = null;
		public boolean getidMessageBoxIsNotNull()
		{
			return !cxl_idMessageBox.getValueIsNull(context);
		}
		public Integer getidMessageBox()
		{
			return (Integer)cxl_idMessageBox.getValue(context);
		}
		public void setidMessageBox(Integer value)
		{
			cxl_idMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idMessageBox = null;
		public boolean getParentClientIsNotNull()
		{
			return !cxl_ParentClient.getValueIsNull(context);
		}
		public ims.pci.vo.ClientVo getParentClient()
		{
			return (ims.pci.vo.ClientVo)cxl_ParentClient.getValue(context);
		}
		public void setParentClient(ims.pci.vo.ClientVo value)
		{
			cxl_ParentClient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ParentClient = null;
		public boolean getidChildMessageBoxIsNotNull()
		{
			return !cxl_idChildMessageBox.getValueIsNull(context);
		}
		public Integer getidChildMessageBox()
		{
			return (Integer)cxl_idChildMessageBox.getValue(context);
		}
		public void setidChildMessageBox(Integer value)
		{
			cxl_idChildMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idChildMessageBox = null;
		public boolean getidSaveAsChildMessageBoxIsNotNull()
		{
			return !cxl_idSaveAsChildMessageBox.getValueIsNull(context);
		}
		public Integer getidSaveAsChildMessageBox()
		{
			return (Integer)cxl_idSaveAsChildMessageBox.getValue(context);
		}
		public void setidSaveAsChildMessageBox(Integer value)
		{
			cxl_idSaveAsChildMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idSaveAsChildMessageBox = null;
		public boolean getAllowSaveChildIsNotNull()
		{
			return !cxl_AllowSaveChild.getValueIsNull(context);
		}
		public Boolean getAllowSaveChild()
		{
			return (Boolean)cxl_AllowSaveChild.getValue(context);
		}
		public void setAllowSaveChild(Boolean value)
		{
			cxl_AllowSaveChild.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AllowSaveChild = null;
		public boolean getidBirthDetailsMesageBoxIsNotNull()
		{
			return !cxl_idBirthDetailsMesageBox.getValueIsNull(context);
		}
		public Integer getidBirthDetailsMesageBox()
		{
			return (Integer)cxl_idBirthDetailsMesageBox.getValue(context);
		}
		public void setidBirthDetailsMesageBox(Integer value)
		{
			cxl_idBirthDetailsMesageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idBirthDetailsMesageBox = null;
		public boolean getisDOBChangedIsNotNull()
		{
			return !cxl_isDOBChanged.getValueIsNull(context);
		}
		public Boolean getisDOBChanged()
		{
			return (Boolean)cxl_isDOBChanged.getValue(context);
		}
		public void setisDOBChanged(Boolean value)
		{
			cxl_isDOBChanged.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_isDOBChanged = null;
		public boolean getidSaveDOBChangedMessageBoxIsNotNull()
		{
			return !cxl_idSaveDOBChangedMessageBox.getValueIsNull(context);
		}
		public Integer getidSaveDOBChangedMessageBox()
		{
			return (Integer)cxl_idSaveDOBChangedMessageBox.getValue(context);
		}
		public void setidSaveDOBChangedMessageBox(Integer value)
		{
			cxl_idSaveDOBChangedMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idSaveDOBChangedMessageBox = null;
		public boolean getidUpdateFamilyAddressIsNotNull()
		{
			return !cxl_idUpdateFamilyAddress.getValueIsNull(context);
		}
		public Integer getidUpdateFamilyAddress()
		{
			return (Integer)cxl_idUpdateFamilyAddress.getValue(context);
		}
		public void setidUpdateFamilyAddress(Integer value)
		{
			cxl_idUpdateFamilyAddress.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idUpdateFamilyAddress = null;
		public boolean getFamilyAddressIsNotNull()
		{
			return !cxl_FamilyAddress.getValueIsNull(context);
		}
		public ims.pci.vo.ClientAddressVo getFamilyAddress()
		{
			return (ims.pci.vo.ClientAddressVo)cxl_FamilyAddress.getValue(context);
		}
		public void setFamilyAddress(ims.pci.vo.ClientAddressVo value)
		{
			cxl_FamilyAddress.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_FamilyAddress = null;
		public boolean getCurrentSchoolIsNotNull()
		{
			return !cxl_CurrentSchool.getValueIsNull(context);
		}
		public ims.core.vo.SchoolShortVo getCurrentSchool()
		{
			return (ims.core.vo.SchoolShortVo)cxl_CurrentSchool.getValue(context);
		}
		public void setCurrentSchool(ims.core.vo.SchoolShortVo value)
		{
			cxl_CurrentSchool.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentSchool = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[238];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-ID", "ID_Gp");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-STATUS", "Status");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ID", "ID_Patient");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SEX", "Sex");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOB", "Dob");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOD", "Dod");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-RELIGION", "Religion");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISACTIVE", "IsActive");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SCN", "SCN");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_PCI.School", "BO-1007100014-ID", "ID_School");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_PCI.School", "BO-1007100014-SCHOOLNAME", "SchoolName");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_PCI.School", "BO-1007100014-LOCATION", "Location");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_PCI.School", "BO-1007100014-PHONENUMBER", "PhoneNumber");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_PCI.School", "BO-1007100014-ISACTIVE", "IsActive");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_PCI.CurrentSector", "BO-1007100007-ID", "ID_Location");
			fields[172] = new ims.framework.ReportField(this.context, "_cv_PCI.CurrentSector", "BO-1007100007-NAME", "Name");
			fields[173] = new ims.framework.ReportField(this.context, "_cv_PCI.CurrentSector", "BO-1007100007-ISACTIVE", "IsActive");
			fields[174] = new ims.framework.ReportField(this.context, "_cv_PCI.CurrentSector", "BO-1007100007-ISVIRTUAL", "IsVirtual");
			fields[175] = new ims.framework.ReportField(this.context, "_cv_PCI.CurrentSector", "BO-1007100007-TYPE", "Type");
			fields[176] = new ims.framework.ReportField(this.context, "_cv_PCI.CurrentSector", "BO-1007100007-DISPLAYINEDTRACKING", "DisplayInEDTracking");
			fields[177] = new ims.framework.ReportField(this.context, "_cv_PCI.CurrentSector", "BO-1007100007-CASENOTEFOLDERLOCATION", "CaseNoteFolderLocation");
			fields[178] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[179] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[180] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[181] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[182] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[183] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[184] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[185] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[186] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[187] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[188] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[189] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[190] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[191] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[192] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[193] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[194] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[195] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[196] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[197] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[198] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-ISCHILD", "IsChild");
			fields[199] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-NATIONALITY", "Nationality");
			fields[200] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-DODSOURCE", "DodSource");
			fields[201] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-GPSURGERY", "GpSurgery");
			fields[202] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[203] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentClient_" + componentIdentifier, "BO-1001100000-CONFIDENTIALREASON", "ConfidentialReason");
			fields[204] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ContactGP_" + componentIdentifier, "BO-1006100001-ID", "ID_Gp");
			fields[205] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ContactGP_" + componentIdentifier, "BO-1006100001-STATUS", "Status");
			fields[206] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__RegisteredGP_" + componentIdentifier, "BO-1006100001-ID", "ID_Gp");
			fields[207] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[208] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[209] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[210] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[211] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[212] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[213] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[214] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[215] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[216] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[217] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[218] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[219] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[220] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[221] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[222] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[223] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[224] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[225] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[226] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[227] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-ISCHILD", "IsChild");
			fields[228] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-NATIONALITY", "Nationality");
			fields[229] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-DODSOURCE", "DodSource");
			fields[230] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-GPSURGERY", "GpSurgery");
			fields[231] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[232] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__ParentClient_" + componentIdentifier, "BO-1001100000-CONFIDENTIALREASON", "ConfidentialReason");
			fields[233] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentSchool_" + componentIdentifier, "BO-1007100014-ID", "ID_School");
			fields[234] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentSchool_" + componentIdentifier, "BO-1007100014-SCHOOLNAME", "SchoolName");
			fields[235] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentSchool_" + componentIdentifier, "BO-1007100014-LOCATION", "Location");
			fields[236] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentSchool_" + componentIdentifier, "BO-1007100014-PHONENUMBER", "PhoneNumber");
			fields[237] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.ClientDemographics.__internal_x_context__CurrentSchool_" + componentIdentifier, "BO-1007100014-ISACTIVE", "IsActive");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
