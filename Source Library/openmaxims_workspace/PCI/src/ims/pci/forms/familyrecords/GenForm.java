//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.pci.forms.familyrecords;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class lyrFamilyLayer extends Layer
	{
		private static final long serialVersionUID = 1L;
		public static class tabPage1Container extends LayerBridge
		{
			private static final long serialVersionUID = 1L;
			public static class grdChildsRow extends GridRowBridge
			{
				private static final long serialVersionUID = 1L;
				
				protected grdChildsRow(GridRow row)
				{
					super(row);
				}
				public void showOpened(int column)
				{
					super.row.showOpened(column);
				}
				public void setColClientIDReadOnly(boolean value)
				{
					super.row.setReadOnly(0, value);
				}
				public boolean isColClientIDReadOnly()
				{
					return super.row.isReadOnly(0);
				}
				public void showColClientIDOpened()
				{
					super.row.showOpened(0);
				}
				public String getColClientID()
				{
					return (String)super.row.get(0);
				}
				public void setColClientID(String value)
				{
					super.row.set(0, value);
				}
				public void setCellColClientIDTooltip(String value)
				{
					super.row.setTooltip(0, value);
				}
				public void setColClientNameReadOnly(boolean value)
				{
					super.row.setReadOnly(1, value);
				}
				public boolean isColClientNameReadOnly()
				{
					return super.row.isReadOnly(1);
				}
				public void showColClientNameOpened()
				{
					super.row.showOpened(1);
				}
				public String getColClientName()
				{
					return (String)super.row.get(1);
				}
				public void setColClientName(String value)
				{
					super.row.set(1, value);
				}
				public void setCellColClientNameTooltip(String value)
				{
					super.row.setTooltip(1, value);
				}
				public void setColDOBReadOnly(boolean value)
				{
					super.row.setReadOnly(2, value);
				}
				public boolean isColDOBReadOnly()
				{
					return super.row.isReadOnly(2);
				}
				public void showColDOBOpened()
				{
					super.row.showOpened(2);
				}
				public String getColDOB()
				{
					return (String)super.row.get(2);
				}
				public void setColDOB(String value)
				{
					super.row.set(2, value);
				}
				public void setCellColDOBTooltip(String value)
				{
					super.row.setTooltip(2, value);
				}
				public void setColClientSexReadOnly(boolean value)
				{
					super.row.setReadOnly(3, value);
				}
				public boolean isColClientSexReadOnly()
				{
					return super.row.isReadOnly(3);
				}
				public void showColClientSexOpened()
				{
					super.row.showOpened(3);
				}
				public String getColClientSex()
				{
					return (String)super.row.get(3);
				}
				public void setColClientSex(String value)
				{
					super.row.set(3, value);
				}
				public void setCellColClientSexTooltip(String value)
				{
					super.row.setTooltip(3, value);
				}
				public void setColClientAddressReadOnly(boolean value)
				{
					super.row.setReadOnly(4, value);
				}
				public boolean isColClientAddressReadOnly()
				{
					return super.row.isReadOnly(4);
				}
				public void showColClientAddressOpened()
				{
					super.row.showOpened(4);
				}
				public String getColClientAddress()
				{
					return (String)super.row.get(4);
				}
				public void setColClientAddress(String value)
				{
					super.row.set(4, value);
				}
				public void setCellColClientAddressTooltip(String value)
				{
					super.row.setTooltip(4, value);
				}
				public ims.core.vo.PatientShort getValue()
				{
					return (ims.core.vo.PatientShort)super.row.getValue();
				}
				public void setValue(ims.core.vo.PatientShort value)
				{
					super.row.setValue(value);
				}
			}
			public static class grdChildsRowCollection extends GridRowCollectionBridge
			{
				private static final long serialVersionUID = 1L;
				
				private grdChildsRowCollection(GridRowCollection collection)
				{
					super(collection);
				}
				public grdChildsRow get(int index)
				{
					return new grdChildsRow(super.collection.get(index));
				}
				public grdChildsRow newRow()
				{
					return new grdChildsRow(super.collection.newRow());
				}
				public grdChildsRow newRow(boolean autoSelect)
				{
					return new grdChildsRow(super.collection.newRow(autoSelect));
				}
				public grdChildsRow newRowAt(int index)
				{
					return new grdChildsRow(super.collection.newRowAt(index));
				}
				public grdChildsRow newRowAt(int index, boolean autoSelect)
				{
					return new grdChildsRow(super.collection.newRowAt(index, autoSelect));
				}
			}
			public static class grdChildsGrid extends GridBridge
			{
				private static final long serialVersionUID = 1L;
				
				private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
				{
					super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
				}
				public ims.core.vo.PatientShortCollection getValues()
				{
					ims.core.vo.PatientShortCollection listOfValues = new ims.core.vo.PatientShortCollection();
					for(int x = 0; x < this.getRows().size(); x++)
					{
						listOfValues.add(this.getRows().get(x).getValue());
					}
					return listOfValues;
				}
				public ims.core.vo.PatientShort getValue()
				{
					return (ims.core.vo.PatientShort)super.grid.getValue();
				}
				public void setValue(ims.core.vo.PatientShort value)
				{
					super.grid.setValue(value);
				}
				public grdChildsRow getSelectedRow()
				{
					return super.grid.getSelectedRow() == null ? null : new grdChildsRow(super.grid.getSelectedRow());
				}
				public int getSelectedRowIndex()
				{
					return super.grid.getSelectedRowIndex();
				}
				public grdChildsRowCollection getRows()
				{
					return new grdChildsRowCollection(super.grid.getRows());
				}
				public grdChildsRow getRowByValue(ims.core.vo.PatientShort value)
				{
					GridRow row = super.grid.getRowByValue(value);
					return row == null?null:new grdChildsRow(row);
				}
				public void setColClientIDHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(0, value);
				}
				public String getColClientIDHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(0);
				}
				public void setColClientNameHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(1, value);
				}
				public String getColClientNameHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(1);
				}
				public void setColDOBHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(2, value);
				}
				public String getColDOBHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(2);
				}
				public void setColClientSexHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(3, value);
				}
				public String getColClientSexHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(3);
				}
				public void setColClientAddressHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(4, value);
				}
				public String getColClientAddressHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(4);
				}
			}
			public void setTabActivatedEvent(ims.framework.delegates.TabActivated delegate)
			{
				super.container.setTabActivatedEvent(delegate);
			}
			public boolean isInitialized()
			{
				return super.container.isInitialized();
			}
			protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
			{
				if(form == null)
					throw new RuntimeException("Invalid form");
				if(appForm == null)
					throw new RuntimeException("Invalid application form");
				if(control == null); // this is to avoid eclipse warning only.
				if(loader == null); // this is to avoid eclipse warning only.
				if(contextMenus == null); // this is to avoid eclipse warning only.
				if(startControlID == null)
					throw new RuntimeException("Invalid startControlID");
				if(designSize == null); // this is to avoid eclipse warning only.
				if(runtimeSize == null); // this is to avoid eclipse warning only.
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex ");
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex");
		
		
				// Panel Controls
				RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 824, 144, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Parent/Guardian Record", new Integer(2), ""}));
				RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 8, 160, 824, 400, ims.framework.enumerations.ControlAnchoring.ALL);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Linked Child Records", new Integer(2), ""}));
		
				// Label Controls
				RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 19, 96, 44, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Phone:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 19, 32, 41, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Name:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 315, 64, 54, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Address:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 19, 64, 59, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Client ID:", new Integer(1), null, new Integer(0)}));
		
				// Button Controls
				RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 100, 568, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), new Integer(startTabIndex.intValue() + 7), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Unlink", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
				RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 16, 568, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Link", Boolean.FALSE, "Link Child", Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
				RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 184, 568, 144, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Update Family Address", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
				RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 736, 29, 88, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Select Parent", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		
				// TextBox Controls
				RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 96, 94, 208, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), new Integer(startTabIndex.intValue() + 15), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 384, 62, 344, 72, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 96, 30, 632, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 96, 62, 208, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		
				// Grid Controls
				RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 12, 184, 812, 368, ims.framework.enumerations.ControlAnchoring.ALL);
				Grid m_grdChildsTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.READONLY, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.ALL,Boolean.TRUE, Boolean.FALSE, new Integer(24), Boolean.TRUE, contextMenus.PCI.contextMenuFamilyRecordsContextMenu, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.TRUE});
				addControl(m_grdChildsTemp);
				grdChildsGrid grdChilds = (grdChildsGrid)GridFlyweightFactory.getInstance().createGridBridge(grdChildsGrid.class, m_grdChildsTemp);
				grdChilds.addStringColumn("Client ID", 0, 0, 70, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdChilds.addStringColumn("Client Name", 0, 0, 200, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdChilds.addStringColumn("DOB", 0, 0, 100, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdChilds.addStringColumn("Sex", 0, 0, 100, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdChilds.addStringColumn("Address", 0, 0, -1, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				super.addGrid(grdChilds);
			}

			public Button btnUnlink()
			{
				return (Button)super.getControl(6);
			}
			public Button btnLinkChild()
			{
				return (Button)super.getControl(7);
			}
			public Button btnParentUpdateAddress()
			{
				return (Button)super.getControl(8);
			}
			public Button btnSelectParent()
			{
				return (Button)super.getControl(9);
			}
			public TextBox txtPhoneParent()
			{
				return (TextBox)super.getControl(10);
			}
			public TextBox txtAddress()
			{
				return (TextBox)super.getControl(11);
			}
			public TextBox txtNameParent()
			{
				return (TextBox)super.getControl(12);
			}
			public TextBox txtClientId()
			{
				return (TextBox)super.getControl(13);
			}
			public grdChildsGrid grdChilds()
			{
				return (grdChildsGrid)super.getGrid(0);
			}
		}
		public static class tabPage2Container extends LayerBridge
		{
			private static final long serialVersionUID = 1L;
			public void setTabActivatedEvent(ims.framework.delegates.TabActivated delegate)
			{
				super.container.setTabActivatedEvent(delegate);
			}
			public boolean isInitialized()
			{
				return super.container.isInitialized();
			}
			protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
			{
				if(form == null)
					throw new RuntimeException("Invalid form");
				if(appForm == null)
					throw new RuntimeException("Invalid application form");
				if(control == null); // this is to avoid eclipse warning only.
				if(loader == null); // this is to avoid eclipse warning only.
				if(contextMenus == null); // this is to avoid eclipse warning only.
				if(startControlID == null)
					throw new RuntimeException("Invalid startControlID");
				if(designSize == null); // this is to avoid eclipse warning only.
				if(runtimeSize == null); // this is to avoid eclipse warning only.
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex ");
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex");
		
		
				// Panel Controls
				RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 824, 144, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Child Client Record", new Integer(2), ""}));
				RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 8, 216, 824, 152, ims.framework.enumerations.ControlAnchoring.ALL);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Linked Parent/Guardian Records", new Integer(2), ""}));
		
				// Label Controls
				RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 19, 96, 44, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Phone:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 19, 32, 41, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Name:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 315, 64, 54, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Address:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 19, 64, 59, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Client ID:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 19, 320, 44, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Phone:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 19, 256, 41, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Name:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 19, 288, 59, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Client ID:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 315, 288, 54, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Address:", new Integer(1), null, new Integer(0)}));
		
				// Button Controls
				RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 100, 568, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), new Integer(startTabIndex.intValue() + 20), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Unlink", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
				RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 16, 568, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), new Integer(startTabIndex.intValue() + 19), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Link", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
				RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 184, 568, 144, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), new Integer(startTabIndex.intValue() + 21), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Update Family Address", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
				RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 736, 29, 88, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), new Integer(startTabIndex.intValue() + 10), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Select Child", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
				RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 736, 253, 88, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), new Integer(startTabIndex.intValue() + 16), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Select Parent", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		
				// TextBox Controls
				RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 96, 94, 208, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), new Integer(startTabIndex.intValue() + 13), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 387, 64, 341, 72, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 96, 30, 632, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 96, 62, 208, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), new Integer(startTabIndex.intValue() + 11), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 96, 318, 208, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), new Integer(startTabIndex.intValue() + 22), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 96, 254, 632, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), new Integer(startTabIndex.intValue() + 14), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 96, 286, 208, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), new Integer(startTabIndex.intValue() + 17), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 387, 286, 341, 72, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), new Integer(startTabIndex.intValue() + 18), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
			}

			public Button btnUnlinkChild()
			{
				return (Button)super.getControl(10);
			}
			public Button btnLinkParent()
			{
				return (Button)super.getControl(11);
			}
			public Button btnChildUpdateAddress()
			{
				return (Button)super.getControl(12);
			}
			public Button btnSelectChild()
			{
				return (Button)super.getControl(13);
			}
			public Button btnSelectGuardian()
			{
				return (Button)super.getControl(14);
			}
			public TextBox txtPhoneChild()
			{
				return (TextBox)super.getControl(15);
			}
			public TextBox txtAddressChild()
			{
				return (TextBox)super.getControl(16);
			}
			public TextBox txtNameChild()
			{
				return (TextBox)super.getControl(17);
			}
			public TextBox txtClientIdChild()
			{
				return (TextBox)super.getControl(18);
			}
			public TextBox txtPhoneGuardian()
			{
				return (TextBox)super.getControl(19);
			}
			public TextBox txtNameGuardian()
			{
				return (TextBox)super.getControl(20);
			}
			public TextBox txtClientIdGuardian()
			{
				return (TextBox)super.getControl(21);
			}
			public TextBox txtAddressGuardian()
			{
				return (TextBox)super.getControl(22);
			}
		}

		protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
		{
			if(form == null)
				throw new RuntimeException("Invalid form");
			if(appForm == null)
				throw new RuntimeException("Invalid application form");
			if(control == null); // this is to avoid eclipse warning only.
			if(loader == null); // this is to avoid eclipse warning only.
			if(contextMenus == null); // this is to avoid eclipse warning only.
			if(startControlID == null)
				throw new RuntimeException("Invalid startControlID");
			if(designSize == null); // this is to avoid eclipse warning only.
			if(runtimeSize == null); // this is to avoid eclipse warning only.
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex");
			RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 0, 0, 848, 624, ims.framework.enumerations.ControlAnchoring.ALL);
			Container m_tabPage1 = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Parent/Guardian to Child Links", new Integer(startControlID.intValue() + 0), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(false)});
			tabPage1Container m_tabPage1Container = (tabPage1Container)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabPage1Container.class, m_tabPage1, factory);
			super.addContainer(m_tabPage1, m_tabPage1Container);
			ims.framework.utils.SizeInfo m_tabPage1DesignSize = new ims.framework.utils.SizeInfo(848, 624);
			ims.framework.utils.SizeInfo m_tabPage1RuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper39.getWidth(), anchoringHelper39.getHeight());
			m_tabPage1Container.setContext(form, appForm, m_tabPage1, loader, contextMenus, startControlID, m_tabPage1DesignSize, m_tabPage1RuntimeSize, startTabIndex, skipContextValidation);
			RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 0, 0, 848, 624, ims.framework.enumerations.ControlAnchoring.ALL);
			Container m_tabPage2 = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Child to Parent/Guardian Links", new Integer(startControlID.intValue() + 0), new Boolean(false), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(false)});
			tabPage2Container m_tabPage2Container = (tabPage2Container)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabPage2Container.class, m_tabPage2, factory);
			super.addContainer(m_tabPage2, m_tabPage2Container);
			ims.framework.utils.SizeInfo m_tabPage2DesignSize = new ims.framework.utils.SizeInfo(848, 624);
			ims.framework.utils.SizeInfo m_tabPage2RuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper40.getWidth(), anchoringHelper40.getHeight());
			m_tabPage2Container.setContext(form, appForm, m_tabPage2, loader, contextMenus, startControlID, m_tabPage2DesignSize, m_tabPage2RuntimeSize, startTabIndex, skipContextValidation);
		}
		public void hide()
		{
			tabPage1().setVisible(false);
			tabPage2().setVisible(false);
		}
		public void settabPage1Enabled(boolean value)
		{
			tabPage1().setEnabled(value);
		}
		public void settabPage2Enabled(boolean value)
		{
			tabPage2().setEnabled(value);
		}
		public void showtabPage1()
		{
			tabPage2().setVisible(false);
			tabPage1().setVisible(true);
		}
		public void showtabPage2()
		{
			tabPage1().setVisible(false);
			tabPage2().setVisible(true);
		}

		public tabPage1Container tabPage1()
		{
			return (tabPage1Container)super.layers.get(0);
		}
		public tabPage2Container tabPage2()
		{
			return (tabPage2Container)super.layers.get(1);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.PCI.contextMenuFamilyRecordsContextMenu = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.PCI.contextMenuFamilyRecordsContextMenuLINKItem = factory.createMenuItem(startControlID.intValue() + 1, "Link", true, false, new Integer(102278), true, false);
		contextMenus.PCI.contextMenuFamilyRecordsContextMenu.add(contextMenus.PCI.contextMenuFamilyRecordsContextMenuLINKItem);
		contextMenus.PCI.contextMenuFamilyRecordsContextMenuUNLINKItem = factory.createMenuItem(startControlID.intValue() + 2, "Unlink", true, false, new Integer(102300), true, false);
		contextMenus.PCI.contextMenuFamilyRecordsContextMenu.add(contextMenus.PCI.contextMenuFamilyRecordsContextMenuUNLINKItem);
		contextMenus.PCI.contextMenuFamilyRecordsContextMenuViIEW_DEMOGRAPHICSItem = factory.createMenuItem(startControlID.intValue() + 3, "View Demographics", true, false, new Integer(110107), true, false);
		contextMenus.PCI.contextMenuFamilyRecordsContextMenu.add(contextMenus.PCI.contextMenuFamilyRecordsContextMenuViIEW_DEMOGRAPHICSItem);
		form.registerMenu(contextMenus.PCI.contextMenuFamilyRecordsContextMenu);


		// Layer Clasess
		lyrFamilyLayer m_lyrFamilyLayer = (lyrFamilyLayer)LayerFlyweightFactory.getInstance().createLayer(lyrFamilyLayer.class, this, factory);
		super.addLayer(m_lyrFamilyLayer);
		m_lyrFamilyLayer.setContext(form, appForm, control, loader, contextMenus, startControlID, designSize, runtimeSize, startTabIndex, skipContextValidation);
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}
	public lyrFamilyLayer lyrFamily()
	{
		return (lyrFamilyLayer)super.getLayer(0);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			PCI = new PCIForms();
		}
		public final class PCIForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private PCIForms()
			{
				LinkChildDialog = new LocalFormName(133103);
				UpdateAddressDialog = new LocalFormName(133112);
				ParentSearch = new LocalFormName(133122);
				FamilyRecordsDialog = new LocalFormName(133123);
			}
			public final FormName LinkChildDialog;
			public final FormName UpdateAddressDialog;
			public final FormName ParentSearch;
			public final FormName FamilyRecordsDialog;
		}

		public PCIForms PCI;
	}

	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_isParentSearch = new ims.framework.ContextVariable("isParentSearch", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__isParentSearch_" + componentIdentifier + "");
			cxl_isLinkSearch = new ims.framework.ContextVariable("isLinkSearch", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__isLinkSearch_" + componentIdentifier + "");
			cxl_canLinkChild = new ims.framework.ContextVariable("canLinkChild", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__canLinkChild_" + componentIdentifier + "");
			cxl_idLinkMessageBox = new ims.framework.ContextVariable("idLinkMessageBox", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__idLinkMessageBox_" + componentIdentifier + "");
			cxl_idUnlinkMessageBox = new ims.framework.ContextVariable("idUnlinkMessageBox", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__idUnlinkMessageBox_" + componentIdentifier + "");
			cxl_parentClient = new ims.framework.ContextVariable("parentClient", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier + "");
			cxl_isChildSearch = new ims.framework.ContextVariable("isChildSearch", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__isChildSearch_" + componentIdentifier + "");
			cxl_childClient = new ims.framework.ContextVariable("childClient", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier + "");
			cxl_guardianClient = new ims.framework.ContextVariable("guardianClient", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier + "");
			cxl_idUnlinkChildMessageBox = new ims.framework.ContextVariable("idUnlinkChildMessageBox", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__idUnlinkChildMessageBox_" + componentIdentifier + "");
			cxl_isGuardianSearch = new ims.framework.ContextVariable("isGuardianSearch", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__isGuardianSearch_" + componentIdentifier + "");
			cxl_newGuardianClient = new ims.framework.ContextVariable("newGuardianClient", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier + "");
			cxl_idLinkChildMessageBox = new ims.framework.ContextVariable("idLinkChildMessageBox", prefix + "_lv_PCI.FamilyRecords.__internal_x_context__idLinkChildMessageBox_" + componentIdentifier + "");
		}
		
		public boolean getisParentSearchIsNotNull()
		{
			return !cxl_isParentSearch.getValueIsNull(context);
		}
		public Boolean getisParentSearch()
		{
			return (Boolean)cxl_isParentSearch.getValue(context);
		}
		public void setisParentSearch(Boolean value)
		{
			cxl_isParentSearch.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_isParentSearch = null;
		public boolean getisLinkSearchIsNotNull()
		{
			return !cxl_isLinkSearch.getValueIsNull(context);
		}
		public Boolean getisLinkSearch()
		{
			return (Boolean)cxl_isLinkSearch.getValue(context);
		}
		public void setisLinkSearch(Boolean value)
		{
			cxl_isLinkSearch.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_isLinkSearch = null;
		public boolean getcanLinkChildIsNotNull()
		{
			return !cxl_canLinkChild.getValueIsNull(context);
		}
		public Boolean getcanLinkChild()
		{
			return (Boolean)cxl_canLinkChild.getValue(context);
		}
		public void setcanLinkChild(Boolean value)
		{
			cxl_canLinkChild.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_canLinkChild = null;
		public boolean getidLinkMessageBoxIsNotNull()
		{
			return !cxl_idLinkMessageBox.getValueIsNull(context);
		}
		public Integer getidLinkMessageBox()
		{
			return (Integer)cxl_idLinkMessageBox.getValue(context);
		}
		public void setidLinkMessageBox(Integer value)
		{
			cxl_idLinkMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idLinkMessageBox = null;
		public boolean getidUnlinkMessageBoxIsNotNull()
		{
			return !cxl_idUnlinkMessageBox.getValueIsNull(context);
		}
		public Integer getidUnlinkMessageBox()
		{
			return (Integer)cxl_idUnlinkMessageBox.getValue(context);
		}
		public void setidUnlinkMessageBox(Integer value)
		{
			cxl_idUnlinkMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idUnlinkMessageBox = null;
		public boolean getparentClientIsNotNull()
		{
			return !cxl_parentClient.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getparentClient()
		{
			return (ims.core.vo.PatientShort)cxl_parentClient.getValue(context);
		}
		public void setparentClient(ims.core.vo.PatientShort value)
		{
			cxl_parentClient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_parentClient = null;
		public boolean getisChildSearchIsNotNull()
		{
			return !cxl_isChildSearch.getValueIsNull(context);
		}
		public Boolean getisChildSearch()
		{
			return (Boolean)cxl_isChildSearch.getValue(context);
		}
		public void setisChildSearch(Boolean value)
		{
			cxl_isChildSearch.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_isChildSearch = null;
		public boolean getchildClientIsNotNull()
		{
			return !cxl_childClient.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getchildClient()
		{
			return (ims.core.vo.PatientShort)cxl_childClient.getValue(context);
		}
		public void setchildClient(ims.core.vo.PatientShort value)
		{
			cxl_childClient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_childClient = null;
		public boolean getguardianClientIsNotNull()
		{
			return !cxl_guardianClient.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getguardianClient()
		{
			return (ims.core.vo.PatientShort)cxl_guardianClient.getValue(context);
		}
		public void setguardianClient(ims.core.vo.PatientShort value)
		{
			cxl_guardianClient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_guardianClient = null;
		public boolean getidUnlinkChildMessageBoxIsNotNull()
		{
			return !cxl_idUnlinkChildMessageBox.getValueIsNull(context);
		}
		public Integer getidUnlinkChildMessageBox()
		{
			return (Integer)cxl_idUnlinkChildMessageBox.getValue(context);
		}
		public void setidUnlinkChildMessageBox(Integer value)
		{
			cxl_idUnlinkChildMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idUnlinkChildMessageBox = null;
		public boolean getisGuardianSearchIsNotNull()
		{
			return !cxl_isGuardianSearch.getValueIsNull(context);
		}
		public Boolean getisGuardianSearch()
		{
			return (Boolean)cxl_isGuardianSearch.getValue(context);
		}
		public void setisGuardianSearch(Boolean value)
		{
			cxl_isGuardianSearch.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_isGuardianSearch = null;
		public boolean getnewGuardianClientIsNotNull()
		{
			return !cxl_newGuardianClient.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getnewGuardianClient()
		{
			return (ims.core.vo.PatientShort)cxl_newGuardianClient.getValue(context);
		}
		public void setnewGuardianClient(ims.core.vo.PatientShort value)
		{
			cxl_newGuardianClient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_newGuardianClient = null;
		public boolean getidLinkChildMessageBoxIsNotNull()
		{
			return !cxl_idLinkChildMessageBox.getValueIsNull(context);
		}
		public Integer getidLinkChildMessageBox()
		{
			return (Integer)cxl_idLinkChildMessageBox.getValue(context);
		}
		public void setidLinkChildMessageBox(Integer value)
		{
			cxl_idLinkChildMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_idLinkChildMessageBox = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public PCINamespace PCI = new PCINamespace();
		public final class PCINamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class FamilyRecordsContextMenu implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int LINK = 1;
				public static final int UNLINK = 2;
				public static final int ViIEW_DEMOGRAPHICS = 3;
			}
			public void disableAllFamilyRecordsContextMenuMenuItems()
			{
				this.contextMenuFamilyRecordsContextMenuLINKItem.setEnabled(false);
				this.contextMenuFamilyRecordsContextMenuUNLINKItem.setEnabled(false);
				this.contextMenuFamilyRecordsContextMenuViIEW_DEMOGRAPHICSItem.setEnabled(false);
			}
			public void hideAllFamilyRecordsContextMenuMenuItems()
			{
				this.contextMenuFamilyRecordsContextMenuLINKItem.setVisible(false);
				this.contextMenuFamilyRecordsContextMenuUNLINKItem.setVisible(false);
				this.contextMenuFamilyRecordsContextMenuViIEW_DEMOGRAPHICSItem.setVisible(false);
			}
			private Menu contextMenuFamilyRecordsContextMenu;
			public MenuItem getFamilyRecordsContextMenuLINKItem()
			{
				return this.contextMenuFamilyRecordsContextMenuLINKItem;
			}
			private MenuItem contextMenuFamilyRecordsContextMenuLINKItem;
			public MenuItem getFamilyRecordsContextMenuUNLINKItem()
			{
				return this.contextMenuFamilyRecordsContextMenuUNLINKItem;
			}
			private MenuItem contextMenuFamilyRecordsContextMenuUNLINKItem;
			public ReadOnlyMenuItem getFamilyRecordsContextMenuViIEW_DEMOGRAPHICSItem()
			{
				return this.contextMenuFamilyRecordsContextMenuViIEW_DEMOGRAPHICSItem;
			}
			private MenuItem contextMenuFamilyRecordsContextMenuViIEW_DEMOGRAPHICSItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[284];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-ID", "ID_Patient");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-SEX", "Sex");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-DOB", "Dob");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-DOD", "Dod");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-RELIGION", "Religion");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-ISACTIVE", "IsActive");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-SCN", "SCN");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_PCI.Client", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-ID", "ID_Patient");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-SEX", "Sex");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-DOB", "Dob");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-DOD", "Dod");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-RELIGION", "Religion");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-ISACTIVE", "IsActive");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[172] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-SCN", "SCN");
			fields[173] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[174] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[175] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[176] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[177] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[178] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[179] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[180] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[181] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[182] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[183] = new ims.framework.ReportField(this.context, "_cv_PCI.ClientParent", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[184] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ID", "ID_Patient");
			fields[185] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SEX", "Sex");
			fields[186] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOB", "Dob");
			fields[187] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOD", "Dod");
			fields[188] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-RELIGION", "Religion");
			fields[189] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISACTIVE", "IsActive");
			fields[190] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[191] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[192] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SCN", "SCN");
			fields[193] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[194] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[195] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[196] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[197] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[198] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[199] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[200] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[201] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[202] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[203] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[204] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[205] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[206] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[207] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[208] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[209] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[210] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[211] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[212] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[213] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[214] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[215] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[216] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[217] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[218] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[219] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[220] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[221] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[222] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[223] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__parentClient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[224] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[225] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[226] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[227] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[228] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[229] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[230] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[231] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[232] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[233] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[234] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[235] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[236] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[237] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[238] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[239] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[240] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[241] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[242] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[243] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__childClient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[244] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[245] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[246] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[247] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[248] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[249] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[250] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[251] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[252] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[253] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[254] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[255] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[256] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[257] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[258] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[259] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[260] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[261] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[262] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[263] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__guardianClient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[264] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[265] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[266] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[267] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[268] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[269] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[270] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[271] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[272] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[273] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[274] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[275] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[276] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[277] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[278] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[279] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[280] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[281] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[282] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[283] = new ims.framework.ReportField(this.context, prefix + "_lv_PCI.FamilyRecords.__internal_x_context__newGuardianClient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
