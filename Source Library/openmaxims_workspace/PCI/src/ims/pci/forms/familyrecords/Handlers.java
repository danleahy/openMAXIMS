//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.pci.forms.familyrecords;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrFamilyTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onBtnUnlinkClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnLinkChildClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdChildsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnParentUpdateAddressClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSelectParentClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUnlinkChildClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnLinkParentClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnChildUpdateAddressClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSelectChildClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSelectGuardianClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.lyrFamily().tabPage1().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrFamilytabPage1Activated();
			}
		});
		this.form.lyrFamily().tabPage2().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrFamilytabPage2Activated();
			}
		});
		this.form.lyrFamily().tabPage1().btnUnlink().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUnlinkClick();
			}
		});
		this.form.lyrFamily().tabPage1().btnLinkChild().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnLinkChildClick();
			}
		});
		this.form.lyrFamily().tabPage1().grdChilds().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdChildsSelectionChanged();
			}
		});
		this.form.lyrFamily().tabPage1().btnParentUpdateAddress().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnParentUpdateAddressClick();
			}
		});
		this.form.lyrFamily().tabPage1().btnSelectParent().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSelectParentClick();
			}
		});
		this.form.lyrFamily().tabPage2().btnUnlinkChild().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUnlinkChildClick();
			}
		});
		this.form.lyrFamily().tabPage2().btnLinkParent().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnLinkParentClick();
			}
		});
		this.form.lyrFamily().tabPage2().btnChildUpdateAddress().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnChildUpdateAddressClick();
			}
		});
		this.form.lyrFamily().tabPage2().btnSelectChild().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSelectChildClick();
			}
		});
		this.form.lyrFamily().tabPage2().btnSelectGuardian().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSelectGuardianClick();
			}
		});
		this.form.getContextMenus().PCI.getFamilyRecordsContextMenuLINKItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.PCINamespace.FamilyRecordsContextMenu.LINK, sender);
			}
		});
		this.form.getContextMenus().PCI.getFamilyRecordsContextMenuUNLINKItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.PCINamespace.FamilyRecordsContextMenu.UNLINK, sender);
			}
		});
		this.form.getContextMenus().PCI.getFamilyRecordsContextMenuViIEW_DEMOGRAPHICSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.PCINamespace.FamilyRecordsContextMenu.ViIEW_DEMOGRAPHICS, sender);
			}
		});
	}
	private void onlyrFamilytabPage1Activated()
	{
		this.form.lyrFamily().showtabPage1();
		onlyrFamilyTabChanged(this.form.lyrFamily().tabPage1());
	}
	private void onlyrFamilytabPage2Activated()
	{
		this.form.lyrFamily().showtabPage2();
		onlyrFamilyTabChanged(this.form.lyrFamily().tabPage2());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
