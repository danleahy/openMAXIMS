//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.pci.forms.birthdetails;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindansStillbornLookup();
	abstract protected void defaultansStillbornLookupValue();
	abstract protected void bindansPKUTestLookup();
	abstract protected void defaultansPKUTestLookupValue();
	abstract protected void bindansEpisiotomyLookup();
	abstract protected void defaultansEpisiotomyLookupValue();
	abstract protected void bindcmbDeliveryMethodLookup();
	abstract protected void defaultcmbDeliveryMethodLookupValue();
	abstract protected void bindansEpiduralLookup();
	abstract protected void defaultansEpiduralLookupValue();
	abstract protected void bindcmbPlaceOfBirthLookup();
	abstract protected void defaultcmbPlaceOfBirthLookupValue();
	abstract protected void bindcmbBFThreeMonthsLookup();
	abstract protected void defaultcmbBFThreeMonthsLookupValue();
	abstract protected void bindcmbBFPHNVisitLookup();
	abstract protected void defaultcmbBFPHNVisitLookupValue();
	abstract protected void bindcmbBFDischargeLookup();
	abstract protected void defaultcmbBFDischargeLookupValue();
	abstract protected void bindansBreastFeedingLookup();
	abstract protected void defaultansBreastFeedingLookupValue();
	abstract protected void bindcmbMaritalStatusLookup();
	abstract protected void defaultcmbMaritalStatusLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onansStillbornValueSet(Object value);
	abstract protected void onansPKUTestValueSet(Object value);
	abstract protected void onansEpisiotomyValueSet(Object value);
	abstract protected void oncmbDeliveryMethodValueSet(Object value);
	abstract protected void onansEpiduralValueSet(Object value);
	abstract protected void oncmbPlaceOfBirthValueSet(Object value);
	abstract protected void oncmbBFThreeMonthsValueSet(Object value);
	abstract protected void oncmbBFPHNVisitValueSet(Object value);
	abstract protected void oncmbBFDischargeValueSet(Object value);
	abstract protected void onansBreastFeedingValueSet(Object value);
	abstract protected void oncmbMaritalStatusValueSet(Object value);
	abstract protected void onBtnNewClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.ansStillborn().setValueSetEvent(new AnswerBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				onansStillbornValueSet(value);
			}
		});
		this.form.ansPKUTest().setValueSetEvent(new AnswerBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				onansPKUTestValueSet(value);
			}
		});
		this.form.ansEpisiotomy().setValueSetEvent(new AnswerBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				onansEpisiotomyValueSet(value);
			}
		});
		this.form.cmbDeliveryMethod().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbDeliveryMethodValueSet(value);
			}
		});
		this.form.ansEpidural().setValueSetEvent(new AnswerBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				onansEpiduralValueSet(value);
			}
		});
		this.form.cmbPlaceOfBirth().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPlaceOfBirthValueSet(value);
			}
		});
		this.form.cmbBFThreeMonths().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbBFThreeMonthsValueSet(value);
			}
		});
		this.form.cmbBFPHNVisit().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbBFPHNVisitValueSet(value);
			}
		});
		this.form.cmbBFDischarge().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbBFDischargeValueSet(value);
			}
		});
		this.form.ansBreastFeeding().setValueSetEvent(new AnswerBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				onansBreastFeedingValueSet(value);
			}
		});
		this.form.cmbMaritalStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbMaritalStatusValueSet(value);
			}
		});
		this.form.btnNew().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
	}
	protected void bindLookups()
	{
		bindansStillbornLookup();
		bindansPKUTestLookup();
		bindansEpisiotomyLookup();
		bindcmbDeliveryMethodLookup();
		bindansEpiduralLookup();
		bindcmbPlaceOfBirthLookup();
		bindcmbBFThreeMonthsLookup();
		bindcmbBFPHNVisitLookup();
		bindcmbBFDischargeLookup();
		bindansBreastFeedingLookup();
		bindcmbMaritalStatusLookup();
	}
	protected void rebindAllLookups()
	{
		bindansStillbornLookup();
		bindansPKUTestLookup();
		bindansEpisiotomyLookup();
		bindcmbDeliveryMethodLookup();
		bindansEpiduralLookup();
		bindcmbPlaceOfBirthLookup();
		bindcmbBFThreeMonthsLookup();
		bindcmbBFPHNVisitLookup();
		bindcmbBFDischargeLookup();
		bindansBreastFeedingLookup();
		bindcmbMaritalStatusLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultansStillbornLookupValue();
		defaultansPKUTestLookupValue();
		defaultansEpisiotomyLookupValue();
		defaultcmbDeliveryMethodLookupValue();
		defaultansEpiduralLookupValue();
		defaultcmbPlaceOfBirthLookupValue();
		defaultcmbBFThreeMonthsLookupValue();
		defaultcmbBFPHNVisitLookupValue();
		defaultcmbBFDischargeLookupValue();
		defaultansBreastFeedingLookupValue();
		defaultcmbMaritalStatusLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
