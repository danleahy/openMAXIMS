//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.62 build 3126.20282)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.pci.forms.pcrsextracthistory;

import ims.domain.exceptions.DomainInterfaceException;
import ims.framework.enumerations.DialogResult;
import ims.framework.utils.DateTime;
import ims.framework.utils.Time;
import ims.pci.forms.pcrsextracthistory.GenForm.grdHistoryRow;
import ims.pci.vo.ExportTransactionLogVoCollection;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		DateTime dt = new DateTime();
		
		form.dteTo().setValue(dt.getDate());
		
		DateTime prev = dt.addMonth(-6);
		
		form.dteFrom().setValue(prev.getDate());
		
		searchRecords();
	}
	private void searchRecords()
	{
		if(form.dteFrom().getValue() == null)
		{
			engine.showMessage("Please enter Date From parameter !");
			return;
		}

		if(form.dteTo().getValue() == null)
		{
			engine.showMessage("Please enter Date To parameter !");
			return;
		}
		
		ExportTransactionLogVoCollection coll = null; 
		
		try
		{
			coll = domain.listHistory(new DateTime(form.dteFrom().getValue()), new DateTime(form.dteTo().getValue(), new Time(23,59,59)));
		}
		catch (DomainInterfaceException e)
		{
			e.printStackTrace();
			
			engine.showMessage("Error while retrieving records !" + e.toString());
			return;
		}
		

		displayRecords(coll);
	}
	private void displayRecords(ExportTransactionLogVoCollection coll)
	{
		form.grdHistory().getRows().clear();

		for (int i = 0; i < coll.size(); i++)
		{
			grdHistoryRow row = form.grdHistory().getRows().newRow();
			
			row.setColDate(coll.get(i).getDateGenerated().getDate().toString());
			row.setColReg(coll.get(i).getRegistrationFilename());
			row.setColImm(coll.get(i).getImmunisationFilename());
		}
		
	}
	@Override
	protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException
	{
		searchRecords();
	}
	@Override
	protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.OK);
	}
}
