//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.62 build 3126.20282)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.pci.forms.pcrsextract;

import ims.configuration.gen.ConfigFlag;
import ims.domain.exceptions.DomainInterfaceException;
import ims.framework.utils.DateTime;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.txtReg().setEnabled(false);
		form.txtImm().setEnabled(false);
		
		refreshLastExportDate();
	}
	private void refreshLastExportDate()
	{
		DateTime dt = domain.getLastExportedDate();
		
		form.lblExport().setValue("Last export date: " + (dt == null ? "" : dt.toString(false)));
	}
	@Override
	protected void onBtnHistoryClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.open(form.getForms().PCI.PCRSExtractHistory);
	}
	@Override
	protected void onBtnRegClick() throws ims.framework.exceptions.PresentationLogicException
	{
		String[] result = null;
		try
		{
			result = domain.exportData(ConfigFlag.GEN.PCI_CLIENT_PREFIX.getValue(), engine.getSessionId());
		}
		catch (DomainInterfaceException e)
		{
			e.printStackTrace();
			
			engine.showMessage("There was an error while exporing records: " + e.toString());
			
			return;
		}
		
		final int MAXL = 4*1024; 
		final String maxStr = "(the first " + MAXL / 1024 + " KB)";
		if(result != null && result.length >= 2)
		{
			if(result[1] != null && result[1].length() > MAXL)
			{
				form.lblRegExport().setValue("Registration export file " + maxStr);
				form.txtReg().setValue(result[1].substring(0,MAXL));
			}
			else
			{
				form.lblRegExport().setValue("Registration export file");
				form.txtReg().setValue(result[1]);
			}

			if(result[0] != null && result[0].length() > MAXL)
			{
				form.lblImmExport().setValue("Immunisation export file " + maxStr);
				form.txtImm().setValue(result[0].substring(0,MAXL));
			}
			else
			{
				form.lblImmExport().setValue("Immunisation export file");
				form.txtImm().setValue(result[0]);
			}
		}
		
		refreshLastExportDate();
	}
}
