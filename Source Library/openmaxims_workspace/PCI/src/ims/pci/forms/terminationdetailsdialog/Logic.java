//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
//This code was generated by George Cristian Josan using IMS Development Environment (version 1.62 build 3070.24992)
//Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.pci.forms.terminationdetailsdialog;

import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.FormOpenException;

public class Logic extends BaseLogic
{
    private static final long serialVersionUID = 1L;

    @Override
    protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
    {
	initialize();
	open();
    }

    @Override
    protected void onFormModeChanged()
    {
	// TODO Add your code here.
    }

    @Override
    protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
    {
	// TODO Add your code here.
	if (!form.getGlobalContext().PCI.getTerminationDetailsIsNotNull())
	    return;

	if (form.cmbTerminationReason().getValue() == null || form.dteTerminationDate().getValue() == null)
	{
	    engine.showMessage("Both Termination Reason and Termination Date must be selected");
	    return;
	}
	
	form.getGlobalContext().PCI.getTerminationDetails().setTerminationReason(form.cmbTerminationReason().getValue());
	form.getGlobalContext().PCI.getTerminationDetails().setTerminationDate(form.dteTerminationDate().getValue());

	engine.close(DialogResult.OK);
    }

    @Override
    protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
    {
	engine.close(DialogResult.CANCEL);
    }

    public void initialize() throws FormOpenException
    {
        super.initialize();
    }
    
    public void open() throws ims.framework.exceptions.PresentationLogicException
    {
	if (form.getGlobalContext().PCI.getTerminationDetailsIsNotNull())
	    form.txtTerminatedBy().setValue(form.getGlobalContext().PCI.getTerminationDetails().getTerminatedBy().getText());
    }
    
    public void clearInstanceControls()
    {
	// TODO: Add you code here.
    }
    public void newInstance() throws ims.framework.exceptions.PresentationLogicException
    {
	// TODO: Add you code here.
    }
    public boolean save() throws ims.framework.exceptions.PresentationLogicException
    {
	// TODO: Add you code here.
	return false;
    }
    public void updateControlsState()
    {
	// TODO: Add you code here.
    }
    public void updateInstance()
    {
	// TODO: Add you code here.
    }
}
