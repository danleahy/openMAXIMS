//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.forms.themecontrolstest;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbComboBoxLookup();
	abstract protected void defaultcmbComboBoxLookupValue();
	abstract protected void bindchklistCheckListLookup();
	abstract protected void bindansAnswerBoxLookup();
	abstract protected void defaultansAnswerBoxLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPage1VisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPage2VisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPage3VisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPage4VisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPage5VisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkLayerVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkAnswerBoxEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkAnswerBoxVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTxtTextboxValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRecbrRecordBrowserValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbComboBoxValueSet(Object value);
	abstract protected void onCmbComboBoxValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChklistCheckListValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onansAnswerBoxValueSet(Object value);
	abstract protected void onAnsAnswerBoxValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbQueryComboBoxValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbQueryComboBoxTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkChecklistEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkChecklistVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkComboBoxEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkComboBoxVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkQueryComboEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkQueryComboVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTextboxEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTextboxVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTimeEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTimeVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPartialDateEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPartialDateVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDateTimeEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDateTimeVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDateEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDateVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTimTimeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDtimDateTimeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteDateValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onPdtPartialDateValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkintRangeEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkintRangeVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkIntBoxEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkIntBoxVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDecimalRangeEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDecimalRangeVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDecimalEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDecimalVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIrbIntRangeBoxValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIntIntBoxValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDrbDecimalRangeBoxValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDecDecimalBoxValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkGridReadOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkGridEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkGridVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbFindClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdGridSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDynamicGridReadOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDynamicGridEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkDynamicGridValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbDynamicClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbDynamicFindClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrdDynGridRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnPopulateTreeClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtonGroupExpandTreeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTreeSelectableValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTreeEnabledValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTreeVisibleValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTreTreeTreeViewSelectionChanged(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen();
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.ctn1().chkPage1Visible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPage1VisibleValueChanged();
			}
		});
		this.form.ctn1().chkPage2Visible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPage2VisibleValueChanged();
			}
		});
		this.form.ctn1().chkPage3Visible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPage3VisibleValueChanged();
			}
		});
		this.form.ctn1().chkPage4Visible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPage4VisibleValueChanged();
			}
		});
		this.form.ctn1().chkPage5Visible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPage5VisibleValueChanged();
			}
		});
		this.form.chkLayerVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkLayerVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabCombosListsActivated();
			}
		});
		this.form.lyrMain().tabDateTime().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabDateTimeActivated();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabDecimalsIntegersActivated();
			}
		});
		this.form.lyrMain().tabGrid().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabGridActivated();
			}
		});
		this.form.lyrMain().tabDynamicGrid().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabDynamicGridActivated();
			}
		});
		this.form.lyrMain().tabTree().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabTreeActivated();
			}
		});
		this.form.lyrMain().tabCombosLists().chkAnswerBoxEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkAnswerBoxEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chkAnswerBoxVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkAnswerBoxVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().txtTextbox().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onTxtTextboxValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().recbrRecordBrowser().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRecbrRecordBrowserValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().cmbComboBox().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbComboBoxValueSet(value);
			}
		});
		this.form.lyrMain().tabCombosLists().cmbComboBox().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbComboBoxValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chklistCheckList().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChklistCheckListValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().ansAnswerBox().setValueSetEvent(new AnswerBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				onansAnswerBoxValueSet(value);
			}
		});
		this.form.lyrMain().tabCombosLists().ansAnswerBox().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onAnsAnswerBoxValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().qmbQueryComboBox().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbQueryComboBoxValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().qmbQueryComboBox().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbQueryComboBoxTextSubmited(value);
			}
		});
		this.form.lyrMain().tabCombosLists().chkChecklistEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkChecklistEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chkChecklistVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkChecklistVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chkComboBoxEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkComboBoxEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chkComboBoxVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkComboBoxVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chkQueryComboEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkQueryComboEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chkQueryComboVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkQueryComboVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chkTextboxEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTextboxEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabCombosLists().chkTextboxVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTextboxVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().chkTimeEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTimeEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().chkTimeVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTimeVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().chkPartialDateEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPartialDateEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().chkPartialDateVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPartialDateVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().chkDateTimeEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDateTimeEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().chkDateTimeVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDateTimeVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().chkDateEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDateEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().chkDateVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDateVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().timTime().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onTimTimeValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().dtimDateTime().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDtimDateTimeValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().dteDate().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteDateValueChanged();
			}
		});
		this.form.lyrMain().tabDateTime().pdtPartialDate().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onPdtPartialDateValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().chkintRangeEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkintRangeEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().chkintRangeVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkintRangeVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().chkIntBoxEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkIntBoxEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().chkIntBoxVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkIntBoxVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().chkDecimalRangeEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDecimalRangeEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().chkDecimalRangeVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDecimalRangeVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().chkDecimalEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDecimalEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().chkDecimalVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDecimalVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().irbIntRangeBox().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIrbIntRangeBoxValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().intIntBox().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIntIntBoxValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().drbDecimalRangeBox().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDrbDecimalRangeBoxValueChanged();
			}
		});
		this.form.lyrMain().tabDecimalsIntegers().decDecimalBox().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDecDecimalBoxValueChanged();
			}
		});
		this.form.lyrMain().tabGrid().chkGridReadOnly().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkGridReadOnlyValueChanged();
			}
		});
		this.form.lyrMain().tabGrid().chkGridEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkGridEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabGrid().chkGridVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkGridVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabGrid().imbClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearClick();
			}
		});
		this.form.lyrMain().tabGrid().imbFind().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbFindClick();
			}
		});
		this.form.lyrMain().tabGrid().grdGrid().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdGridSelectionChanged();
			}
		});
		this.form.lyrMain().tabDynamicGrid().chkDynamicGridReadOnly().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDynamicGridReadOnlyValueChanged();
			}
		});
		this.form.lyrMain().tabDynamicGrid().chkDynamicGridEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDynamicGridEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabDynamicGrid().chkDynamicGrid().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkDynamicGridValueChanged();
			}
		});
		this.form.lyrMain().tabDynamicGrid().imbDynamicClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbDynamicClearClick();
			}
		});
		this.form.lyrMain().tabDynamicGrid().imbDynamicFind().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbDynamicFindClick();
			}
		});
		this.form.lyrMain().tabDynamicGrid().dyngrdDynGrid().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrdDynGridRowSelectionChanged(row);
			}
		});
		this.form.lyrMain().tabTree().btnPopulateTree().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnPopulateTreeClick();
			}
		});
		this.form.lyrMain().tabTree().GroupExpandTree().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroupExpandTreeValueChanged();
			}
		});
		this.form.lyrMain().tabTree().chkTreeSelectable().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTreeSelectableValueChanged();
			}
		});
		this.form.lyrMain().tabTree().chkTreeEnabled().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTreeEnabledValueChanged();
			}
		});
		this.form.lyrMain().tabTree().chkTreeVisible().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTreeVisibleValueChanged();
			}
		});
		this.form.lyrMain().tabTree().treTree().setTreeViewSelectionChangedEvent(new TreeViewSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.TreeNode node) throws ims.framework.exceptions.PresentationLogicException
			{
				onTreTreeTreeViewSelectionChanged(node);
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbComboBoxLookup();
		bindchklistCheckListLookup();
		bindansAnswerBoxLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbComboBoxLookup();
		bindchklistCheckListLookup();
		bindansAnswerBoxLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbComboBoxLookupValue();
		defaultansAnswerBoxLookupValue();
	}
	private void onlyrMaintabCombosListsActivated()
	{
		this.form.lyrMain().showtabCombosLists();
	}
	private void onlyrMaintabDateTimeActivated()
	{
		this.form.lyrMain().showtabDateTime();
	}
	private void onlyrMaintabDecimalsIntegersActivated()
	{
		this.form.lyrMain().showtabDecimalsIntegers();
	}
	private void onlyrMaintabGridActivated()
	{
		this.form.lyrMain().showtabGrid();
	}
	private void onlyrMaintabDynamicGridActivated()
	{
		this.form.lyrMain().showtabDynamicGrid();
	}
	private void onlyrMaintabTreeActivated()
	{
		this.form.lyrMain().showtabTree();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
