//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Dara Hickey using IMS Development Environment (version 1.22 build 50311.1300)
// Copyright (C) 1995-2005 IMS MAXIMS plc. All rights reserved.

package ims.admin.forms.locationselect;

import ims.admin.helper.OrgTreeHelper;
import ims.core.vo.LocShortVo;
import ims.core.vo.OrganisationMinWithLocSitesVoCollection;
import ims.core.vo.lookups.LocationType;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.FormOpenException //WDEV-19518
	{		
		initialize(args);
		form.treOrganisationLocation().expandAll();
	}
	private void initialize(Object[] args) //WDEV-19518 
	{
		//wdev-20067
		form.getLocalContext().setLoctionType(null);
		if( args != null && args.length > 0 && args[0] instanceof ims.core.vo.lookups.LocationType)
			form.getLocalContext().setLoctionType((LocationType) args[0]);
		//----------
		
		form.getLocalContext().setCaseNoteLocationSelectMode(args != null && args.length > 0 && args[0] instanceof Boolean && Boolean.TRUE.equals(args[0]));
		form.getGlobalContext().Admin.setProfileCaseNoteFoldersLocation(null);
		form.getGlobalContext().Admin.setProfileLocation(null);

		engine.setCaption(Boolean.TRUE.equals(form.getLocalContext().getCaseNoteLocationSelectMode()) ? "Choose case note folders location" : "Choose location");
		form.pnlHeader().setValue(Boolean.TRUE.equals(form.getLocalContext().getCaseNoteLocationSelectMode()) ? "Choose case note folders location" : "Choose location");

		form.btnSave().setEnabled(false);
		//WDEV-20044
		OrganisationMinWithLocSitesVoCollection  voColl = null;
		
		voColl = domain.listRootOrgsNoGpp();
		
		////WDEV-19518 
		OrgTreeHelper helper = new OrgTreeHelper(form.getImages().Admin.Organisation, null, form.getImages().Admin.LocationSite, null, form.getImages().Admin.Location, null);
		if (Boolean.TRUE.equals(form.getLocalContext().getCaseNoteLocationSelectMode()))
		{
			helper.populateOrgTreeCaseNoteLocations(form.treOrganisationLocation(), voColl, false, false, true, true, true); //WDEV-19532 //WDEV-19545 //WDEV-20044
		}
		else
		{	
			if( !form.getLocalContext().getLoctionTypeIsNotNull())	//wdev-20067
				helper.populateOrgTree(form.treOrganisationLocation(), voColl, false, false, false, false, false); //WDEV-19532
			else
				helper.populateOrgTree(form.treOrganisationLocation(), voColl, false, false, false, false, false,form.getLocalContext().getLoctionType()); //wdev-20074
				
		}
		//WDEV-19518 --------------ends here // //WDEV-20044
	}
	
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{	
		//WDEV-19518 -------------------
		LocShortVo selectedLoc = (LocShortVo) form.treOrganisationLocation().getSelectedNode().getValue(); 
		if (Boolean.TRUE.equals(form.getLocalContext().getCaseNoteLocationSelectMode()))
		{	
			form.getGlobalContext().Admin.setProfileCaseNoteFoldersLocation(selectedLoc);			
		}
		else
		{	
			form.getGlobalContext().Admin.setProfileLocation(selectedLoc);			
		}
		//WDEV-19518 ------------------ ends here
		engine.close(DialogResult.OK);
	}

	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	
	protected void onTreOrgLocTreeViewSelectionChanged(ims.framework.controls.TreeNode node) throws PresentationLogicException 
	{
		//WDEV-19518 
		LocShortVo locationTreeNode = node != null && node.getValue() instanceof LocShortVo ? (LocShortVo) node.getValue() : null;
		form.btnSave().setEnabled(locationTreeNode != null);
		//WDEV-19518 -----------ends here
	}
}
