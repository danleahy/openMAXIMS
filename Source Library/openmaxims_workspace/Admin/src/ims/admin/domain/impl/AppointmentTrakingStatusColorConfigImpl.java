//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cristian Belciug using IMS Development Environment (version 1.80 build 4035.27320)
// Copyright (C) 1995-2011 IMS MAXIMS. All rights reserved.

package ims.admin.domain.impl;

import ims.admin.domain.base.impl.BaseAppointmentTrakingStatusColorConfigImpl;
import ims.admin.vo.domain.AppointmentTrackingstatusColourConfigVoAssembler;
import ims.core.admin.domain.objects.AppointmentTrackingstatusColourConfig;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;

public class AppointmentTrakingStatusColorConfigImpl extends BaseAppointmentTrakingStatusColorConfigImpl
{

	private static final long serialVersionUID = 1L;

	public ims.admin.vo.AppointmentTrackingstatusColourConfigVo getColorConfig(ims.vo.LookupInstVo lookupInstance)
	{
		if(lookupInstance == null)
			throw new CodingRuntimeException("Can not get AppointmentTrackingColorConfigVo for null LookupInstVo.");
		
		DomainFactory factory = getDomainFactory();
		
		return AppointmentTrackingstatusColourConfigVoAssembler.create((AppointmentTrackingstatusColourConfig) factory.findFirst("from AppointmentTrackingstatusColourConfig as atsc where atsc.trackingStatus.id = :statusLookup and atsc.isRIE is null", new String[] {"statusLookup"}, new Object[] {lookupInstance.getID()}));
	}

	public ims.admin.vo.AppointmentTrackingstatusColourConfigVo saveColorConfig(ims.admin.vo.AppointmentTrackingstatusColourConfigVo colorConfig) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException
	{
		if(colorConfig == null)
			throw new CodingRuntimeException("record is null in method save");
		
		if(!colorConfig.isValidated())
			throw new CodingRuntimeException("record has not been validated in method save");
		
		DomainFactory factory = getDomainFactory();
		AppointmentTrackingstatusColourConfig doColorConfig = AppointmentTrackingstatusColourConfigVoAssembler.extractAppointmentTrackingstatusColourConfig(factory, colorConfig);
		
		factory.save(doColorConfig);
		
		return AppointmentTrackingstatusColourConfigVoAssembler.create(doColorConfig);
	}
}
