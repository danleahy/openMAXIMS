//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ccosched.forms.cancelledappointments;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		CcoSched = new CcoSchedContext(context);
		Core = new CoreContext(context);
	}
	public final class CcoSchedContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CcoSchedContext(ims.framework.Context context)
		{
			this.context = context;

			Rebooking = new RebookingContext(context);
			TreatmentPlan = new TreatmentPlanContext(context);
			PatientSearch = new PatientSearchContext(context);
			ActionUpdate = new ActionUpdateContext(context);
			ActivityView = new ActivityViewContext(context);
			Booking = new BookingContext(context);
			CancelledAppointments = new CancelledAppointmentsContext(context);
		}
		public final class RebookingContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private RebookingContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getRebookingSucceededIsNotNull()
			{
				return !cx_CcoSchedRebookingRebookingSucceeded.getValueIsNull(context);
			}
			public Boolean getRebookingSucceeded()
			{
				return (Boolean)cx_CcoSchedRebookingRebookingSucceeded.getValue(context);
			}
		public void setRebookingSucceeded(Boolean value)
		{
				cx_CcoSchedRebookingRebookingSucceeded.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingRebookingSucceeded = new ims.framework.ContextVariable("CcoSched.Rebooking.RebookingSucceeded", "_cv_CcoSched.Rebooking.RebookingSucceeded");
			private ims.framework.Context context;
		}
		public final class TreatmentPlanContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private TreatmentPlanContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getActionIDIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanActionID.getValueIsNull(context);
			}
			public String getActionID()
			{
				return (String)cx_CcoSchedTreatmentPlanActionID.getValue(context);
			}
		public void setActionID(String value)
		{
				cx_CcoSchedTreatmentPlanActionID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanActionID = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.ActionID", "_cv_CcoSched.TreatmentPlan.ActionID");
			public boolean getTreatmentPlanDetailsIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanTreatmentPlanDetails.getValueIsNull(context);
			}
			public ims.dto.client.Go_ptreatpl.Go_ptreatplRecord getTreatmentPlanDetails()
			{
				return (ims.dto.client.Go_ptreatpl.Go_ptreatplRecord)cx_CcoSchedTreatmentPlanTreatmentPlanDetails.getValue(context);
			}
		public void setTreatmentPlanDetails(ims.dto.client.Go_ptreatpl.Go_ptreatplRecord value)
		{
				cx_CcoSchedTreatmentPlanTreatmentPlanDetails.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanTreatmentPlanDetails = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.TreatmentPlanDetails", "_cv_CcoSched.TreatmentPlan.TreatmentPlanDetails");
			public boolean getAnaestheticIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanAnaesthetic.getValueIsNull(context);
			}
			public ims.dto.client.Lkup getAnaesthetic()
			{
				return (ims.dto.client.Lkup)cx_CcoSchedTreatmentPlanAnaesthetic.getValue(context);
			}
		public void setAnaesthetic(ims.dto.client.Lkup value)
		{
				cx_CcoSchedTreatmentPlanAnaesthetic.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanAnaesthetic = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.Anaesthetic", "_cv_CcoSched.TreatmentPlan.Anaesthetic");
			public boolean getTechniqueIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanTechnique.getValueIsNull(context);
			}
			public ims.dto.client.Lkup getTechnique()
			{
				return (ims.dto.client.Lkup)cx_CcoSchedTreatmentPlanTechnique.getValue(context);
			}
		public void setTechnique(ims.dto.client.Lkup value)
		{
				cx_CcoSchedTreatmentPlanTechnique.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanTechnique = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.Technique", "_cv_CcoSched.TreatmentPlan.Technique");
			private ims.framework.Context context;
		}
		public final class PatientSearchContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private PatientSearchContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getAliveIsNotNull()
			{
				return !cx_CcoSchedPatientSearchAlive.getValueIsNull(context);
			}
			public Boolean getAlive()
			{
				return (Boolean)cx_CcoSchedPatientSearchAlive.getValue(context);
			}
		public void setAlive(Boolean value)
		{
				cx_CcoSchedPatientSearchAlive.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedPatientSearchAlive = new ims.framework.ContextVariable("CcoSched.PatientSearch.Alive", "_cv_CcoSched.PatientSearch.Alive");
			private ims.framework.Context context;
		}
		public final class ActionUpdateContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private ActionUpdateContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getActionInsertedIdIsNotNull()
			{
				return !cx_CcoSchedActionUpdateActionInsertedId.getValueIsNull(context);
			}
			public String getActionInsertedId()
			{
				return (String)cx_CcoSchedActionUpdateActionInsertedId.getValue(context);
			}
		public void setActionInsertedId(String value)
		{
				cx_CcoSchedActionUpdateActionInsertedId.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedActionUpdateActionInsertedId = new ims.framework.ContextVariable("CcoSched.ActionUpdate.ActionInsertedId", "_cv_CcoSched.ActionUpdate.ActionInsertedId");
			public boolean getTreatmentPlanActionsIsNotNull()
			{
				return !cx_CcoSchedActionUpdateTreatmentPlanActions.getValueIsNull(context);
			}
			public ims.ccosched.vo.PatTreatPlanActionVoCollection getTreatmentPlanActions()
			{
				return (ims.ccosched.vo.PatTreatPlanActionVoCollection)cx_CcoSchedActionUpdateTreatmentPlanActions.getValue(context);
			}
		public void setTreatmentPlanActions(ims.ccosched.vo.PatTreatPlanActionVoCollection value)
		{
				cx_CcoSchedActionUpdateTreatmentPlanActions.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedActionUpdateTreatmentPlanActions = new ims.framework.ContextVariable("CcoSched.ActionUpdate.TreatmentPlanActions", "_cv_CcoSched.ActionUpdate.TreatmentPlanActions");
			private ims.framework.Context context;
		}
		public final class ActivityViewContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private ActivityViewContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getActivitiesIsNotNull()
			{
				return !cx_CcoSchedActivityViewActivities.getValueIsNull(context);
			}
			public ims.dto.client.Sd_activity getActivities()
			{
				return (ims.dto.client.Sd_activity)cx_CcoSchedActivityViewActivities.getValue(context);
			}
		public void setActivities(ims.dto.client.Sd_activity value)
		{
				cx_CcoSchedActivityViewActivities.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedActivityViewActivities = new ims.framework.ContextVariable("CcoSched.ActivityView.Activities", "_cv_CcoSched.ActivityView.Activities");
			public boolean getActivityGroupsIsNotNull()
			{
				return !cx_CcoSchedActivityViewActivityGroups.getValueIsNull(context);
			}
			public ims.dto.client.Sd_activity_grp getActivityGroups()
			{
				return (ims.dto.client.Sd_activity_grp)cx_CcoSchedActivityViewActivityGroups.getValue(context);
			}
		public void setActivityGroups(ims.dto.client.Sd_activity_grp value)
		{
				cx_CcoSchedActivityViewActivityGroups.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedActivityViewActivityGroups = new ims.framework.ContextVariable("CcoSched.ActivityView.ActivityGroups", "_cv_CcoSched.ActivityView.ActivityGroups");
			private ims.framework.Context context;
		}
		public final class BookingContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private BookingContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getTooltipArrayListIsNotNull()
			{
				return !cx_CcoSchedBookingTooltipArrayList.getValueIsNull(context);
			}
			public java.util.ArrayList getTooltipArrayList()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingTooltipArrayList.getValue(context);
			}
		public void setTooltipArrayList(java.util.ArrayList value)
		{
				cx_CcoSchedBookingTooltipArrayList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingTooltipArrayList = new ims.framework.ContextVariable("CcoSched.Booking.TooltipArrayList", "_cv_CcoSched.Booking.TooltipArrayList");
			private ims.framework.Context context;
		}
		public final class CancelledAppointmentsContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private CancelledAppointmentsContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getIncompleteAppointmentIsNotNull()
			{
				return !cx_CcoSchedCancelledAppointmentsIncompleteAppointment.getValueIsNull(context);
			}
			public Boolean getIncompleteAppointment()
			{
				return (Boolean)cx_CcoSchedCancelledAppointmentsIncompleteAppointment.getValue(context);
			}
		public void setIncompleteAppointment(Boolean value)
		{
				cx_CcoSchedCancelledAppointmentsIncompleteAppointment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedCancelledAppointmentsIncompleteAppointment = new ims.framework.ContextVariable("CcoSched.CancelledAppointments.IncompleteAppointment", "_cv_CcoSched.CancelledAppointments.IncompleteAppointment");
			public boolean getRebookAppointmentDetailIsNotNull()
			{
				return !cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.getValueIsNull(context);
			}
			public String getRebookAppointmentDetail()
			{
				return (String)cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.getValue(context);
			}
		public void setRebookAppointmentDetail(String value)
		{
				cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail = new ims.framework.ContextVariable("CcoSched.CancelledAppointments.RebookAppointmentDetail", "_cv_CcoSched.CancelledAppointments.RebookAppointmentDetail");
			private ims.framework.Context context;
		}


		public RebookingContext Rebooking;
		public TreatmentPlanContext TreatmentPlan;
		public PatientSearchContext PatientSearch;
		public ActionUpdateContext ActionUpdate;
		public ActivityViewContext ActivityView;
		public BookingContext Booking;
		public CancelledAppointmentsContext CancelledAppointments;
		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}
	public boolean getPatTreatmentPlanIsNotNull()
	{
		return !cx_PatTreatmentPlan.getValueIsNull(context);
	}
	public ims.ccosched.vo.PatTreatmentPlanLiteVo getPatTreatmentPlan()
	{
		return (ims.ccosched.vo.PatTreatmentPlanLiteVo)cx_PatTreatmentPlan.getValue(context);
	}
		public void setPatTreatmentPlan(ims.ccosched.vo.PatTreatmentPlanLiteVo value)
		{
		cx_PatTreatmentPlan.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_PatTreatmentPlan = new ims.framework.ContextVariable("PatTreatmentPlan", "_cv_PatTreatmentPlan");

	public CcoSchedContext CcoSched;
	public CoreContext Core;
}
