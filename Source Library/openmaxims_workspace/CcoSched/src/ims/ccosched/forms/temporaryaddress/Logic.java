//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Alexie Ursache using IMS Development Environment (version 1.55 build 2747.25684)
// Copyright (C) 1995-2007 IMS MAXIMS plc. All rights reserved.

package ims.ccosched.forms.temporaryaddress;

import ims.core.vo.PatientShort;
import ims.core.vo.PatientTempAddressesVo;
import ims.core.vo.PersonAddress;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic // WDEV-14333
{
	private static final long serialVersionUID = 1L;
	private final static String newLine = System.getProperty("line.separator");
	
	protected void onFormOpen() throws ims.framework.exceptions.PresentationLogicException
	{
		// WDEV-14333
		PatientShort patient = form.getGlobalContext().Core.getPatientShort();
		
		if (patient==null)
			return;
		
		PatientTempAddressesVo patientTempAddresses = domain.getPatientwithTempAddresses(patient);
		
		if (patientTempAddresses.getAddresses()==null || patientTempAddresses.getAddresses().size()==0)
			return;
		
		PersonAddress tempAddress = patientTempAddresses.getAddresses().get(0);

		if(tempAddress != null)
		{
			StringBuffer address = new StringBuffer(150);
			
			if (tempAddress.getLine1IsNotNull())
			{
				address.append(tempAddress.getLine1());
				address.append(newLine);
			}
			
			if (tempAddress.getLine2IsNotNull())
			{
				address.append(tempAddress.getLine2());
				address.append(newLine);
			}
			
			if (tempAddress.getLine3IsNotNull())
			{
				address.append(tempAddress.getLine3());
				address.append(newLine);
			}
			
			if (tempAddress.getLine4IsNotNull())
			{
				address.append(tempAddress.getLine4());
				address.append(newLine);
			}
			
			form.Address().setValue(address.toString());
			
			form.PostCode().setValue(tempAddress.getPostCode());
			
			form.DayPhone().setValue(tempAddress.getOtherphone());
			
			form.NightPhone().setValue(tempAddress.getPhone());
		}
	}

	protected void onBCancelClick() throws PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}

	protected void onBOkClick() throws PresentationLogicException
	{
		engine.close(DialogResult.OK);
	}
}
