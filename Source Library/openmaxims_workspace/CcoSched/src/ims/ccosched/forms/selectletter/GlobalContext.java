//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ccosched.forms.selectletter;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		CcoSched = new CcoSchedContext(context);
	}
	public final class CcoSchedContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CcoSchedContext(ims.framework.Context context)
		{
			this.context = context;

			BookingConfirmation = new BookingConfirmationContext(context);
			LetterType = new LetterTypeContext(context);
		}
		public final class BookingConfirmationContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private BookingConfirmationContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getAPPT_UNIDIsNotNull()
			{
				return !cx_CcoSchedBookingConfirmationAPPT_UNID.getValueIsNull(context);
			}
			public Integer getAPPT_UNID()
			{
				return (Integer)cx_CcoSchedBookingConfirmationAPPT_UNID.getValue(context);
			}
		public void setAPPT_UNID(Integer value)
		{
				cx_CcoSchedBookingConfirmationAPPT_UNID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingConfirmationAPPT_UNID = new ims.framework.ContextVariable("CcoSched.BookingConfirmation.APPT_UNID", "_cv_CcoSched.BookingConfirmation.APPT_UNID");
			private ims.framework.Context context;
		}
		public final class LetterTypeContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private LetterTypeContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getGPLetterIsNotNull()
			{
				return !cx_CcoSchedLetterTypeGPLetter.getValueIsNull(context);
			}
			public Boolean getGPLetter()
			{
				return (Boolean)cx_CcoSchedLetterTypeGPLetter.getValue(context);
			}
		public void setGPLetter(Boolean value)
		{
				cx_CcoSchedLetterTypeGPLetter.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedLetterTypeGPLetter = new ims.framework.ContextVariable("CcoSched.LetterType.GPLetter", "_cv_CcoSched.LetterType.GPLetter");
			public boolean getPatientLetterIsNotNull()
			{
				return !cx_CcoSchedLetterTypePatientLetter.getValueIsNull(context);
			}
			public Boolean getPatientLetter()
			{
				return (Boolean)cx_CcoSchedLetterTypePatientLetter.getValue(context);
			}
		public void setPatientLetter(Boolean value)
		{
				cx_CcoSchedLetterTypePatientLetter.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedLetterTypePatientLetter = new ims.framework.ContextVariable("CcoSched.LetterType.PatientLetter", "_cv_CcoSched.LetterType.PatientLetter");
			private ims.framework.Context context;
		}

		public boolean getSelectLetterTypeIsNotNull()
		{
			return !cx_CcoSchedSelectLetterType.getValueIsNull(context);
		}
		public String getSelectLetterType()
		{
			return (String)cx_CcoSchedSelectLetterType.getValue(context);
		}
		public void setSelectLetterType(String value)
		{
			cx_CcoSchedSelectLetterType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedSelectLetterType = new ims.framework.ContextVariable("CcoSched.SelectLetterType", "_cv_CcoSched.SelectLetterType");
		public boolean getAppointmentIdIsNotNull()
		{
			return !cx_CcoSchedAppointmentId.getValueIsNull(context);
		}
		public String getAppointmentId()
		{
			return (String)cx_CcoSchedAppointmentId.getValue(context);
		}
		public void setAppointmentId(String value)
		{
			cx_CcoSchedAppointmentId.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedAppointmentId = new ims.framework.ContextVariable("CcoSched.AppointmentId", "_cv_CcoSched.AppointmentId");

		public BookingConfirmationContext BookingConfirmation;
		public LetterTypeContext LetterType;
		private ims.framework.Context context;
	}

	public CcoSchedContext CcoSched;
}
