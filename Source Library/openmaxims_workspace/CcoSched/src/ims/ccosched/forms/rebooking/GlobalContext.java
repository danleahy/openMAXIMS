//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ccosched.forms.rebooking;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		CcoSched = new CcoSchedContext(context);
		Core = new CoreContext(context);
	}
	public final class CcoSchedContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CcoSchedContext(ims.framework.Context context)
		{
			this.context = context;

			Booking = new BookingContext(context);
			TreatmentPlan = new TreatmentPlanContext(context);
			ActivityView = new ActivityViewContext(context);
			CancelledAppointments = new CancelledAppointmentsContext(context);
			Rebooking = new RebookingContext(context);
		}
		public final class BookingContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private BookingContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getSessionDetailsIdIsNotNull()
			{
				return !cx_CcoSchedBookingSessionDetailsId.getValueIsNull(context);
			}
			public String getSessionDetailsId()
			{
				return (String)cx_CcoSchedBookingSessionDetailsId.getValue(context);
			}
		public void setSessionDetailsId(String value)
		{
				cx_CcoSchedBookingSessionDetailsId.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingSessionDetailsId = new ims.framework.ContextVariable("CcoSched.Booking.SessionDetailsId", "_cv_CcoSched.Booking.SessionDetailsId");
			public boolean getSessionIdIsNotNull()
			{
				return !cx_CcoSchedBookingSessionId.getValueIsNull(context);
			}
			public String getSessionId()
			{
				return (String)cx_CcoSchedBookingSessionId.getValue(context);
			}
		public void setSessionId(String value)
		{
				cx_CcoSchedBookingSessionId.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingSessionId = new ims.framework.ContextVariable("CcoSched.Booking.SessionId", "_cv_CcoSched.Booking.SessionId");
			public boolean getSessionIndexIsNotNull()
			{
				return !cx_CcoSchedBookingSessionIndex.getValueIsNull(context);
			}
			public Integer getSessionIndex()
			{
				return (Integer)cx_CcoSchedBookingSessionIndex.getValue(context);
			}
		public void setSessionIndex(Integer value)
		{
				cx_CcoSchedBookingSessionIndex.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingSessionIndex = new ims.framework.ContextVariable("CcoSched.Booking.SessionIndex", "_cv_CcoSched.Booking.SessionIndex");
			public boolean getSessionListIsNotNull()
			{
				return !cx_CcoSchedBookingSessionList.getValueIsNull(context);
			}
			public java.util.Hashtable getSessionList()
			{
				return (java.util.Hashtable)cx_CcoSchedBookingSessionList.getValue(context);
			}
		public void setSessionList(java.util.Hashtable value)
		{
				cx_CcoSchedBookingSessionList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingSessionList = new ims.framework.ContextVariable("CcoSched.Booking.SessionList", "_cv_CcoSched.Booking.SessionList");
			public boolean getStartDateIsNotNull()
			{
				return !cx_CcoSchedBookingStartDate.getValueIsNull(context);
			}
			public ims.framework.utils.Date getStartDate()
			{
				return (ims.framework.utils.Date)cx_CcoSchedBookingStartDate.getValue(context);
			}
		public void setStartDate(ims.framework.utils.Date value)
		{
				cx_CcoSchedBookingStartDate.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingStartDate = new ims.framework.ContextVariable("CcoSched.Booking.StartDate", "_cv_CcoSched.Booking.StartDate");
			public boolean getTimeRequiredIsNotNull()
			{
				return !cx_CcoSchedBookingTimeRequired.getValueIsNull(context);
			}
			public Integer getTimeRequired()
			{
				return (Integer)cx_CcoSchedBookingTimeRequired.getValue(context);
			}
		public void setTimeRequired(Integer value)
		{
				cx_CcoSchedBookingTimeRequired.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingTimeRequired = new ims.framework.ContextVariable("CcoSched.Booking.TimeRequired", "_cv_CcoSched.Booking.TimeRequired");
			public boolean getTooltipArrayListIsNotNull()
			{
				return !cx_CcoSchedBookingTooltipArrayList.getValueIsNull(context);
			}
			public java.util.ArrayList getTooltipArrayList()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingTooltipArrayList.getValue(context);
			}
		public void setTooltipArrayList(java.util.ArrayList value)
		{
				cx_CcoSchedBookingTooltipArrayList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingTooltipArrayList = new ims.framework.ContextVariable("CcoSched.Booking.TooltipArrayList", "_cv_CcoSched.Booking.TooltipArrayList");
			public boolean getTransportIsNotNull()
			{
				return !cx_CcoSchedBookingTransport.getValueIsNull(context);
			}
			public String getTransport()
			{
				return (String)cx_CcoSchedBookingTransport.getValue(context);
			}
		public void setTransport(String value)
		{
				cx_CcoSchedBookingTransport.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingTransport = new ims.framework.ContextVariable("CcoSched.Booking.Transport", "_cv_CcoSched.Booking.Transport");
			public boolean getCalendarSelectedDatesIsNotNull()
			{
				return !cx_CcoSchedBookingCalendarSelectedDates.getValueIsNull(context);
			}
			public java.util.ArrayList getCalendarSelectedDates()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingCalendarSelectedDates.getValue(context);
			}
		public void setCalendarSelectedDates(java.util.ArrayList value)
		{
				cx_CcoSchedBookingCalendarSelectedDates.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingCalendarSelectedDates = new ims.framework.ContextVariable("CcoSched.Booking.CalendarSelectedDates", "_cv_CcoSched.Booking.CalendarSelectedDates");
			public boolean getCategoryIsNotNull()
			{
				return !cx_CcoSchedBookingCategory.getValueIsNull(context);
			}
			public String getCategory()
			{
				return (String)cx_CcoSchedBookingCategory.getValue(context);
			}
		public void setCategory(String value)
		{
				cx_CcoSchedBookingCategory.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingCategory = new ims.framework.ContextVariable("CcoSched.Booking.Category", "_cv_CcoSched.Booking.Category");
			public boolean getDateSessionSlotsListIsNotNull()
			{
				return !cx_CcoSchedBookingDateSessionSlotsList.getValueIsNull(context);
			}
			public java.util.ArrayList getDateSessionSlotsList()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingDateSessionSlotsList.getValue(context);
			}
		public void setDateSessionSlotsList(java.util.ArrayList value)
		{
				cx_CcoSchedBookingDateSessionSlotsList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingDateSessionSlotsList = new ims.framework.ContextVariable("CcoSched.Booking.DateSessionSlotsList", "_cv_CcoSched.Booking.DateSessionSlotsList");
			public boolean getDefaultTimeIsNotNull()
			{
				return !cx_CcoSchedBookingDefaultTime.getValueIsNull(context);
			}
			public java.util.ArrayList getDefaultTime()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingDefaultTime.getValue(context);
			}
		public void setDefaultTime(java.util.ArrayList value)
		{
				cx_CcoSchedBookingDefaultTime.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingDefaultTime = new ims.framework.ContextVariable("CcoSched.Booking.DefaultTime", "_cv_CcoSched.Booking.DefaultTime");
			public boolean getEndDateIsNotNull()
			{
				return !cx_CcoSchedBookingEndDate.getValueIsNull(context);
			}
			public ims.framework.utils.Date getEndDate()
			{
				return (ims.framework.utils.Date)cx_CcoSchedBookingEndDate.getValue(context);
			}
		public void setEndDate(ims.framework.utils.Date value)
		{
				cx_CcoSchedBookingEndDate.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingEndDate = new ims.framework.ContextVariable("CcoSched.Booking.EndDate", "_cv_CcoSched.Booking.EndDate");
			public boolean getIntervalRequiredIsNotNull()
			{
				return !cx_CcoSchedBookingIntervalRequired.getValueIsNull(context);
			}
			public Integer getIntervalRequired()
			{
				return (Integer)cx_CcoSchedBookingIntervalRequired.getValue(context);
			}
		public void setIntervalRequired(Integer value)
		{
				cx_CcoSchedBookingIntervalRequired.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingIntervalRequired = new ims.framework.ContextVariable("CcoSched.Booking.IntervalRequired", "_cv_CcoSched.Booking.IntervalRequired");
			public boolean getListOwnerIsNotNull()
			{
				return !cx_CcoSchedBookingListOwner.getValueIsNull(context);
			}
			public ims.dto.client.Sd_activstaff.Sd_activstaffRecord getListOwner()
			{
				return (ims.dto.client.Sd_activstaff.Sd_activstaffRecord)cx_CcoSchedBookingListOwner.getValue(context);
			}
		public void setListOwner(ims.dto.client.Sd_activstaff.Sd_activstaffRecord value)
		{
				cx_CcoSchedBookingListOwner.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingListOwner = new ims.framework.ContextVariable("CcoSched.Booking.ListOwner", "_cv_CcoSched.Booking.ListOwner");
			public boolean getModalityArrayListIsNotNull()
			{
				return !cx_CcoSchedBookingModalityArrayList.getValueIsNull(context);
			}
			public java.util.ArrayList getModalityArrayList()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingModalityArrayList.getValue(context);
			}
		public void setModalityArrayList(java.util.ArrayList value)
		{
				cx_CcoSchedBookingModalityArrayList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingModalityArrayList = new ims.framework.ContextVariable("CcoSched.Booking.ModalityArrayList", "_cv_CcoSched.Booking.ModalityArrayList");
			public boolean getResourceSelectedIsNotNull()
			{
				return !cx_CcoSchedBookingResourceSelected.getValueIsNull(context);
			}
			public Object getResourceSelected()
			{
				return (Object)cx_CcoSchedBookingResourceSelected.getValue(context);
			}
		public void setResourceSelected(Object value)
		{
				cx_CcoSchedBookingResourceSelected.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingResourceSelected = new ims.framework.ContextVariable("CcoSched.Booking.ResourceSelected", "_cv_CcoSched.Booking.ResourceSelected");
			public boolean getSelectedActionsIsNotNull()
			{
				return !cx_CcoSchedBookingSelectedActions.getValueIsNull(context);
			}
			public java.util.ArrayList getSelectedActions()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingSelectedActions.getValue(context);
			}
		public void setSelectedActions(java.util.ArrayList value)
		{
				cx_CcoSchedBookingSelectedActions.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingSelectedActions = new ims.framework.ContextVariable("CcoSched.Booking.SelectedActions", "_cv_CcoSched.Booking.SelectedActions");
			public boolean getSelectedDateIsNotNull()
			{
				return !cx_CcoSchedBookingSelectedDate.getValueIsNull(context);
			}
			public ims.framework.utils.Date getSelectedDate()
			{
				return (ims.framework.utils.Date)cx_CcoSchedBookingSelectedDate.getValue(context);
			}
		public void setSelectedDate(ims.framework.utils.Date value)
		{
				cx_CcoSchedBookingSelectedDate.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingSelectedDate = new ims.framework.ContextVariable("CcoSched.Booking.SelectedDate", "_cv_CcoSched.Booking.SelectedDate");
			public boolean getSelectedSessionsIsNotNull()
			{
				return !cx_CcoSchedBookingSelectedSessions.getValueIsNull(context);
			}
			public java.util.Hashtable getSelectedSessions()
			{
				return (java.util.Hashtable)cx_CcoSchedBookingSelectedSessions.getValue(context);
			}
		public void setSelectedSessions(java.util.Hashtable value)
		{
				cx_CcoSchedBookingSelectedSessions.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingSelectedSessions = new ims.framework.ContextVariable("CcoSched.Booking.SelectedSessions", "_cv_CcoSched.Booking.SelectedSessions");
			private ims.framework.Context context;
		}
		public final class TreatmentPlanContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private TreatmentPlanContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getTechniqueIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanTechnique.getValueIsNull(context);
			}
			public ims.dto.client.Lkup getTechnique()
			{
				return (ims.dto.client.Lkup)cx_CcoSchedTreatmentPlanTechnique.getValue(context);
			}
		public void setTechnique(ims.dto.client.Lkup value)
		{
				cx_CcoSchedTreatmentPlanTechnique.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanTechnique = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.Technique", "_cv_CcoSched.TreatmentPlan.Technique");
			public boolean getAnaestheticIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanAnaesthetic.getValueIsNull(context);
			}
			public ims.dto.client.Lkup getAnaesthetic()
			{
				return (ims.dto.client.Lkup)cx_CcoSchedTreatmentPlanAnaesthetic.getValue(context);
			}
		public void setAnaesthetic(ims.dto.client.Lkup value)
		{
				cx_CcoSchedTreatmentPlanAnaesthetic.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanAnaesthetic = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.Anaesthetic", "_cv_CcoSched.TreatmentPlan.Anaesthetic");
			public boolean getFurtherAppointmentIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanFurtherAppointment.getValueIsNull(context);
			}
			public Boolean getFurtherAppointment()
			{
				return (Boolean)cx_CcoSchedTreatmentPlanFurtherAppointment.getValue(context);
			}
		public void setFurtherAppointment(Boolean value)
		{
				cx_CcoSchedTreatmentPlanFurtherAppointment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanFurtherAppointment = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.FurtherAppointment", "_cv_CcoSched.TreatmentPlan.FurtherAppointment");
			public boolean getTreatmentPlanActionsIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanTreatmentPlanActions.getValueIsNull(context);
			}
			public ims.dto.client.Go_ptplact.Go_ptplactRecord getTreatmentPlanActions()
			{
				return (ims.dto.client.Go_ptplact.Go_ptplactRecord)cx_CcoSchedTreatmentPlanTreatmentPlanActions.getValue(context);
			}
		public void setTreatmentPlanActions(ims.dto.client.Go_ptplact.Go_ptplactRecord value)
		{
				cx_CcoSchedTreatmentPlanTreatmentPlanActions.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanTreatmentPlanActions = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.TreatmentPlanActions", "_cv_CcoSched.TreatmentPlan.TreatmentPlanActions");
			public boolean getTreatmentPlanDetailsIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanTreatmentPlanDetails.getValueIsNull(context);
			}
			public ims.dto.client.Go_ptreatpl.Go_ptreatplRecord getTreatmentPlanDetails()
			{
				return (ims.dto.client.Go_ptreatpl.Go_ptreatplRecord)cx_CcoSchedTreatmentPlanTreatmentPlanDetails.getValue(context);
			}
		public void setTreatmentPlanDetails(ims.dto.client.Go_ptreatpl.Go_ptreatplRecord value)
		{
				cx_CcoSchedTreatmentPlanTreatmentPlanDetails.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanTreatmentPlanDetails = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.TreatmentPlanDetails", "_cv_CcoSched.TreatmentPlan.TreatmentPlanDetails");
			private ims.framework.Context context;
		}
		public final class ActivityViewContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private ActivityViewContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getActionsIsNotNull()
			{
				return !cx_CcoSchedActivityViewActions.getValueIsNull(context);
			}
			public ims.dto.client.Sd_activity_action getActions()
			{
				return (ims.dto.client.Sd_activity_action)cx_CcoSchedActivityViewActions.getValue(context);
			}
		public void setActions(ims.dto.client.Sd_activity_action value)
		{
				cx_CcoSchedActivityViewActions.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedActivityViewActions = new ims.framework.ContextVariable("CcoSched.ActivityView.Actions", "_cv_CcoSched.ActivityView.Actions");
			private ims.framework.Context context;
		}
		public final class CancelledAppointmentsContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private CancelledAppointmentsContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getIncompleteAppointmentIsNotNull()
			{
				return !cx_CcoSchedCancelledAppointmentsIncompleteAppointment.getValueIsNull(context);
			}
			public Boolean getIncompleteAppointment()
			{
				return (Boolean)cx_CcoSchedCancelledAppointmentsIncompleteAppointment.getValue(context);
			}
		public void setIncompleteAppointment(Boolean value)
		{
				cx_CcoSchedCancelledAppointmentsIncompleteAppointment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedCancelledAppointmentsIncompleteAppointment = new ims.framework.ContextVariable("CcoSched.CancelledAppointments.IncompleteAppointment", "_cv_CcoSched.CancelledAppointments.IncompleteAppointment");
			public boolean getRebookAppointmentDetailIsNotNull()
			{
				return !cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.getValueIsNull(context);
			}
			public String getRebookAppointmentDetail()
			{
				return (String)cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.getValue(context);
			}
		public void setRebookAppointmentDetail(String value)
		{
				cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail = new ims.framework.ContextVariable("CcoSched.CancelledAppointments.RebookAppointmentDetail", "_cv_CcoSched.CancelledAppointments.RebookAppointmentDetail");
			private ims.framework.Context context;
		}
		public final class RebookingContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private RebookingContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getActionIsNotNull()
			{
				return !cx_CcoSchedRebookingAction.getValueIsNull(context);
			}
			public String getAction()
			{
				return (String)cx_CcoSchedRebookingAction.getValue(context);
			}
		public void setAction(String value)
		{
				cx_CcoSchedRebookingAction.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingAction = new ims.framework.ContextVariable("CcoSched.Rebooking.Action", "_cv_CcoSched.Rebooking.Action");
			public boolean getActionIDIsNotNull()
			{
				return !cx_CcoSchedRebookingActionID.getValueIsNull(context);
			}
			public String getActionID()
			{
				return (String)cx_CcoSchedRebookingActionID.getValue(context);
			}
		public void setActionID(String value)
		{
				cx_CcoSchedRebookingActionID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingActionID = new ims.framework.ContextVariable("CcoSched.Rebooking.ActionID", "_cv_CcoSched.Rebooking.ActionID");
			public boolean getActivityIsNotNull()
			{
				return !cx_CcoSchedRebookingActivity.getValueIsNull(context);
			}
			public String getActivity()
			{
				return (String)cx_CcoSchedRebookingActivity.getValue(context);
			}
		public void setActivity(String value)
		{
				cx_CcoSchedRebookingActivity.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingActivity = new ims.framework.ContextVariable("CcoSched.Rebooking.Activity", "_cv_CcoSched.Rebooking.Activity");
			public boolean getAppointmentsIsNotNull()
			{
				return !cx_CcoSchedRebookingAppointments.getValueIsNull(context);
			}
			public ims.dto.client.Sd_appt getAppointments()
			{
				return (ims.dto.client.Sd_appt)cx_CcoSchedRebookingAppointments.getValue(context);
			}
		public void setAppointments(ims.dto.client.Sd_appt value)
		{
				cx_CcoSchedRebookingAppointments.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingAppointments = new ims.framework.ContextVariable("CcoSched.Rebooking.Appointments", "_cv_CcoSched.Rebooking.Appointments");
			public boolean getDataIsNotNull()
			{
				return !cx_CcoSchedRebookingData.getValueIsNull(context);
			}
			public java.util.ArrayList getData()
			{
				return (java.util.ArrayList)cx_CcoSchedRebookingData.getValue(context);
			}
		public void setData(java.util.ArrayList value)
		{
				cx_CcoSchedRebookingData.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingData = new ims.framework.ContextVariable("CcoSched.Rebooking.Data", "_cv_CcoSched.Rebooking.Data");
			public boolean getMachine_IdIsNotNull()
			{
				return !cx_CcoSchedRebookingMachine_Id.getValueIsNull(context);
			}
			public String getMachine_Id()
			{
				return (String)cx_CcoSchedRebookingMachine_Id.getValue(context);
			}
		public void setMachine_Id(String value)
		{
				cx_CcoSchedRebookingMachine_Id.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingMachine_Id = new ims.framework.ContextVariable("CcoSched.Rebooking.Machine_Id", "_cv_CcoSched.Rebooking.Machine_Id");
			public boolean getNewTimeListIsNotNull()
			{
				return !cx_CcoSchedRebookingNewTimeList.getValueIsNull(context);
			}
			public java.util.ArrayList getNewTimeList()
			{
				return (java.util.ArrayList)cx_CcoSchedRebookingNewTimeList.getValue(context);
			}
		public void setNewTimeList(java.util.ArrayList value)
		{
				cx_CcoSchedRebookingNewTimeList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingNewTimeList = new ims.framework.ContextVariable("CcoSched.Rebooking.NewTimeList", "_cv_CcoSched.Rebooking.NewTimeList");
			public boolean getPatientCategoryIsNotNull()
			{
				return !cx_CcoSchedRebookingPatientCategory.getValueIsNull(context);
			}
			public String getPatientCategory()
			{
				return (String)cx_CcoSchedRebookingPatientCategory.getValue(context);
			}
		public void setPatientCategory(String value)
		{
				cx_CcoSchedRebookingPatientCategory.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingPatientCategory = new ims.framework.ContextVariable("CcoSched.Rebooking.PatientCategory", "_cv_CcoSched.Rebooking.PatientCategory");
			public boolean getRebookingSucceededIsNotNull()
			{
				return !cx_CcoSchedRebookingRebookingSucceeded.getValueIsNull(context);
			}
			public Boolean getRebookingSucceeded()
			{
				return (Boolean)cx_CcoSchedRebookingRebookingSucceeded.getValue(context);
			}
		public void setRebookingSucceeded(Boolean value)
		{
				cx_CcoSchedRebookingRebookingSucceeded.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingRebookingSucceeded = new ims.framework.ContextVariable("CcoSched.Rebooking.RebookingSucceeded", "_cv_CcoSched.Rebooking.RebookingSucceeded");
			public boolean getStartTimeIsNotNull()
			{
				return !cx_CcoSchedRebookingStartTime.getValueIsNull(context);
			}
			public ims.framework.utils.Time getStartTime()
			{
				return (ims.framework.utils.Time)cx_CcoSchedRebookingStartTime.getValue(context);
			}
		public void setStartTime(ims.framework.utils.Time value)
		{
				cx_CcoSchedRebookingStartTime.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingStartTime = new ims.framework.ContextVariable("CcoSched.Rebooking.StartTime", "_cv_CcoSched.Rebooking.StartTime");
			private ims.framework.Context context;
		}

		public boolean getLoggedInUserIdIsNotNull()
		{
			return !cx_CcoSchedLoggedInUserId.getValueIsNull(context);
		}
		public String getLoggedInUserId()
		{
			return (String)cx_CcoSchedLoggedInUserId.getValue(context);
		}

		private ims.framework.ContextVariable cx_CcoSchedLoggedInUserId = new ims.framework.ContextVariable("CcoSched.LoggedInUserId", "_cvp_CcoSched.LoggedInUserId");

		public BookingContext Booking;
		public TreatmentPlanContext TreatmentPlan;
		public ActivityViewContext ActivityView;
		public CancelledAppointmentsContext CancelledAppointments;
		public RebookingContext Rebooking;
		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}
	public boolean getPatTreatmentPlanIsNotNull()
	{
		return !cx_PatTreatmentPlan.getValueIsNull(context);
	}
	public ims.ccosched.vo.PatTreatmentPlanLiteVo getPatTreatmentPlan()
	{
		return (ims.ccosched.vo.PatTreatmentPlanLiteVo)cx_PatTreatmentPlan.getValue(context);
	}
		public void setPatTreatmentPlan(ims.ccosched.vo.PatTreatmentPlanLiteVo value)
		{
		cx_PatTreatmentPlan.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_PatTreatmentPlan = new ims.framework.ContextVariable("PatTreatmentPlan", "_cv_PatTreatmentPlan");
	public boolean getPatTreatmentPlanActionIsNotNull()
	{
		return !cx_PatTreatmentPlanAction.getValueIsNull(context);
	}
	public ims.ccosched.vo.PatTreatPlanActionVo getPatTreatmentPlanAction()
	{
		return (ims.ccosched.vo.PatTreatPlanActionVo)cx_PatTreatmentPlanAction.getValue(context);
	}
		public void setPatTreatmentPlanAction(ims.ccosched.vo.PatTreatPlanActionVo value)
		{
		cx_PatTreatmentPlanAction.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_PatTreatmentPlanAction = new ims.framework.ContextVariable("PatTreatmentPlanAction", "_cv_PatTreatmentPlanAction");

	public CcoSchedContext CcoSched;
	public CoreContext Core;
}
