//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ccosched.forms.clinicview;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		CcoSched = new CcoSchedContext(context);
		Oncology = new OncologyContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

			LkupSelect = new LkupSelectContext(context);
		}
		public final class LkupSelectContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private LkupSelectContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getLkupIDIsNotNull()
			{
				return !cx_CoreLkupSelectLkupID.getValueIsNull(context);
			}
			public String getLkupID()
			{
				return (String)cx_CoreLkupSelectLkupID.getValue(context);
			}
		public void setLkupID(String value)
		{
				cx_CoreLkupSelectLkupID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CoreLkupSelectLkupID = new ims.framework.ContextVariable("Core.LkupSelect.LkupID", "_cv_Core.LkupSelect.LkupID");
			public boolean getLkupTypeIDIsNotNull()
			{
				return !cx_CoreLkupSelectLkupTypeID.getValueIsNull(context);
			}
			public String getLkupTypeID()
			{
				return (String)cx_CoreLkupSelectLkupTypeID.getValue(context);
			}
		public void setLkupTypeID(String value)
		{
				cx_CoreLkupSelectLkupTypeID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CoreLkupSelectLkupTypeID = new ims.framework.ContextVariable("Core.LkupSelect.LkupTypeID", "_cv_Core.LkupSelect.LkupTypeID");
			private ims.framework.Context context;
		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getTemplateIDIsNotNull()
		{
			return !cx_CoreTemplateID.getValueIsNull(context);
		}
		public Integer getTemplateID()
		{
			return (Integer)cx_CoreTemplateID.getValue(context);
		}
		public void setTemplateID(Integer value)
		{
			cx_CoreTemplateID.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreTemplateID = new ims.framework.ContextVariable("Core.TemplateID", "_cv_Core.TemplateID");
		public boolean getTemplateCategoryIsNotNull()
		{
			return !cx_CoreTemplateCategory.getValueIsNull(context);
		}
		public String getTemplateCategory()
		{
			return (String)cx_CoreTemplateCategory.getValue(context);
		}
		public void setTemplateCategory(String value)
		{
			cx_CoreTemplateCategory.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreTemplateCategory = new ims.framework.ContextVariable("Core.TemplateCategory", "_cv_Core.TemplateCategory");

		public LkupSelectContext LkupSelect;
		private ims.framework.Context context;
	}
	public final class CcoSchedContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CcoSchedContext(ims.framework.Context context)
		{
			this.context = context;

			ClinicView = new ClinicViewContext(context);
			PatientSearch = new PatientSearchContext(context);
			LkupSelect = new LkupSelectContext(context);
			ClinicViewCancel = new ClinicViewCancelContext(context);
		}
		public final class ClinicViewContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private ClinicViewContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getAppointmentIDIsNotNull()
			{
				return !cx_CcoSchedClinicViewAppointmentID.getValueIsNull(context);
			}
			public String getAppointmentID()
			{
				return (String)cx_CcoSchedClinicViewAppointmentID.getValue(context);
			}
		public void setAppointmentID(String value)
		{
				cx_CcoSchedClinicViewAppointmentID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewAppointmentID = new ims.framework.ContextVariable("CcoSched.ClinicView.AppointmentID", "_cv_CcoSched.ClinicView.AppointmentID");
			public boolean getApptDetailsIsNotNull()
			{
				return !cx_CcoSchedClinicViewApptDetails.getValueIsNull(context);
			}
			public ims.dto.client.Sd_appt_dts.Sd_appt_dtsRecord getApptDetails()
			{
				return (ims.dto.client.Sd_appt_dts.Sd_appt_dtsRecord)cx_CcoSchedClinicViewApptDetails.getValue(context);
			}
		public void setApptDetails(ims.dto.client.Sd_appt_dts.Sd_appt_dtsRecord value)
		{
				cx_CcoSchedClinicViewApptDetails.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewApptDetails = new ims.framework.ContextVariable("CcoSched.ClinicView.ApptDetails", "_cv_CcoSched.ClinicView.ApptDetails");
			public boolean getApptHead_idIsNotNull()
			{
				return !cx_CcoSchedClinicViewApptHead_id.getValueIsNull(context);
			}
			public String getApptHead_id()
			{
				return (String)cx_CcoSchedClinicViewApptHead_id.getValue(context);
			}
		public void setApptHead_id(String value)
		{
				cx_CcoSchedClinicViewApptHead_id.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewApptHead_id = new ims.framework.ContextVariable("CcoSched.ClinicView.ApptHead_id", "_cv_CcoSched.ClinicView.ApptHead_id");
			public boolean getApptIdIsNotNull()
			{
				return !cx_CcoSchedClinicViewApptId.getValueIsNull(context);
			}
			public String getApptId()
			{
				return (String)cx_CcoSchedClinicViewApptId.getValue(context);
			}
		public void setApptId(String value)
		{
				cx_CcoSchedClinicViewApptId.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewApptId = new ims.framework.ContextVariable("CcoSched.ClinicView.ApptId", "_cv_CcoSched.ClinicView.ApptId");
			public boolean getBookingCommentIsNotNull()
			{
				return !cx_CcoSchedClinicViewBookingComment.getValueIsNull(context);
			}
			public String getBookingComment()
			{
				return (String)cx_CcoSchedClinicViewBookingComment.getValue(context);
			}
		public void setBookingComment(String value)
		{
				cx_CcoSchedClinicViewBookingComment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewBookingComment = new ims.framework.ContextVariable("CcoSched.ClinicView.BookingComment", "_cv_CcoSched.ClinicView.BookingComment");
			public boolean getCategoryIsNotNull()
			{
				return !cx_CcoSchedClinicViewCategory.getValueIsNull(context);
			}
			public String getCategory()
			{
				return (String)cx_CcoSchedClinicViewCategory.getValue(context);
			}
		public void setCategory(String value)
		{
				cx_CcoSchedClinicViewCategory.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewCategory = new ims.framework.ContextVariable("CcoSched.ClinicView.Category", "_cv_CcoSched.ClinicView.Category");
			public boolean getClinicNameIsNotNull()
			{
				return !cx_CcoSchedClinicViewClinicName.getValueIsNull(context);
			}
			public String getClinicName()
			{
				return (String)cx_CcoSchedClinicViewClinicName.getValue(context);
			}
		public void setClinicName(String value)
		{
				cx_CcoSchedClinicViewClinicName.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewClinicName = new ims.framework.ContextVariable("CcoSched.ClinicView.ClinicName", "_cv_CcoSched.ClinicView.ClinicName");
			public boolean getDateIsNotNull()
			{
				return !cx_CcoSchedClinicViewDate.getValueIsNull(context);
			}
			public String getDate()
			{
				return (String)cx_CcoSchedClinicViewDate.getValue(context);
			}
		public void setDate(String value)
		{
				cx_CcoSchedClinicViewDate.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewDate = new ims.framework.ContextVariable("CcoSched.ClinicView.Date", "_cv_CcoSched.ClinicView.Date");
			public boolean getInpatientIsNotNull()
			{
				return !cx_CcoSchedClinicViewInpatient.getValueIsNull(context);
			}
			public String getInpatient()
			{
				return (String)cx_CcoSchedClinicViewInpatient.getValue(context);
			}
		public void setInpatient(String value)
		{
				cx_CcoSchedClinicViewInpatient.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewInpatient = new ims.framework.ContextVariable("CcoSched.ClinicView.Inpatient", "_cv_CcoSched.ClinicView.Inpatient");
			public boolean getIsCommentDialogIsNotNull()
			{
				return !cx_CcoSchedClinicViewIsCommentDialog.getValueIsNull(context);
			}
			public Boolean getIsCommentDialog()
			{
				return (Boolean)cx_CcoSchedClinicViewIsCommentDialog.getValue(context);
			}
		public void setIsCommentDialog(Boolean value)
		{
				cx_CcoSchedClinicViewIsCommentDialog.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewIsCommentDialog = new ims.framework.ContextVariable("CcoSched.ClinicView.IsCommentDialog", "_cv_CcoSched.ClinicView.IsCommentDialog");
			public boolean getPatientDetailsIsNotNull()
			{
				return !cx_CcoSchedClinicViewPatientDetails.getValueIsNull(context);
			}
			public ims.dto.client.Patient.PatientRecord getPatientDetails()
			{
				return (ims.dto.client.Patient.PatientRecord)cx_CcoSchedClinicViewPatientDetails.getValue(context);
			}
		public void setPatientDetails(ims.dto.client.Patient.PatientRecord value)
		{
				cx_CcoSchedClinicViewPatientDetails.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewPatientDetails = new ims.framework.ContextVariable("CcoSched.ClinicView.PatientDetails", "_cv_CcoSched.ClinicView.PatientDetails");
			public boolean getReasonIsNotNull()
			{
				return !cx_CcoSchedClinicViewReason.getValueIsNull(context);
			}
			public String getReason()
			{
				return (String)cx_CcoSchedClinicViewReason.getValue(context);
			}
		public void setReason(String value)
		{
				cx_CcoSchedClinicViewReason.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewReason = new ims.framework.ContextVariable("CcoSched.ClinicView.Reason", "_cv_CcoSched.ClinicView.Reason");
			public boolean getStatusIsNotNull()
			{
				return !cx_CcoSchedClinicViewStatus.getValueIsNull(context);
			}
			public String getStatus()
			{
				return (String)cx_CcoSchedClinicViewStatus.getValue(context);
			}
		public void setStatus(String value)
		{
				cx_CcoSchedClinicViewStatus.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewStatus = new ims.framework.ContextVariable("CcoSched.ClinicView.Status", "_cv_CcoSched.ClinicView.Status");
			public boolean getActionIdIsNotNull()
			{
				return !cx_CcoSchedClinicViewActionId.getValueIsNull(context);
			}
			public String getActionId()
			{
				return (String)cx_CcoSchedClinicViewActionId.getValue(context);
			}
		public void setActionId(String value)
		{
				cx_CcoSchedClinicViewActionId.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewActionId = new ims.framework.ContextVariable("CcoSched.ClinicView.ActionId", "_cv_CcoSched.ClinicView.ActionId");
			public boolean getAppointmentHeaderIDIsNotNull()
			{
				return !cx_CcoSchedClinicViewAppointmentHeaderID.getValueIsNull(context);
			}
			public String getAppointmentHeaderID()
			{
				return (String)cx_CcoSchedClinicViewAppointmentHeaderID.getValue(context);
			}
		public void setAppointmentHeaderID(String value)
		{
				cx_CcoSchedClinicViewAppointmentHeaderID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewAppointmentHeaderID = new ims.framework.ContextVariable("CcoSched.ClinicView.AppointmentHeaderID", "_cv_CcoSched.ClinicView.AppointmentHeaderID");
			public boolean getScreenDateIsNotNull()
			{
				return !cx_CcoSchedClinicViewScreenDate.getValueIsNull(context);
			}
			public ims.framework.utils.Date getScreenDate()
			{
				return (ims.framework.utils.Date)cx_CcoSchedClinicViewScreenDate.getValue(context);
			}
		public void setScreenDate(ims.framework.utils.Date value)
		{
				cx_CcoSchedClinicViewScreenDate.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewScreenDate = new ims.framework.ContextVariable("CcoSched.ClinicView.ScreenDate", "_cv_CcoSched.ClinicView.ScreenDate");
			public boolean getClinicViewFilterVoIsNotNull()
			{
				return !cx_CcoSchedClinicViewClinicViewFilterVo.getValueIsNull(context);
			}
			public ims.ccosched.vo.ClinicViewFilterVo getClinicViewFilterVo()
			{
				return (ims.ccosched.vo.ClinicViewFilterVo)cx_CcoSchedClinicViewClinicViewFilterVo.getValue(context);
			}
		public void setClinicViewFilterVo(ims.ccosched.vo.ClinicViewFilterVo value)
		{
				cx_CcoSchedClinicViewClinicViewFilterVo.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewClinicViewFilterVo = new ims.framework.ContextVariable("CcoSched.ClinicView.ClinicViewFilterVo", "_cvp_CcoSched.ClinicView.ClinicViewFilterVo");
			public boolean getClinicDetailsIsNotNull()
			{
				return !cx_CcoSchedClinicViewClinicDetails.getValueIsNull(context);
			}
			public String[] getClinicDetails()
			{
				return (String[])cx_CcoSchedClinicViewClinicDetails.getValue(context);
			}
		public void setClinicDetails(String[] value)
		{
				cx_CcoSchedClinicViewClinicDetails.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewClinicDetails = new ims.framework.ContextVariable("CcoSched.ClinicView.ClinicDetails", "_cvp_CcoSched.ClinicView.ClinicDetails");
			public boolean getAppt_statIsNotNull()
			{
				return !cx_CcoSchedClinicViewAppt_stat.getValueIsNull(context);
			}
			public String getAppt_stat()
			{
				return (String)cx_CcoSchedClinicViewAppt_stat.getValue(context);
			}
		public void setAppt_stat(String value)
		{
				cx_CcoSchedClinicViewAppt_stat.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewAppt_stat = new ims.framework.ContextVariable("CcoSched.ClinicView.Appt_stat", "_cv_CcoSched.ClinicView.Appt_stat");
			public boolean getPrfile_sess_idIsNotNull()
			{
				return !cx_CcoSchedClinicViewPrfile_sess_id.getValueIsNull(context);
			}
			public String getPrfile_sess_id()
			{
				return (String)cx_CcoSchedClinicViewPrfile_sess_id.getValue(context);
			}
		public void setPrfile_sess_id(String value)
		{
				cx_CcoSchedClinicViewPrfile_sess_id.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewPrfile_sess_id = new ims.framework.ContextVariable("CcoSched.ClinicView.Prfile_sess_id", "_cv_CcoSched.ClinicView.Prfile_sess_id");
			public boolean getPrfiled_sess_idIsNotNull()
			{
				return !cx_CcoSchedClinicViewPrfiled_sess_id.getValueIsNull(context);
			}
			public String getPrfiled_sess_id()
			{
				return (String)cx_CcoSchedClinicViewPrfiled_sess_id.getValue(context);
			}
		public void setPrfiled_sess_id(String value)
		{
				cx_CcoSchedClinicViewPrfiled_sess_id.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewPrfiled_sess_id = new ims.framework.ContextVariable("CcoSched.ClinicView.Prfiled_sess_id", "_cv_CcoSched.ClinicView.Prfiled_sess_id");
			public boolean getApptActionInfoIsNotNull()
			{
				return !cx_CcoSchedClinicViewApptActionInfo.getValueIsNull(context);
			}
			public ims.ccosched.vo.PatTreatPlanActionLiteDisplayVo getApptActionInfo()
			{
				return (ims.ccosched.vo.PatTreatPlanActionLiteDisplayVo)cx_CcoSchedClinicViewApptActionInfo.getValue(context);
			}
		public void setApptActionInfo(ims.ccosched.vo.PatTreatPlanActionLiteDisplayVo value)
		{
				cx_CcoSchedClinicViewApptActionInfo.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewApptActionInfo = new ims.framework.ContextVariable("CcoSched.ClinicView.ApptActionInfo", "_cv_CcoSched.ClinicView.ApptActionInfo");
			private ims.framework.Context context;
		}
		public final class PatientSearchContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private PatientSearchContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getAliveIsNotNull()
			{
				return !cx_CcoSchedPatientSearchAlive.getValueIsNull(context);
			}
			public Boolean getAlive()
			{
				return (Boolean)cx_CcoSchedPatientSearchAlive.getValue(context);
			}
		public void setAlive(Boolean value)
		{
				cx_CcoSchedPatientSearchAlive.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedPatientSearchAlive = new ims.framework.ContextVariable("CcoSched.PatientSearch.Alive", "_cv_CcoSched.PatientSearch.Alive");
			private ims.framework.Context context;
		}
		public final class LkupSelectContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private LkupSelectContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getLkupTypeIDIsNotNull()
			{
				return !cx_CcoSchedLkupSelectLkupTypeID.getValueIsNull(context);
			}
			public String getLkupTypeID()
			{
				return (String)cx_CcoSchedLkupSelectLkupTypeID.getValue(context);
			}
		public void setLkupTypeID(String value)
		{
				cx_CcoSchedLkupSelectLkupTypeID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedLkupSelectLkupTypeID = new ims.framework.ContextVariable("CcoSched.LkupSelect.LkupTypeID", "_cv_CcoSched.LkupSelect.LkupTypeID");
			public boolean getLkupIDIsNotNull()
			{
				return !cx_CcoSchedLkupSelectLkupID.getValueIsNull(context);
			}
			public String getLkupID()
			{
				return (String)cx_CcoSchedLkupSelectLkupID.getValue(context);
			}
		public void setLkupID(String value)
		{
				cx_CcoSchedLkupSelectLkupID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedLkupSelectLkupID = new ims.framework.ContextVariable("CcoSched.LkupSelect.LkupID", "_cv_CcoSched.LkupSelect.LkupID");
			private ims.framework.Context context;
		}
		public final class ClinicViewCancelContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private ClinicViewCancelContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getDialogTitleIsNotNull()
			{
				return !cx_CcoSchedClinicViewCancelDialogTitle.getValueIsNull(context);
			}
			public String getDialogTitle()
			{
				return (String)cx_CcoSchedClinicViewCancelDialogTitle.getValue(context);
			}
		public void setDialogTitle(String value)
		{
				cx_CcoSchedClinicViewCancelDialogTitle.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewCancelDialogTitle = new ims.framework.ContextVariable("CcoSched.ClinicViewCancel.DialogTitle", "_cv_CcoSched.ClinicViewCancel.DialogTitle");
			private ims.framework.Context context;
		}

		public boolean getTemplateCategoryIDListIsNotNull()
		{
			return !cx_CcoSchedTemplateCategoryIDList.getValueIsNull(context);
		}
		public String getTemplateCategoryIDList()
		{
			return (String)cx_CcoSchedTemplateCategoryIDList.getValue(context);
		}
		public void setTemplateCategoryIDList(String value)
		{
			cx_CcoSchedTemplateCategoryIDList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedTemplateCategoryIDList = new ims.framework.ContextVariable("CcoSched.TemplateCategoryIDList", "_cv_CcoSched.TemplateCategoryIDList");
		public boolean getSelectedTemplateIDIsNotNull()
		{
			return !cx_CcoSchedSelectedTemplateID.getValueIsNull(context);
		}
		public String getSelectedTemplateID()
		{
			return (String)cx_CcoSchedSelectedTemplateID.getValue(context);
		}
		public void setSelectedTemplateID(String value)
		{
			cx_CcoSchedSelectedTemplateID.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedSelectedTemplateID = new ims.framework.ContextVariable("CcoSched.SelectedTemplateID", "_cv_CcoSched.SelectedTemplateID");
		public boolean getSelectedPrinterIsNotNull()
		{
			return !cx_CcoSchedSelectedPrinter.getValueIsNull(context);
		}
		public String getSelectedPrinter()
		{
			return (String)cx_CcoSchedSelectedPrinter.getValue(context);
		}
		public void setSelectedPrinter(String value)
		{
			cx_CcoSchedSelectedPrinter.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedSelectedPrinter = new ims.framework.ContextVariable("CcoSched.SelectedPrinter", "_cv_CcoSched.SelectedPrinter");

		public ClinicViewContext ClinicView;
		public PatientSearchContext PatientSearch;
		public LkupSelectContext LkupSelect;
		public ClinicViewCancelContext ClinicViewCancel;
		private ims.framework.Context context;
	}
	public final class OncologyContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private OncologyContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getSelectedPrimaryTumourDetailIsNotNull()
		{
			return !cx_OncologySelectedPrimaryTumourDetail.getValueIsNull(context);
		}
		public ims.oncology.vo.PrimaryTumourDetailsShortVo getSelectedPrimaryTumourDetail()
		{
			return (ims.oncology.vo.PrimaryTumourDetailsShortVo)cx_OncologySelectedPrimaryTumourDetail.getValue(context);
		}
		public void setSelectedPrimaryTumourDetail(ims.oncology.vo.PrimaryTumourDetailsShortVo value)
		{
			cx_OncologySelectedPrimaryTumourDetail.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_OncologySelectedPrimaryTumourDetail = new ims.framework.ContextVariable("Oncology.SelectedPrimaryTumourDetail", "_cv_Oncology.SelectedPrimaryTumourDetail");

		private ims.framework.Context context;
	}
	public boolean getPatTreatmentPlanIsNotNull()
	{
		return !cx_PatTreatmentPlan.getValueIsNull(context);
	}
	public ims.ccosched.vo.PatTreatmentPlanLiteVo getPatTreatmentPlan()
	{
		return (ims.ccosched.vo.PatTreatmentPlanLiteVo)cx_PatTreatmentPlan.getValue(context);
	}
		public void setPatTreatmentPlan(ims.ccosched.vo.PatTreatmentPlanLiteVo value)
		{
		cx_PatTreatmentPlan.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_PatTreatmentPlan = new ims.framework.ContextVariable("PatTreatmentPlan", "_cv_PatTreatmentPlan");

	public CoreContext Core;
	public CcoSchedContext CcoSched;
	public OncologyContext Oncology;
}
