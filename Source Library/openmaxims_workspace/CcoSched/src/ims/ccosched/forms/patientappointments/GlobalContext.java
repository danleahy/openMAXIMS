//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ccosched.forms.patientappointments;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		CcoSched = new CcoSchedContext(context);
		Core = new CoreContext(context);
	}
	public final class CcoSchedContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CcoSchedContext(ims.framework.Context context)
		{
			this.context = context;

			ActionUpdate = new ActionUpdateContext(context);
			Trasport = new TrasportContext(context);
			ClinicView = new ClinicViewContext(context);
			ClinicViewCancel = new ClinicViewCancelContext(context);
			CancelledAppointments = new CancelledAppointmentsContext(context);
			PatientAppointments = new PatientAppointmentsContext(context);
			TreatmentPlan = new TreatmentPlanContext(context);
		}
		public final class ActionUpdateContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private ActionUpdateContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getTreatmentPlanActionsIsNotNull()
			{
				return !cx_CcoSchedActionUpdateTreatmentPlanActions.getValueIsNull(context);
			}
			public ims.ccosched.vo.PatTreatPlanActionVoCollection getTreatmentPlanActions()
			{
				return (ims.ccosched.vo.PatTreatPlanActionVoCollection)cx_CcoSchedActionUpdateTreatmentPlanActions.getValue(context);
			}
		public void setTreatmentPlanActions(ims.ccosched.vo.PatTreatPlanActionVoCollection value)
		{
				cx_CcoSchedActionUpdateTreatmentPlanActions.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedActionUpdateTreatmentPlanActions = new ims.framework.ContextVariable("CcoSched.ActionUpdate.TreatmentPlanActions", "_cv_CcoSched.ActionUpdate.TreatmentPlanActions");
			private ims.framework.Context context;
		}
		public final class TrasportContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private TrasportContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getAppointmentHeaderIDIsNotNull()
			{
				return !cx_CcoSchedTrasportAppointmentHeaderID.getValueIsNull(context);
			}
			public String getAppointmentHeaderID()
			{
				return (String)cx_CcoSchedTrasportAppointmentHeaderID.getValue(context);
			}
		public void setAppointmentHeaderID(String value)
		{
				cx_CcoSchedTrasportAppointmentHeaderID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTrasportAppointmentHeaderID = new ims.framework.ContextVariable("CcoSched.Trasport.AppointmentHeaderID", "_cv_CcoSched.Trasport.AppointmentHeaderID");
			private ims.framework.Context context;
		}
		public final class ClinicViewContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private ClinicViewContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getAppointmentHeaderIDIsNotNull()
			{
				return !cx_CcoSchedClinicViewAppointmentHeaderID.getValueIsNull(context);
			}
			public String getAppointmentHeaderID()
			{
				return (String)cx_CcoSchedClinicViewAppointmentHeaderID.getValue(context);
			}
		public void setAppointmentHeaderID(String value)
		{
				cx_CcoSchedClinicViewAppointmentHeaderID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewAppointmentHeaderID = new ims.framework.ContextVariable("CcoSched.ClinicView.AppointmentHeaderID", "_cv_CcoSched.ClinicView.AppointmentHeaderID");
			public boolean getAppointmentIDIsNotNull()
			{
				return !cx_CcoSchedClinicViewAppointmentID.getValueIsNull(context);
			}
			public String getAppointmentID()
			{
				return (String)cx_CcoSchedClinicViewAppointmentID.getValue(context);
			}
		public void setAppointmentID(String value)
		{
				cx_CcoSchedClinicViewAppointmentID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewAppointmentID = new ims.framework.ContextVariable("CcoSched.ClinicView.AppointmentID", "_cv_CcoSched.ClinicView.AppointmentID");
			public boolean getAppointmentIDListIsNotNull()
			{
				return !cx_CcoSchedClinicViewAppointmentIDList.getValueIsNull(context);
			}
			public java.util.ArrayList getAppointmentIDList()
			{
				return (java.util.ArrayList)cx_CcoSchedClinicViewAppointmentIDList.getValue(context);
			}
		public void setAppointmentIDList(java.util.ArrayList value)
		{
				cx_CcoSchedClinicViewAppointmentIDList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewAppointmentIDList = new ims.framework.ContextVariable("CcoSched.ClinicView.AppointmentIDList", "_cv_CcoSched.ClinicView.AppointmentIDList");
			public boolean getBookingCommentIsNotNull()
			{
				return !cx_CcoSchedClinicViewBookingComment.getValueIsNull(context);
			}
			public String getBookingComment()
			{
				return (String)cx_CcoSchedClinicViewBookingComment.getValue(context);
			}
		public void setBookingComment(String value)
		{
				cx_CcoSchedClinicViewBookingComment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewBookingComment = new ims.framework.ContextVariable("CcoSched.ClinicView.BookingComment", "_cv_CcoSched.ClinicView.BookingComment");
			public boolean getInpatientIsNotNull()
			{
				return !cx_CcoSchedClinicViewInpatient.getValueIsNull(context);
			}
			public String getInpatient()
			{
				return (String)cx_CcoSchedClinicViewInpatient.getValue(context);
			}
		public void setInpatient(String value)
		{
				cx_CcoSchedClinicViewInpatient.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewInpatient = new ims.framework.ContextVariable("CcoSched.ClinicView.Inpatient", "_cv_CcoSched.ClinicView.Inpatient");
			public boolean getPatientDetailsIsNotNull()
			{
				return !cx_CcoSchedClinicViewPatientDetails.getValueIsNull(context);
			}
			public ims.dto.client.Patient.PatientRecord getPatientDetails()
			{
				return (ims.dto.client.Patient.PatientRecord)cx_CcoSchedClinicViewPatientDetails.getValue(context);
			}
		public void setPatientDetails(ims.dto.client.Patient.PatientRecord value)
		{
				cx_CcoSchedClinicViewPatientDetails.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewPatientDetails = new ims.framework.ContextVariable("CcoSched.ClinicView.PatientDetails", "_cv_CcoSched.ClinicView.PatientDetails");
			public boolean getReasonIsNotNull()
			{
				return !cx_CcoSchedClinicViewReason.getValueIsNull(context);
			}
			public String getReason()
			{
				return (String)cx_CcoSchedClinicViewReason.getValue(context);
			}
		public void setReason(String value)
		{
				cx_CcoSchedClinicViewReason.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewReason = new ims.framework.ContextVariable("CcoSched.ClinicView.Reason", "_cv_CcoSched.ClinicView.Reason");
			public boolean getStatusIsNotNull()
			{
				return !cx_CcoSchedClinicViewStatus.getValueIsNull(context);
			}
			public String getStatus()
			{
				return (String)cx_CcoSchedClinicViewStatus.getValue(context);
			}
		public void setStatus(String value)
		{
				cx_CcoSchedClinicViewStatus.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewStatus = new ims.framework.ContextVariable("CcoSched.ClinicView.Status", "_cv_CcoSched.ClinicView.Status");
			private ims.framework.Context context;
		}
		public final class ClinicViewCancelContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private ClinicViewCancelContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getDialogTitleIsNotNull()
			{
				return !cx_CcoSchedClinicViewCancelDialogTitle.getValueIsNull(context);
			}
			public String getDialogTitle()
			{
				return (String)cx_CcoSchedClinicViewCancelDialogTitle.getValue(context);
			}
		public void setDialogTitle(String value)
		{
				cx_CcoSchedClinicViewCancelDialogTitle.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedClinicViewCancelDialogTitle = new ims.framework.ContextVariable("CcoSched.ClinicViewCancel.DialogTitle", "_cv_CcoSched.ClinicViewCancel.DialogTitle");
			private ims.framework.Context context;
		}
		public final class CancelledAppointmentsContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private CancelledAppointmentsContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getRebookAppointmentDetailIsNotNull()
			{
				return !cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.getValueIsNull(context);
			}
			public String getRebookAppointmentDetail()
			{
				return (String)cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.getValue(context);
			}
		public void setRebookAppointmentDetail(String value)
		{
				cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedCancelledAppointmentsRebookAppointmentDetail = new ims.framework.ContextVariable("CcoSched.CancelledAppointments.RebookAppointmentDetail", "_cv_CcoSched.CancelledAppointments.RebookAppointmentDetail");
			private ims.framework.Context context;
		}
		public final class PatientAppointmentsContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private PatientAppointmentsContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getApptEndDateIsNotNull()
			{
				return !cx_CcoSchedPatientAppointmentsApptEndDate.getValueIsNull(context);
			}
			public String getApptEndDate()
			{
				return (String)cx_CcoSchedPatientAppointmentsApptEndDate.getValue(context);
			}
		public void setApptEndDate(String value)
		{
				cx_CcoSchedPatientAppointmentsApptEndDate.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedPatientAppointmentsApptEndDate = new ims.framework.ContextVariable("CcoSched.PatientAppointments.ApptEndDate", "_cv_CcoSched.PatientAppointments.ApptEndDate");
			public boolean getApptStartDateIsNotNull()
			{
				return !cx_CcoSchedPatientAppointmentsApptStartDate.getValueIsNull(context);
			}
			public String getApptStartDate()
			{
				return (String)cx_CcoSchedPatientAppointmentsApptStartDate.getValue(context);
			}
		public void setApptStartDate(String value)
		{
				cx_CcoSchedPatientAppointmentsApptStartDate.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedPatientAppointmentsApptStartDate = new ims.framework.ContextVariable("CcoSched.PatientAppointments.ApptStartDate", "_cv_CcoSched.PatientAppointments.ApptStartDate");
			public boolean getChildrenIsNotNull()
			{
				return !cx_CcoSchedPatientAppointmentsChildren.getValueIsNull(context);
			}
			public java.util.ArrayList getChildren()
			{
				return (java.util.ArrayList)cx_CcoSchedPatientAppointmentsChildren.getValue(context);
			}
		public void setChildren(java.util.ArrayList value)
		{
				cx_CcoSchedPatientAppointmentsChildren.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedPatientAppointmentsChildren = new ims.framework.ContextVariable("CcoSched.PatientAppointments.Children", "_cv_CcoSched.PatientAppointments.Children");
			public boolean getParentIsNotNull()
			{
				return !cx_CcoSchedPatientAppointmentsParent.getValueIsNull(context);
			}
			public ims.dto.client.Sd_appt getParent()
			{
				return (ims.dto.client.Sd_appt)cx_CcoSchedPatientAppointmentsParent.getValue(context);
			}
		public void setParent(ims.dto.client.Sd_appt value)
		{
				cx_CcoSchedPatientAppointmentsParent.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedPatientAppointmentsParent = new ims.framework.ContextVariable("CcoSched.PatientAppointments.Parent", "_cv_CcoSched.PatientAppointments.Parent");
			private ims.framework.Context context;
		}
		public final class TreatmentPlanContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private TreatmentPlanContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getActionIDIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanActionID.getValueIsNull(context);
			}
			public String getActionID()
			{
				return (String)cx_CcoSchedTreatmentPlanActionID.getValue(context);
			}
		public void setActionID(String value)
		{
				cx_CcoSchedTreatmentPlanActionID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanActionID = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.ActionID", "_cv_CcoSched.TreatmentPlan.ActionID");
			public boolean getTreatmentPlanActionsIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanTreatmentPlanActions.getValueIsNull(context);
			}
			public ims.dto.client.Go_ptplact.Go_ptplactRecord getTreatmentPlanActions()
			{
				return (ims.dto.client.Go_ptplact.Go_ptplactRecord)cx_CcoSchedTreatmentPlanTreatmentPlanActions.getValue(context);
			}
		public void setTreatmentPlanActions(ims.dto.client.Go_ptplact.Go_ptplactRecord value)
		{
				cx_CcoSchedTreatmentPlanTreatmentPlanActions.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanTreatmentPlanActions = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.TreatmentPlanActions", "_cv_CcoSched.TreatmentPlan.TreatmentPlanActions");
			public boolean getTreatmentPlanDetailsIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanTreatmentPlanDetails.getValueIsNull(context);
			}
			public ims.dto.client.Go_ptreatpl.Go_ptreatplRecord getTreatmentPlanDetails()
			{
				return (ims.dto.client.Go_ptreatpl.Go_ptreatplRecord)cx_CcoSchedTreatmentPlanTreatmentPlanDetails.getValue(context);
			}
		public void setTreatmentPlanDetails(ims.dto.client.Go_ptreatpl.Go_ptreatplRecord value)
		{
				cx_CcoSchedTreatmentPlanTreatmentPlanDetails.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanTreatmentPlanDetails = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.TreatmentPlanDetails", "_cv_CcoSched.TreatmentPlan.TreatmentPlanDetails");
			private ims.framework.Context context;
		}

		public boolean getTemplateCategoryIDListIsNotNull()
		{
			return !cx_CcoSchedTemplateCategoryIDList.getValueIsNull(context);
		}
		public String getTemplateCategoryIDList()
		{
			return (String)cx_CcoSchedTemplateCategoryIDList.getValue(context);
		}
		public void setTemplateCategoryIDList(String value)
		{
			cx_CcoSchedTemplateCategoryIDList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedTemplateCategoryIDList = new ims.framework.ContextVariable("CcoSched.TemplateCategoryIDList", "_cv_CcoSched.TemplateCategoryIDList");
		public boolean getSelectedTemplateIDIsNotNull()
		{
			return !cx_CcoSchedSelectedTemplateID.getValueIsNull(context);
		}
		public String getSelectedTemplateID()
		{
			return (String)cx_CcoSchedSelectedTemplateID.getValue(context);
		}
		public void setSelectedTemplateID(String value)
		{
			cx_CcoSchedSelectedTemplateID.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedSelectedTemplateID = new ims.framework.ContextVariable("CcoSched.SelectedTemplateID", "_cv_CcoSched.SelectedTemplateID");
		public boolean getSelectedPrinterIsNotNull()
		{
			return !cx_CcoSchedSelectedPrinter.getValueIsNull(context);
		}
		public String getSelectedPrinter()
		{
			return (String)cx_CcoSchedSelectedPrinter.getValue(context);
		}
		public void setSelectedPrinter(String value)
		{
			cx_CcoSchedSelectedPrinter.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedSelectedPrinter = new ims.framework.ContextVariable("CcoSched.SelectedPrinter", "_cv_CcoSched.SelectedPrinter");
		public boolean getTransportDetailsTitleIsNotNull()
		{
			return !cx_CcoSchedTransportDetailsTitle.getValueIsNull(context);
		}
		public String getTransportDetailsTitle()
		{
			return (String)cx_CcoSchedTransportDetailsTitle.getValue(context);
		}
		public void setTransportDetailsTitle(String value)
		{
			cx_CcoSchedTransportDetailsTitle.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedTransportDetailsTitle = new ims.framework.ContextVariable("CcoSched.TransportDetailsTitle", "_cv_CcoSched.TransportDetailsTitle");

		public ActionUpdateContext ActionUpdate;
		public TrasportContext Trasport;
		public ClinicViewContext ClinicView;
		public ClinicViewCancelContext ClinicViewCancel;
		public CancelledAppointmentsContext CancelledAppointments;
		public PatientAppointmentsContext PatientAppointments;
		public TreatmentPlanContext TreatmentPlan;
		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getTemplateCategoryIsNotNull()
		{
			return !cx_CoreTemplateCategory.getValueIsNull(context);
		}
		public String getTemplateCategory()
		{
			return (String)cx_CoreTemplateCategory.getValue(context);
		}
		public void setTemplateCategory(String value)
		{
			cx_CoreTemplateCategory.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreTemplateCategory = new ims.framework.ContextVariable("Core.TemplateCategory", "_cv_Core.TemplateCategory");
		public boolean getTemplateIsNotNull()
		{
			return !cx_CoreTemplate.getValueIsNull(context);
		}
		public String getTemplate()
		{
			return (String)cx_CoreTemplate.getValue(context);
		}
		public void setTemplate(String value)
		{
			cx_CoreTemplate.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreTemplate = new ims.framework.ContextVariable("Core.Template", "_cv_Core.Template");
		public boolean getPrinterSelectIsNotNull()
		{
			return !cx_CorePrinterSelect.getValueIsNull(context);
		}
		public String getPrinterSelect()
		{
			return (String)cx_CorePrinterSelect.getValue(context);
		}
		public void setPrinterSelect(String value)
		{
			cx_CorePrinterSelect.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePrinterSelect = new ims.framework.ContextVariable("Core.PrinterSelect", "_cv_Core.PrinterSelect");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}
	public boolean getPatTreatmentPlanIsNotNull()
	{
		return !cx_PatTreatmentPlan.getValueIsNull(context);
	}
	public ims.ccosched.vo.PatTreatmentPlanLiteVo getPatTreatmentPlan()
	{
		return (ims.ccosched.vo.PatTreatmentPlanLiteVo)cx_PatTreatmentPlan.getValue(context);
	}
		public void setPatTreatmentPlan(ims.ccosched.vo.PatTreatmentPlanLiteVo value)
		{
		cx_PatTreatmentPlan.setValue(context, value);
		}

	private ims.framework.ContextVariable cx_PatTreatmentPlan = new ims.framework.ContextVariable("PatTreatmentPlan", "_cv_PatTreatmentPlan");

	public CcoSchedContext CcoSched;
	public CoreContext Core;
}
