//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.ccosched.forms.rebookingconfirmation;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		CcoSched = new CcoSchedContext(context);
		Core = new CoreContext(context);
	}
	public final class CcoSchedContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CcoSchedContext(ims.framework.Context context)
		{
			this.context = context;

			Booking = new BookingContext(context);
			RelaitedAppointments = new RelaitedAppointmentsContext(context);
			TreatmentPlan = new TreatmentPlanContext(context);
			BookingConfirmation = new BookingConfirmationContext(context);
			CancelledAppointments = new CancelledAppointmentsContext(context);
			LetterType = new LetterTypeContext(context);
			Rebooking = new RebookingContext(context);
			PatientAppointments = new PatientAppointmentsContext(context);
		}
		public final class BookingContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private BookingContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getCalendarSelectedDatesIsNotNull()
			{
				return !cx_CcoSchedBookingCalendarSelectedDates.getValueIsNull(context);
			}
			public java.util.ArrayList getCalendarSelectedDates()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingCalendarSelectedDates.getValue(context);
			}
		public void setCalendarSelectedDates(java.util.ArrayList value)
		{
				cx_CcoSchedBookingCalendarSelectedDates.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingCalendarSelectedDates = new ims.framework.ContextVariable("CcoSched.Booking.CalendarSelectedDates", "_cv_CcoSched.Booking.CalendarSelectedDates");
			public boolean getModalityArrayListIsNotNull()
			{
				return !cx_CcoSchedBookingModalityArrayList.getValueIsNull(context);
			}
			public java.util.ArrayList getModalityArrayList()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingModalityArrayList.getValue(context);
			}
		public void setModalityArrayList(java.util.ArrayList value)
		{
				cx_CcoSchedBookingModalityArrayList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingModalityArrayList = new ims.framework.ContextVariable("CcoSched.Booking.ModalityArrayList", "_cv_CcoSched.Booking.ModalityArrayList");
			public boolean getTimeRequiredIsNotNull()
			{
				return !cx_CcoSchedBookingTimeRequired.getValueIsNull(context);
			}
			public Integer getTimeRequired()
			{
				return (Integer)cx_CcoSchedBookingTimeRequired.getValue(context);
			}
		public void setTimeRequired(Integer value)
		{
				cx_CcoSchedBookingTimeRequired.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingTimeRequired = new ims.framework.ContextVariable("CcoSched.Booking.TimeRequired", "_cv_CcoSched.Booking.TimeRequired");
			public boolean getResourceSelectedIsNotNull()
			{
				return !cx_CcoSchedBookingResourceSelected.getValueIsNull(context);
			}
			public Object getResourceSelected()
			{
				return (Object)cx_CcoSchedBookingResourceSelected.getValue(context);
			}
		public void setResourceSelected(Object value)
		{
				cx_CcoSchedBookingResourceSelected.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingResourceSelected = new ims.framework.ContextVariable("CcoSched.Booking.ResourceSelected", "_cv_CcoSched.Booking.ResourceSelected");
			public boolean getDateSessionSlotsListIsNotNull()
			{
				return !cx_CcoSchedBookingDateSessionSlotsList.getValueIsNull(context);
			}
			public java.util.ArrayList getDateSessionSlotsList()
			{
				return (java.util.ArrayList)cx_CcoSchedBookingDateSessionSlotsList.getValue(context);
			}

			private ims.framework.ContextVariable cx_CcoSchedBookingDateSessionSlotsList = new ims.framework.ContextVariable("CcoSched.Booking.DateSessionSlotsList", "_cv_CcoSched.Booking.DateSessionSlotsList");
			private ims.framework.Context context;
		}
		public final class RelaitedAppointmentsContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private RelaitedAppointmentsContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getRelaitedAppointmentsIsNotNull()
			{
				return !cx_CcoSchedRelaitedAppointmentsRelaitedAppointments.getValueIsNull(context);
			}
			public ims.dto.client.Sd_appt_dts.Sd_appt_dtsRecord getRelaitedAppointments()
			{
				return (ims.dto.client.Sd_appt_dts.Sd_appt_dtsRecord)cx_CcoSchedRelaitedAppointmentsRelaitedAppointments.getValue(context);
			}
		public void setRelaitedAppointments(ims.dto.client.Sd_appt_dts.Sd_appt_dtsRecord value)
		{
				cx_CcoSchedRelaitedAppointmentsRelaitedAppointments.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRelaitedAppointmentsRelaitedAppointments = new ims.framework.ContextVariable("CcoSched.RelaitedAppointments.RelaitedAppointments", "_cv_CcoSched.RelaitedAppointments.RelaitedAppointments");
			private ims.framework.Context context;
		}
		public final class TreatmentPlanContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private TreatmentPlanContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getFurtherAppointmentIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanFurtherAppointment.getValueIsNull(context);
			}
			public Boolean getFurtherAppointment()
			{
				return (Boolean)cx_CcoSchedTreatmentPlanFurtherAppointment.getValue(context);
			}
		public void setFurtherAppointment(Boolean value)
		{
				cx_CcoSchedTreatmentPlanFurtherAppointment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanFurtherAppointment = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.FurtherAppointment", "_cv_CcoSched.TreatmentPlan.FurtherAppointment");
			public boolean getTreatmentPlanActionsIsNotNull()
			{
				return !cx_CcoSchedTreatmentPlanTreatmentPlanActions.getValueIsNull(context);
			}
			public ims.dto.client.Go_ptplact.Go_ptplactRecord getTreatmentPlanActions()
			{
				return (ims.dto.client.Go_ptplact.Go_ptplactRecord)cx_CcoSchedTreatmentPlanTreatmentPlanActions.getValue(context);
			}
		public void setTreatmentPlanActions(ims.dto.client.Go_ptplact.Go_ptplactRecord value)
		{
				cx_CcoSchedTreatmentPlanTreatmentPlanActions.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedTreatmentPlanTreatmentPlanActions = new ims.framework.ContextVariable("CcoSched.TreatmentPlan.TreatmentPlanActions", "_cv_CcoSched.TreatmentPlan.TreatmentPlanActions");
			private ims.framework.Context context;
		}
		public final class BookingConfirmationContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private BookingConfirmationContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getAPPT_UNIDIsNotNull()
			{
				return !cx_CcoSchedBookingConfirmationAPPT_UNID.getValueIsNull(context);
			}
			public Integer getAPPT_UNID()
			{
				return (Integer)cx_CcoSchedBookingConfirmationAPPT_UNID.getValue(context);
			}
		public void setAPPT_UNID(Integer value)
		{
				cx_CcoSchedBookingConfirmationAPPT_UNID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedBookingConfirmationAPPT_UNID = new ims.framework.ContextVariable("CcoSched.BookingConfirmation.APPT_UNID", "_cv_CcoSched.BookingConfirmation.APPT_UNID");
			private ims.framework.Context context;
		}
		public final class CancelledAppointmentsContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private CancelledAppointmentsContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getIncompleteAppointmentIsNotNull()
			{
				return !cx_CcoSchedCancelledAppointmentsIncompleteAppointment.getValueIsNull(context);
			}
			public Boolean getIncompleteAppointment()
			{
				return (Boolean)cx_CcoSchedCancelledAppointmentsIncompleteAppointment.getValue(context);
			}
		public void setIncompleteAppointment(Boolean value)
		{
				cx_CcoSchedCancelledAppointmentsIncompleteAppointment.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedCancelledAppointmentsIncompleteAppointment = new ims.framework.ContextVariable("CcoSched.CancelledAppointments.IncompleteAppointment", "_cv_CcoSched.CancelledAppointments.IncompleteAppointment");
			private ims.framework.Context context;
		}
		public final class LetterTypeContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private LetterTypeContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getGPLetterIsNotNull()
			{
				return !cx_CcoSchedLetterTypeGPLetter.getValueIsNull(context);
			}
			public Boolean getGPLetter()
			{
				return (Boolean)cx_CcoSchedLetterTypeGPLetter.getValue(context);
			}
		public void setGPLetter(Boolean value)
		{
				cx_CcoSchedLetterTypeGPLetter.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedLetterTypeGPLetter = new ims.framework.ContextVariable("CcoSched.LetterType.GPLetter", "_cv_CcoSched.LetterType.GPLetter");
			public boolean getPatientLetterIsNotNull()
			{
				return !cx_CcoSchedLetterTypePatientLetter.getValueIsNull(context);
			}
			public Boolean getPatientLetter()
			{
				return (Boolean)cx_CcoSchedLetterTypePatientLetter.getValue(context);
			}
		public void setPatientLetter(Boolean value)
		{
				cx_CcoSchedLetterTypePatientLetter.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedLetterTypePatientLetter = new ims.framework.ContextVariable("CcoSched.LetterType.PatientLetter", "_cv_CcoSched.LetterType.PatientLetter");
			private ims.framework.Context context;
		}
		public final class RebookingContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private RebookingContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getActionIsNotNull()
			{
				return !cx_CcoSchedRebookingAction.getValueIsNull(context);
			}
			public String getAction()
			{
				return (String)cx_CcoSchedRebookingAction.getValue(context);
			}
		public void setAction(String value)
		{
				cx_CcoSchedRebookingAction.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingAction = new ims.framework.ContextVariable("CcoSched.Rebooking.Action", "_cv_CcoSched.Rebooking.Action");
			public boolean getActionIDIsNotNull()
			{
				return !cx_CcoSchedRebookingActionID.getValueIsNull(context);
			}
			public String getActionID()
			{
				return (String)cx_CcoSchedRebookingActionID.getValue(context);
			}
		public void setActionID(String value)
		{
				cx_CcoSchedRebookingActionID.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingActionID = new ims.framework.ContextVariable("CcoSched.Rebooking.ActionID", "_cv_CcoSched.Rebooking.ActionID");
			public boolean getActivityIsNotNull()
			{
				return !cx_CcoSchedRebookingActivity.getValueIsNull(context);
			}
			public String getActivity()
			{
				return (String)cx_CcoSchedRebookingActivity.getValue(context);
			}
		public void setActivity(String value)
		{
				cx_CcoSchedRebookingActivity.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingActivity = new ims.framework.ContextVariable("CcoSched.Rebooking.Activity", "_cv_CcoSched.Rebooking.Activity");
			public boolean getAppointmentsIsNotNull()
			{
				return !cx_CcoSchedRebookingAppointments.getValueIsNull(context);
			}
			public ims.dto.client.Sd_appt getAppointments()
			{
				return (ims.dto.client.Sd_appt)cx_CcoSchedRebookingAppointments.getValue(context);
			}
		public void setAppointments(ims.dto.client.Sd_appt value)
		{
				cx_CcoSchedRebookingAppointments.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingAppointments = new ims.framework.ContextVariable("CcoSched.Rebooking.Appointments", "_cv_CcoSched.Rebooking.Appointments");
			public boolean getDataIsNotNull()
			{
				return !cx_CcoSchedRebookingData.getValueIsNull(context);
			}
			public java.util.ArrayList getData()
			{
				return (java.util.ArrayList)cx_CcoSchedRebookingData.getValue(context);
			}
		public void setData(java.util.ArrayList value)
		{
				cx_CcoSchedRebookingData.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingData = new ims.framework.ContextVariable("CcoSched.Rebooking.Data", "_cv_CcoSched.Rebooking.Data");
			public boolean getMachine_IdIsNotNull()
			{
				return !cx_CcoSchedRebookingMachine_Id.getValueIsNull(context);
			}
			public String getMachine_Id()
			{
				return (String)cx_CcoSchedRebookingMachine_Id.getValue(context);
			}
		public void setMachine_Id(String value)
		{
				cx_CcoSchedRebookingMachine_Id.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingMachine_Id = new ims.framework.ContextVariable("CcoSched.Rebooking.Machine_Id", "_cv_CcoSched.Rebooking.Machine_Id");
			public boolean getNewTimeListIsNotNull()
			{
				return !cx_CcoSchedRebookingNewTimeList.getValueIsNull(context);
			}
			public java.util.ArrayList getNewTimeList()
			{
				return (java.util.ArrayList)cx_CcoSchedRebookingNewTimeList.getValue(context);
			}
		public void setNewTimeList(java.util.ArrayList value)
		{
				cx_CcoSchedRebookingNewTimeList.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingNewTimeList = new ims.framework.ContextVariable("CcoSched.Rebooking.NewTimeList", "_cv_CcoSched.Rebooking.NewTimeList");
			public boolean getPatientCategoryIsNotNull()
			{
				return !cx_CcoSchedRebookingPatientCategory.getValueIsNull(context);
			}
			public String getPatientCategory()
			{
				return (String)cx_CcoSchedRebookingPatientCategory.getValue(context);
			}
		public void setPatientCategory(String value)
		{
				cx_CcoSchedRebookingPatientCategory.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingPatientCategory = new ims.framework.ContextVariable("CcoSched.Rebooking.PatientCategory", "_cv_CcoSched.Rebooking.PatientCategory");
			public boolean getRebookingSucceededIsNotNull()
			{
				return !cx_CcoSchedRebookingRebookingSucceeded.getValueIsNull(context);
			}
			public Boolean getRebookingSucceeded()
			{
				return (Boolean)cx_CcoSchedRebookingRebookingSucceeded.getValue(context);
			}
		public void setRebookingSucceeded(Boolean value)
		{
				cx_CcoSchedRebookingRebookingSucceeded.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingRebookingSucceeded = new ims.framework.ContextVariable("CcoSched.Rebooking.RebookingSucceeded", "_cv_CcoSched.Rebooking.RebookingSucceeded");
			public boolean getStartTimeIsNotNull()
			{
				return !cx_CcoSchedRebookingStartTime.getValueIsNull(context);
			}
			public ims.framework.utils.Time getStartTime()
			{
				return (ims.framework.utils.Time)cx_CcoSchedRebookingStartTime.getValue(context);
			}
		public void setStartTime(ims.framework.utils.Time value)
		{
				cx_CcoSchedRebookingStartTime.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedRebookingStartTime = new ims.framework.ContextVariable("CcoSched.Rebooking.StartTime", "_cv_CcoSched.Rebooking.StartTime");
			private ims.framework.Context context;
		}
		public final class PatientAppointmentsContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private PatientAppointmentsContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getApptStartDateIsNotNull()
			{
				return !cx_CcoSchedPatientAppointmentsApptStartDate.getValueIsNull(context);
			}
			public String getApptStartDate()
			{
				return (String)cx_CcoSchedPatientAppointmentsApptStartDate.getValue(context);
			}
		public void setApptStartDate(String value)
		{
				cx_CcoSchedPatientAppointmentsApptStartDate.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_CcoSchedPatientAppointmentsApptStartDate = new ims.framework.ContextVariable("CcoSched.PatientAppointments.ApptStartDate", "_cv_CcoSched.PatientAppointments.ApptStartDate");
			private ims.framework.Context context;
		}

		public boolean getAppointmentIdIsNotNull()
		{
			return !cx_CcoSchedAppointmentId.getValueIsNull(context);
		}
		public String getAppointmentId()
		{
			return (String)cx_CcoSchedAppointmentId.getValue(context);
		}
		public void setAppointmentId(String value)
		{
			cx_CcoSchedAppointmentId.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedAppointmentId = new ims.framework.ContextVariable("CcoSched.AppointmentId", "_cv_CcoSched.AppointmentId");
		public boolean getSelectLetterTypeIsNotNull()
		{
			return !cx_CcoSchedSelectLetterType.getValueIsNull(context);
		}
		public String getSelectLetterType()
		{
			return (String)cx_CcoSchedSelectLetterType.getValue(context);
		}
		public void setSelectLetterType(String value)
		{
			cx_CcoSchedSelectLetterType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CcoSchedSelectLetterType = new ims.framework.ContextVariable("CcoSched.SelectLetterType", "_cv_CcoSched.SelectLetterType");
		public boolean getLoggedInUserIdIsNotNull()
		{
			return !cx_CcoSchedLoggedInUserId.getValueIsNull(context);
		}
		public String getLoggedInUserId()
		{
			return (String)cx_CcoSchedLoggedInUserId.getValue(context);
		}

		private ims.framework.ContextVariable cx_CcoSchedLoggedInUserId = new ims.framework.ContextVariable("CcoSched.LoggedInUserId", "_cvp_CcoSched.LoggedInUserId");

		public BookingContext Booking;
		public RelaitedAppointmentsContext RelaitedAppointments;
		public TreatmentPlanContext TreatmentPlan;
		public BookingConfirmationContext BookingConfirmation;
		public CancelledAppointmentsContext CancelledAppointments;
		public LetterTypeContext LetterType;
		public RebookingContext Rebooking;
		public PatientAppointmentsContext PatientAppointments;
		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getPrepareForPrintingIsNotNull()
		{
			return !cx_CorePrepareForPrinting.getValueIsNull(context);
		}
		public Boolean getPrepareForPrinting()
		{
			return (Boolean)cx_CorePrepareForPrinting.getValue(context);
		}
		public void setPrepareForPrinting(Boolean value)
		{
			cx_CorePrepareForPrinting.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePrepareForPrinting = new ims.framework.ContextVariable("Core.PrepareForPrinting", "_cv_Core.PrepareForPrinting");

		private ims.framework.Context context;
	}
	public boolean getPatTreatmentPlanIsNotNull()
	{
		return !cx_PatTreatmentPlan.getValueIsNull(context);
	}
	public ims.ccosched.vo.PatTreatmentPlanLiteVo getPatTreatmentPlan()
	{
		return (ims.ccosched.vo.PatTreatmentPlanLiteVo)cx_PatTreatmentPlan.getValue(context);
	}

	private ims.framework.ContextVariable cx_PatTreatmentPlan = new ims.framework.ContextVariable("PatTreatmentPlan", "_cv_PatTreatmentPlan");
	public boolean getPatTreatmentPlanActionIsNotNull()
	{
		return !cx_PatTreatmentPlanAction.getValueIsNull(context);
	}
	public ims.ccosched.vo.PatTreatPlanActionVo getPatTreatmentPlanAction()
	{
		return (ims.ccosched.vo.PatTreatPlanActionVo)cx_PatTreatmentPlanAction.getValue(context);
	}

	private ims.framework.ContextVariable cx_PatTreatmentPlanAction = new ims.framework.ContextVariable("PatTreatmentPlanAction", "_cv_PatTreatmentPlanAction");

	public CcoSchedContext CcoSched;
	public CoreContext Core;
}
