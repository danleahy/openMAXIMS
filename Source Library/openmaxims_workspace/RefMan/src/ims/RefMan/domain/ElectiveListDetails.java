//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain;

// Generated from form domain impl
public interface ElectiveListDetails extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	public ims.RefMan.vo.PatientElectiveListDetailsVo get(ims.RefMan.vo.PatientElectiveListRefVo patientElectiveListRef);

	// Generated from form domain interface definition
	public ims.core.vo.LocationLiteVoCollection listHospitalsByElectiveList(ims.core.configuration.vo.ElectiveListConfigurationRefVo electiveListConfig, String name);

	// Generated from form domain interface definition
	public ims.core.vo.LocationLiteVoCollection listWards(String name, ims.core.resource.place.vo.LocationRefVo locationRef);

	// Generated from form domain interface definition
	public ims.RefMan.vo.PatientElectiveListDetailsVo save(ims.RefMan.vo.PatientElectiveListDetailsVo patientElectiveList, ims.RefMan.vo.TCIForPatientElectiveListDetailsVo previousTCI, ims.framework.utils.Date previousEarliestDateOffered, Boolean createOutcomeHistory) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public void createCaseNoteRequests(ims.RefMan.vo.PatientElectiveListDetailsVo patientElectiveList, ims.core.vo.PatientShort patient);

	// Generated from form domain interface definition
	public void triggerElectiveListEvent(ims.RefMan.vo.PatientElectiveListRefVo patientElectiveList) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.RefMan.vo.PatientElectiveListDetailsVo markERODAsRIE(ims.RefMan.vo.PatientElectiveListDetailsVo patientElectiveList, ims.framework.FormName formName, String comment) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public void cancelTCI(ims.RefMan.vo.PatientElectiveListRefVo patientWaitingListRef, ims.RefMan.vo.TCIOutcomeForPatientElectiveListVo tciOutcome, ims.scheduling.vo.Booking_AppointmentRefVo theatreApptThatIsNotCancelled) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* getBookingAppointment
	*/
	public ims.scheduling.vo.Booking_AppointmentVo getBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt);

	// Generated from form domain interface definition
	public ims.scheduling.vo.Booking_AppointmentVo cancelAppt(ims.scheduling.vo.Booking_AppointmentVo appt, ims.chooseandbook.vo.lookups.ActionRequestType requestType, String requestSource) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* updateCatsReferralAdditionalInvStatus
	*/
	public void updateCatsReferralAdditionalInvStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.Booking_AppointmentRefVo appt) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* updateCatsReferralCancelStatus
	*/
	public void updateCatsReferralCancelStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public void dnaTCI(ims.RefMan.vo.PatientElectiveListRefVo patientElectiveList, ims.scheduling.vo.Booking_AppointmentRefVo theatreThatIsNotDNA) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.scheduling.vo.SessionParentChildSlotVo getSession(ims.scheduling.vo.SessionParentChildSlotRefVo sessionParentSlot);

	// Generated from form domain interface definition
	public void dnaAppointment(ims.scheduling.vo.Booking_AppointmentVo appt, ims.RefMan.vo.CatsReferralRefVo cats) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* Method will inactivate any pause related to the current EROD record that is being marked as RIE
	*/
	public void inactivatePause(ims.RefMan.vo.CatsReferralRefVo referral, ims.RefMan.vo.ReferralERODRefVo erod) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.RefMan.vo.PatientElectiveListDetailsVo savePatientElectiveListNotes(ims.RefMan.vo.PatientElectiveListDetailsVo patientElectiveList) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public Boolean isStaleNote(ims.RefMan.vo.PatientElectiveListNotesVo patientElectiveListNote);

	// Generated from form domain interface definition
	public Boolean isERODStale(ims.RefMan.vo.ReferralERODRefVo referralERODRef);

	// Generated from form domain interface definition
	public ims.RefMan.vo.BookingAppointmentForTCIVo getTCIAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt);

	// Generated from form domain interface definition
	public Boolean isLoggedInUserMedicByHcpAndService(ims.core.resource.people.vo.HcpRefVo hCpRef, ims.core.clinical.vo.ServiceRefVo serviceRef);

	// Generated from form domain interface definition
	public Integer countHospitalsFromElectiveListConfiguration(ims.core.configuration.vo.ElectiveListConfigurationRefVo electiveListConfiguration);

	// Generated from form domain interface definition
	public ims.core.vo.HcpLiteVo getHCPByMedic(ims.core.resource.people.vo.HcpRefVo hcpRef);

	// Generated from form domain interface definition
	public ims.emergency.vo.AppFormForTrackingVo getFormMenuAction(Integer formId);
}
