//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Florin Blindu using IMS Development Environment (version 1.80 build 5256.13787)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.RefMan.domain.impl;

import ims.RefMan.domain.base.impl.BaseCancerTypeConfigImpl;
import ims.RefMan.domain.objects.CancerTypeConfig;
import ims.RefMan.vo.CancerTypeConfigVo;
import ims.RefMan.vo.domain.CancerTypeConfigVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.framework.exceptions.CodingRuntimeException;

import java.util.List;

public class CancerTypeConfigImpl extends BaseCancerTypeConfigImpl
{

	private static final long serialVersionUID = 1L;

	public CancerTypeConfigVo save(CancerTypeConfigVo cancerTypeConfigToSave) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException
	{
		if (cancerTypeConfigToSave == null)
			throw new CodingRuntimeException("Cannot save null CancerTypeConfigVo ");

		

		if (!cancerTypeConfigToSave.isValidated())
				throw new DomainRuntimeException("cancerTypeConfigToSave Not Validated.");

		DomainFactory factory = getDomainFactory();
		
		CancerTypeConfig domainCancerTypeConfig = CancerTypeConfigVoAssembler.extractCancerTypeConfig(factory, cancerTypeConfigToSave);
		factory.save(domainCancerTypeConfig);

		return CancerTypeConfigVoAssembler.create(domainCancerTypeConfig);
		
	}

	public CancerTypeConfigVo getCancerTypeConfig()
	{
		DomainFactory factory = getDomainFactory();

		StringBuffer hql = new StringBuffer();

		hql.append("from CancerTypeConfig");

		List<?> list = factory.find(hql.toString());

		if (list != null && list.size() > 0)
			return CancerTypeConfigVoAssembler.create((CancerTypeConfig) (list).get(0));

		return null;
	}
}
