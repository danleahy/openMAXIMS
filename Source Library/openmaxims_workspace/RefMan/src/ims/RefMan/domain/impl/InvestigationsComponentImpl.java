//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.65 build 3163.31063)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.RefMan.domain.impl;

import ims.RefMan.domain.base.impl.BaseInvestigationsComponentImpl;
import ims.core.patient.vo.PatientRefVo;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainInterfaceException;
import ims.framework.exceptions.CodingRuntimeException;
import ims.ocrr.vo.OrderInvestigationLiteVoCollection;
import ims.ocrr.vo.domain.OrderInvestigationLiteVoAssembler;

public class InvestigationsComponentImpl extends BaseInvestigationsComponentImpl
{

	private static final long serialVersionUID = 1L;
	
	private static final int ORD_INV_REQUESTED = 400;

	/**
	* listResults
	*/
	public ims.ocrr.vo.OrderInvestigationLiteVoCollection listResults(ims.RefMan.vo.CatsReferralRefVo referral) throws ims.domain.exceptions.DomainInterfaceException
	{
		if(referral == null || referral.getID_CatsReferral() == null)
			throw new CodingRuntimeException("referral or referral id is null in method listResults");
		
		DomainFactory factory = getDomainFactory();
		
		return OrderInvestigationLiteVoAssembler.createOrderInvestigationLiteVoCollectionFromOrderInvestigation(factory.find("select ordInv from CatsReferral catsRef join catsRef.investigationOrders as ord join ord.investigations ordInv where catsRef.id = '" + referral.getID_CatsReferral() + "' order by ordInv.displayDateTime desc"));
	}

	/**
	 * WDEV-13944
	 * Function used to list all results
	 */
	public OrderInvestigationLiteVoCollection listResults(PatientRefVo patient) throws DomainInterfaceException
	{
		if (patient == null || !patient.getID_PatientIsNotNull())
			return null;
		
		String query = "SELECT ordInv FROM CatsReferral AS cats LEFT JOIN cats.investigationOrders AS ord LEFT JOIN ord.investigations AS ordInv LEFT JOIN cats.patient AS pat WHERE pat.id =:PAT_ID order by ordInv.displayDateTime desc";
		
		return OrderInvestigationLiteVoAssembler.createOrderInvestigationLiteVoCollectionFromOrderInvestigation(getDomainFactory().find(query, "PAT_ID", patient.getID_Patient(), ORD_INV_REQUESTED));
	}
}
