//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain;

// Generated from form domain impl
public interface ReferralDetailsComponent extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	public ims.scheduling.vo.ExclusionDatesVo listExclusionDates();

	// Generated from form domain interface definition
	public ims.RefMan.vo.ReferralServiceFullVo getReferralServices();

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralWizardVo getCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsReferral);

	// Generated from form domain interface definition
	/**
	* save
	*/
	public ims.clinical.vo.ReferralLetterDetailsVo save(ims.clinical.vo.ReferralLetterDetailsVo referralDetailsVo, ims.RefMan.vo.CatsReferralWizardVo catsReferralVo, Boolean bDiagnosticReferral, Boolean bRemoveRTTData) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.clinical.vo.ReferralLetterDetailsVo getReferral(ims.core.clinical.vo.ReferralLetterDetailsRefVo referral);

	// Generated from form domain interface definition
	public ims.core.vo.GpShortVo getPatientGP(Integer patientId);

	// Generated from form domain interface definition
	/**
	* List all procedures which name mathces the string provided (name)
	*/
	public ims.core.vo.ProcedureLiteVoCollection listProcedures(String procedureName, ims.core.vo.ServiceLiteVo serviceLiteVo) throws ims.domain.exceptions.DomainInterfaceException;

	// Generated from form domain interface definition
	/**
	* list Org Lites
	*/
	public ims.core.vo.OrganisationVoCollection listOrganisations(ims.core.vo.OrgShortVo filter);

	// Generated from form domain interface definition
	public ims.RefMan.vo.CatsReferralWizardVo saveCatsReferral(ims.RefMan.vo.CatsReferralWizardVo record) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* List all locations for an organisation. If name parameter is null than all locations are retrieved, if not only those containing that name
	*/
	public ims.core.vo.LocationLiteVoCollection listLocationByOrganisation(ims.core.resource.place.vo.OrganisationRefVo organisation, String name);

	// Generated from form domain interface definition
	public ims.core.vo.LocationLiteVoCollection listLocationLite();

	// Generated from form domain interface definition
	public ims.RefMan.vo.ContractConfigForReferralDetailsComponentVoCollection listActiveContracts(ims.core.resource.place.vo.OrganisationRefVo voOrgRef);

	// Generated from form domain interface definition
	public ims.core.configuration.vo.ContractConfigRefVoCollection listAllContracts(ims.core.resource.place.vo.OrganisationRefVo voOrgRef);

	// Generated from form domain interface definition
	public ims.core.vo.OrganisationLiteVo getOrganisationByLocation(Integer locationId);

	// Generated from form domain interface definition
	/**
	* Function used to retrieve all active contracts for a location (all active contracts from above Organisations)
	*/
	public ims.RefMan.vo.ContractConfigForReferralDetailsComponentVoCollection listActiveContractsForLocation(ims.core.resource.place.vo.LocationRefVo location);

	// Generated from form domain interface definition
	public ims.RefMan.vo.ContractServiceLocationsConfigVoCollection listLocationServiceByContract(ims.core.configuration.vo.ContractConfigRefVo contract);

	// Generated from form domain interface definition
	public ims.RefMan.vo.ContractServiceLocationsConfigVoCollection listLocationServiceByContractAndService(ims.core.configuration.vo.ContractConfigRefVo contract, ims.core.clinical.vo.ServiceRefVo service);

	// Generated from form domain interface definition
	/**
	* Get Patients - GPSurgery
	*/
	public ims.core.vo.LocSiteVo getPatientSurgery(ims.core.patient.vo.PatientRefVo voPatientRef);

	// Generated from form domain interface definition
	/**
	* getCCGCodeFromPostCode
	*/
	public String getCCGCodeFromPostCode(String postCode);

	// Generated from form domain interface definition
	public ims.core.vo.PatientWithGPForCCGVo getPatientWithGp(ims.core.patient.vo.PatientRefVo patientRef);

	// Generated from form domain interface definition
	public Boolean hasActiveReferralForService(ims.core.patient.vo.PatientRefVo patient, ims.core.clinical.vo.ServiceRefVo service, ims.framework.utils.Date firstDate, ims.framework.utils.Date lastDate);

	// Generated from form domain interface definition
	public ims.RefMan.vo.CancerTypeConfigVo getCancerTypeConfig();

	// Generated from form domain interface definition
	public ims.core.vo.ReferralSourceUrgencyVoCollection getSourceOfReferralConfigVoColl();

	// Generated from form domain interface definition
	public ims.core.vo.Hcp getHCP(ims.vo.interfaces.IMos hcpRef);

	// Generated from form domain interface definition
	public ims.core.vo.ServiceLiteVoCollection listServicesByContract(ims.core.configuration.vo.ContractConfigRefVo contractConfig);

	// Generated from form domain interface definition
	public ims.core.vo.ServiceFunctionLiteVoCollection listServiceFunctionByService(ims.core.clinical.vo.ServiceRefVo service);

	// Generated from form domain interface definition
	public ims.core.vo.LocationLiteVoCollection listLocationByContractAndService(ims.core.configuration.vo.ContractConfigRefVo contract, ims.core.clinical.vo.ServiceRefVo service);

	// Generated from form domain interface definition
	public Boolean isStale(ims.RefMan.vo.CatsReferralRefVo catsRef);

	// Generated from form domain interface definition
	/**
	* Lists all services for the given contract and wildcard specified in the query combo
	*/
	public ims.core.vo.ServiceLiteVoCollection listServicesByContractAndWildcard(ims.core.configuration.vo.ContractConfigRefVo contractConfig, String wildcardService, Boolean isEmergencyAdmission);

	// Generated from form domain interface definition
	/**
	* getCCGCodeFromPostCode
	*/
	public String getCCGCodeForCurrentLocationOrg(ims.framework.interfaces.ILocation iLoc);

	// Generated from form domain interface definition
	public void updateReferralDate(ims.framework.utils.Date newDate, ims.RefMan.vo.CatsReferralRefVo referral) throws ims.domain.exceptions.StaleObjectException;
}
