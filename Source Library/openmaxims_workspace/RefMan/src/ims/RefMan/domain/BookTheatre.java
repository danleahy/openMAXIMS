//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain;

// Generated from form domain impl
public interface BookTheatre extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	/**
	* listActiveCanBeScheduledService
	*/
	public ims.core.vo.ServiceLiteVoCollection listActiveCanBeScheduledService();

	// Generated from form domain interface definition
	/**
	* saveBooking
	*/
	public ims.scheduling.vo.Sch_BookingTheatreVo saveTheatreBooking(ims.scheduling.vo.Sch_BookingTheatreVo booking, ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.SessionTheatreTCISlotLiteVo voSessTheatreSlot, ims.scheduling.vo.lookups.TheatreType theatreType) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* list sessions for scheduling
	*/
	public ims.scheduling.vo.SessionTheatreVoCollection listSession(ims.framework.utils.Date startDate, ims.framework.utils.Date endDate, ims.core.clinical.vo.ServiceRefVo service, ims.core.resource.place.vo.LocationRefVo location, ims.vo.interfaces.IMos consultant, ims.vo.interfaces.IGenericItem procedure, ims.scheduling.vo.lookups.TheatreType theatreType, Integer timeRequired, Boolean allowOverBook);

	// Generated from form domain interface definition
	/**
	* list Booking appointments for a session
	*/
	public ims.scheduling.vo.BookingAppointmentTheatreVoCollection listBookingAppointment(ims.scheduling.vo.Sch_SessionRefVo session);

	// Generated from form domain interface definition
	/**
	* check Booking Rights for this Role and Session
	*/
	public Boolean hasBookingRights(ims.framework.interfaces.IAppRole role, ims.scheduling.vo.Sch_SessionRefVo session);

	// Generated from form domain interface definition
	/**
	* listLocationLite
	*/
	public ims.core.vo.LocationLiteVoCollection listLocationLite();

	// Generated from form domain interface definition
	/**
	* getCurrentMonth
	*/
	public ims.framework.utils.Date getCurrentMonth(ims.core.clinical.vo.ServiceRefVo service, ims.core.resource.place.vo.LocationRefVo location, ims.vo.interfaces.IMos consultant, ims.vo.interfaces.IGenericItem procedure, ims.scheduling.vo.lookups.TheatreType theatreType);

	// Generated from form domain interface definition
	/**
	* getReferralDetail
	*/
	public ims.RefMan.vo.ReferralBookingVo getReferralDetail(ims.RefMan.vo.CatsReferralRefVo catsReferral);

	// Generated from form domain interface definition
	/**
	* listExclusionDates
	*/
	public ims.scheduling.vo.ExclusionDatesVo listExclusionDates();

	// Generated from form domain interface definition
	/**
	* for rebooking used same Sch_booking
	*/
	public ims.scheduling.vo.Sch_BookingTheatreVo getSch_BookingByAppt(ims.scheduling.vo.Booking_AppointmentRefVo appt);

	// Generated from form domain interface definition
	/**
	* getBookingAppointment
	*/
	public ims.scheduling.vo.BookingAppointmentTheatreVo getBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt);

	// Generated from form domain interface definition
	public ims.core.vo.ServiceShortVoCollection listActiveService();

	// Generated from form domain interface definition
	/**
	* Runs a search based on a given filter string, CciType and Boolean. Returns the results as a collection of IGenericItem interfaces
	*/
	public ims.vo.interfaces.IGenericItem[] listProcedures(String filter);

	// Generated from form domain interface definition
	public ims.icp.vo.PatientICPFullVo getPatientICP(ims.core.admin.vo.CareContextRefVo careCOntextRefVo);

	// Generated from form domain interface definition
	public ims.icp.vo.PatientICPFullVo savePatientICP(ims.icp.vo.PatientICPFullVo pateintICPVo) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* getSuitableForSurgeryAssessmentByCareContext
	*/
	public ims.RefMan.vo.SuitableForSurgeryAssessmentMinVo getSuitableForSurgeryAssessmentByCareContext(ims.core.admin.vo.CareContextRefVo careContext);

	// Generated from form domain interface definition
	public ims.RefMan.vo.FitForSurgeryAssessmentLiteVo getLatestFitForSurgeryAssessment(ims.RefMan.vo.CatsReferralRefVo referral);

	// Generated from form domain interface definition
	/**
	* countNonCancelledAppointmentsForSession
	*/
	public Integer countNonCancelledAppointmentsForSession(ims.scheduling.vo.Sch_SessionRefVo session);

	// Generated from form domain interface definition
	public void removeApptFromExistingSessionApptOrder( ims.scheduling.domain.objects.Booking_Appointment doAppt) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* alreadyExists
	*/
	public Boolean alreadyExists( ims.scheduling.domain.objects.Sch_Session_Appointment_Order doSessApptOrder,  ims.scheduling.domain.objects.Booking_Appointment doAppt);

	// Generated from form domain interface definition
	/**
	* getLastSuitableForSurgeryAssessmentProcedureTextByCareContext
	*/
	public String getLastSuitableForSurgeryAssessmentProcedureTextByCareContext(ims.core.admin.vo.CareContextRefVo careContextRef);

	// Generated from form domain interface definition
	/**
	* updateActiveMonitoring
	*/
	public void updateActiveMonitoring(ims.RefMan.vo.CatsReferralRefVo voCatsRef) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.scheduling.vo.SessionTheatreVo getSessionTheatre(ims.scheduling.vo.Sch_SessionRefVo sessionRef);

	// Generated from form domain interface definition
	public ims.RefMan.vo.ReferralERODVo getLastTheatreEROD(ims.RefMan.vo.CatsReferralRefVo catsReferral);

	// Generated from form domain interface definition
	public ims.scheduling.vo.TheatreDetailVoCollection getTheatreDetailsForSession(ims.scheduling.vo.Sch_SessionRefVo session);
}
