//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseContractConfigurationImpl extends DomainImpl implements ims.RefMan.domain.ContractConfiguration, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistContracts(String name, ims.core.resource.place.vo.OrganisationRefVo organisation, ims.core.vo.lookups.ReferralManagementContractType contractType, String contractId, ims.core.vo.lookups.PreActiveActiveInactiveStatus status, Boolean diagnostic, Boolean nonDiagnostic)
	{
	}

	@SuppressWarnings("unused")
	public void validategetContract(ims.core.configuration.vo.ContractConfigRefVo contractRef)
	{
		if(contractRef == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'contractRef' of type 'ims.core.configuration.vo.ContractConfigRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.RefMan.vo.ContractConfigVo contract)
	{
		if(contract == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'contract' of type 'ims.RefMan.vo.ContractConfigVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatecountForContractConfig(Integer contractConfigId, Integer serviceId, Integer locationId, String contractId)
	{
	}

	@SuppressWarnings("unused")
	public void validategetContractConfig(Integer contractConfigId)
	{
	}

	@SuppressWarnings("unused")
	public void validateexistsCCGPCTPCCodesRecords(String cCGCode)
	{
	}

	@SuppressWarnings("unused")
	public void validategetContractServiceLocConfByContractService(ims.core.configuration.vo.ContractConfigRefVo contractRef, ims.core.clinical.vo.ServiceRefVo serviceRef)
	{
	}
}
