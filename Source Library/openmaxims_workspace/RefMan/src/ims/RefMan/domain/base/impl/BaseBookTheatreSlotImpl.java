//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseBookTheatreSlotImpl extends DomainImpl implements ims.RefMan.domain.BookTheatreSlot, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistSession(ims.RefMan.vo.BookTheatreSearchCriteriaVo searchCriteria)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistBookingAppointment(ims.scheduling.vo.Sch_SessionRefVo session)
	{
		if(session == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'session' of type 'ims.scheduling.vo.Sch_SessionRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatehasBookingRights(ims.framework.interfaces.IAppRole role, ims.scheduling.vo.Sch_SessionRefVo session)
	{
		if(session == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'session' of type 'ims.scheduling.vo.Sch_SessionRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetReferralDetail(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
		if(catsReferral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsReferral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetSch_BookingByAppt(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		if(appt == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'appt' of type 'ims.scheduling.vo.Booking_AppointmentRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatelistProcedures(String filter)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientICP(ims.core.admin.vo.CareContextRefVo careCOntextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientICP(ims.icp.vo.PatientICPFullVo pateintICPVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSuitableForSurgeryAssessmentByCareContext(ims.core.admin.vo.CareContextRefVo careContext)
	{
		if(careContext == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'careContext' of type 'ims.core.admin.vo.CareContextRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetLatestFitForSurgeryAssessment(ims.RefMan.vo.CatsReferralRefVo referral)
	{
	}

	@SuppressWarnings("unused")
	public void validatecountNonCancelledAppointmentsForSession(ims.scheduling.vo.Sch_SessionRefVo session)
	{
		if(session == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'session' of type 'ims.scheduling.vo.Sch_SessionRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validateaddSlotToSession(ims.scheduling.vo.SessionTheatreVo voSession, ims.scheduling.vo.SessionParentChildSlotVo voSlot)
	{
		if(voSession == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'voSession' of type 'ims.scheduling.vo.SessionTheatreVo' cannot be null.");
		if(voSlot == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'voSlot' of type 'ims.scheduling.vo.SessionParentChildSlotVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppointmentTheatre(ims.scheduling.vo.Booking_AppointmentRefVo recordRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLastTheatreEROD(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLateralitySuitableForSurgegeryAssessmentProcedure(ims.RefMan.vo.SuitableForSurgeryAssessmentRefVo suitableRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetBookingCommentForAppt(ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveList(ims.RefMan.vo.PatientElectiveListRefVo electiveList)
	{
	}

	@SuppressWarnings("unused")
	public void validategetMedic(ims.core.resource.people.vo.HcpRefVo hcp, ims.core.clinical.vo.ServiceRefVo service)
	{
	}

	@SuppressWarnings("unused")
	public void validategetMedics(String name, ims.core.vo.lookups.MedicGrade medicGrade, ims.core.clinical.vo.ServiceRefVo service, Boolean isResponsibleHCP, Boolean isEndoscopist)
	{
	}

	@SuppressWarnings("unused")
	public void validategetMedicGrade(Integer hcpID)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistLocationsByParentLocation(ims.core.resource.place.vo.LocationRefVo parentLocation)
	{
	}
}
