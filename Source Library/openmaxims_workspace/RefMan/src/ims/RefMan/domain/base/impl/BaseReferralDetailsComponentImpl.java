//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseReferralDetailsComponentImpl extends DomainImpl implements ims.RefMan.domain.ReferralDetailsComponent, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.clinical.vo.ReferralLetterDetailsVo referralDetailsVo, ims.RefMan.vo.CatsReferralWizardVo catsReferralVo, Boolean bDiagnosticReferral, Boolean bRemoveRTTData)
	{
	}

	@SuppressWarnings("unused")
	public void validategetReferral(ims.core.clinical.vo.ReferralLetterDetailsRefVo referral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientGP(Integer patientId)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProcedures(String procedureName, ims.core.vo.ServiceLiteVo serviceLiteVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistOrganisations(ims.core.vo.OrgShortVo filter)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveCatsReferral(ims.RefMan.vo.CatsReferralWizardVo record)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistLocationByOrganisation(ims.core.resource.place.vo.OrganisationRefVo organisation, String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActiveContracts(ims.core.resource.place.vo.OrganisationRefVo voOrgRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAllContracts(ims.core.resource.place.vo.OrganisationRefVo voOrgRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetOrganisationByLocation(Integer locationId)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistActiveContractsForLocation(ims.core.resource.place.vo.LocationRefVo location)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistLocationServiceByContract(ims.core.configuration.vo.ContractConfigRefVo contract)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistLocationServiceByContractAndService(ims.core.configuration.vo.ContractConfigRefVo contract, ims.core.clinical.vo.ServiceRefVo service)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientSurgery(ims.core.patient.vo.PatientRefVo voPatientRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCCGCodeFromPostCode(String postCode)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientWithGp(ims.core.patient.vo.PatientRefVo patientRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatehasActiveReferralForService(ims.core.patient.vo.PatientRefVo patient, ims.core.clinical.vo.ServiceRefVo service, ims.framework.utils.Date firstDate, ims.framework.utils.Date lastDate)
	{
	}

	@SuppressWarnings("unused")
	public void validategetHCP(ims.vo.interfaces.IMos hcpRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServicesByContract(ims.core.configuration.vo.ContractConfigRefVo contractConfig)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServiceFunctionByService(ims.core.clinical.vo.ServiceRefVo service)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistLocationByContractAndService(ims.core.configuration.vo.ContractConfigRefVo contract, ims.core.clinical.vo.ServiceRefVo service)
	{
	}

	@SuppressWarnings("unused")
	public void validateisStale(ims.RefMan.vo.CatsReferralRefVo catsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServicesByContractAndWildcard(ims.core.configuration.vo.ContractConfigRefVo contractConfig, String wildcardService, Boolean isEmergencyAdmission)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCCGCodeForCurrentLocationOrg(ims.framework.interfaces.ILocation iLoc)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateReferralDate(ims.framework.utils.Date newDate, ims.RefMan.vo.CatsReferralRefVo referral)
	{
	}
}
