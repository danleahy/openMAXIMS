//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseElectiveListManagementImpl extends DomainImpl implements ims.RefMan.domain.ElectiveListManagement, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistElectiveListEntries(ims.RefMan.vo.SearchCriteriaForElectiveListManagementVo searchCriteria)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveListManagement(ims.RefMan.vo.PatientElectiveListRefVo patientElectiveList)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistServices(String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistConsultants(String name)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProcedures(String name, ims.RefMan.vo.lookups.WaitingCardAdmissionType admissionType)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistElectiveListConfigurations(String electiveListName)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistElectiveListConfigurations(String electiveListName, ims.core.clinical.vo.ServiceRefVo service, ims.core.resource.people.vo.HcpRefVo listOwner)
	{
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.RefMan.vo.PatientElectiveListForTCIDetailsDialogVo record)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElecticeList(ims.RefMan.vo.PatientElectiveListRefVo record)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralErod(ims.RefMan.vo.CatsReferralRefVo catsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetServiceAndActivityByAppt(ims.scheduling.vo.Booking_AppointmentRefVo appt, Boolean isFlexible)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSessionSlot(ims.scheduling.vo.Session_SlotRefVo slotRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.RefMan.vo.CatsReferralRefVo voReferralRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelAppt(ims.scheduling.vo.Booking_AppointmentVo appt, ims.chooseandbook.vo.lookups.ActionRequestType requestType, String requestSource)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralAdditionalInvStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralCancelStatus(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralForAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatient(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSessionShortVo(ims.scheduling.vo.Sch_SessionRefVo sessVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetBookingAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelReferralEROD(ims.RefMan.vo.CatsReferralRefVo catsReferral, ims.scheduling.vo.Booking_AppointmentRefVo apptRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTheatreAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTheatreServiceProcedureAndConsultant(ims.scheduling.vo.Booking_AppointmentRefVo voAppt)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralVo(ims.RefMan.vo.CatsReferralRefVo voCatsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetEpisodeofCareShortVo(ims.core.admin.vo.EpisodeOfCareRefVo episode)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextShortVo(ims.core.admin.vo.CareContextRefVo voCareContextRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveListDetailsToSaveVo(ims.RefMan.vo.PatientElectiveListRefVo record)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistWards(String strName, ims.core.resource.place.vo.LocationRefVo locationRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetLocation(Integer locationId)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTCIOutcomeToCancel(ims.RefMan.vo.TCIOutcomeForPatientElectiveListRefVo tciOutcome)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelTCI(ims.RefMan.vo.PatientElectiveListRefVo patientElectiveList, ims.RefMan.vo.TCIOutcomeForPatientElectiveListVo tciOutcome, ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralAdditionalInvStatus(ims.RefMan.vo.CatsReferralRefVo referral, ims.scheduling.vo.Booking_AppointmentRefVo appointment)
	{
	}
}
