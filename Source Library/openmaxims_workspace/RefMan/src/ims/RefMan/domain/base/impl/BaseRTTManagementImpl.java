//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseRTTManagementImpl extends DomainImpl implements ims.RefMan.domain.RTTManagement, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistReferralWithPathways(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validategetReferralDetails(ims.core.vo.ReferralLiteVo referral)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateReferralDate(ims.framework.utils.Date newDate, ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
	}

	@SuppressWarnings("unused")
	public void validateundoRTTEvent(ims.RefMan.vo.RTTManagementGridValueVo event)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientJourney(ims.pathways.vo.PatientPathwayJourneyRefVo profile, ims.pathways.configuration.vo.PathwayRefVo pathway)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCurrentPauseDetails(ims.core.admin.vo.ReferralRefVo ref)
	{
	}

	@SuppressWarnings("unused")
	public void validategetEventDescription(ims.pathways.vo.PathwaysRTTClockImpactRefVo impactRef)
	{
	}

	@SuppressWarnings("unused")
	public void validateremoveTargetFromScope(ims.pathways.vo.PatientJourneyTargetRefVo target, ims.pathways.vo.PatientPathwayJourneyRefVo journey)
	{
		if(target == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'target' of type 'ims.pathways.vo.PatientJourneyTargetRefVo' cannot be null.");
		if(journey == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'journey' of type 'ims.pathways.vo.PatientPathwayJourneyRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetPatientPathwaysAwaitingValidationWorklistVo(ims.pathways.vo.PatientPathwayJourneyRefVo patientJourneyRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePatientPathwaysAwaitingValidationWorklistVo(ims.pathways.vo.PatientPathwaysAwaitingValidationWorklistVo patientPathwaysAwaitingValidationWorklistVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatemarkReferralAsNotSubjectToRTT(ims.RefMan.vo.CatsReferralRefVo referral, Boolean markAllClocksAsRIE)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistAppointmentOutcomeDetails(ims.RefMan.vo.CatsReferralRefVo referral)
	{
	}

	@SuppressWarnings("unused")
	public void validateisClockImpactValidForAppointment(ims.pathways.vo.PathwaysRTTClockImpactRefVo clockImpact)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextShortVo(ims.RefMan.vo.CatsReferralRefVo referral)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdateRTTStatusAndClockWithNewDate(ims.framework.utils.DateTime newDateTime, ims.RefMan.vo.RTTManagementGridValueVo rowValue)
	{
	}
}
