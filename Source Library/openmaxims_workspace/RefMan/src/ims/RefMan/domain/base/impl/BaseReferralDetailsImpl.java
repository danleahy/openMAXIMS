//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseReferralDetailsImpl extends DomainImpl implements ims.RefMan.domain.ReferralDetails, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetReferralDetail(ims.RefMan.vo.CatsReferralRefVo catsReefrral)
	{
		if(catsReefrral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsReefrral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetReferralApptDetail(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
		if(catsReferral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsReferral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferral(ims.RefMan.vo.CatsReferralRefVo voCatsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveCatsReferral(ims.RefMan.vo.CatsReferralWizardVo record)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCatsReferralFlaggedForReview(ims.RefMan.vo.CatsReferralRefVo voCatsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientICPForCareContext(ims.core.admin.vo.CareContextRefVo ccRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetWorkAllocation(ims.RefMan.vo.CatsReferralRefVo voCatRefVo, ims.core.resource.people.vo.MemberOfStaffRefVo voMOS)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveWorkAllocation(ims.RefMan.vo.WorkAllocationVo voWorkAllocation)
	{
	}

	@SuppressWarnings("unused")
	public void validategetOnwardReferralByCatsReferral(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
		if(catsReferral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsReferral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validateupdateCatsReferralIsOnwardReferralFromTriage(ims.RefMan.vo.CatsReferralRefVo catsReferral)
	{
		if(catsReferral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'catsReferral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatesaveOnwardReferral(ims.RefMan.vo.OnwardReferralFromTriageVo voOnward)
	{
		if(voOnward == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'voOnward' of type 'ims.RefMan.vo.OnwardReferralFromTriageVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetChildCatsReferralForTransferOfCare(ims.RefMan.vo.CatsReferralRefVo catsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveChildCatsReferral(ims.RefMan.vo.CatsReferralForRequestServiceVo record, ims.RefMan.vo.CatsReferralRefVo parentCatsRef, ims.RefMan.vo.enums.ReferralAppointmentOutcomeAction action)
	{
	}

	@SuppressWarnings("unused")
	public void validategetParentCatsReferrall(ims.RefMan.vo.CatsReferralRefVo catsRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveConsultantUpgrade(ims.RefMan.vo.CatsReferralRefVo referral, ims.framework.utils.Date upgradeDate)
	{
		if(referral == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'referral' of type 'ims.RefMan.vo.CatsReferralRefVo' cannot be null.");
		if(upgradeDate == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'upgradeDate' of type 'ims.framework.utils.Date' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validatehasLocationDiagnosicContracts(ims.core.resource.place.vo.LocationRefVo location)
	{
	}

	@SuppressWarnings("unused")
	public void validatecreateCaseNoteFolderIfNone(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelAppt(ims.scheduling.vo.Booking_AppointmentVo appt, ims.chooseandbook.vo.lookups.ActionRequestType requestType, String requestSource)
	{
	}
}
