//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.catsreferralrequestservicedlg;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class cmbUrgencyComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.RefMan.vo.lookups.ReferralUrgency value)
		{
			return super.control.removeRow(value);
		}
		public ims.RefMan.vo.lookups.ReferralUrgency getValue()
		{
			return (ims.RefMan.vo.lookups.ReferralUrgency)super.control.getValue();
		}
		public void setValue(ims.RefMan.vo.lookups.ReferralUrgency value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbServiceComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.ServiceLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.ServiceLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.ServiceLiteVo getValue()
		{
			return (ims.core.vo.ServiceLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.ServiceLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class grdReqForServiceRow extends GridRowBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected grdReqForServiceRow(GridRow row)
		{
			super(row);
		}
		public void showOpened(int column)
		{
			super.row.showOpened(column);
		}
		public void setColRowUpdatedReadOnly(boolean value)
		{
			super.row.setReadOnly(0, value);
		}
		public boolean isColRowUpdatedReadOnly()
		{
			return super.row.isReadOnly(0);
		}
		public void showColRowUpdatedOpened()
		{
			super.row.showOpened(0);
		}
		public void setTooltipForColRowUpdated(String value)
		{
			super.row.setTooltip(0, value);
		}
		public boolean getColRowUpdated()
		{
			return ((Boolean)super.row.get(0)).booleanValue();
		}
		public void setColRowUpdated(boolean value)
		{
			super.row.set(0, new Boolean(value));
		}
		public void setCellColRowUpdatedTooltip(String value)
		{
			super.row.setTooltip(0, value);
		}
		public void setColServiceReadOnly(boolean value)
		{
			super.row.setReadOnly(1, value);
		}
		public boolean isColServiceReadOnly()
		{
			return super.row.isReadOnly(1);
		}
		public void showColServiceOpened()
		{
			super.row.showOpened(1);
		}
		public void setTooltipForColService(String value)
		{
			super.row.setTooltip(1, value);
		}
		public String getColService()
		{
			return (String)super.row.get(1);
		}
		public void setColService(String value)
		{
			super.row.set(1, value);
		}
		public void setCellColServiceTooltip(String value)
		{
			super.row.setTooltip(1, value);
		}
		public void setColUrgencyReadOnly(boolean value)
		{
			super.row.setReadOnly(2, value);
		}
		public boolean isColUrgencyReadOnly()
		{
			return super.row.isReadOnly(2);
		}
		public void showColUrgencyOpened()
		{
			super.row.showOpened(2);
		}
		public void setTooltipForColUrgency(String value)
		{
			super.row.setTooltip(2, value);
		}
		public String getColUrgency()
		{
			return (String)super.row.get(2);
		}
		public void setColUrgency(String value)
		{
			super.row.set(2, value);
		}
		public void setCellColUrgencyTooltip(String value)
		{
			super.row.setTooltip(2, value);
		}
		public void setColRespHCPReadOnly(boolean value)
		{
			super.row.setReadOnly(3, value);
		}
		public boolean isColRespHCPReadOnly()
		{
			return super.row.isReadOnly(3);
		}
		public void showColRespHCPOpened()
		{
			super.row.showOpened(3);
		}
		public void setTooltipForColRespHCP(String value)
		{
			super.row.setTooltip(3, value);
		}
		public String getColRespHCP()
		{
			return (String)super.row.get(3);
		}
		public void setColRespHCP(String value)
		{
			super.row.set(3, value);
		}
		public void setCellColRespHCPTooltip(String value)
		{
			super.row.setTooltip(3, value);
		}
		public void setColReferredByHCPReadOnly(boolean value)
		{
			super.row.setReadOnly(4, value);
		}
		public boolean isColReferredByHCPReadOnly()
		{
			return super.row.isReadOnly(4);
		}
		public void showColReferredByHCPOpened()
		{
			super.row.showOpened(4);
		}
		public void setTooltipForColReferredByHCP(String value)
		{
			super.row.setTooltip(4, value);
		}
		public String getColReferredByHCP()
		{
			return (String)super.row.get(4);
		}
		public void setColReferredByHCP(String value)
		{
			super.row.set(4, value);
		}
		public void setCellColReferredByHCPTooltip(String value)
		{
			super.row.setTooltip(4, value);
		}
		public ims.RefMan.vo.LinkedCatsReferralForOutcomeVo getValue()
		{
			return (ims.RefMan.vo.LinkedCatsReferralForOutcomeVo)super.row.getValue();
		}
		public void setValue(ims.RefMan.vo.LinkedCatsReferralForOutcomeVo value)
		{
			super.row.setValue(value);
		}
	}
	public static class grdReqForServiceRowCollection extends GridRowCollectionBridge
	{
		private static final long serialVersionUID = 1L;
		
		private grdReqForServiceRowCollection(GridRowCollection collection)
		{
			super(collection);
		}
		public grdReqForServiceRow get(int index)
		{
			return new grdReqForServiceRow(super.collection.get(index));
		}
		public grdReqForServiceRow newRow()
		{
			return new grdReqForServiceRow(super.collection.newRow());
		}
		public grdReqForServiceRow newRow(boolean autoSelect)
		{
			return new grdReqForServiceRow(super.collection.newRow(autoSelect));
		}
		public grdReqForServiceRow newRowAt(int index)
		{
			return new grdReqForServiceRow(super.collection.newRowAt(index));
		}
		public grdReqForServiceRow newRowAt(int index, boolean autoSelect)
		{
			return new grdReqForServiceRow(super.collection.newRowAt(index, autoSelect));
		}
	}
	public static class grdReqForServiceGrid extends GridBridge
	{
		private static final long serialVersionUID = 1L;
		
		private void addBoolColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean autoPostBack, int sortOrder, boolean canGrow)
		{
			super.grid.addBoolColumn(caption, captionAlignment, alignment, width, readOnly, autoPostBack, sortOrder, canGrow);
		}
		private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
		{
			super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
		}
		public ims.RefMan.vo.LinkedCatsReferralForOutcomeVoCollection getValues()
		{
			ims.RefMan.vo.LinkedCatsReferralForOutcomeVoCollection listOfValues = new ims.RefMan.vo.LinkedCatsReferralForOutcomeVoCollection();
			for(int x = 0; x < this.getRows().size(); x++)
			{
				listOfValues.add(this.getRows().get(x).getValue());
			}
			return listOfValues;
		}
		public ims.RefMan.vo.LinkedCatsReferralForOutcomeVo getValue()
		{
			return (ims.RefMan.vo.LinkedCatsReferralForOutcomeVo)super.grid.getValue();
		}
		public void setValue(ims.RefMan.vo.LinkedCatsReferralForOutcomeVo value)
		{
			super.grid.setValue(value);
		}
		public grdReqForServiceRow getSelectedRow()
		{
			return super.grid.getSelectedRow() == null ? null : new grdReqForServiceRow(super.grid.getSelectedRow());
		}
		public int getSelectedRowIndex()
		{
			return super.grid.getSelectedRowIndex();
		}
		public grdReqForServiceRowCollection getRows()
		{
			return new grdReqForServiceRowCollection(super.grid.getRows());
		}
		public grdReqForServiceRow getRowByValue(ims.RefMan.vo.LinkedCatsReferralForOutcomeVo value)
		{
			GridRow row = super.grid.getRowByValue(value);
			return row == null?null:new grdReqForServiceRow(row);
		}
		public void setColRowUpdatedHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(0, value);
		}
		public String getColRowUpdatedHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(0);
		}
		public void setColServiceHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(1, value);
		}
		public String getColServiceHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(1);
		}
		public void setColUrgencyHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(2, value);
		}
		public String getColUrgencyHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(2);
		}
		public void setColRespHCPHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(3, value);
		}
		public String getColRespHCPHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(3);
		}
		public void setColReferredByHCPHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(4, value);
		}
		public String getColReferredByHCPHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(4);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.RefMan.vo.CatsReferralRefVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.RefMan.vo.CatsReferralRefVo' of the global context variable 'RefMan.CatsReferral' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(640, 384);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Custom Controls
		ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 124, 296, 516, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ims.framework.FormUiLogic m_ccReferredByHcpForm = loader.loadComponent(102256, appForm, startControlID * 10 + 1000, anchoringHelper1.getSize(), instance1, startTabIndex.intValue() + 6, skipContextValidation);
		//ims.framework.Control m_ccReferredByHcpControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(124), new Integer(296), new Integer(516), new Integer(20), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 6), m_ccReferredByHcpForm, instance1 } );
		ims.framework.Control m_ccReferredByHcpControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1001),  new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 6), m_ccReferredByHcpForm, instance1, Boolean.FALSE } );
		super.addControl(m_ccReferredByHcpControl);
		Menu[] menus1 = m_ccReferredByHcpForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus1.length; x++)
		{
			form.registerMenu(menus1[x]);
		}
		ims.framework.CustomComponent instance2 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 124, 264, 516, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ims.framework.FormUiLogic m_ccResponsibleConsultantForm = loader.loadComponent(102256, appForm, startControlID * 10 + 2000, anchoringHelper2.getSize(), instance2, startTabIndex.intValue() + 4, skipContextValidation);
		//ims.framework.Control m_ccResponsibleConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(124), new Integer(264), new Integer(516), new Integer(20), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 4), m_ccResponsibleConsultantForm, instance2 } );
		ims.framework.Control m_ccResponsibleConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1003),  new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, new Integer(startTabIndex.intValue() + 4), m_ccResponsibleConsultantForm, instance2, Boolean.FALSE } );
		super.addControl(m_ccResponsibleConsultantControl);
		Menu[] menus2 = m_ccResponsibleConsultantForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus2.length; x++)
		{
			form.registerMenu(menus2[x]);
		}

		// Label Controls
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 16, 298, 103, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Referred By HCP:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 16, 234, 55, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Urgency:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 16, 266, 104, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Responsible HCP:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 16, 202, 50, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Service:", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 288, 356, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), new Integer(startTabIndex.intValue() + 13), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Close", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 96, 328, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Edit", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 16, 328, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "New", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 232, 328, 200, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), new Integer(startTabIndex.intValue() + 10), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Mark as RIE", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 549, 328, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 469, 328, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), new Integer(startTabIndex.intValue() + 11), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 124, 232, 500, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbUrgencyTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbUrgencyTemp);
		cmbUrgencyComboBox cmbUrgency = (cmbUrgencyComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbUrgencyComboBox.class, m_cmbUrgencyTemp);
		super.addComboBox(cmbUrgency);
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 124, 200, 500, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbServiceTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbServiceTemp);
		cmbServiceComboBox cmbService = (cmbServiceComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbServiceComboBox.class, m_cmbServiceTemp);
		super.addComboBox(cmbService);

		// Grid Controls
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 16, 8, 608, 176, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		Grid m_grdReqForServiceTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.READONLY, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, Boolean.FALSE, new Integer(24), Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.TRUE});
		addControl(m_grdReqForServiceTemp);
		grdReqForServiceGrid grdReqForService = (grdReqForServiceGrid)GridFlyweightFactory.getInstance().createGridBridge(grdReqForServiceGrid.class, m_grdReqForServiceTemp);
		grdReqForService.addBoolColumn(" ", 0, 0, 0, true, false, 0, true);
		grdReqForService.addStringColumn("Service", 0, 0, 200, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdReqForService.addStringColumn("Urgency", 0, 0, 120, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdReqForService.addStringColumn("Resp. HCP", 0, 0, 150, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdReqForService.addStringColumn("Referred by HCP", 0, 0, -1, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		super.addGrid(grdReqForService);
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}
	public ims.core.forms.mosquery.IComponent ccReferredByHcp()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
	}
	public void setccReferredByHcpValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
	}
	public void setccReferredByHcpVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(0)).setVisible(value);
	}
	public boolean isccReferredByHcpVisible()
	{
		return ((ims.framework.Control)super.getControl(0)).isVisible();
	}
	public void setccReferredByHcpEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(0)).setEnabled(value);
	}
	public boolean isccReferredByHcpEnabled()
	{
		return ((ims.framework.Control)super.getControl(0)).isEnabled();
	}
	public ims.core.forms.mosquery.IComponent ccResponsibleConsultant()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(1)).getLogic();
	}
	public void setccResponsibleConsultantValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(1)).setValueChangedEvent(delegate);
	}
	public void setccResponsibleConsultantVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(1)).setVisible(value);
	}
	public boolean isccResponsibleConsultantVisible()
	{
		return ((ims.framework.Control)super.getControl(1)).isVisible();
	}
	public void setccResponsibleConsultantEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(1)).setEnabled(value);
	}
	public boolean isccResponsibleConsultantEnabled()
	{
		return ((ims.framework.Control)super.getControl(1)).isEnabled();
	}
	public Button btnClose()
	{
		return (Button)super.getControl(6);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(7);
	}
	public Button btnNew()
	{
		return (Button)super.getControl(8);
	}
	public Button btnRemove()
	{
		return (Button)super.getControl(9);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(10);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(11);
	}
	public cmbUrgencyComboBox cmbUrgency()
	{
		return (cmbUrgencyComboBox)super.getComboBox(0);
	}
	public cmbServiceComboBox cmbService()
	{
		return (cmbServiceComboBox)super.getComboBox(1);
	}
	public grdReqForServiceGrid grdReqForService()
	{
		return (grdReqForServiceGrid)super.getGrid(0);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
			Scheduling = new SchedulingForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				RieConfirmationDialog = new LocalFormName(102370);
			}
			public final FormName RieConfirmationDialog;
		}
		public final class SchedulingForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private SchedulingForms()
			{
				AppointmentOutcomeDialog = new LocalFormName(114171);
			}
			public final FormName AppointmentOutcomeDialog;
		}

		public CoreForms Core;
		public SchedulingForms Scheduling;
	}

	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_ParentCatsReferral = new ims.framework.ContextVariable("ParentCatsReferral", prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParentCatsReferral_" + componentIdentifier + "");
			cxl_AppointmentOutcome = new ims.framework.ContextVariable("AppointmentOutcome", prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__AppointmentOutcome_" + componentIdentifier + "");
			cxl_CommitMode = new ims.framework.ContextVariable("CommitMode", prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__CommitMode_" + componentIdentifier + "");
			cxl_ReadOnlyMode = new ims.framework.ContextVariable("ReadOnlyMode", prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ReadOnlyMode_" + componentIdentifier + "");
			cxl_ParrentReferralService = new ims.framework.ContextVariable("ParrentReferralService", prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier + "");
			cxl_SelectedRecord = new ims.framework.ContextVariable("SelectedRecord", prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__SelectedRecord_" + componentIdentifier + "");
			cxl_RespHCPColumnSortOrder = new ims.framework.ContextVariable("RespHCPColumnSortOrder", prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__RespHCPColumnSortOrder_" + componentIdentifier + "");
			cxl_ReferredByHCPColumnSortOrder = new ims.framework.ContextVariable("ReferredByHCPColumnSortOrder", prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ReferredByHCPColumnSortOrder_" + componentIdentifier + "");
		}
		
		public boolean getParentCatsReferralIsNotNull()
		{
			return !cxl_ParentCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralMasterVo getParentCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralMasterVo)cxl_ParentCatsReferral.getValue(context);
		}
		public void setParentCatsReferral(ims.RefMan.vo.CatsReferralMasterVo value)
		{
			cxl_ParentCatsReferral.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ParentCatsReferral = null;
		public boolean getAppointmentOutcomeIsNotNull()
		{
			return !cxl_AppointmentOutcome.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentRefVo getAppointmentOutcome()
		{
			return (ims.scheduling.vo.Booking_AppointmentRefVo)cxl_AppointmentOutcome.getValue(context);
		}
		public void setAppointmentOutcome(ims.scheduling.vo.Booking_AppointmentRefVo value)
		{
			if(value != null && (value.getBoId() == null || value.getBoId().intValue() < 1))
				throw new ims.framework.exceptions.CodingRuntimeException("Invalid domain object id for 'AppointmentOutcome' RefVo context variable.");
			if(value == null)
				cxl_AppointmentOutcome.setValue(context, null);
			else
				cxl_AppointmentOutcome.setValue(context, new ims.scheduling.vo.Booking_AppointmentRefVo(value.getBoId(), value.getBoVersion()));
		}
		private ims.framework.ContextVariable cxl_AppointmentOutcome = null;
		public boolean getCommitModeIsNotNull()
		{
			return !cxl_CommitMode.getValueIsNull(context);
		}
		public ims.admin.vo.enums.CommitMode getCommitMode()
		{
			return (ims.admin.vo.enums.CommitMode)cxl_CommitMode.getValue(context);
		}
		public void setCommitMode(ims.admin.vo.enums.CommitMode value)
		{
			cxl_CommitMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CommitMode = null;
		public boolean getReadOnlyModeIsNotNull()
		{
			return !cxl_ReadOnlyMode.getValueIsNull(context);
		}
		public Boolean getReadOnlyMode()
		{
			return (Boolean)cxl_ReadOnlyMode.getValue(context);
		}
		public void setReadOnlyMode(Boolean value)
		{
			cxl_ReadOnlyMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ReadOnlyMode = null;
		public boolean getParrentReferralServiceIsNotNull()
		{
			return !cxl_ParrentReferralService.getValueIsNull(context);
		}
		public ims.core.vo.ServiceLiteVo getParrentReferralService()
		{
			return (ims.core.vo.ServiceLiteVo)cxl_ParrentReferralService.getValue(context);
		}
		public void setParrentReferralService(ims.core.vo.ServiceLiteVo value)
		{
			cxl_ParrentReferralService.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ParrentReferralService = null;
		public boolean getSelectedRecordIsNotNull()
		{
			return !cxl_SelectedRecord.getValueIsNull(context);
		}
		public ims.RefMan.vo.LinkedCatsReferralForOutcomeVo getSelectedRecord()
		{
			return (ims.RefMan.vo.LinkedCatsReferralForOutcomeVo)cxl_SelectedRecord.getValue(context);
		}
		public void setSelectedRecord(ims.RefMan.vo.LinkedCatsReferralForOutcomeVo value)
		{
			cxl_SelectedRecord.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedRecord = null;
		public boolean getRespHCPColumnSortOrderIsNotNull()
		{
			return !cxl_RespHCPColumnSortOrder.getValueIsNull(context);
		}
		public  ims.framework.enumerations.SortOrder getRespHCPColumnSortOrder()
		{
			return ( ims.framework.enumerations.SortOrder)cxl_RespHCPColumnSortOrder.getValue(context);
		}
		public void setRespHCPColumnSortOrder( ims.framework.enumerations.SortOrder value)
		{
			cxl_RespHCPColumnSortOrder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_RespHCPColumnSortOrder = null;
		public boolean getReferredByHCPColumnSortOrderIsNotNull()
		{
			return !cxl_ReferredByHCPColumnSortOrder.getValueIsNull(context);
		}
		public  ims.framework.enumerations.SortOrder getReferredByHCPColumnSortOrder()
		{
			return ( ims.framework.enumerations.SortOrder)cxl_ReferredByHCPColumnSortOrder.getValue(context);
		}
		public void setReferredByHCPColumnSortOrder( ims.framework.enumerations.SortOrder value)
		{
			cxl_ReferredByHCPColumnSortOrder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ReferredByHCPColumnSortOrder = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[164];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParentCatsReferral_" + componentIdentifier, "BO-1004100035-ID", "ID_CatsReferral");
			fields[145] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParentCatsReferral_" + componentIdentifier, "BO-1004100035-PATIENT", "Patient");
			fields[146] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParentCatsReferral_" + componentIdentifier, "BO-1004100035-RTTCLOCKIMPACT", "RTTClockImpact");
			fields[147] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParentCatsReferral_" + componentIdentifier, "BO-1004100035-URGENCY", "Urgency");
			fields[148] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParentCatsReferral_" + componentIdentifier, "BO-1004100035-PATHWAYID", "PathwayID");
			fields[149] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__AppointmentOutcome_" + componentIdentifier, "BO-1055100007-ID", "ID_Booking_Appointment");
			fields[150] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-ID", "ID_Service");
			fields[151] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-SERVICENAME", "ServiceName");
			fields[152] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-SERVICECATEGORY", "ServiceCategory");
			fields[153] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-CANBESCHEDULED", "CanBeScheduled");
			fields[154] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-SPECIALTY", "Specialty");
			fields[155] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-EXPECTEDTURNAROUND", "ExpectedTurnaround");
			fields[156] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-TURNAROUNDMEASURE", "TurnaroundMeasure");
			fields[157] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-MATERNITYINDICATOR", "MaternityIndicator");
			fields[158] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-ISACTIVE", "IsActive");
			fields[159] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-ISSUBJECTTORTTCLOCK", "IsSubjectToRTTClock");
			fields[160] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-DIRECTSELFREFERRALSACCEPTED", "DirectSelfReferralsAccepted");
			fields[161] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__ParrentReferralService_" + componentIdentifier, "BO-1003100032-ISPREASSESSMENTCOMPLETIONEXEMPT", "IsPreAssessmentCompletionExempt");
			fields[162] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1096100076-ID", "ID_LinkedCatsReferral");
			fields[163] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.CatsReferralRequestServiceDlg.__internal_x_context__SelectedRecord_" + componentIdentifier, "BO-1096100076-REFERRALRELATIONTYPE", "ReferralRelationType");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
