//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.referralstatuslist;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		RefMan = new RefManContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getPatientToBeDisplayedIsNotNull()
		{
			return !cx_CorePatientToBeDisplayed.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientToBeDisplayed()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientToBeDisplayed.getValue(context);
		}
		public void setPatientToBeDisplayed(ims.core.vo.PatientShort value)
		{
			cx_CorePatientToBeDisplayed.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientToBeDisplayed = new ims.framework.ContextVariable("Core.PatientToBeDisplayed", "_cv_Core.PatientToBeDisplayed");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getHtml2ViewIsNotNull()
		{
			return !cx_CoreHtml2View.getValueIsNull(context);
		}
		public String getHtml2View()
		{
			return (String)cx_CoreHtml2View.getValue(context);
		}
		public void setHtml2View(String value)
		{
			cx_CoreHtml2View.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreHtml2View = new ims.framework.ContextVariable("Core.Html2View", "_cv_Core.Html2View");
		public boolean getSelectLookupTypeIsNotNull()
		{
			return !cx_CoreSelectLookupType.getValueIsNull(context);
		}
		public ims.vo.LookupTypeVo getSelectLookupType()
		{
			return (ims.vo.LookupTypeVo)cx_CoreSelectLookupType.getValue(context);
		}
		public void setSelectLookupType(ims.vo.LookupTypeVo value)
		{
			cx_CoreSelectLookupType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreSelectLookupType = new ims.framework.ContextVariable("Core.SelectLookupType", "_cv_Core.SelectLookupType");
		public boolean getSelectedLookupInstancesIsNotNull()
		{
			return !cx_CoreSelectedLookupInstances.getValueIsNull(context);
		}
		public ims.vo.LookupInstanceCollection getSelectedLookupInstances()
		{
			return (ims.vo.LookupInstanceCollection)cx_CoreSelectedLookupInstances.getValue(context);
		}
		public void setSelectedLookupInstances(ims.vo.LookupInstanceCollection value)
		{
			cx_CoreSelectedLookupInstances.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreSelectedLookupInstances = new ims.framework.ContextVariable("Core.SelectedLookupInstances", "_cv_Core.SelectedLookupInstances");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getReferralStatusListFilterIsNotNull()
		{
			return !cx_RefManReferralStatusListFilter.getValueIsNull(context);
		}
		public ims.RefMan.vo.CATSReferralFilterVo getReferralStatusListFilter()
		{
			return (ims.RefMan.vo.CATSReferralFilterVo)cx_RefManReferralStatusListFilter.getValue(context);
		}
		public void setReferralStatusListFilter(ims.RefMan.vo.CATSReferralFilterVo value)
		{
			cx_RefManReferralStatusListFilter.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralStatusListFilter = new ims.framework.ContextVariable("RefMan.ReferralStatusListFilter", "_cvp_RefMan.ReferralStatusListFilter");
		public boolean getReferralReviewDetailsModeIsNotNull()
		{
			return !cx_RefManReferralReviewDetailsMode.getValueIsNull(context);
		}
		public ims.RefMan.vo.enums.ReferralReviewDetail getReferralReviewDetailsMode()
		{
			return (ims.RefMan.vo.enums.ReferralReviewDetail)cx_RefManReferralReviewDetailsMode.getValue(context);
		}
		public void setReferralReviewDetailsMode(ims.RefMan.vo.enums.ReferralReviewDetail value)
		{
			cx_RefManReferralReviewDetailsMode.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralReviewDetailsMode = new ims.framework.ContextVariable("RefMan.ReferralReviewDetailsMode", "_cv_RefMan.ReferralReviewDetailsMode");
		public boolean getIsClinicalContactStartedIsNotNull()
		{
			return !cx_RefManIsClinicalContactStarted.getValueIsNull(context);
		}
		public Boolean getIsClinicalContactStarted()
		{
			return (Boolean)cx_RefManIsClinicalContactStarted.getValue(context);
		}
		public void setIsClinicalContactStarted(Boolean value)
		{
			cx_RefManIsClinicalContactStarted.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManIsClinicalContactStarted = new ims.framework.ContextVariable("RefMan.IsClinicalContactStarted", "_cv_RefMan.IsClinicalContactStarted");
		public boolean getIsConsultationStartedIsNotNull()
		{
			return !cx_RefManIsConsultationStarted.getValueIsNull(context);
		}
		public Boolean getIsConsultationStarted()
		{
			return (Boolean)cx_RefManIsConsultationStarted.getValue(context);
		}
		public void setIsConsultationStarted(Boolean value)
		{
			cx_RefManIsConsultationStarted.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManIsConsultationStarted = new ims.framework.ContextVariable("RefMan.IsConsultationStarted", "_cv_RefMan.IsConsultationStarted");
		public boolean getIsProviderCancellationIsNotNull()
		{
			return !cx_RefManIsProviderCancellation.getValueIsNull(context);
		}
		public Boolean getIsProviderCancellation()
		{
			return (Boolean)cx_RefManIsProviderCancellation.getValue(context);
		}
		public void setIsProviderCancellation(Boolean value)
		{
			cx_RefManIsProviderCancellation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManIsProviderCancellation = new ims.framework.ContextVariable("RefMan.IsProviderCancellation", "_cvp_RefMan.IsProviderCancellation");
		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");
		public boolean getOpenApptAndInvTabIsNotNull()
		{
			return !cx_RefManOpenApptAndInvTab.getValueIsNull(context);
		}
		public Boolean getOpenApptAndInvTab()
		{
			return (Boolean)cx_RefManOpenApptAndInvTab.getValue(context);
		}
		public void setOpenApptAndInvTab(Boolean value)
		{
			cx_RefManOpenApptAndInvTab.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManOpenApptAndInvTab = new ims.framework.ContextVariable("RefMan.OpenApptAndInvTab", "_cv_RefMan.OpenApptAndInvTab");
		public boolean getEndOfCareDateIsNotNull()
		{
			return !cx_RefManEndOfCareDate.getValueIsNull(context);
		}
		public ims.framework.utils.Date getEndOfCareDate()
		{
			return (ims.framework.utils.Date)cx_RefManEndOfCareDate.getValue(context);
		}
		public void setEndOfCareDate(ims.framework.utils.Date value)
		{
			cx_RefManEndOfCareDate.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManEndOfCareDate = new ims.framework.ContextVariable("RefMan.EndOfCareDate", "_cv_RefMan.EndOfCareDate");
		public boolean getReferralContractTypeForPatientIsNotNull()
		{
			return !cx_RefManReferralContractTypeForPatient.getValueIsNull(context);
		}
		public ims.core.vo.lookups.ReferralManagementContractType getReferralContractTypeForPatient()
		{
			return (ims.core.vo.lookups.ReferralManagementContractType)cx_RefManReferralContractTypeForPatient.getValue(context);
		}
		public void setReferralContractTypeForPatient(ims.core.vo.lookups.ReferralManagementContractType value)
		{
			cx_RefManReferralContractTypeForPatient.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralContractTypeForPatient = new ims.framework.ContextVariable("RefMan.ReferralContractTypeForPatient", "_cvp_RefMan.ReferralContractTypeForPatient");
		public boolean getDiagnosticReferralForApplicationIsNotNull()
		{
			return !cx_RefManDiagnosticReferralForApplication.getValueIsNull(context);
		}
		public Boolean getDiagnosticReferralForApplication()
		{
			return (Boolean)cx_RefManDiagnosticReferralForApplication.getValue(context);
		}
		public void setDiagnosticReferralForApplication(Boolean value)
		{
			cx_RefManDiagnosticReferralForApplication.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManDiagnosticReferralForApplication = new ims.framework.ContextVariable("RefMan.DiagnosticReferralForApplication", "_cvp_RefMan.DiagnosticReferralForApplication");
		public boolean getSpecimenWorkListItemForReportsIsNotNull()
		{
			return !cx_RefManSpecimenWorkListItemForReports.getValueIsNull(context);
		}
		public ims.ocrr.vo.SpecimenWorkListItemVo getSpecimenWorkListItemForReports()
		{
			return (ims.ocrr.vo.SpecimenWorkListItemVo)cx_RefManSpecimenWorkListItemForReports.getValue(context);
		}
		public void setSpecimenWorkListItemForReports(ims.ocrr.vo.SpecimenWorkListItemVo value)
		{
			cx_RefManSpecimenWorkListItemForReports.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSpecimenWorkListItemForReports = new ims.framework.ContextVariable("RefMan.SpecimenWorkListItemForReports", "_cv_RefMan.SpecimenWorkListItemForReports");
		public boolean getRejectionReasonIsNotNull()
		{
			return !cx_RefManRejectionReason.getValueIsNull(context);
		}
		public ims.RefMan.vo.RejectReferralVo getRejectionReason()
		{
			return (ims.RefMan.vo.RejectReferralVo)cx_RefManRejectionReason.getValue(context);
		}
		public void setRejectionReason(ims.RefMan.vo.RejectReferralVo value)
		{
			cx_RefManRejectionReason.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManRejectionReason = new ims.framework.ContextVariable("RefMan.RejectionReason", "_cv_RefMan.RejectionReason");
		public boolean getReferralOutcomeReportTypeIsNotNull()
		{
			return !cx_RefManReferralOutcomeReportType.getValueIsNull(context);
		}
		public ims.RefMan.vo.enums.ReferralOutcomeReportType getReferralOutcomeReportType()
		{
			return (ims.RefMan.vo.enums.ReferralOutcomeReportType)cx_RefManReferralOutcomeReportType.getValue(context);
		}
		public void setReferralOutcomeReportType(ims.RefMan.vo.enums.ReferralOutcomeReportType value)
		{
			cx_RefManReferralOutcomeReportType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralOutcomeReportType = new ims.framework.ContextVariable("RefMan.ReferralOutcomeReportType", "_cv_RefMan.ReferralOutcomeReportType");
		public boolean getTriageNextPatientIsNotNull()
		{
			return !cx_RefManTriageNextPatient.getValueIsNull(context);
		}
		public Boolean getTriageNextPatient()
		{
			return (Boolean)cx_RefManTriageNextPatient.getValue(context);
		}
		public void setTriageNextPatient(Boolean value)
		{
			cx_RefManTriageNextPatient.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManTriageNextPatient = new ims.framework.ContextVariable("RefMan.TriageNextPatient", "_cv_RefMan.TriageNextPatient");
		public boolean getPrintRejectionLettersIsNotNull()
		{
			return !cx_RefManPrintRejectionLetters.getValueIsNull(context);
		}
		public Boolean getPrintRejectionLetters()
		{
			return (Boolean)cx_RefManPrintRejectionLetters.getValue(context);
		}
		public void setPrintRejectionLetters(Boolean value)
		{
			cx_RefManPrintRejectionLetters.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManPrintRejectionLetters = new ims.framework.ContextVariable("RefMan.PrintRejectionLetters", "_cv_RefMan.PrintRejectionLetters");
		public boolean getChosenTimeIsNotNull()
		{
			return !cx_RefManChosenTime.getValueIsNull(context);
		}
		public ims.framework.utils.Time getChosenTime()
		{
			return (ims.framework.utils.Time)cx_RefManChosenTime.getValue(context);
		}
		public void setChosenTime(ims.framework.utils.Time value)
		{
			cx_RefManChosenTime.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManChosenTime = new ims.framework.ContextVariable("RefMan.ChosenTime", "_cv_RefMan.ChosenTime");
		public boolean getReferralServiceSearchListIsNotNull()
		{
			return !cx_RefManReferralServiceSearchList.getValueIsNull(context);
		}
		public ims.core.vo.ServiceShortVoCollection getReferralServiceSearchList()
		{
			return (ims.core.vo.ServiceShortVoCollection)cx_RefManReferralServiceSearchList.getValue(context);
		}
		public void setReferralServiceSearchList(ims.core.vo.ServiceShortVoCollection value)
		{
			cx_RefManReferralServiceSearchList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralServiceSearchList = new ims.framework.ContextVariable("RefMan.ReferralServiceSearchList", "_cv_RefMan.ReferralServiceSearchList");
		public boolean getAwaitingTriageReferralsIsNotNull()
		{
			return !cx_RefManAwaitingTriageReferrals.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVoCollection getAwaitingTriageReferrals()
		{
			return (ims.RefMan.vo.CatsReferralRefVoCollection)cx_RefManAwaitingTriageReferrals.getValue(context);
		}
		public void setAwaitingTriageReferrals(ims.RefMan.vo.CatsReferralRefVoCollection value)
		{
			cx_RefManAwaitingTriageReferrals.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManAwaitingTriageReferrals = new ims.framework.ContextVariable("RefMan.AwaitingTriageReferrals", "_cv_RefMan.AwaitingTriageReferrals");

		private ims.framework.Context context;
	}

	public CoreContext Core;
	public RefManContext RefMan;
}
