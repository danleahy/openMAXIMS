//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.maintenance;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		ChooseAndBook = new ChooseAndBookContext(context);
		RefMan = new RefManContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getApptCancelStatusIsNotNull()
		{
			return !cx_SchedulingApptCancelStatus.getValueIsNull(context);
		}
		public ims.scheduling.vo.Appointment_StatusVo getApptCancelStatus()
		{
			return (ims.scheduling.vo.Appointment_StatusVo)cx_SchedulingApptCancelStatus.getValue(context);
		}
		public void setApptCancelStatus(ims.scheduling.vo.Appointment_StatusVo value)
		{
			cx_SchedulingApptCancelStatus.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingApptCancelStatus = new ims.framework.ContextVariable("Scheduling.ApptCancelStatus", "_cv_Scheduling.ApptCancelStatus");
		public boolean getBookingActivityIsNotNull()
		{
			return !cx_SchedulingBookingActivity.getValueIsNull(context);
		}
		public ims.core.resource.place.vo.ActivityRefVo getBookingActivity()
		{
			return (ims.core.resource.place.vo.ActivityRefVo)cx_SchedulingBookingActivity.getValue(context);
		}
		public void setBookingActivity(ims.core.resource.place.vo.ActivityRefVo value)
		{
			cx_SchedulingBookingActivity.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingActivity = new ims.framework.ContextVariable("Scheduling.BookingActivity", "_cv_Scheduling.BookingActivity");
		public boolean getBookingServiceIsNotNull()
		{
			return !cx_SchedulingBookingService.getValueIsNull(context);
		}
		public ims.core.clinical.vo.ServiceRefVo getBookingService()
		{
			return (ims.core.clinical.vo.ServiceRefVo)cx_SchedulingBookingService.getValue(context);
		}
		public void setBookingService(ims.core.clinical.vo.ServiceRefVo value)
		{
			cx_SchedulingBookingService.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingService = new ims.framework.ContextVariable("Scheduling.BookingService", "_cv_Scheduling.BookingService");

		private ims.framework.Context context;
	}
	public final class ChooseAndBookContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ChooseAndBookContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getisCABApptIsNotNull()
		{
			return !cx_ChooseAndBookisCABAppt.getValueIsNull(context);
		}
		public Boolean getisCABAppt()
		{
			return (Boolean)cx_ChooseAndBookisCABAppt.getValue(context);
		}
		public void setisCABAppt(Boolean value)
		{
			cx_ChooseAndBookisCABAppt.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ChooseAndBookisCABAppt = new ims.framework.ContextVariable("ChooseAndBook.isCABAppt", "_cv_ChooseAndBook.isCABAppt");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getMaintenanceSearchCriteriaIsNotNull()
		{
			return !cx_RefManMaintenanceSearchCriteria.getValueIsNull(context);
		}
		public ims.RefMan.vo.MaintenanceSearchCriteriaVo getMaintenanceSearchCriteria()
		{
			return (ims.RefMan.vo.MaintenanceSearchCriteriaVo)cx_RefManMaintenanceSearchCriteria.getValue(context);
		}
		public void setMaintenanceSearchCriteria(ims.RefMan.vo.MaintenanceSearchCriteriaVo value)
		{
			cx_RefManMaintenanceSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManMaintenanceSearchCriteria = new ims.framework.ContextVariable("RefMan.MaintenanceSearchCriteria", "_cvp_RefMan.MaintenanceSearchCriteria");
		public boolean getMaintenanceCancelExSearchCriteriaIsNotNull()
		{
			return !cx_RefManMaintenanceCancelExSearchCriteria.getValueIsNull(context);
		}
		public ims.RefMan.vo.MaintenanceSearchCriteriaVo getMaintenanceCancelExSearchCriteria()
		{
			return (ims.RefMan.vo.MaintenanceSearchCriteriaVo)cx_RefManMaintenanceCancelExSearchCriteria.getValue(context);
		}
		public void setMaintenanceCancelExSearchCriteria(ims.RefMan.vo.MaintenanceSearchCriteriaVo value)
		{
			cx_RefManMaintenanceCancelExSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManMaintenanceCancelExSearchCriteria = new ims.framework.ContextVariable("RefMan.MaintenanceCancelExSearchCriteria", "_cvp_RefMan.MaintenanceCancelExSearchCriteria");
		public boolean getMaintenancePDSRequestSearchCriteriaIsNotNull()
		{
			return !cx_RefManMaintenancePDSRequestSearchCriteria.getValueIsNull(context);
		}
		public ims.RefMan.vo.MaintenanceSearchCriteriaVo getMaintenancePDSRequestSearchCriteria()
		{
			return (ims.RefMan.vo.MaintenanceSearchCriteriaVo)cx_RefManMaintenancePDSRequestSearchCriteria.getValue(context);
		}
		public void setMaintenancePDSRequestSearchCriteria(ims.RefMan.vo.MaintenanceSearchCriteriaVo value)
		{
			cx_RefManMaintenancePDSRequestSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManMaintenancePDSRequestSearchCriteria = new ims.framework.ContextVariable("RefMan.MaintenancePDSRequestSearchCriteria", "_cvp_RefMan.MaintenancePDSRequestSearchCriteria");
		public boolean getMaintenanceSDSRequestSearchCriteriaIsNotNull()
		{
			return !cx_RefManMaintenanceSDSRequestSearchCriteria.getValueIsNull(context);
		}
		public ims.RefMan.vo.MaintenanceSearchCriteriaVo getMaintenanceSDSRequestSearchCriteria()
		{
			return (ims.RefMan.vo.MaintenanceSearchCriteriaVo)cx_RefManMaintenanceSDSRequestSearchCriteria.getValue(context);
		}
		public void setMaintenanceSDSRequestSearchCriteria(ims.RefMan.vo.MaintenanceSearchCriteriaVo value)
		{
			cx_RefManMaintenanceSDSRequestSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManMaintenanceSDSRequestSearchCriteria = new ims.framework.ContextVariable("RefMan.MaintenanceSDSRequestSearchCriteria", "_cvp_RefMan.MaintenanceSDSRequestSearchCriteria");
		public boolean getMaintenanceSlotPollsSearchCriteriaIsNotNull()
		{
			return !cx_RefManMaintenanceSlotPollsSearchCriteria.getValueIsNull(context);
		}
		public ims.RefMan.vo.MaintenanceSearchCriteriaVo getMaintenanceSlotPollsSearchCriteria()
		{
			return (ims.RefMan.vo.MaintenanceSearchCriteriaVo)cx_RefManMaintenanceSlotPollsSearchCriteria.getValue(context);
		}
		public void setMaintenanceSlotPollsSearchCriteria(ims.RefMan.vo.MaintenanceSearchCriteriaVo value)
		{
			cx_RefManMaintenanceSlotPollsSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManMaintenanceSlotPollsSearchCriteria = new ims.framework.ContextVariable("RefMan.MaintenanceSlotPollsSearchCriteria", "_cvp_RefMan.MaintenanceSlotPollsSearchCriteria");
		public boolean getLinkedAppointmentsCollectionIsNotNull()
		{
			return !cx_RefManLinkedAppointmentsCollection.getValueIsNull(context);
		}
		public ims.scheduling.vo.BookingAppointmentForLinkedAppointmentsVoCollection getLinkedAppointmentsCollection()
		{
			return (ims.scheduling.vo.BookingAppointmentForLinkedAppointmentsVoCollection)cx_RefManLinkedAppointmentsCollection.getValue(context);
		}
		public void setLinkedAppointmentsCollection(ims.scheduling.vo.BookingAppointmentForLinkedAppointmentsVoCollection value)
		{
			cx_RefManLinkedAppointmentsCollection.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManLinkedAppointmentsCollection = new ims.framework.ContextVariable("RefMan.LinkedAppointmentsCollection", "_cv_RefMan.LinkedAppointmentsCollection");

		private ims.framework.Context context;
	}

	public SchedulingContext Scheduling;
	public ChooseAndBookContext ChooseAndBook;
	public RefManContext RefMan;
}
