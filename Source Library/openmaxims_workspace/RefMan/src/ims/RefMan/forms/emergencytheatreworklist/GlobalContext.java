//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.emergencytheatreworklist;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		RefMan = new RefManContext(context);
		Core = new CoreContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPendingEmergencyTheatreWorklistSearchCriteriaIsNotNull()
		{
			return !cx_SchedulingPendingEmergencyTheatreWorklistSearchCriteria.getValueIsNull(context);
		}
		public ims.scheduling.vo.PendingEmergencyTheatreWorklistSearchCriteriaVo getPendingEmergencyTheatreWorklistSearchCriteria()
		{
			return (ims.scheduling.vo.PendingEmergencyTheatreWorklistSearchCriteriaVo)cx_SchedulingPendingEmergencyTheatreWorklistSearchCriteria.getValue(context);
		}
		public void setPendingEmergencyTheatreWorklistSearchCriteria(ims.scheduling.vo.PendingEmergencyTheatreWorklistSearchCriteriaVo value)
		{
			cx_SchedulingPendingEmergencyTheatreWorklistSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingPendingEmergencyTheatreWorklistSearchCriteria = new ims.framework.ContextVariable("Scheduling.PendingEmergencyTheatreWorklistSearchCriteria", "_cvp_Scheduling.PendingEmergencyTheatreWorklistSearchCriteria");
		public boolean getPendingEmergencyTheatreRemovalIsNotNull()
		{
			return !cx_SchedulingPendingEmergencyTheatreRemoval.getValueIsNull(context);
		}
		public ims.scheduling.vo.PendingEmergencyTheatreRemovalVo getPendingEmergencyTheatreRemoval()
		{
			return (ims.scheduling.vo.PendingEmergencyTheatreRemovalVo)cx_SchedulingPendingEmergencyTheatreRemoval.getValue(context);
		}
		public void setPendingEmergencyTheatreRemoval(ims.scheduling.vo.PendingEmergencyTheatreRemovalVo value)
		{
			cx_SchedulingPendingEmergencyTheatreRemoval.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingPendingEmergencyTheatreRemoval = new ims.framework.ContextVariable("Scheduling.PendingEmergencyTheatreRemoval", "_cv_Scheduling.PendingEmergencyTheatreRemoval");
		public boolean getPendingEmergencyTheatreIsNotNull()
		{
			return !cx_SchedulingPendingEmergencyTheatre.getValueIsNull(context);
		}
		public ims.scheduling.vo.PendingEmergencyTheatreRefVo getPendingEmergencyTheatre()
		{
			return (ims.scheduling.vo.PendingEmergencyTheatreRefVo)cx_SchedulingPendingEmergencyTheatre.getValue(context);
		}
		public void setPendingEmergencyTheatre(ims.scheduling.vo.PendingEmergencyTheatreRefVo value)
		{
			cx_SchedulingPendingEmergencyTheatre.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingPendingEmergencyTheatre = new ims.framework.ContextVariable("Scheduling.PendingEmergencyTheatre", "_cv_Scheduling.PendingEmergencyTheatre");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");
		public boolean getReferralServiceSearchListIsNotNull()
		{
			return !cx_RefManReferralServiceSearchList.getValueIsNull(context);
		}
		public ims.core.vo.ServiceShortVoCollection getReferralServiceSearchList()
		{
			return (ims.core.vo.ServiceShortVoCollection)cx_RefManReferralServiceSearchList.getValue(context);
		}
		public void setReferralServiceSearchList(ims.core.vo.ServiceShortVoCollection value)
		{
			cx_RefManReferralServiceSearchList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralServiceSearchList = new ims.framework.ContextVariable("RefMan.ReferralServiceSearchList", "_cv_RefMan.ReferralServiceSearchList");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}

	public SchedulingContext Scheduling;
	public RefManContext RefMan;
	public CoreContext Core;
}
