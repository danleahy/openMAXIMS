//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
//This code was generated by Ander Telleria using IMS Development Environment (version 1.65 build 3159.24578)
//Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.RefMan.forms.referraldetailscomponent;

import ims.admin.vo.ConfigLocationLiteVo;
import ims.RefMan.forms.referraldetailscomponent.GenForm.grdContactRow;
import ims.RefMan.vo.AwaitingClinicalInfoVo;
import ims.RefMan.vo.CCGToContractConfigForReferralDetailsComponentVo;
import ims.RefMan.vo.CancerTypeConfigVo;
import ims.RefMan.vo.CancerTypeItemConfigVo;
import ims.RefMan.vo.CatsReferralStatusVo;
import ims.RefMan.vo.CatsReferralStatusVoCollection;
import ims.RefMan.vo.CatsReferralWizardVo;
import ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo;
import ims.RefMan.vo.ContractConfigForReferralDetailsComponentVoCollection;
import ims.RefMan.vo.ContractServiceLocationsConfigVo;
import ims.RefMan.vo.ContractServiceLocationsConfigVoCollection;
import ims.RefMan.vo.ReferralServiceUpdatesVo;
import ims.RefMan.vo.ReferralServiceUpdatesVoCollection;
import ims.RefMan.vo.ReferralTransferVo;
import ims.RefMan.vo.enums.CALLINGFORM;
import ims.RefMan.vo.enums.ReferralDetailsComponentButtonClicked;
import ims.RefMan.vo.lookups.CancerType;
import ims.RefMan.vo.lookups.ReferralApptStatus;
import ims.RefMan.vo.lookups.ReferralInitiatedFrom;
import ims.RefMan.vo.lookups.ReferralInitiatedFromCollection;
import ims.RefMan.vo.lookups.ReferralUrgency;
import ims.clinical.vo.ReferralLetterDetailsVo;
import ims.configuration.AppRight;
import ims.configuration.gen.ConfigFlag;
import ims.core.patient.vo.PatientRefVo;
import ims.core.resource.people.vo.MemberOfStaffRefVo;
import ims.core.resource.place.vo.LocationRefVo;
import ims.core.vo.CommChannelVo;
import ims.core.vo.CommChannelVoCollection;
import ims.core.vo.GpShortVo;
import ims.core.vo.GpToPracticesVo;
import ims.core.vo.GpToPracticesVoCollection;
import ims.core.vo.HcpLiteVo;
import ims.core.vo.LocationLiteVo;
import ims.core.vo.LocationLiteVoCollection;
import ims.core.vo.MedicLiteVo;
import ims.core.vo.MemberOfStaffLiteVo;
import ims.core.vo.OrganisationWithSitesVo;
import ims.core.vo.PatientTransportRequirementsVo;
import ims.core.vo.PatientWithGPForCCGVo;
import ims.core.vo.ProcedureLiteVo;
import ims.core.vo.ProcedureLiteVoCollection;
import ims.core.vo.ReferralSourceUrgencyVo;
import ims.core.vo.ReferralSourceUrgencyVoCollection;
import ims.core.vo.ServiceFunctionLiteVo;
import ims.core.vo.ServiceFunctionLiteVoCollection;
import ims.core.vo.ServiceLiteVo;
import ims.core.vo.ServiceLiteVoCollection;
import ims.core.vo.TaxonomyMap;
import ims.core.vo.enums.MosType;
import ims.core.vo.lookups.PatientStatus;
import ims.core.vo.lookups.ReferralManagementContractType;
import ims.core.vo.lookups.SourceOfReferral;
import ims.core.vo.lookups.SourceOfReferralCollection;
import ims.core.vo.lookups.TaxonomyType;
import ims.core.vo.lookups.YesNo;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.MessageButtons;
import ims.framework.MessageIcon;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.utils.Color;
import ims.framework.utils.Date;
import ims.framework.utils.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;
	
	private static final String UNKNOWN_RESIDENCE = "Q99";
	private static final String OVERSEAS_VISITOR_CCG = "X98";

	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.setMode(FormMode.VIEW);
		form.getLocalContext().setIsInCreationMode(Boolean.FALSE);
		form.getLocalContext().setbReferralAccepted(false);
		form.getLocalContext().setCurrentAwaitingClinicalInformationVo(null);
		form.getGlobalContext().RefMan.setAwaitingClinicalInfo(null);
		form.getGlobalContext().RefMan.setAwaitingClinicalInfoBoolean(null);
		form.getLocalContext().setcancerTypeConfig(domain.getCancerTypeConfig()); //WDEV-19700
		form.getLocalContext().setSourceOfReferralConfiguration(domain.getSourceOfReferralConfigVoColl());		//wdev-20056
		//form.getLocalContext().setCCGCode(null); //WDEV-20756
		
		
		updateControlState(false);
	}

	protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
	{
		if (formName.equals(form.getForms().RefMan.ChangeServiceDialog) && result.equals(DialogResult.OK))
		{
			form.qmbService().setValue(form.getGlobalContext().RefMan.getCurrentServiceLiteVo());
		}
		else if (formName.equals(form.getForms().RefMan.AwaitingClinicalInformationDialog))
		{
			refreshAwaitingClinicalInformation(DialogResult.OK.equals(result));

			updateControlState(false);
			
			form.fireCustomControlValueChanged();
		}
		else if (formName.equals(form.getForms().RefMan.ReferralTransferDialog))
		{
			form.getLocalContext().setTransferInfo(form.getGlobalContext().RefMan.getReferralTransfer());
			//WDEV-20383
			calculateKpi();	
			form.getLocalContext().setIPT(iptTooltip(form.getGlobalContext().RefMan.getReferralTransfer()));
		}
		else if (result.equals(DialogResult.OK))
		{
			OrganisationWithSitesVo practice;

			if (formName.equals(form.getForms().Admin.GPPracticeSelect))
			{
				practice = form.getGlobalContext().Admin.getPractice();
				form.getLocalContext().setAHPInfo(practice);
				populateAHPDetailsPanelFromData(practice);
			}
			else if (formName.equals(form.getForms().Core.GpSelectionOnly))
			{
				GpShortVo gp = form.getGlobalContext().Core.getGPDetails();
				form.getLocalContext().setGPInfo(gp);
				populateGPDetailsPanelFromData(gp);
			}
			else if (formName.equals(form.getForms().Core.DateEntryDialog))
			{
				try
				{
					domain.updateReferralDate(form.getGlobalContext().Core.getGenericDate(), form.getLocalContext().getCatsReferralWizardVo());
				} 
				catch (StaleObjectException e)
				{
					engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
				}
				
				CatsReferralWizardVo cats = domain.getCatsReferral(form.getLocalContext().getCatsReferralWizardVo());
	            form.getLocalContext().setCatsReferralWizardVo(cats);
	    		setValue(cats.getReferralDetails(), cats);
	    		form.setMode(FormMode.VIEW);
	    		if (cats.getReferralDetails() != null && cats.getReferralDetails().getEnd18WWIsNotNull() && cats.getReferralDetails().getEnd18WW().isLessThan(new Date()))
	    		{	
	    			engine.showMessage("The RTT Breach Date of this referral is earlier than today.", "Date in the past",MessageButtons.OK, MessageIcon.INFORMATION);    			
	    		}	
	    		
			}
		}
		else if ((formName.equals(form.getForms().Core.GpSelectionOnly) || formName.equals(form.getForms().Admin.GPPracticeSelect) || formName.equals(form.getForms().Core.DateEntryDialog)) && result.equals(DialogResult.CANCEL))
			return;
		else if (!formName.equals(form.getForms().RefMan.ChangeServiceDialog) 
				&& !formName.equals(form.getForms().RefMan.AwaitingClinicalInformationDialog)
				&& !formName.equals(form.getForms().RefMan.ReferralTransferDialog)
				&& result.equals(DialogResult.CANCEL))
			setHCPInformationToNull();
	}

	private void refreshAwaitingClinicalInformation(boolean wasSave)
	{
		form.getLocalContext().setCurrentAwaitingClinicalInformationVo(form.getGlobalContext().RefMan.getAwaitingClinicalInfo());
		
		form.getGlobalContext().RefMan.setAwaitingClinicalInfo(null);

		if (wasSave)
		{
			form.getLocalContext().setCatsReferralWizardVo(domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral()));
		}
		
		setAwaitingClinicalnformationImage((form.getLocalContext().getCatsReferralWizardVo() != null ? form.getLocalContext().getCatsReferralWizardVo().getIsAwaitingClinicalInfo() : form.getGlobalContext().RefMan.getAwaitingClinicalInfoBoolean()), (form.getLocalContext().getCatsReferralWizardVo() != null ? form.getLocalContext().getCatsReferralWizardVo().getAwaitingClinicalInfo() : form.getLocalContext().getCurrentAwaitingClinicalInformationVo()));
	}

	protected void onBtnGPSearch() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.open(form.getForms().Core.GpSelectionOnly);
	}

	protected void onReferrerTypeSelectionChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		setHCPInformationToNull();

		// WDEV-17709
		form.chkPatientsGp().setValue(null);

		if (form.getGlobalContext().Core.getPatientShort().getID_PatientIsNotNull())
			form.getGlobalContext().RefMan.setPatientsGP(domain.getPatientGP(form.getGlobalContext().Core.getPatientShort().getID_Patient()));

		form.getGlobalContext().RefMan.setReferralTransfer(form.getLocalContext().getTransferInfo());
		if (form.cmbSOR().getValue() != null
			&& form.cmbSOR().getValue().equals(SourceOfReferral.TRANSFER))
			engine.open(form.getForms().RefMan.ReferralTransferDialog);
		else if (form.cmbSOR().getValue()==null || !SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()))
		{
			form.getLocalContext().setTransferInfo(null);
			form.getGlobalContext().RefMan.setReferralTransfer(null);
		}
		
		if (form.cmbSOR().getValue()==null || !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()))
		{
			//form.ccReferringConsultant().setValue(null);
			form.ctnReferringConsultant().ccReferringConsultant().setValue(null);	//wdev-20727
		}
		
		
		
		loadUrgency(); //WDEV-20797
		
		clearReferrerDetails();
		
		form.chkRespConsultant().setValue(form.ccConsultant().getValue() != null && SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
		
		if (SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()) )
		{
			//form.ccReferringConsultant().setValue(form.ccConsultant().getValue());
			form.ctnReferringConsultant().ccReferringConsultant().setValue(form.ccConsultant().getValue());	//wdev-20727
			
			referringConsultantValueChanged();
		}
		
		//wdev-20417 //WDEV-22910 
		if (SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()))
		{
			populateInitiatedFromByConsultant(); //WDEV-22303 Renamed to populateInitiatedFrom
		}
		else if(SourceOfReferral.AHP.equals(form.cmbSOR().getValue()))
			populateInitiatedFromByOther(); //WDEV-22303 Renamed to populateInitiatedFrom
		//--------------
		
		calculateKpi(); // WDEV-20686
		
		form.chkActivityRTTClock().setValue(!SourceOfReferral.NATIONAL_SCREENING.equals(form.cmbSOR().getValue()) && form.qmbService().getValue() != null && Boolean.TRUE.equals(form.qmbService().getValue().getIsSubjectToRTTClock()) && contactIsNotDiagnosticOrDiagnosticTriage(form.cmbContract().getValue()));
		
		updateControlState(true);
	}
	
	//wdev-20417
	private void populateInitiatedFromByConsultant() //WDEV-22303 Renamed to populateInitiatedFrom
	{
		form.cmbInitiatedFrom().clear();
		ReferralInitiatedFromCollection tempVoColl =  ims.RefMan.vo.lookups.LookupHelper.getReferralInitiatedFrom(domain.getLookupService());
		
		if( form.cmbSOR().getValue() != null && form.cmbSOR().getValue().equals(SourceOfReferral.CONSULTANT))
		{
			
			if(tempVoColl != null)
				for(int i = 0;i < tempVoColl.size();i++ )
				{
					if( tempVoColl.get(i) != null 
							&& (tempVoColl.get(i).equals(ReferralInitiatedFrom.A_AND_E) 
							 || tempVoColl.get(i).equals(ReferralInitiatedFrom.DOMICILIARY)
							 || tempVoColl.get(i).equals(ReferralInitiatedFrom.EMERGENCY)
							 || tempVoColl.get(i).equals(ReferralInitiatedFrom.OTHER) //WDEV-22303
						))
					{
						form.cmbInitiatedFrom().newRow((ReferralInitiatedFrom)tempVoColl.get(i),tempVoColl.get(i).getText());
					}
					
				}
		}
	}
	//wdev-20417 //WDEV-22910
	private void populateInitiatedFromByOther() //WDEV-22303 Renamed to populateInitiatedFrom
	{
		form.cmbInitiatedFrom().clear();
		ReferralInitiatedFromCollection tempVoColl =  ims.RefMan.vo.lookups.LookupHelper.getReferralInitiatedFrom(domain.getLookupService());
		if (SourceOfReferral.AHP.equals(form.cmbSOR().getValue()))
		{
			if(tempVoColl != null)
			{	
				tempVoColl.remove(ReferralInitiatedFrom.A_AND_E);
				tempVoColl.remove(ReferralInitiatedFrom.DOMICILIARY);
				tempVoColl.remove(ReferralInitiatedFrom.EMERGENCY);
			
				for(int i = 0;i < tempVoColl.size();i++ )
				{
					form.cmbInitiatedFrom().newRow(tempVoColl.get(i),tempVoColl.get(i).getText());					
				}
			}	
		}
	}
	
	//WDEV-20797
	private void loadUrgency()
	{
		ReferralUrgency preExistingValue = form.cmbUrgency().getValue();
		
		form.cmbUrgency().clear();
		
		//WDEV-20843
		if (form.cmbSOR().getValue()==null)
		{
			form.cmbCancerType().clear();
			return;
		}
		
		if( form.getLocalContext().getSourceOfReferralConfigurationIsNotNull() && form.getLocalContext().getSourceOfReferralConfiguration().size() > 0)
		{
			
			ims.core.vo.lookups.SourceOfReferral sourceofreferral = form.cmbSOR().getValue();
			if( sourceofreferral != null)
			{
				ReferralSourceUrgencyVo tempSourceVo = getSourceReferralUrgencyVo(sourceofreferral, form.getLocalContext().getSourceOfReferralConfiguration());
				if( tempSourceVo != null)
				{
					
					if( tempSourceVo.getUrgencyIsNotNull() && tempSourceVo.getUrgency().size() > 0)
					{
						
						for(int h = 0;h < tempSourceVo.getUrgency().size();h++ )
						{
							if(tempSourceVo.getUrgency().get(h) == null || !tempSourceVo.getUrgency().get(h).isActive())
								continue;
							
							form.cmbUrgency().newRow(tempSourceVo.getUrgency().get(h), tempSourceVo.getUrgency().get(h).getText());
						}

						// http://jira/browse/WDEV-22302 
						// Default urgency if only one urgency defined for source of referral
						if (tempSourceVo.getUrgency().size() == 1) 
						{
							form.cmbUrgency().setValue(tempSourceVo.getUrgency().get(0));
						} //WDEV-22302

					}
				}
			}
		}
		
		//WDEV-20843
		if (preExistingValue != null)
		{ 
			if (form.cmbUrgency().getValues().contains(preExistingValue))
			{
				form.cmbUrgency().setValue(preExistingValue);
			}
			else// if (SourceOfReferral.TRANSFER_OF_CARE.equals(form.cmbSOR().getValue())) // on transfer of care, the parent Urgency Value should be displayed on child
			{
				form.cmbUrgency().newRow(preExistingValue, preExistingValue.getText());
				form.cmbUrgency().setValue(preExistingValue);
			}
		}
		
		if (form.cmbUrgency().getValue()==null) //WDEV-20876
		{
			form.cmbCancerType().clear();
		}
		
	}
	//WDEV-20797 ends here
	
	
	private ReferralSourceUrgencyVo getSourceReferralUrgencyVo(ims.core.vo.lookups.SourceOfReferral sourceLkp, ReferralSourceUrgencyVoCollection  sourceColl)
	{
		if( sourceLkp != null && sourceColl != null && sourceColl.size() > 0)
		{
			for(int i = 0; i < sourceColl.size();i++)
			{
				ReferralSourceUrgencyVo tempVo = sourceColl.get(i); 
				if( tempVo != null && sourceLkp!= null && sourceLkp.equals(tempVo.getSourceOfReferral()))
					return tempVo;
			}
		}
		
		return null;
	} 
	//-----------
	private void setHCPInformationToNull()
	{
		//form.txtGPName().setValue(null); 
		form.ctnGPName().txtGPName().setValue(null);			//wdev-20727

		//WDEV-11626o
		clearPracticeDetails();
	}

	//WDEV-11626 - starts here
	private void clearPracticeDetails() 
	{
		form.grdContact().getRows().clear();
		form.txtGPAddress().setValue(null);
		form.txtLocation().setValue(null);
		form.getLocalContext().setCCGCode(null); //WDEV-20756
		form.txtRefPracticeCode().setValue(null);
	}
	//WDEv-11626 - ends here

	protected void onBtnAlliedPracticeSearch() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.open(form.getForms().Admin.GPPracticeSelect);
	}

	public ims.clinical.vo.ReferralLetterDetailsVo getValue()
	{
		ReferralLetterDetailsVo record = populateDataFromScreen();
		
//		form.getLocalContext().setGPInfo(null); //WDEV-21595
		
		return record;
	}

	public void setValue(ims.clinical.vo.ReferralLetterDetailsVo referralDetails, CatsReferralWizardVo voCats)
	{
		form.getLocalContext().setCurrentAwaitingClinicalInformationVo(null);
		form.getGlobalContext().RefMan.setAwaitingClinicalInfo(null);

		String nat = "";
		String icab = "";
		form.getLocalContext().setbReferralDetailsInitialized(false);
		form.getLocalContext().setreferralVo(referralDetails);
		form.getLocalContext().setCatsReferralWizardVo(voCats);

		if (form.getGlobalContext().Core.getPatientShortIsNotNull() && form.getGlobalContext().Core.getPatientShort().getID_PatientIsNotNull() && form.getMode().equals(FormMode.EDIT))
		{
			form.chkPatientsGp().setEnabled(false);
		}

		// If the user had a validation error on the demographics tab ignored it
		// and entered data on the referral details.
		// Then corrected the demographics and saved the referral details were
		// being blanked. Now shouldnt be.
		if (form.getLocalContext().getbReferralDetailsInitializedIsNotNull() && form.getLocalContext().getbReferralDetailsInitialized())
			return;

		if (referralDetails == null)
		{
			clearControls();
			clearDates();
			//WDEV-18904
			if (form.getGlobalContext().Core.getPatientShortIsNotNull() && form.getGlobalContext().Core.getPatientShort().getID_PatientIsNotNull())
			{
				ContractConfigForReferralDetailsComponentVo contractToDefault = getDefaultSuitableContractForCCGCode(form.getLocalContext().getContractConfigurations());
				if (contractToDefault != null)
				{
					form.cmbContract().setValue(contractToDefault);
// WDEV-21265 - Service is now a query combo so not automatically loaded at this point					
//					loadService();
//					loadLocations();
				}
			}
			
			form.getLocalContext().setbReferralDetailsInitialized(Boolean.TRUE);
			
			// wdev-8808
			if (form.btnCancel().isVisible())
			{
				form.btnCancel().setVisible(false);
				form.btnSave().setVisible(false);
			}
			return;
		}
		else
		{
			form.cmbCategory().setValue(voCats.getPatientCategory());//WDEV-12181

			
			
			form.cmbUrgency().setValue(voCats.getUrgency());  // WDEV-17930
			form.cmbCancerType().setValue(voCats.getCancerType()); //WDEV-19700

			//WDEV-18395
			form.chkActivityRTTClock().setValue(voCats.getRTTClockImpact());
			
			//wdev-12256
			if(voCats.getContractIsNotNull() && (form.cmbContract().getValues().isEmpty() || !form.cmbContract().getValues().contains(voCats.getContract())))
				form.cmbContract().newRow(voCats.getContract(), voCats.getContract().getContractName());
			//-----------
			form.cmbContract().setValue(voCats.getContract());
			if (!ConfigFlag.UI.DISABLE_MULTI_SITE_CATS_FUNCTIONALITY.getValue())
			{
				if (voCats.getContractIsNotNull() && form.cmbContract().getValue() == null)
				{
					form.cmbContract().newRow(voCats.getContract(), voCats.getContract().getContractName());
					form.cmbContract().setValue(voCats.getContract());
				}
				loadLocations();
			}

			// loadLocations() will hide the location combo if there is no ReferralManagementContractType.DIAGNOSTIC for the site but
			// here we could have a referral being displayed that is not ReferralManagementContractType.DIAGNOSTIC and we want to hide location
			if (voCats.getContractIsNotNull()
					&& voCats.getContract().getContractTypeIsNotNull()
					&& !voCats.getContract().getContractType().equals(ReferralManagementContractType.DIAGNOSTIC))
			{
				form.lblLocation().setVisible(false);
				form.cmbLocation().setVisible(false);
			}

			form.cmbLocation().setValue(referralDetails.getLocation());
			if (referralDetails.getLocationIsNotNull() && form.cmbLocation().getValue() == null)
			{
				form.cmbLocation().newRow(referralDetails.getLocation(), referralDetails.getLocation().getName());
				form.cmbLocation().setValue(referralDetails.getLocation());
			}
			
// WDEV-21265			loadService(referralDetails.getService());
			form.qmbService().setValue(referralDetails.getService());
			
			if(referralDetails.getService() != null && form.qmbService().getValue() == null)
			{
				form.qmbService().newRow(referralDetails.getService(), referralDetails.getService().getServiceName());
				form.qmbService().setValue(referralDetails.getService());
			}
			
			//wdev-20727
			populateFunctionCombo();
			if( referralDetails.getFunctionIsNotNull())
			{
				if( form.cmbFunction().getValues() != null && form.cmbFunction().getValues().contains(referralDetails.getFunction()))
				{
					form.cmbFunction().setValue(referralDetails.getFunction());
				}
				else
				{
					form.cmbFunction().newRow(referralDetails.getFunction(), referralDetails.getFunction().getFunctionIsNotNull() ? referralDetails.getFunction().getFunction().getText():null);
					form.cmbFunction().setValue(referralDetails.getFunction());
				}
				form.lblFunction().setVisible(true);
				form.cmbFunction().setVisible(true);
				
			}
			//------------
			
			//WDEV-18142
			form.ccConsultant().clear();
			form.ccConsultant().setValue(referralDetails.getConsultant());

			//wdev-13647
			if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
			{
				getAndPopulateNearestTreatmentCenterLocation();
				form.cmbNearestTreatmentCentreLocation().setValue(voCats.getNearestTreatmentCentre());
				if(voCats.getNearestTreatmentCentre() != null && form.cmbNearestTreatmentCentreLocation().getValue() == null)
				{
					form.cmbNearestTreatmentCentreLocation().newRow(voCats.getNearestTreatmentCentre(), voCats.getNearestTreatmentCentre().getName());
					form.cmbNearestTreatmentCentreLocation().setValue(voCats.getNearestTreatmentCentre());
				}
			}
			//---------

			form.qmbProcedure().clear();
			if (referralDetails.getProcedureIsNotNull())
			{
				form.qmbProcedure().newRow(referralDetails.getProcedure(), referralDetails.getProcedure().getProcedureName());
				form.qmbProcedure().setValue(referralDetails.getProcedure());
			}

			//form.ccReferringConsultant().setVisible(false);
			form.ctnReferringConsultant().setVisible(false);//wdev-29727.ccReferringConsultant().setVisible(false);
			
			

			if (referralDetails.getReferrerType() == null || referralDetails.getReferrerType().equals(SourceOfReferral.GP))
			{
				form.cmbSOR().setValue(SourceOfReferral.GP);
				
				if (referralDetails.getID_ReferralLetterDetails() != null && referralDetails.getReferrerType() == null)
				{
					form.cmbSOR().setValue(null);
				}
				
				//wdev-20056
				form.chkRespConsultant().setValue(false);
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				//end of wdev-20056
				form.btnIPT().setVisible(false); 
				if (referralDetails.getGPNameIsNotNull())
					if (referralDetails.getGPName().getNameIsNotNull())
						form.ctnGPName().txtGPName().setValue(referralDetails.getGPName().getName().toString());		//wdev-20727
						//form.txtGPName().setValue(referralDetails.getGPName().getName().toString());

				if (referralDetails.getPracticeIsNotNull())
				{
					form.txtLocation().setValue(referralDetails.getPractice().getName());
					if (referralDetails.getPractice().getCodeMappingsIsNotNull())
						for (int j = 0; j < referralDetails.getPractice().getCodeMappings().size(); j++)
						{
							if (referralDetails.getPractice().getCodeMappings().get(j).getTaxonomyNameIsNotNull())
								if (referralDetails.getPractice().getCodeMappings().get(j).getTaxonomyName().equals(TaxonomyType.ICAB))
									// form.txtRefPracticeCode().setValue(referralDetails.getPractice().getCodeMappings().get(j).getTaxonomyCode());
									icab = referralDetails.getPractice().getCodeMappings().get(j).getTaxonomyCode();
							if (referralDetails.getPractice().getCodeMappings().get(j).getTaxonomyName().equals(TaxonomyType.NAT_LOC_CODE))
								nat = referralDetails.getPractice().getCodeMappings().get(j).getTaxonomyCode();
							if (!icab.equals(""))
								form.txtRefPracticeCode().setValue(icab);
							else if (!nat.equals(""))
								form.txtRefPracticeCode().setValue(nat);

						}
					if (referralDetails.getPractice().getAddressIsNotNull())
					{
						StringTokenizer st = new StringTokenizer(referralDetails.getPractice().getAddress().toDisplayString(), ",");
						String address = " ";
						while (st.hasMoreElements())
						{
							address = address + st.nextElement() + "\n";
						}
						form.txtGPAddress().setValue(address);
					}
					
					if(referralDetails.getPractice() != null)
					{
						populateContactsGrid(referralDetails.getPractice().getCommChannels());
					}
					//form.RefPCTCode().setValue(referralDetails.getPCT());//WDEV-20713	
					//WDEV-20756
					if (referralDetails.getPractice().getPctCode() != null)
						form.getLocalContext().setCCGCode(referralDetails.getPractice().getPctCode()); 
					else
						form.getLocalContext().setCCGCode(UNKNOWN_RESIDENCE);
					//WDEV-20756 ends here
				}

			}
			else if (referralDetails.getReferrerType().equals(SourceOfReferral.AHP))
			{
				form.cmbSOR().setValue(SourceOfReferral.AHP);
				
				//wdev-20056
				form.chkRespConsultant().setValue(false);
				populateInitiatedFromByOther();											//wdev-20417 //WDEV-22303 Renamed to populateInitiatedFrom
				form.cmbInitiatedFrom().setValue(referralDetails.getInitiatedFrom());	//wdev-20417
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				//end of wdev-20056
				form.btnIPT().setVisible(false); 
								
				if (referralDetails.getAlliedHealthProfNameIsNotNull())
					form.ctnGPName().txtGPName().setValue(referralDetails.getAlliedHealthProfName());	//wdev-20727
					//form.txtGPName().setValue(referralDetails.getAlliedHealthProfName());
				
				form.txtGPAddress().setValue(referralDetails.getRefererAddress());		//wdev-20417
				
				//WDEV-20756
				if(voCats != null && voCats.getPatient() != null )
				{	
    				if(voCats.getPatient().getAddress()!= null)
    				{
    					if (voCats.getPatient().getAddress().getPCT() != null)
    						form.getLocalContext().setCCGCode(voCats.getPatient().getAddress().getPctCode());
    					else
    						form.getLocalContext().setCCGCode(UNKNOWN_RESIDENCE);
    				}
    					
				}
				//WDEV-20756 ends here
				
			//	form.RefPCTCode().setValue(referralDetails.getPCT());					//wdev-20417 //WDEV-20756
				form.txtRefPracticeCode().setValue(null);								//wdev-20417
				//form.txtLocation().setValue(referralDetails.getOtherLocation());		//wdev-20417
				form.txtLocation().setValue(null);		//wdev-20727
				
				
				
				populateContactsGrid(referralDetails.getOtherCommChannels());			//wdev-20417
				
			}
			else if (referralDetails.getReferrerType().equals(SourceOfReferral.SELF))
			{
				form.cmbSOR().setValue(SourceOfReferral.SELF);
				
				//wdev-20056
				form.chkRespConsultant().setValue(false);
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				//end of wdev-20056
				form.btnIPT().setVisible(false); 
				if( voCats != null && voCats.getPatient() != null )
				{
					if( voCats.getPatient().getName() != null )
						form.ctnGPName().txtGPName().setValue(voCats.getPatient().getName().toString());		//wdev-20727
						//form.txtGPName().setValue(voCats.getPatient().getName().toString());
    				
    				form.txtGPAddress().setValue(voCats.getPatient().getAddress()!=null ? voCats.getPatient().getAddress().toDisplayStringForMultiLineTextBox() : null);//WDEV-18552
    				
    			
    				if( voCats.getPatient().getAddress()!= null)
    					//form.RefPCTCode().setValue(voCats.getPatient().getAddress().getPctCode());		//wdev-20417
    					//WDEV-20756
    					if (voCats.getPatient().getAddress().getPCT() != null)
    						form.getLocalContext().setCCGCode(voCats.getPatient().getAddress().getPctCode()); 
    					else
    						form.getLocalContext().setCCGCode(UNKNOWN_RESIDENCE);
    					//WDEV-20756 ends here
    				
    				populateContactsGrid(voCats.getPatient().getCommChannels());
				}
				
				//form.RefPCTCode().setValue(voCats.getReferralDetails().getPCT());
				form.txtRefPracticeCode().setValue(null);
				form.txtLocation().setValue(null);
				
				
				
			}
			else if (referralDetails.getReferrerType().equals(SourceOfReferral.CONSULTANT))
			{
				form.cmbSOR().setValue(SourceOfReferral.CONSULTANT);
				
				//wdev-20056
				populateInitiatedFromByConsultant();									//wdev-20417 //WDEV-22303 Renamed to populateInitiatedFrom
				form.cmbInitiatedFrom().setValue(referralDetails.getInitiatedFrom());	//wdev-20417
				
				
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				//end of wdev-20056
				
				form.btnIPT().setVisible(false);
				
				
				form.getLocalContext().setTransferInfo(voCats.getReferralTransfer());
				if (form.getLocalContext().getTransferInfoIsNotNull())
					form.getLocalContext().getTransferInfo().setPathwayID(voCats.getPathwayID());

				//form.ccReferringConsultant().setVisible(true);
				form.ctnReferringConsultant().setVisible(true);	//wdev-20727.ccReferringConsultant().setVisible(true);
				
				if( voCats.getReferralDetails() != null)
					form.ctnReferringConsultant().ccReferringConsultant().setValue(voCats.getReferralDetails().getReferringConsultant());	//wdev-20727
					//form.ccReferringConsultant().setValue(voCats.getReferralDetails().getReferringConsultant());
				
				//form.RefPCTCode().setValue(voCats.getReferralDetails().getPCT());		//WDEV-20756
				//WDEV-20756
   				if( voCats.getPatient() != null && voCats.getPatient().getAddress()!= null)
   				{
					if (voCats.getPatient().getAddress().getPCT() != null)
						form.getLocalContext().setCCGCode(voCats.getPatient().getAddress().getPctCode()); 
					else
						form.getLocalContext().setCCGCode(UNKNOWN_RESIDENCE);
   				}
				//WDEV-20756 ends here
				
				if( voCats.getReferralDetails() != null)
					form.txtGPAddress().setValue(voCats.getReferralDetails().getRefererAddress());
				
				form.txtRefPracticeCode().setValue(null);			//wdev-20417
				
				if( voCats.getReferralDetails() != null && voCats.getReferralDetails().getReferringConsultant() != null && voCats.getReferralDetails().getReferringConsultant().getMos() != null)
				{
					populateContactsGrid(voCats.getReferralDetails().getReferringConsultant().getMos().getCommChannels());
				}
				
				form.chkRespConsultant().setValue(form.ccConsultant().getValue() != null && form.ccConsultant().getValue().equals(form.ctnReferringConsultant().ccReferringConsultant().getValue()));
			}
			else if (referralDetails.getReferrerType().equals(SourceOfReferral.TRANSFER))
			{
				form.cmbSOR().setValue(SourceOfReferral.TRANSFER);
				
				//wdev-20056
				form.chkRespConsultant().setValue(false);
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				//end of wdev-20056
				form.btnIPT().setVisible(voCats.getReferralTransferIsNotNull() ? true : false);
				
				//WDEV-20383
				form.getLocalContext().setIPT(iptTooltip(voCats.getReferralTransferIsNotNull() ? voCats.getReferralTransfer() : null));
				
				form.getLocalContext().setTransferInfo(voCats.getReferralTransfer());
				
				//WDEV-18552
				if (form.getLocalContext().getTransferInfo()!=null)
				{
					form.getLocalContext().getTransferInfo().setPathwayID(voCats.getPathwayID());
				}
				
				if( voCats.getReferralDetails() != null )
				{
    				//form.RefPCTCode().setValue(voCats.getReferralDetails().getPCT());
    				//form.txtGPName().setValue(voCats.getReferralDetails().getTransferedBY());
    				form.ctnGPName().txtGPName().setValue(voCats.getReferralDetails().getTransferedBY());	//wdev-20727
    				form.txtGPAddress().setValue(voCats.getReferralDetails().getRefererAddress());
				}
				//form.getLocalContext().setCCGCode(null); //WDEV-20756
   				if(voCats.getPatient() != null && voCats.getPatient().getAddress()!= null)
   				{
					if (voCats.getPatient().getAddress().getPCT() != null)
						form.getLocalContext().setCCGCode(voCats.getPatient().getAddress().getPctCode()); 
					else
						form.getLocalContext().setCCGCode(UNKNOWN_RESIDENCE);
   				}
				//WDEV-20756 ends here
				//form.txtRefPracticeCode().setValue(null);		//wdev-20417 //WDEV-20756
				form.txtLocation().setValue(null);				//wdev-20417
			}
			//wdev-20417
			else if (referralDetails.getReferrerType().equals(SourceOfReferral.NATIONAL_SCREENING))
			{
				form.cmbSOR().setValue(SourceOfReferral.NATIONAL_SCREENING);
				
				//wdev-20056
				form.chkRespConsultant().setValue(false);
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				//end of wdev-20056
				form.btnIPT().setVisible(false); 
				
				if( voCats != null && voCats.getPatient() != null )
				{
					///-if( voCats.getPatient().getName() != null )
					///-	form.txtGPName().setValue(voCats.getPatient().getName().toString());
					
	   				if(voCats.getPatient().getAddress()!= null)
	   				{
						if (voCats.getPatient().getAddress().getPCT() != null)
							form.getLocalContext().setCCGCode(voCats.getPatient().getAddress().getPctCode()); 
						else
							form.getLocalContext().setCCGCode(UNKNOWN_RESIDENCE);
	   				}
					//WDEV-20756 ends here
    				
    				form.txtGPAddress().setValue(voCats.getPatient().getAddress()!=null ? voCats.getPatient().getAddress().toDisplayStringForMultiLineTextBox() : null);//WDEV-18552
    				
    			
    				///-if( voCats.getPatient().getAddress() != null )
    				///-	form.RefPCTCode().setValue(voCats.getPatient().getAddress().getPctCode());
    				
    				populateContactsGrid(voCats.getPatient().getCommChannels());
				}
				//form.RefPCTCode().setValue(voCats.getReferralDetails().getPCT());
				
				form.txtLocation().setValue(null);			
				//form.txtRefPracticeCode().setValue(null);		//wdev-20417 WDEV-20756
				//form.getLocalContext().setCCGCode(null); 		//WDEV-20756
				//form.RefPCTCode().setValue(null);				//wdev-20727
				//form.txtGPName().setValue("National Screening Programme");	//wdev-20727
				form.ctnGPName().txtGPName().setValue("National Screening Programme");	//wdev-20727
				
				
				
			}
			//wdev-19930
			else if( referralDetails.getReferrerType().equals(SourceOfReferral.REQUEST_FOR_SERVICE))
			{
				//----
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))		//wdev-19930
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				//----
				form.cmbSOR().newRow(SourceOfReferral.REQUEST_FOR_SERVICE, SourceOfReferral.REQUEST_FOR_SERVICE.getText());
				form.cmbSOR().setValue(SourceOfReferral.REQUEST_FOR_SERVICE);
				
				form.btnIPT().setVisible(false); 
				
				form.txtLocation().setValue(null);			
				form.txtRefPracticeCode().setValue(null);	
				form.getLocalContext().setCCGCode(null);		//WDEV-20756
				//form.RefPCTCode().setValue(null);				//WDEV-20756
				//form.txtGPName().setValue(null);
				form.ctnGPName().txtGPName().setValue(null);		//wdev-20727
				form.txtGPAddress().setValue(null);
			}
			//wdev-19933
			else if( referralDetails.getReferrerType().equals(SourceOfReferral.TRANSFER_OF_CARE))
			{
				//----
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))		//wdev-19930
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				//----
				form.cmbSOR().newRow(SourceOfReferral.TRANSFER_OF_CARE, SourceOfReferral.TRANSFER_OF_CARE.getText());
				form.cmbSOR().setValue(SourceOfReferral.TRANSFER_OF_CARE);
				
				form.btnIPT().setVisible(false); 
				
				form.txtLocation().setValue(null);			
				form.txtRefPracticeCode().setValue(null);	
				form.getLocalContext().setCCGCode(null);		//WDEV-20756
				//form.RefPCTCode().setValue(null);				//WDEV-20756
				//form.txtGPName().setValue(null);
				form.ctnGPName().txtGPName().setValue(null);	//wdev-20727
				form.txtGPAddress().setValue(null);
			}
			else if(referralDetails.getReferrerType().equals(SourceOfReferral.ED))
			{
				form.cmbSOR().newRow(SourceOfReferral.ED, SourceOfReferral.ED.getText());
				form.cmbSOR().setValue(SourceOfReferral.ED);
				
				form.btnIPT().setVisible(false); 
				
				if( form.cmbUrgency().getValues() != null && form.cmbUrgency().getValues().contains(voCats.getUrgency()))
					form.cmbUrgency().setValue(voCats.getUrgency()); 
				else
				{
					if( voCats.getUrgencyIsNotNull())
					{
						form.cmbUrgency().newRow(voCats.getUrgency(), voCats.getUrgency().getText());
						form.cmbUrgency().setValue(voCats.getUrgency());
					}
				}
				
				//WDEV-21767
				if (Boolean.TRUE.equals(form.getLocalContext().getCatsReferralWizardVo().getIsEmergencyReferral())
						&& (form.getLocalContext().getCCGCode() == null)
						&& form.getLocalContext().getreferralVo() != null
						&& form.getLocalContext().getreferralVo().getPCT() != null)
				{
					form.getLocalContext().setCCGCode(form.getLocalContext().getreferralVo().getPCT());	
				}
				
			}

			
			if (referralDetails.getDateOfReferralIsNotNull())
				form.dteReferral().setValue(referralDetails.getDateOfReferral());
			if (referralDetails.getDateReferralReceivedIsNotNull())
				form.dteReferralReceived().setValue(referralDetails.getDateReferralReceived());
			else
				form.dteReferralReceived().setValue(null);
			
			boolean isEmergencyReferral = form.getLocalContext().getCatsReferralWizardVo() != null && Boolean.TRUE.equals(form.getLocalContext().getCatsReferralWizardVo().getIsEmergencyReferral());
			form.dtimWW().setValue(referralDetails.getEnd18WW());
			form.lblWW().setValue(!isEmergencyReferral && referralDetails.getEnd18WW() != null ? referralDetails.getEnd18WW().toString() : null);
			
			// WDEV-11713 start
			form.dtimKPI().setValue(referralDetails.getEndDateKPI());
			
 			if( referralDetails.getEndDateKPI() == null )		//wdev-20946
			{
				form.lblKPI().setValue(null);
				form.lblEKPI().setVisible(false);
				form.lblKPI().setVisible(false);
			}
			else
			{
				form.lblEKPI().setVisible(true);
				form.lblKPI().setVisible(true);
				form.lblKPI().setValue(referralDetails.getEndDateKPI().toString());
			}
			
			// WDEV-11713 stop

			form.cmbLanguage().setValue(referralDetails.getLanguage());
				
			form.cmbType().setValue(referralDetails.getTransport());
			
			form.txtSpecialRequirements().setValue(referralDetails.getSpecialRequirements());
				
			
			//form.RefPCTCode().setValue(referralDetails.getPCT());
			
			
			if (referralDetails.getIsReferrerPatientsGpIsNotNull())
				form.chkPatientsGp().setValue(referralDetails.getIsReferrerPatientsGp());

			if (voCats != null && voCats.getAwaitingClinicalInfoIsNotNull())
			{
				form.getLocalContext().setCurrentAwaitingClinicalInformationVo(voCats.getAwaitingClinicalInfo());
				form.getGlobalContext().RefMan.setAwaitingClinicalInfo(voCats.getAwaitingClinicalInfo());

				form.getGlobalContext().RefMan.setAwaitingClinicalInfoBoolean(voCats.getIsAwaitingClinicalInfo());
				
				setAwaitingClinicalnformationImage(voCats.getIsAwaitingClinicalInfo(), voCats.getAwaitingClinicalInfo());
			}
		}
		
		//WDEV-20894
		if(referralDetails.getService() != null && form.qmbService().getValue() != null
				&& referralDetails.getFunction() == null)
		{
			// Filter responsible HCPs on service
			form.ccConsultant().initializeResponsibleHcp(MosType.HCP, true, form.qmbService().getValue(), null);
		}
		else if (referralDetails.getService() != null && form.qmbService().getValue() != null
				&& referralDetails.getFunction() != null && form.cmbFunction().getValues() != null)
		{
			// Filter responsible HCPs on service and function
			form.ccConsultant().initializeResponsibleHcp(MosType.HCP, true, form.qmbService().getValue(), form.cmbFunction().getValue().getFunction());
		}

		loadUrgency(); //WDEV-20797
		
		form.getLocalContext().setIsAdmissionEmergencyReferral(form.cmbContract().getValue() == null && form.getLocalContext().getCatsReferralWizardVo() != null && Boolean.TRUE.equals(form.getLocalContext().getCatsReferralWizardVo().getIsEmergencyReferral()));
		
		updateControlState(false);
	}
	
	//WDEV-20383
	private String iptTooltip(ReferralTransferVo ipt)
	{
		if(ipt == null)
			return "";
		
		StringBuilder transfer = new StringBuilder();
		String separator = "";
		
		if (ipt.getPathwayID() != null)
		{
			transfer.append("<b>PathwayID:</b> ").append(ipt.getPathwayID());
			separator = "<br/>";
		}	
		if(ipt.getCurrentRTTStatus() != null)
		{
			transfer.append(separator).append("<b>IPT RTT Status:</b> ").append(ipt.getCurrentRTTStatus().getDescription());
			separator = "<br/>";
		}
		if(ipt.getRTTStatusDate() != null)
		{
			transfer.append(separator).append("<b>RTT Status Date:</b> ").append(ipt.getRTTStatusDate().getDate());//WDEV-20726
			separator = "<br/>";
		}
		if(ipt.getRTTStartDate() != null)
		{
			transfer.append(separator).append("<b>RTT Start Date:</b> ").append(ipt.getRTTStartDate());
			separator = "<br/>";
		}
		if(ipt.getOtherPatientNumber() != null)
		{
			transfer.append(separator).append("<b>Hospital Number at other Provider:</b> ").append(ipt.getOtherPatientNumber());
			separator = "<br/>";
		}
		if(ipt.getOTherOrganisationCode() != null)
		{
			transfer.append(separator).append("<b>Referring Organisation:</b> ").append(ipt.getOTherOrganisationCode());
			separator = "<br/>";
		}
		if(ipt.getReferringOrganisationCode() != null)
			transfer.append(separator).append("<b>Referring Organisation Code:</b> ").append(ipt.getReferringOrganisationCode());
		
		return transfer.toString();
		
	}
	

	private void setAwaitingClinicalnformationImage(Boolean isAwaitingClinicalInformation, AwaitingClinicalInfoVo awaitingClinicalInfo)
	{
		if(awaitingClinicalInfo == null && isAwaitingClinicalInformation == null)
			return;
		
		if(Boolean.TRUE.equals(isAwaitingClinicalInformation))
		{
			form.btnClinicalInfo().setImage(form.getImages().RefMan.AwaitingClinicalInformation);
		}
		
		if(!Boolean.TRUE.equals(isAwaitingClinicalInformation) && awaitingClinicalInfo != null)
		{
			form.btnClinicalInfo().setImage(form.getImages().RefMan.ClinicalInformationReceived);
		}
	}

	private void clearControls()
	{
		//		wdev-12682
		if (form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
				&&  !form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
			form.cmbLocation().setValue(null);

		form.cmbContract().setValue(null);
		form.qmbService().setValue(null);
		//WDEV-18142
		form.ccConsultant().clear();
		form.cmbSOR().setValue(null);
		form.cmbUrgency().setValue(null); // WDEV-17930
		form.cmbInitiatedFrom().setValue(null);		//wdev-20417
		form.cmbCancerType().setValue(null); //WDEV-19700
		
		form.cmbLanguage().setValue(null);
		form.cmbType().setValue(null);
		form.txtGPAddress().setValue(null);
		
		form.txtLocation().setValue(null);
		form.ctnGPName().txtGPName().setValue(null);
		
		setHCPInformationToNull();
		form.getLocalContext().setCCGCode(null); //WDEV-20756
		// clearDates();
		
		form.chkPatientsGp().setValue(null);
		
		form.ctnReferringConsultant().ccReferringConsultant().initialize(MosType.MEDIC, true);
		form.ctnReferringConsultant().ccReferringConsultant().setValue(null);
		form.chkActivityRTTClock().setValue(false);
		
		form.grdContact().getRows().clear();
	}
	
	private void clearReferrerDetails()
	{
//		form.cmbInitiatedFrom().setValue(null);
		form.ctnGPName().txtGPName().setValue(null);
		form.ctnReferringConsultant().ccReferringConsultant().clear();
		
		clearPracticeDetails();
	}

	private void clearDates()
	{
		
		form.dteReferral().setValue(null);
		form.dteReferralReceived().setValue(null);
		// WDEV-11713
		clearKpi();
	}

	// WDEV-11713
	private void clearKpi()
	{
		form.lblKPI().setValue(null);
		form.lblWW().setValue(null);
		
		form.dtimKPI().setValue(null);
		form.dtimWW().setValue(null);
	}

	public void initialize(CALLINGFORM callingForm)
	{	
		//WDEV-18142
		form.ccConsultant().initializeResponsibleHcp(MosType.HCP, true, form.qmbService().getValue(), null);//.initializeConsultantResponsibleHcp(MosType.MEDIC, MedicGrade.CONS, null);
		//WDEV-20894
		if (form.qmbService().getValue() != null && form.cmbFunction().getValue() != null)
		{
			form.ccConsultant().initializeResponsibleHcp(MosType.HCP, true, form.qmbService().getValue(), form.cmbFunction().getValue().getFunction());
		}
		
		form.getLocalContext().setCurrentAwaitingClinicalInformationVo(null);
		form.getLocalContext().setContractConfigurations(null);	//WDEV-18904
		form.getGlobalContext().RefMan.setAwaitingClinicalInfo(null);
		form.getGlobalContext().RefMan.setAwaitingClinicalInfoBoolean(null);
		form.getLocalContext().setbRTTBreachDateInThePastAcknowledged(null); //WDEV-23904
		//wdev-12430
		form.cmbSOR().clear();
		SourceOfReferralCollection tempVoColl = ims.core.vo.lookups.LookupHelper.getSourceOfReferral(domain.getLookupService());
		if(tempVoColl != null)
			for(int i = 0;i < tempVoColl.size();i++ )
			{
				if(tempVoColl.get(i) != null 
					&& (tempVoColl.get(i).equals(SourceOfReferral.GP) || tempVoColl.get(i).equals(SourceOfReferral.AHP)
					|| tempVoColl.get(i).equals(SourceOfReferral.TRANSFER) || tempVoColl.get(i).equals(SourceOfReferral.SELF) || tempVoColl.get(i).equals(SourceOfReferral.CONSULTANT) ||  tempVoColl.get(i).equals(SourceOfReferral.NATIONAL_SCREENING)))  //wdev-20417
					form.cmbSOR().newRow((SourceOfReferral)tempVoColl.get(i),tempVoColl.get(i).getText());
			}
		//------------------
		//form.lblProcedure().setVisible(ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue());
		//form.qmbProcedure().setVisible(ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue());


		// WDEV-12866
		// Use the new function to list active Contracts for a specific location
		//		ContractConfigForReferralDetailsComponentVoCollection contracts = domain.listActiveContracts(domain.getOrganisationByLocation(engine.getCurrentLocation().getID()));
		ContractConfigForReferralDetailsComponentVoCollection contracts = domain.listActiveContractsForLocation((LocationRefVo) engine.getCurrentLocation());
		form.getLocalContext().setContractConfigurations(contracts);	//WDEV-18904
		for (int i = 0; contracts != null && i < contracts.size(); i++)
		{
			form.cmbContract().newRow(contracts.get(i), contracts.get(i).getContractName());
		}
		if (contracts != null && contracts.size() == 1)
			form.cmbContract().setValue(contracts.get(0));

		loadLocations();

		/*ReferralServiceFullVo services = domain.getReferralServices();
		if (services != null && services.getReferralServicesIsNotNull())
		{
			for (ServiceShortVo service : services.getReferralServices())
			{
				form.qmbService().newRow(service, service.getServiceName());
			}
		}*/
		clearControlsOnInitialize();

		//wdev-13647
		form.cmbNearestTreatmentCentreLocation().setVisible(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue());
		//form.lblCentreLocation().setVisible(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()); //WDEV-18142 
		form.lblNearestTreatment().setVisible(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue());
		if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
		{
			getAndPopulateNearestTreatmentCenterLocation();
		}
		//---------
		
		form.cmbCategory().setValue((form.getGlobalContext().Core.getPatientShort() != null && form.getGlobalContext().Core.getPatientShort().getPatientCategory() != null) ? form.getGlobalContext().Core.getPatientShort().getPatientCategory() : PatientStatus.NHS);

		form.getLocalContext().setAHPInfo(null);
		form.getLocalContext().setGPInfo(null);
		form.getLocalContext().setreferralVo(null);
		form.getLocalContext().setcallingForm(callingForm);
		form.getLocalContext().setTransferInfo(null);	
		updateControlState(false);

	}
	//WDEV-18904
	private ContractConfigForReferralDetailsComponentVo getDefaultSuitableContractForCCGCode(ContractConfigForReferralDetailsComponentVoCollection contracts)
	{
		if (contracts == null || contracts.size() == 0)
			return null;

		String patientCCG = getCCGCode(form.getGlobalContext().Core.getPatientShort());
		if (patientCCG == null || patientCCG.trim().length() == 0)
			return null;

		for (ContractConfigForReferralDetailsComponentVo contract : contracts)
		{
			if (contract == null)
				continue;
			if (isContractMatchingCCGRule(contract,patientCCG))
			{
				return contract;				
			}
		}
		return null;
	}
	private boolean isContractMatchingCCGRule(ContractConfigForReferralDetailsComponentVo contract, String cCGToMatch)
	{		
		if (contract.getCCGsForContract() != null && contract.getCCGsForContract().size() != 0)
		{	
			for (CCGToContractConfigForReferralDetailsComponentVo ccg : contract.getCCGsForContract())
			{
				if (ccg == null || !Boolean.TRUE.equals(ccg.getIsActive()) || (ccg.getCCGCode() != null && ccg.getCCGCode().length() == 0))
					continue;
				if (cCGToMatch.equals(ccg.getCCGCode()))
					return true;	
			}
		}
		return false;
	}

	private void loadLocations()
	{
		//		wdev-12682			
		if (form.cmbContract().getValue() != null
				&& form.cmbContract().getValue().getContractTypeIsNotNull()
				&& !form.cmbContract().getValue().getContractType().equals(ReferralManagementContractType.DIAGNOSTIC))
		{
			form.lblLocation().setVisible(false);
			form.cmbLocation().setVisible(false);
			form.cmbLocation().setValue(null);
		}
		else if (form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
				&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
		{
			form.cmbLocation().clear();
			
			/*if (!ConfigFlag.UI.DISABLE_MULTI_SITE_CATS_FUNCTIONALITY.getValue())
			{
				if (form.cmbContract().getValue() != null)
					voCollLocation = domain.listLocationByOrganisation(form.cmbContract().getValue().getContractOrganisation(), "");
			}
			else
				voCollLocation = domain.listLocationLite();*/
			
			LocationLiteVoCollection voCollLocation = domain.listLocationByContractAndService(form.cmbContract().getValue(), form.qmbService().getValue());

			if (voCollLocation != null && voCollLocation.size() > 0)
			{
				for (LocationLiteVo voLoc : voCollLocation)
					form.cmbLocation().newRow(voLoc, voLoc.getName());
			}

			form.cmbLocation().setValue(form.getLocalContext().getreferralVoIsNotNull() && form.getLocalContext().getreferralVo().getID_ReferralLetterDetailsIsNotNull() ? form.getLocalContext().getreferralVo().getLocation() : null);

			if (form.cmbLocation().getValue() == null && form.getLocalContext().getreferralVo() == null)
				defaultLocation();

			form.lblLocation().setVisible(true);
			form.cmbLocation().setVisible(true);
		}
		else
		{
			form.lblLocation().setVisible(false);
			form.cmbLocation().setVisible(false);
			form.cmbLocation().setValue(null);
		}
	}

	private void populateAHPDetailsPanelFromData(OrganisationWithSitesVo practice)
	{
		String referringCode = null;
		String referringCodeNat = null;

		//WDEV-11626
		clearPracticeDetails();

		if (practice != null)
		{
			form.txtLocation().setValue(practice.getName());

			if (practice.getAddressIsNotNull())
			{
				StringTokenizer st = new StringTokenizer(practice.getAddress().toDisplayString(), ",");
				String address = " ";
				while (st.hasMoreElements())
				{
					address = address + st.nextElement() + "\n";
				}
				form.txtGPAddress().setValue(address);
				
			}
			if (practice.getLocationSitesIsNotNull())
				if (practice.getLocationSites().size() > 0)
					form.txtLocation().setValue(practice.getName());// .getLocationSites().get(0).getName());

			for (TaxonomyMap mapping : practice.getCodeMappings())
			{
				if (mapping.getTaxonomyName().equals(TaxonomyType.ICAB))
					referringCode = mapping.getTaxonomyCode();
				else if (mapping.getTaxonomyName().equals(TaxonomyType.NAT_LOC_CODE))
					referringCodeNat = mapping.getTaxonomyCode();
			}
			
			populateContactsGrid(practice.getCommChannels());

			if (referringCode != null)
				form.txtRefPracticeCode().setValue(referringCode);
			else if (referringCodeNat != null)
				form.txtRefPracticeCode().setValue(referringCodeNat);
			if (practice.getPctCodeIsNotNull())
			{
				form.getLocalContext().setCCGCode(practice.getPctCode()); //WDEV-20756
			}

		}
	}

	private void populateGPDetailsPanelFromData(GpShortVo gp)
	{
		String referringCode = null;
		String referringCodeNat = null;
		String refPCT = null;

		//WDEv-11626
		setHCPInformationToNull();

		form.ctnGPName().txtGPName().setValue(gp.getName().toString());

		GpToPracticesVoCollection practices = gp.getPractices();
		if (practices.size() > 0)
		{
			for (GpToPracticesVo practice : practices)
			{
				if (practice.getPracticeIsNotNull())
				{
					if (practice.getIsPrimaryPractice())
					{
						if (practice.getPractice().getNameIsNotNull())
							form.txtLocation().setValue(practice.getPractice().getName());
						if (practice.getPractice().getAddressIsNotNull())
						{
							StringTokenizer st = new StringTokenizer(practice.getPractice().getAddress().toDisplayString(), ",");
							String address = " ";
							while (st.hasMoreElements())
							{
								address = address + st.nextElement() + "\n";
							}
							form.txtGPAddress().setValue(address);
						}

						/*
						 * if
						 * (practice.getPractice().getLocationSitesIsNotNull())
						 * if
						 * (practice.getPractice().getLocationSites().size()>0)
						 * form.txtLocation().setValue(practice.getPractice().
						 * getLocationSites().get(0).getName());
						 */

						if (practice.getPracticeIsNotNull())

							if (practice.getPractice().getPctCodeIsNotNull())
								refPCT = practice.getPractice().getPctCode();
						if (practice.getPractice().getCodeMappingsIsNotNull())
							for (TaxonomyMap mapping : practice.getPractice().getCodeMappings())
							{
								if (mapping.getTaxonomyName().equals(TaxonomyType.ICAB))
									referringCode = mapping.getTaxonomyCode();
								else if (mapping.getTaxonomyName().equals(TaxonomyType.NAT_LOC_CODE))
									referringCodeNat = mapping.getTaxonomyCode();

							}
						
						populateContactsGrid(practice.getPractice().getCommChannels());
						
						if (referringCode != null)
							form.txtRefPracticeCode().setValue(referringCode);
						else if (referringCodeNat != null)
							form.txtRefPracticeCode().setValue(referringCodeNat);
						if (refPCT != null)
							form.getLocalContext().setCCGCode(refPCT);
					}
				}
			}
		}
		// if (gp.getCommChannelsIsNotNull()&&gp.getCommChannels().size()>0)
		// {
		// CommChannelVo workPhone, mobilePhone,fax,email;
		// if((workPhone=gp.getCommChannels().getCommunicationChannel(ChannelType.WORK_PHONE))!=null)
		// if
		// (gp.getCommChannels().getCommunicationChannel(ChannelType.WORK_PHONE).getChannelTypeIsNotNull())
		// form.txtWorkPhone().setValue(workPhone.getCommValue());
		// if((mobilePhone=gp.getCommChannels().getCommunicationChannel(ChannelType.MOBILE))!=null)
		// if
		// (gp.getCommChannels().getCommunicationChannel(ChannelType.MOBILE).getChannelTypeIsNotNull())
		// form.txtMobilePhone().setValue(mobilePhone.getCommValue());
		// if((fax=gp.getCommChannels().getCommunicationChannel(ChannelType.FAX))!=null)
		// if
		// (gp.getCommChannels().getCommunicationChannel(ChannelType.FAX).getChannelTypeIsNotNull())
		// form.txtFaxNumber().setValue(fax.getCommValue());
		// if((email=gp.getCommChannels().getCommunicationChannel(ChannelType.EMAIL))!=null)
		// if
		// (gp.getCommChannels().getCommunicationChannel(ChannelType.EMAIL).getChannelTypeIsNotNull())
		// form.txtEmail().setValue(email.getCommValue());
		// }
	}

	private ReferralLetterDetailsVo populateDataFromScreen()
	{
		ReferralLetterDetailsVo referralVo = form.getLocalContext().getreferralVo();

		if (referralVo == null)
			referralVo = new ReferralLetterDetailsVo();

		// TODO Ask Neill if the condition applies or not
		// if (form.qmbProcedure().getValue() != null &&
		// ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue())
		// {
		
		if(referralVo.getAuthoringDateTime() == null)
			referralVo.setAuthoringDateTime(new DateTime());
		
		if(referralVo.getAuthoringUser() == null)
		{
			Object user = domain.getMosUser();
			
			if(user instanceof MemberOfStaffLiteVo)
			{
				referralVo.setAuthoringUser((MemberOfStaffLiteVo)user);
			}
		}
		
		referralVo.setProcedure(form.qmbProcedure().getValue());
		// }
		//WDEV-21176
		boolean isEmergencyReferral = ReferralUrgency.EMERGENCY.equals(form.cmbUrgency().getValue()); //WDEV-20944

		boolean referralManuallyMarkedAsNotRTT = form.getLocalContext().getCatsReferralWizardVo() != null && Boolean.TRUE.equals(form.getLocalContext().getCatsReferralWizardVo().getManuallyMarkedAsNotRTTImpact());
		
		if (isEmergencyReferral || referralManuallyMarkedAsNotRTT) //WDEV-20944
		{
			referralVo.setEnd18WW(null); 
			referralVo.setEndDateKPI(null);
			referralVo.setEndDateEmailKPI(null);
			referralVo.setEndDatePaperKPI(null);
		}
		else
		{	
    		referralVo.setEndDateKPI(form.dtimKPI().getValue());
    		referralVo.setEnd18WW(form.dtimWW().getValue());
		}
		
		referralVo.setOriginalDateOfReferral(form.getLocalContext().getTransferInfo() != null ? form.getLocalContext().getTransferInfo().getRTTStartDate() : null);

		if (form.dteReferral().getValue() != null)
			referralVo.setDateOfReferral(form.dteReferral().getValue());
		if (form.dteReferralReceived().getValue() != null)
			referralVo.setDateReferralReceived(form.dteReferralReceived().getValue());
		
		referralVo.setInterpreterRequired(form.cmbLanguage().getValue() != null ? YesNo.YES : YesNo.NO);
			
		referralVo.setLanguage(form.cmbLanguage().getValue());
				

		//WDEV-18391		
		referralVo.setSpecialRequirements(form.txtSpecialRequirements().getValue());

		
		referralVo.setTransportRequired(form.cmbType().getValue() != null ? YesNo.YES : YesNo.NO);
		referralVo.setTransport(form.cmbType().getValue());
		
		//WDEV-18194 Get Patient Transport details
		PatientTransportRequirementsVo patientTransportDetails = referralVo.getTransportRequirements() != null ? referralVo.getTransportRequirements() : new PatientTransportRequirementsVo();
		
		
		//wdev-19930,wdev-19933
		
		if( patientTransportDetails.getID_PatientTransportRequirements() == null && !patientTransportDetails.getCareContextIsNotNull())
		{
			//CatsReferralWizardVo voCats = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			if( form.getLocalContext().getCatsReferralWizardVo() != null )
				patientTransportDetails.setCareContext(form.getLocalContext().getCatsReferralWizardVo().getCareContext());
		}
		//-----

		patientTransportDetails.setTransportRequired(form.cmbType().getValue() != null);
		patientTransportDetails.setTransport(form.cmbType().getValue());
		patientTransportDetails.setSpecialRequirements(form.txtSpecialRequirements().getValue());
		
		referralVo.setTransportRequirements(patientTransportDetails);
		//end
		
		if (form.cmbSOR().getValue() != null)
		{
			if (form.cmbSOR().getValue().equals(SourceOfReferral.GP))
			{
				form.getLocalContext().setTransferInfo(null);
				referralVo.setReferrerType(SourceOfReferral.GP);
				if (form.getLocalContext().getGPInfoIsNotNull())
				{
					referralVo.setAlliedHealthProfName(null);
					referralVo.setGPName(form.getLocalContext().getGPInfo());
					for (GpToPracticesVo practice : form.getLocalContext().getGPInfo().getPractices())
					{
						if (practice.getPracticeIsNotNull())
						{
							if (practice.getIsPrimaryPractice())
							{
								referralVo.setPractice(practice.getPractice());
							}
						}
					}
				}

			}
			else if (form.cmbSOR().getValue().equals(SourceOfReferral.AHP))
			{
				form.getLocalContext().setTransferInfo(null);
				referralVo.setGPName(null);

				referralVo.setReferrerType(SourceOfReferral.AHP);
				referralVo.setAlliedHealthProfName(form.ctnGPName().txtGPName().getValue());
				
				referralVo.setOtherCommChannels(getChannelsFromContactGrid());	//wdev-20417
				referralVo.setRefererAddress(form.txtGPAddress().getValue());
				//referralVo.setPCT(form.RefPCTCode().getValue());				//wdev-20417 //WDEV-20756
				referralVo.setPCT(form.getLocalContext().getCCGCode() != null ? form.getLocalContext().getCCGCode() : UNKNOWN_RESIDENCE);			//WDEV-20756
				referralVo.setOtherLocation(form.txtLocation().getValue());		//wdev-20417
				referralVo.setAlliedHealthProfName(form.ctnGPName().txtGPName().getValue());	//wdev-20727
				
				
			}
			else if (form.cmbSOR().getValue().equals(SourceOfReferral.SELF))
			{
				form.getLocalContext().setTransferInfo(null);
				referralVo.setGPName(null);

				referralVo.setReferrerType(SourceOfReferral.SELF);
				//referralVo.setPCT(form.RefPCTCode().getValue()); //WDEV-18570,wdev-20417 
				referralVo.setPCT(form.getLocalContext().getCCGCode() != null ? form.getLocalContext().getCCGCode() : UNKNOWN_RESIDENCE);			//WDEV-20756
				referralVo.setAlliedHealthProfName(null);
			}
			else if (form.cmbSOR().getValue().equals(SourceOfReferral.TRANSFER))
			{
				referralVo.setTransferedBY(form.ctnGPName().txtGPName().getValue());
				referralVo.setReferrerType(SourceOfReferral.TRANSFER);
				referralVo.setAlliedHealthProfName(null);
				//referralVo.setPCT(form.RefPCTCode().getValue());				//WDEV-20756
				referralVo.setPCT(form.getLocalContext().getCCGCode() != null ? form.getLocalContext().getCCGCode() : UNKNOWN_RESIDENCE);			//WDEV-20756
				referralVo.setRefererAddress(form.txtGPAddress().getValue());
			}
			else if (form.cmbSOR().getValue().equals(SourceOfReferral.CONSULTANT))
			{
				referralVo.setGPName(null);

				referralVo.setReferrerType(SourceOfReferral.CONSULTANT);
				referralVo.setAlliedHealthProfName(null);
				//referralVo.setPCT(form.RefPCTCode().getValue());			//WDEV-20756
				referralVo.setPCT(form.getLocalContext().getCCGCode() != null ? form.getLocalContext().getCCGCode() : UNKNOWN_RESIDENCE);			//WDEV-20756
				
				/*Hcp voConsHCP = null;
				if (form.ccReferringConsultant().getValue() instanceof MedicVo)
					voConsHCP = new Hcp(((MedicVo)form.ccReferringConsultant().getValue()).getID_Hcp(),((MedicVo)form.ccReferringConsultant().getValue()).getBoVersion());
				else if (form.ccReferringConsultant().getValue() instanceof Hcp)
					voConsHCP = ((Hcp)form.ccReferringConsultant().getValue());*/
//				 form.getLocalContext().getReferrerHCP()
				referralVo.setReferringConsultant(form.ctnReferringConsultant().ccReferringConsultant().getValue() != null ? domain.getHCP(form.ctnReferringConsultant().ccReferringConsultant().getValue()) : null);	
				referralVo.setRefererAddress(form.txtGPAddress().getValue());
			}
			else if( form.cmbSOR().getValue().equals(SourceOfReferral.NATIONAL_SCREENING) )		//wdev-20417
			{
				form.getLocalContext().setTransferInfo(null);
				referralVo.setGPName(null);
				referralVo.setReferrerType(SourceOfReferral.NATIONAL_SCREENING);
				referralVo.setPCT(form.getLocalContext().getCCGCode() != null ? form.getLocalContext().getCCGCode() : UNKNOWN_RESIDENCE);			//WDEV-20756
//				if( form.getLocalContext().getCatsReferralWizardVoIsNotNull() && form.getLocalContext().getCatsReferralWizardVo().getPatientIsNotNull() && form.getLocalContext().getCatsReferralWizardVo().getPatient().getAddressIsNotNull())
//					referralVo.setPCT(form.getLocalContext().getCatsReferralWizardVo().getPatient().getAddress().getPctCode());
			}
		}
		//wdev-20417
		if( form.cmbInitiatedFrom().getVisible())
		{
			referralVo.setInitiatedFrom(form.cmbInitiatedFrom().getValue());
		}
		else
			referralVo.setInitiatedFrom(null);
		//----------------
		
		//wdev-20727
		if( form.qmbService().getValue() != null && (!referralVo.getServiceIsNotNull() || ( !referralVo.getService().equals(form.qmbService().getValue())) ))
		{
			ReferralServiceUpdatesVoCollection tempHistColl = referralVo.getServiceUpdateHistory();
			if( tempHistColl == null )
			{
				tempHistColl = new ReferralServiceUpdatesVoCollection();
			}
			ReferralServiceUpdatesVo tempVo = new ReferralServiceUpdatesVo(); 
			tempVo.setRecordingDateTime(new DateTime());
			tempVo.setService(form.qmbService().getValue());
			tempVo.setRecordingUser((MemberOfStaffLiteVo) domain.getMosUser());
			tempHistColl.add(tempVo);
			referralVo.setServiceUpdateHistory(tempHistColl);
			
		}
		if( form.cmbFunction().getVisible() )
		{
			referralVo.setFunction(form.cmbFunction().getValue());
		}
		else
		{
			referralVo.setFunction(null);
		}
		//-------
		
		referralVo.setService(form.qmbService().getValue());
		
		

		//WDEV-18142
		HcpLiteVo voConsHCP = null;
		if (form.ccConsultant().getValue() instanceof MedicLiteVo)
		{
			voConsHCP = new HcpLiteVo(((MedicLiteVo)form.ccConsultant().getValue()).getID_Hcp(),((MedicLiteVo)form.ccConsultant().getValue()).getBoVersion());
		}
		else if (form.ccConsultant().getValue() instanceof HcpLiteVo)
		{
			voConsHCP = (HcpLiteVo) form.ccConsultant().getValue();
		}
		
		referralVo.setConsultant(voConsHCP);

		//		wdev-12682
		if (form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
				&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
			referralVo.setLocation(form.cmbLocation().getValue());

		//WDEV-20756
//		if (form.RefPCTCode().getValue() != null)
//			referralVo.setPCT(form.RefPCTCode().getValue());
		
		if(form.getLocalContext().getCCGCode() != null)
			referralVo.setPCT(form.getLocalContext().getCCGCode());
		//WDEV-20756 ends here

		//referralVo.setFunction(null); //WDEV-18903
		referralVo.setIsReferrerPatientsGp(form.chkPatientsGp().getValue());

		CatsReferralWizardVo voCats = null;
		if (form.getGlobalContext().RefMan.getCatsReferralWizard() == null) // wdev-10020
		{
			//CatsReferralWizardVo voCats = null;
			//if (form.getGlobalContext().RefMan.getCatsReferralWizard() == null)
			//it is null if it gets in here
			voCats = new CatsReferralWizardVo();
			//else
				//voCats = form.getGlobalContext().RefMan.getCatsReferralWizard();

			
			voCats.setIsAwaitingClinicalInfo(form.getGlobalContext().RefMan.getAwaitingClinicalInfoBoolean());
			voCats.setAwaitingClinicalInfo(form.getLocalContext().getCurrentAwaitingClinicalInformationVo());
		}
		else
		{
			voCats = form.getGlobalContext().RefMan.getCatsReferralWizard();
		}
		// WDEV-11713 if( !
		// ConfigFlag.UI.DISABLE_MULTI_SITE_CATS_FUNCTIONALITY.getValue())
		voCats.setPatientCategory(form.cmbCategory().getValue());//WDEV-12181
		voCats.setContract(form.cmbContract().getValue());
		//wdev-13647
		if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
		{
			voCats.setNearestTreatmentCentre(form.cmbNearestTreatmentCentreLocation().getValue());
		}

		// WDEV-17930
		voCats.setUrgency(form.cmbUrgency().getValue());
		voCats.setCancerType(form.cmbCancerType().getValue()); //WDEV-19700
		// WDEV-18452 
		
		// WDEV-20119
		// For Consultant Upgrade urgency, want to display the date too
		if (voCats.getConsultantUpgradeDateIsNotNull() && voCats.getUrgencyIsNotNull() && voCats.getUrgency().getId() == ReferralUrgency.CONSULTANT_UPGRADE.getId())
		{
			form.cmbUrgency().setTooltip("Consultant Upgrade Date : " + voCats.getConsultantUpgradeDate());
		}
		
		//-----------
		
		voCats.setReferralDetails(referralVo);
		form.getGlobalContext().RefMan.setCatsReferralWizard(voCats);
		
		form.getGlobalContext().RefMan.getCatsReferralWizard().setPatientCategory(form.cmbCategory().getValue());

		//WDEV-18395
		form.getGlobalContext().RefMan.getCatsReferralWizard().setRTTClockImpact(form.chkActivityRTTClock().getValue());	
		if (form.getLocalContext().getTransferInfoIsNotNull())
		{
			form.getGlobalContext().RefMan.getCatsReferralWizard().setPathwayID(form.getLocalContext().getTransferInfo().getPathwayID());
			form.getGlobalContext().RefMan.getCatsReferralWizard().setReferralTransfer(form.getLocalContext().getTransferInfo());
		}
		return referralVo;

	}

	private CommChannelVoCollection getChannelsFromContactGrid()
	{
		CommChannelVoCollection coll = new CommChannelVoCollection();
		
		for(int i=0; i<form.grdContact().getRows().size(); i++)
		{
			grdContactRow row = form.grdContact().getRows().get(i);
			if (row.getcolType() != null && row.getcolContactValue() != null)
			{
				CommChannelVo comm = new CommChannelVo();
				comm.setChannelType(row.getcolType());
				comm.setCommValue(row.getcolContactValue());
				coll.add(comm);
			}
		}
		
		return coll.size() > 0 ? coll : null;
	}

	protected String[] validateUILogic()
	{
		List<String> errors = new ArrayList<String>();

		// if (form.qmbService().getValue() == null )
		// errors.add("Service is Mandatory");
		//wdev-18432
		/*if (form.dteOriginalReferralDate().getValue() != null && form.dteOriginalReferralDate().getValue().isGreaterThan(new Date()))
			errors.add("Original Referral Date cannot be in the future.");

		if (form.dteReferral().getValue() != null && form.dteOriginalReferralDate().getValue() != null)
		{
			if (form.dteOriginalReferralDate().getValue().isGreaterThan(form.dteReferral().getValue()))
				errors.add("Original Referral Date cannot be later than Date Referral Received.");
		}*/
		//wdev-18432
		
		//WDEV-20657
		if(form.ctnGPName().txtGPName().getValue()!=null && form.ctnGPName().txtGPName().getValue().length()>150)
			errors.add("The length of field Name is too big. It should be less or equal to 150.");
			
			
		if (form.dteReferral().getValue() != null && form.dteReferralReceived().getValue() != null)
		{
			if (form.dteReferral().getValue().isGreaterThan(form.dteReferralReceived().getValue()))
				//WDEV-16851
				errors.add("Date Referral Received cannot be later than Date Referral Letter Received.");

			if (form.dteReferral().getValue().isGreaterThan(new Date()) || form.dteReferralReceived().getValue().isGreaterThan(new Date()))
				//WDEV-16851
				errors.add("Referral Dates cannot be future dates.");
		}
		else if (form.dteReferral().getValue() == null)
			errors.add("Date of Referral is mandatory.");
		
		//WDEV-20384
		/*if(form.dtimWW().getValue()!=null && form.dtimWW().getValue().isLessThan(new Date()) && !Boolean.FALSE.equals(form.dteReferral().isEnabled()))
			errors.add("The referral date entered is invalid. RTT Breach date is earlier than today.");//WDEV-20608*/
		
		//WDEV-18554 WDEV-18599
		if (SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && form.getLocalContext().getTransferInfo()==null)
		{
			errors.add("If Referral Type is Inter Provider Transfer, RTT Start Date is mandatory in Referral Transfer dialog.");//WDEV-20058
		}
		
		//WDEV-20850
		if (SourceOfReferral.GP.equals(form.cmbSOR().getValue())&& form.ctnGPName().txtGPName().getValue()== null)
			errors.add("GP Name is mandatory.");
		
		if (form.getLocalContext().getCCGCode() == null
			&& form.cmbSOR().getValue() != null && (SourceOfReferral.GP.equals(form.cmbSOR().getValue()) /*|| SourceOfReferral.AHP.equals(form.cmbSOR().getValue())*/))		//wdev-20417			
			//WDEV-16851
			errors.add("Referral CCG Code is mandatory."); //WDEV-20713
		else if (form.getLocalContext().getCCGCode() == null
				&& form.cmbSOR().getValue() != null && !(SourceOfReferral.REQUEST_FOR_SERVICE.equals(form.cmbSOR().getValue()) || SourceOfReferral.TRANSFER_OF_CARE.equals(form.cmbSOR().getValue()) || SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()) || SourceOfReferral.GP.equals(form.cmbSOR().getValue()) || SourceOfReferral.AHP.equals(form.cmbSOR().getValue()) || SourceOfReferral.SELF.equals(form.cmbSOR().getValue()) || SourceOfReferral.NATIONAL_SCREENING.equals(form.cmbSOR().getValue()) || SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()))) //WDEV-18570,wdev-20417, WDEV-20383, wdev-19933
		
			errors.add("Referral CCG Code is mandatory.");
		
		if (form.cmbSOR().getValue() == null)
			errors.add("Referrer Type is mandatory.");

		if (form.cmbSOR().getValue() != null 
			&& form.cmbSOR().getValue().equals(SourceOfReferral.CONSULTANT)
			&& form.ctnReferringConsultant().ccReferringConsultant().getValue() == null)
			errors.add("Referrer Name is mandatory when referral type is 'Consultant'.");
		
		// This code is only to execute if the method is called from the Wizard
		// form and not this form.
		if (!form.btnSave().isVisible() && form.qmbService().getVisible() && form.qmbService().getValue() == null)
			errors.add("Service is mandatory.");

		//WDEV-21733 Contract is not mandatory if referral is for an emergency
//		if (form.cmbContract().getVisible() && form.cmbContract().getValue() == null)
		if (form.cmbContract().getVisible() && form.cmbContract().getValue() == null && !Boolean.TRUE.equals(form.getLocalContext().getIsAdmissionEmergencyReferral()))// && (form.getLocalContext().getCatsReferralWizardVo() == null || !(Boolean.TRUE.equals(form.getLocalContext().getCatsReferralWizardVo().getIsEmergencyReferral()))))
			errors.add("Contract is mandatory.");
		
		if (form.cmbUrgency().getVisible() && form.cmbUrgency().getValue() == null)
			errors.add("Urgency is mandatory.");
		
		//WDEV-19700
		if (form.cmbCancerType().getValue()==null && (ReferralUrgency.TWO_WEEK_WAIT.equals(form.cmbUrgency().getValue()) || ReferralUrgency.NATIONAL_SCREENING.equals(form.cmbUrgency().getValue())))  //WDEV-20026
		{
			errors.add("Cancer Type is mandatory.");
		}
		
		if (errors.size() > 0)
			return errors.toArray(new String[0]);
		return null;

	}
	
	protected void onFormModeChanged()
	{
		updateControlState(false);


		//		wdev-12682
		if (form.getGlobalContext().RefMan.getDiagnosticReferralForApplicationIsNotNull()
				&& form.getGlobalContext().RefMan.getDiagnosticReferralForApplication())
		{
			if (form.getMode().equals(FormMode.EDIT))
			{
				if (form.cmbLocation().getValue() == null && form.getLocalContext().getreferralVo() == null)
					defaultLocation();
			}
		}
	}

	public void defaultLocation()
	{
		for (int i = 0; i < form.cmbLocation().getValues().size(); i++)
		{
			LocationLiteVo voLoc = (LocationLiteVo) form.cmbLocation().getValues().get(i);
			if (engine.getCurrentLocation() != null && voLoc.getID_Location().equals(engine.getCurrentLocation().getID()))
				form.cmbLocation().setValue(voLoc);
		}

	}

	public Boolean anyDataToSave()
	{
		if (populateDataFromScreen().countFieldsWithValue() > 0)
			return true;
		return false;

	}

	public String[] validate(String[] errors)
	{
		String[] thisComponentErrors = validateUILogic();
		List<String> totalErrors = new ArrayList<String>();
		if (errors == null)
			return thisComponentErrors;
		else
		{
			for (int i = 0; i < errors.length; i++)
			{
				totalErrors.add(errors[i]);
			}
			if (thisComponentErrors != null)
				for (int j = 0; j < thisComponentErrors.length; j++)
				{
					totalErrors.add(thisComponentErrors[j]);
				}
			return totalErrors.toArray(new String[0]);
		}

	}

	private void clearControlsOnInitialize()
	{
		form.cmbLanguage().setValue(null);
		//WDEV-18142
		form.ccConsultant().clear();
		form.cmbType().setValue(null);
		form.txtGPAddress().setValue(null);
		
		form.txtLocation().setValue(null);
		//form.txtGPName().setValue(null);
		form.ctnGPName().txtGPName().setValue(null);		//wdev-20727
		
		setHCPInformationToNull();
		form.getLocalContext().setCCGCode(null);	//WDEV-20756
		form.dtimKPI().setValue(null);
		form.lblKPI().setValue(null);
		form.dteReferral().setValue(null);
		

		form.dteReferralReceived().setValue(null);
		form.dtimWW().setValue(null);
		form.lblWW().setValue(null);
		
		form.grdContact().getRows().clear();
	}

	
	protected void onChkPatientsGpValueChanged() throws PresentationLogicException
	{
		GpShortVo patientGp = null;
		form.getLocalContext().setGPInfo(form.getGlobalContext().RefMan.getPatientsGP());
		if (form.chkPatientsGp().getValue())
		{
			form.getLocalContext().setGPInfo(form.getGlobalContext().RefMan.getPatientsGP());
			if (form.getGlobalContext().RefMan.getPatientsGPIsNotNull())
				patientGp = form.getGlobalContext().RefMan.getPatientsGP();
			else if (form.getGlobalContext().Core.getPatientShortIsNotNull())
				patientGp = form.getLocalContext().getpatientsGp();// domain.getPatientGP(form.getGlobalContext().Core.getPatientShort().getID_Patient());

			if (patientGp != null)
				populateGPDetailsPanelFromData(patientGp);
			else
				onReferrerTypeSelectionChanged();

		}
		else if (!form.chkPatientsGp().getValue())
			onReferrerTypeSelectionChanged();
		else
			onReferrerTypeSelectionChanged();

	}

	protected void onQmbServiceTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException
	{
		loadService(value);
	}
	
	protected void onQmbServiceValueChanged() throws PresentationLogicException
	{	
		if (ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue())
			form.qmbProcedure().clear();

		//wdev-13647
		if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
		{
			getAndPopulateNearestTreatmentCenterLocation();
			if( form.cmbNearestTreatmentCentreLocation().getValue() == null)
				getAndPopulateNearestLocation();
		}
		//---------
		
		
		if (form.qmbService().getValue() != null
				&& Boolean.TRUE.equals(ConfigFlag.GEN.CHECK_DUPLICATE_PATIENT_REFERRALS.getValue()))
		{
			if ((form.getLocalContext().getCatsReferralWizardVo() != null && form.getLocalContext().getCatsReferralWizardVo().getID_CatsReferral() == null)
					|| (form.getLocalContext().getreferralVo() == null || (form.getLocalContext().getreferralVo() != null && form.getLocalContext().getreferralVo().getID_ReferralLetterDetails() == null)))
			{
				Date date = form.dteReferral().getValue();
				if (date == null)
					date = new Date();
				
				Date firstDate = ((Date) date.clone()).addDay(0 - ConfigFlag.GEN.REFERRAL_FOR_SERVICE_WITHIN_DAYS.getValue());
				
				boolean hasActiveReferralForService = domain.hasActiveReferralForService(form.getGlobalContext().Core.getPatientShort(), form.qmbService().getValue(), firstDate, date);
				
				if (hasActiveReferralForService)
					engine.showMessage("Patient already has an active referral for selected service within last " + ConfigFlag.GEN.REFERRAL_FOR_SERVICE_WITHIN_DAYS.getValue() + " days.", "Warning - Referral service");
			}
		}
		
		form.ccConsultant().initializeResponsibleHcp(MosType.HCP, true, form.qmbService().getValue(), null);
		form.ccConsultant().clear();
		
		boolean referralManuallyMarkedAsNotRTT = form.getLocalContext().getCatsReferralWizardVo() != null && Boolean.TRUE.equals(form.getLocalContext().getCatsReferralWizardVo().getManuallyMarkedAsNotRTTImpact());
		
		form.chkActivityRTTClock().setValue(!referralManuallyMarkedAsNotRTT && !SourceOfReferral.NATIONAL_SCREENING.equals(form.cmbSOR().getValue()) && form.qmbService().getValue() != null && Boolean.TRUE.equals(form.qmbService().getValue().getIsSubjectToRTTClock()) && contactIsNotDiagnosticOrDiagnosticTriage(form.cmbContract().getValue()));
		
		calculateKpi(); //WDEV-20181FunctionValueChanged
		
		//wdev-20727
		populateFunctionCombo();
		//end wdev-20727
		
		loadLocations();
		
		updateControlState(false);
	}
	
	
	
	
	private boolean contactIsNotDiagnosticOrDiagnosticTriage(ContractConfigForReferralDetailsComponentVo value)
	{
		if(value == null)
			return false;
		
		if(ReferralManagementContractType.DIAGNOSTIC.equals(value.getContractType()) || ReferralManagementContractType.DIAGNOSTICTRIAGE.equals(value.getContractType()))
			return false;
		
		return true;
	}

	//wdev-20727
	private void populateFunctionCombo()
	{
		form.cmbFunction().clear();
		ServiceFunctionLiteVoCollection voCollServiceFunctions = null;
		if( form.qmbService().getValue() != null )
		{
			voCollServiceFunctions = domain.listServiceFunctionByService(form.qmbService().getValue());
		}
		if( voCollServiceFunctions != null && voCollServiceFunctions.size() > 0)
		{
			
			form.lblFunction().setVisible(true);
			form.cmbFunction().setVisible(true);
			
			for( int k = 0; k < voCollServiceFunctions.size();k++)
			{
				ServiceFunctionLiteVo tempVo = voCollServiceFunctions.get(k);
				if( tempVo != null )
				{
					form.cmbFunction().newRow(tempVo, tempVo.getFunctionIsNotNull()? tempVo.getFunction().getText():null);
				}
			}
		}
		else
		{
			form.lblFunction().setVisible(false);
			form.cmbFunction().setVisible(false);
		}
	}
	//----------

	// WDEV-11713
	private String[] validateReferralReceivedDate()
	{
		ArrayList<String> errors = new ArrayList<String>();
		if (form.dteReferralReceived().getValue() != null)
		{
			// If the date of referral or the date of referral received is a
			// future date it will launch an exception.
			if (form.dteReferralReceived().getValue().isGreaterThan(new Date()))
				errors.add("Date Referral Letter Received cannot be in the future."); ////WDEV-18762
			if (form.dteReferral().getValue() != null)
				if (form.dteReferral().getValue().isGreaterThan(form.dteReferralReceived().getValue()))
					errors.add("Date Referral Received cannot be later than Date Referral Letter Received."); //WDEV-18762
		}
		if (errors.size() == 0)
			return null;
		String[] result = new String[errors.size()];
		errors.toArray(result);
		return result;
	}

	
	protected void onDteReferralReceivedValueChanged() throws PresentationLogicException
	{

		String[] errors = validateReferralReceivedDate();

		if (errors != null && errors.length > 0)
		{
			engine.showErrors(errors);
		}
		calculateKpi(); 
	}

	// WDEV-11713
	private void calculateKpi()
	{
		// startreceived
		form.lblWW().setValue(null);
		form.dtimWW().setValue(null);
		
		if (form.cmbContract().getValue() == null)
			return;
		
		if(SourceOfReferral.NATIONAL_SCREENING.equals(form.cmbSOR().getValue()))
			return;

		boolean isEmergencyReferral = form.getLocalContext().getCatsReferralWizardVo() != null && Boolean.TRUE.equals(form.getLocalContext().getCatsReferralWizardVo().getIsEmergencyReferral());
		// end receive
		
		//WDEV-20181
		Integer daysToRttBreachDate=getDaysToRttBreachDateByService(form.cmbContract().getValue(),form.qmbService().getValue());
		boolean serviceIsSubjectToRTT = form.qmbService().getValue() != null && Boolean.TRUE.equals(form.qmbService().getValue().getIsSubjectToRTTClock());
		
		//WDEV-20383
		if(form.getGlobalContext().RefMan.getReferralTransfer() != null)
		{
			if (form.getGlobalContext().RefMan.getReferralTransfer() != null && form.getGlobalContext().RefMan.getReferralTransfer().getRTTStartDate() != null && daysToRttBreachDate != null)
			{
				form.dtimWW().setValue(form.getGlobalContext().RefMan.getReferralTransfer().getRTTStartDate().copy().addDay(daysToRttBreachDate));
				form.lblWW().setValue(!isEmergencyReferral && form.dtimWW().getValue() != null ? form.dtimWW().getValue().toString() : null);
			}
			else if(form.getGlobalContext().RefMan.getReferralTransfer() != null && form.getGlobalContext().RefMan.getReferralTransfer().getRTTStartDate() != null && form.cmbContract().getValue().getDaysToRTTBreachDateIsNotNull() && serviceIsSubjectToRTT)
			{
				form.dtimWW().setValue(form.getGlobalContext().RefMan.getReferralTransfer().getRTTStartDate().copy().addDay(form.cmbContract().getValue().getDaysToRTTBreachDate()));// form.dtimWW().setValue(endWW);
				form.lblWW().setValue(!isEmergencyReferral && form.dtimWW().getValue() != null ? form.dtimWW().getValue().toString() : null);
			}
		}
		else
		{
			if (form.dteReferral().getValue() != null && daysToRttBreachDate!=null)
			{
				form.dtimWW().setValue(form.dteReferral().getValue().copy().addDay(daysToRttBreachDate));
				form.lblWW().setValue(!isEmergencyReferral && form.dtimWW().getValue() != null ? form.dtimWW().getValue().toString() : null);
			}
			else if (form.dteReferral().getValue() != null && form.cmbContract().getValue().getDaysToRTTBreachDateIsNotNull() && serviceIsSubjectToRTT)
			{
				form.dtimWW().setValue(form.dteReferral().getValue().copy().addDay(form.cmbContract().getValue().getDaysToRTTBreachDate()));// form.dtimWW().setValue(endWW);
				form.lblWW().setValue(!isEmergencyReferral && form.dtimWW().getValue() != null ? form.dtimWW().getValue().toString() : null);
			}
		}
	
	}

	private Integer getDaysToRttBreachDateByService(ContractConfigForReferralDetailsComponentVo contract, ServiceLiteVo service)
	{
		if (contract==null || service==null)
			return null;
		
		for (int i=0;contract.getServiceLocations()!=null && i<contract.getServiceLocations().size();i++)
		{
			if (contract.getServiceLocations().get(i)!=null && service.equals(contract.getServiceLocations().get(i).getService()))
				return contract.getServiceLocations().get(i).getDaysToRTTBreachDate();
		}
		
		return null;
	}

	private String[] validateReferralDate()
	{
		String[] result = null;
		if (form.dteReferral().getValue() != null)
		{
			// If the date of referral or the date of referral received is a
			// future date it will launch an exception.
			if (form.dteReferral().getValue().isGreaterThan(new Date()))
			{
				result = new String[]{"Date Referral Received cannot be in the future."}; //WDEV-18762
			}
		}
		return result;
	}

	
	protected void onDteReferralValueChanged() throws PresentationLogicException
	{

		String[] errors = validateReferralDate();
		if (errors!= null && errors.length>0)
		{
			engine.showErrors(errors);
			form.dteReferral().setValue(null);
			form.dteReferralReceived().setValue(null);
		}
		calculateKpi();
		form.getLocalContext().setbRTTBreachDateInThePastAcknowledged(false);
		updateControlState(false);
	}

	
	protected void onCmbLanguageValueChanged() throws PresentationLogicException
	{
		updateControlState(false);
	}

	public void setInitializedBooleanToFalse()
	{
		form.getLocalContext().setbReferralDetailsInitialized(Boolean.FALSE);

	}

	private void updateControlState(Boolean isReferralTypeChanged)
	{
		boolean isIPT_SourceOfReferral = SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue());
		
		//WDEV-20383
		// Keep this code here to hide the controls
		// for source of referral == Inter Provider Transfer
		form.GPContainer().setVisible(!isIPT_SourceOfReferral);

		form.lbl4().setVisible(!isIPT_SourceOfReferral);
		form.chkRespConsultant().setVisible(!isIPT_SourceOfReferral);
		form.chkRespConsultant().setEnabled(FormMode.EDIT.equals(form.getMode()) && SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()) && form.ccConsultant().getValue()!= null);
		form.chkPatientsGp().setVisible(!isIPT_SourceOfReferral );

		form.lblNameGP().setVisible(!isIPT_SourceOfReferral);
		form.GPSearch().setVisible(FormMode.EDIT.equals(form.getMode()) && !isIPT_SourceOfReferral);
		//form.txtGPName().setVisible(!isIPT_SourceOfReferral && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
		form.ctnGPName().setVisible(!isIPT_SourceOfReferral && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));	//wdev-20727
		
		form.lblLocationGP().setVisible(!isIPT_SourceOfReferral);
		form.AHPSearch().setVisible(FormMode.EDIT.equals(form.getMode()) && !isIPT_SourceOfReferral);
		form.txtLocation().setVisible(!isIPT_SourceOfReferral);
		form.lblAddressGP().setVisible(!isIPT_SourceOfReferral);
		form.txtGPAddress().setVisible(!isIPT_SourceOfReferral);
		//form.lbl33().setVisible(!isIPT_SourceOfReferral);
		form.lbl33().setVisible(false);	//WDEV-20756
		//form.RefPCTCode().setVisible(!isIPT_SourceOfReferral); //WDEV-20756
		form.RefPCTCode().setVisible(false); //WDEV-20756
		form.lbl31().setVisible(!isIPT_SourceOfReferral);
		form.txtRefPracticeCode().setVisible(!isIPT_SourceOfReferral);
		form.grdContact().setVisible(!isIPT_SourceOfReferral);
		form.grdContact().setReadOnly(FormMode.VIEW.equals(form.getMode()) ||(FormMode.EDIT.equals(form.getMode()) && !SourceOfReferral.AHP.equals(form.cmbSOR().getValue()))); //WDEV-20713
		
		form.btnAddChannel().setVisible(FormMode.EDIT.equals(form.getMode()) && SourceOfReferral.AHP.equals(form.cmbSOR().getValue()));
		form.btnAddChannel().setEnabled(FormMode.EDIT.equals(form.getMode()) && SourceOfReferral.AHP.equals(form.cmbSOR().getValue()));
		form.btnRemoveChannel().setVisible(FormMode.EDIT.equals(form.getMode()) && SourceOfReferral.AHP.equals(form.cmbSOR().getValue()));
		form.btnRemoveChannel().setEnabled(FormMode.EDIT.equals(form.getMode()) && form.grdContact().getSelectedRow() != null);
		
		Boolean isReferralDetails = CALLINGFORM.REFERRALDETAILS.equals(form.getLocalContext().getcallingForm());//WDEV-21175
		//WDEV-20944
		form.lbl18ww().setVisible(form.lblWW().getValue() != null && form.lblWW().getValue().length() > 0 && isReferralDetails && !SourceOfReferral.SELF.equals(form.cmbSOR().getValue()) && !ReferralUrgency.EMERGENCY.equals(form.cmbUrgency().getValue()));
		form.lblWW().setVisible(isReferralDetails && !SourceOfReferral.SELF.equals(form.cmbSOR().getValue()) && !ReferralUrgency.EMERGENCY.equals(form.cmbUrgency().getValue()));
		form.lblEKPI().setVisible(!SourceOfReferral.SELF.equals(form.cmbSOR().getValue()) && !ReferralUrgency.EMERGENCY.equals(form.cmbUrgency().getValue()));
		form.lblKPI().setVisible(!SourceOfReferral.SELF.equals(form.cmbSOR().getValue()) && !ReferralUrgency.EMERGENCY.equals(form.cmbUrgency().getValue()));
				
		if (form.getLocalContext().getcallingFormIsNotNull())
		{
			if (form.getLocalContext().getcallingForm().equals(CALLINGFORM.REFERRALDETAILS))
			{
				if (form.getGlobalContext().RefMan.getCatsReferralIsNotNull())
				{
					CatsReferralWizardVo catsReferral = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
					form.getLocalContext().sethasCatsReferralReferralLetter(false);
					form.getGlobalContext().RefMan.setAwaitingClinicalInfoBoolean(catsReferral.getIsAwaitingClinicalInfo());
					//form.btnClinicalInfo().setVisible(true);
					form.getLocalContext().setCurrentAwaitingClinicalInformationVo(catsReferral.getAwaitingClinicalInfo());

					if (catsReferral.getHasReferralLetterIsNotNull())
						if (catsReferral.getHasReferralLetter())
							form.getLocalContext().sethasCatsReferralReferralLetter(true);
						else
							form.getLocalContext().sethasCatsReferralReferralLetter(false);

					if (catsReferral != null && catsReferral.getCurrentStatusIsNotNull() && catsReferral.getCurrentStatus().getReferralStatusIsNotNull())
					{
						updateNormalControlState(form.getLocalContext().getreferralVoIsNotNull(), Boolean.TRUE.equals(catsReferral.getIsCAB()), (catsReferral != null && catsReferral.getReferralDetailsIsNotNull() ? true : false), isRejectedOrCancelledOrNoDataAndAccepted(catsReferral), isReferralTypeChanged);
					}
					
					//WDEV-20944
					boolean isEmergencyReferral = catsReferral!=null && (Boolean.TRUE.equals(catsReferral.getIsEmergencyReferral()) || ReferralUrgency.EMERGENCY.equals(catsReferral.getUrgency()));
					form.lbl18ww().setVisible(form.lblWW().getValue() != null && form.lblWW().getValue().length() > 0 && !isEmergencyReferral);
					form.lblWW().setVisible(!isEmergencyReferral);
					form.lblEKPI().setVisible(!isEmergencyReferral);
					form.lblKPI().setVisible(!isEmergencyReferral);
				}
			}
			else
			{
				updateNormalControlState(form.getLocalContext().getreferralVoIsNotNull(), false, false, false, isReferralTypeChanged);
			}
		}

		//if (form.getMode().equals(FormMode.VIEW) && form.qmbProcedure().getVisible())// wdev-7624
		//	form.qmbProcedure().setEnabled(false);

		if (form.getMode().equals(FormMode.VIEW))
		{
			form.btnEdit().setVisible(true);
			form.btnEdit().setEnabled(true);
			//WDEV-20383
			form.chkPatientsGp().setEnabled(false);
			//form.txtGPName().setEnabled(false);
			form.ctnGPName().txtGPName().setEnabled(false);	//wdev-20727
			//form.ccReferringConsultant().setEnabled(false);
			form.ctnReferringConsultant().ccReferringConsultant().setEnabled(false);		//wdev-20727
			form.txtLocation().setEnabled(false);
			form.txtGPAddress().setEnabled(false);
			form.RefPCTCode().setEnabled(false);
			form.txtRefPracticeCode().setEnabled(false);
			form.ccConsultant().setEnabled(false); //WDEV-20831
		}

		// wdev-6163
		if (form.getGlobalContext().RefMan.getIsProviderCancellationIsNotNull() && form.getGlobalContext().RefMan.getIsProviderCancellation())
			form.btnEdit().setVisible(false);

		//wdev-13647
		if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
		{
			form.cmbNearestTreatmentCentreLocation().setEnabled(form.getMode().equals(FormMode.EDIT));
		}
		

		//WDEV-19700
		form.cmbCancerType().setEnabled(form.getMode().equals(FormMode.EDIT) && (ReferralUrgency.TWO_WEEK_WAIT.equals(form.cmbUrgency().getValue()) || ReferralUrgency.NATIONAL_SCREENING.equals(form.cmbUrgency().getValue())));
		form.cmbCancerType().setRequired(form.getMode().equals(FormMode.EDIT) && (ReferralUrgency.TWO_WEEK_WAIT.equals(form.cmbUrgency().getValue()) || ReferralUrgency.NATIONAL_SCREENING.equals(form.cmbUrgency().getValue())));
		
		//WDEV-20686
		form.btnIPT().setEnabled(!SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()) && form.getMode().equals(FormMode.EDIT) && referralWasNotAcceptedYet());
		
		if(FormMode.VIEW.equals(form.getMode()) || Boolean.FALSE.equals(form.btnIPT().isEnabled()))
			form.btnIPT().setTooltip(form.getLocalContext().getIPT() != null ? form.getLocalContext().getIPT() : "");
		else
			form.btnIPT().setTooltip("");
		//WDEV-20686 ends here
		
		form.lblEKPI().setVisible(form.lblKPI().isVisible() && form.lblKPI().getValue()  != null); //WDEV-20944
		
		form.lblInitiatedFrom().setVisible((SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()) /*&& form.chkRespConsultant().getValue()*/) || SourceOfReferral.AHP.equals(form.cmbSOR().getValue())); 	//wdev-20417
		form.cmbInitiatedFrom().setVisible((SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()) /*&& form.chkRespConsultant().getValue()*/) || SourceOfReferral.AHP.equals(form.cmbSOR().getValue()));	//wdev-20417
		form.cmbInitiatedFrom().setEnabled(FormMode.EDIT.equals(form.getMode()));
		
		form.cmbFunction().setEnabled(FormMode.EDIT.equals(form.getMode()));	//wdev-20727
		
		//WDEV-23002
		form.btnUpdateReferralDate().setVisible(FormMode.VIEW.equals(form.getMode()) && engine.hasRight(AppRight.CAN_EDIT_REFERRAL_DATE));
	}

	private boolean isRejectedOrCancelledOrNoDataAndAccepted(CatsReferralWizardVo voCats)
	{
		boolean bReturn = false;
		if (voCats != null && (voCats.getCurrentStatusIsNotNull() && voCats.getCurrentStatus().getReferralStatusIsNotNull()
				&& (voCats.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER)
						|| voCats.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.CAB_CANCELLATION))
						|| voCats.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED)))
			bReturn = true;

		for (int i = 0; voCats.getStatusHistoryIsNotNull() && i < voCats.getStatusHistory().size(); i++)
		{
			if (voCats.getStatusHistory().get(i).getReferralStatusIsNotNull() 
					&& voCats.getStatusHistory().get(i).getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED)
					&& voCats.getAwaitingClinicalInfo() == null)
				return true;
		}
		return bReturn;
	}

	private void updateNormalControlState(boolean bUpdating, Boolean bCAB, boolean bReferallLetterDetailsExist, boolean bDisable, Boolean isReferralTypeChanged)
	{
		if (form.getMode().equals(FormMode.EDIT))
		{
			if (bCAB && form.getLocalContext().getbReferralDetailsInitializedIsNotNull() && form.getLocalContext().getbReferralDetailsInitialized())
			{
				form.btnSave().setVisible(true);
				form.btnCancel().setVisible(true);
			}

			if (form.getLocalContext().getbReferralDetailsInitializedIsNotNull() && !form.getLocalContext().getbReferralDetailsInitialized())
			{
				if (form.getLocalContext().getcallingForm().equals(CALLINGFORM.REFERRALDETAILS))
				{
					form.btnSave().setVisible(true);
					form.btnCancel().setVisible(true);
				}
			}
			form.cmbContract().setEnabled(!bDisable);//WDEV-11713
			// cmbPatientGP
			if (form.cmbSOR().getValue() != null)
				if (form.cmbSOR().getValue().equals(SourceOfReferral.GP))
					if (form.getGlobalContext().RefMan.getPatientsGP() != null)
						form.chkPatientsGp().setEnabled(FormMode.EDIT.equals(form.getMode()));
					else
						form.chkPatientsGp().setEnabled(false);
				else
					form.chkPatientsGp().setEnabled(false);
			else
				form.chkPatientsGp().setEnabled(false);

			
			form.cmbLocation().setEnabled(true);

			//form.lblProcedure().setVisible(ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue());
			//form.qmbProcedure().setVisible(ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue());
			//form.qmbProcedure().setEnabled(FormMode.EDIT.equals(form.getMode()));
			form.dteReferralReceived().setEnabled(true);
			//form.dteOriginalReferralDate().setEnabled(SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue())); //wdev-18432 //WDEV-19698
			
			form.cmbLanguage().setEnabled(true);
			
			//WDEV-18391
			form.txtSpecialRequirements().setEnabled(true);
			form.cmbType().setEnabled(true);
			//WDEV-18452 
			
			form.qmbService().setEnabled(true);
			form.cmbUrgency().setEnabled(referralWasNotAcceptedYet());
			form.ctnReferringConsultant().ccReferringConsultant().setVisible(false);
			form.btnIPT().setVisible(false);

			form.dteReferral().setEnabled(!bUpdating);

			if (bCAB && bReferallLetterDetailsExist)
				manageSORControls(true, isReferralTypeChanged);
			else if (bCAB && !bReferallLetterDetailsExist)// CAB could have
				// blank RLD info,
				// treat as ordinary
				// referral so all
				// data is editable
				manageSORControls(false, isReferralTypeChanged);
			else
				manageSORControls(false, isReferralTypeChanged);
		}
		else
		{
			// wdev-8686 form.btnEdit().setVisible(false);
			form.cmbLocation().setEnabled(false);
		}
		
		form.btnClinicalInfo().setVisible(ConfigFlag.UI.ENABLE_AWAITING_CLINICAL_INFO_FUNCTIONALITY.getValue());
		form.ccConsultant().setEnabled(FormMode.EDIT.equals(form.getMode()) && form.qmbService().getValue() != null); //WDEV-20831
	}


	private boolean referralWasNotAcceptedYet()
	{
		if(form.getLocalContext().getCatsReferralWizardVo() == null)
			return true;
		
		if(form.getLocalContext().getCatsReferralWizardVo().getStatusHistory() != null)
		{
			for(CatsReferralStatusVo status : form.getLocalContext().getCatsReferralWizardVo().getStatusHistory())
			{
				if(status == null)
					continue;
				
				if(ReferralApptStatus.REFERRAL_ACCEPTED.equals(status.getReferralStatus()))
					return false;
			}
		}
		
		return true;
	}

	private void manageSORControls(Boolean bCAB, Boolean isReferralTypeChanged)
	{
		boolean bEnable = (form.cmbSOR().getValue() != null 
				&& ( /*(form.cmbSOR().getValue().equals(SourceOfReferral.SELF))
					||  (form.cmbSOR().getValue().equals(SourceOfReferral.TRANSFER))
					|| */(form.cmbSOR().getValue().equals(SourceOfReferral.CONSULTANT))));
		
		form.RefPCTCode().setEnabled(FormMode.EDIT.equals(form.getMode()) && bEnable);
		form.txtRefPracticeCode().setEnabled(FormMode.EDIT.equals(form.getMode()) && bEnable);
		//form.RefPCTCode().setRequired(FormMode.EDIT.equals(form.getMode()) && bEnable);	//wdev-20417
		form.txtLocation().setEnabled(false);			//wdev-20417
		
		form.txtRefPracticeCode().setRequired(true);
		//form.txtGPName().setVisible(!SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
		if (form.cmbSOR().getValue() != null && !form.cmbSOR().getValue().equals(SourceOfReferral.CONSULTANT))
			form.ctnReferringConsultant().setVisible(false);		//wdev-20727
			//form.ccReferringConsultant().setVisible(false);
		
		if (form.cmbSOR().getValue() != null)
		{
			form.cmbSOR().setEnabled(!bCAB && referralWasNotAcceptedYet());
			if (form.cmbSOR().getValue().equals(SourceOfReferral.GP))
			{
				form.AHPSearch().setVisible(false);
				form.GPSearch().setVisible(bCAB ? false : FormMode.EDIT.equals(form.getMode()));
				form.lbl7().setVisible(false);
				//form.txtGPName().setEnabled(false);
				form.ctnGPName().txtGPName().setEnabled(false);	//wdev-20727
				form.lbl8().setVisible(true);
				form.lbl8().setTextColor(Color.Red);
				//form.txtGPName().setRequired(bCAB ? false : true);
				form.ctnGPName().txtGPName().setRequired(bCAB ? false : true);
				form.txtGPAddress().setEnabled(false);
				//form.txtGPName().setVisible(!SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
				form.ctnGPName().setVisible(!SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
				
			}
			else if (form.cmbSOR().getValue().equals(SourceOfReferral.AHP))
			{
				form.ctnGPName().txtGPName().setRequired(false);

				form.chkPatientsGp().setValue(null);
				form.GPSearch().setVisible(false);
				
				form.lbl7().setVisible(false);	//wdev-20417
				form.AHPSearch().setVisible(false);
				form.lbl8().setVisible(false);
				
				
				//form.ccReferringConsultant().setVisible(false);
				//form.ccReferringConsultant().setEnabled(false);
				form.ctnReferringConsultant().setVisible(false);		//wdev-20727
				
				//form.txtGPName().setEnabled(FormMode.EDIT.equals(form.getMode()));				//wdev-20727
				//form.txtGPName().setVisible(true);
				
				form.ctnGPName().txtGPName().setEnabled(FormMode.EDIT.equals(form.getMode()));				//wdev-20727
				form.ctnGPName().setVisible(true);
				
				form.txtGPAddress().setEnabled(FormMode.EDIT.equals(form.getMode()));
				
				
				//form.txtGPName().setVisible(!SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
				
				form.RefPCTCode().setEnabled(FormMode.EDIT.equals(form.getMode()));				//wdev-20417
				//form.RefPCTCode().setRequired(false);			//wdev-20417
				//form.txtLocation().setEnabled(form.getMode().equals(FormMode.EDIT));			//wdev-20417
				form.txtLocation().setEnabled(false);				//wdev-20727
				//WDEV-20756
				if (form.getGlobalContext().Core.getPatientShortIsNotNull())
				{
					if (isReferralTypeChanged)
						form.getLocalContext().setCCGCode(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ?form.getGlobalContext().Core.getPatientShort().getAddress().getPctCode() : "Q99"); 
				}
				//WDEV-20756 ends ere
			}
			else if (form.cmbSOR().getValue().equals(SourceOfReferral.SELF))
			{
				form.ctnGPName().txtGPName().setRequired(false);

				form.chkPatientsGp().setValue(null);
				form.GPSearch().setVisible(false);
				form.lbl7().setVisible(false);
				form.AHPSearch().setVisible(false);
				form.lbl8().setVisible(false);
				form.ctnGPName().txtGPName().setEnabled(false);
				form.txtGPAddress().setEnabled(false);				
				form.ctnGPName().setVisible(!SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
				form.txtRefPracticeCode().setRequired(false);
				
				if (form.getGlobalContext().Core.getPatientShortIsNotNull())
				{
					if (isReferralTypeChanged)
						//form.RefPCTCode().setValue(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ?form.getGlobalContext().Core.getPatientShort().getAddress().getPctCode() : "");
						form.getLocalContext().setCCGCode(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ?form.getGlobalContext().Core.getPatientShort().getAddress().getPctCode() : "Q99"); //WDEV-20756
						
					if (form.getLocalContext().getCCGCode() == null
						&& form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull()
						&& form.getGlobalContext().Core.getPatientShort().getAddress().getPostCodeIsNotNull())	
						form.getLocalContext().setCCGCode(domain.getCCGCodeFromPostCode(form.getGlobalContext().Core.getPatientShort().getAddress().getPostCode()));
					
					form.ctnGPName().txtGPName().setValue(form.getGlobalContext().Core.getPatientShort().getNameIsNotNull() ? form.getGlobalContext().Core.getPatientShort().getName().toString() : "");
					form.txtGPAddress().setValue(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ? form.getGlobalContext().Core.getPatientShort().getAddress().toDisplayStringForMultiLineTextBox() : ""); //WDEV-20756
					
					populateContactsGrid(form.getGlobalContext().Core.getPatientShort().getCommChannels());
				}
			}
			else if (SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()))
			{
				form.ctnGPName().txtGPName().setRequired(false);

				form.chkPatientsGp().setValue(null);
				form.GPSearch().setVisible(false);
				form.lbl7().setVisible(false);
				form.AHPSearch().setVisible(false);
				form.lbl8().setVisible(false);
				form.ctnGPName().txtGPName().setEnabled(false);
				form.ctnGPName().setVisible(!SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
				form.txtGPAddress().setEnabled(FormMode.EDIT.equals(form.getMode()) && !form.chkRespConsultant().getValue());
				form.ctnReferringConsultant().ccReferringConsultant().initialize(MosType.MEDIC, true);
				form.ctnReferringConsultant().setVisible(true);
				form.ctnReferringConsultant().ccReferringConsultant().setVisible(true);
				form.ctnReferringConsultant().ccReferringConsultant().isRequired(true);
				form.ctnReferringConsultant().ccReferringConsultant().setEnabled(FormMode.EDIT.equals(form.getMode()) && !form.chkRespConsultant().getValue());
				form.btnIPT().setVisible(false);
				form.txtRefPracticeCode().setRequired(false);
				form.txtRefPracticeCode().setEnabled(false);		//wdev-20417
				
//				if (form.getGlobalContext().Core.getPatientShortIsNotNull() && isReferralTypeChanged)
//				{
//					if(Boolean.FALSE.equals(ConfigFlag.DOM.GP_USE_SURGERIES.getValue()))
//					{
//						LocSiteVo voSurgery = domain.getPatientSurgery(form.getGlobalContext().Core.getPatientShort());
//						if (voSurgery != null)
//						{
//							form.getLocalContext().setCCGCode(voSurgery.getAddressIsNotNull() ? voSurgery.getAddress().getPCT() : null); //WDEV-20756
//
//							if (form.getLocalContext().getCCGCode() == null		//WDEV-20756
//								&& voSurgery.getAddressIsNotNull()
//								&& voSurgery.getAddress().getPostCodeIsNotNull())	
//								form.getLocalContext().setCCGCode(domain.getCCGCodeFromPostCode(voSurgery.getAddress().getPostCode()));
//						}
//					}
//					else
//					{
//						if (form.getGlobalContext().RefMan.getPatientsGPIsNotNull())
//						{
//							for (int i = 0 ; form.getGlobalContext().RefMan.getPatientsGP().getPracticesIsNotNull() && i < form.getGlobalContext().RefMan.getPatientsGP().getPractices().size() ; i++)
//							{
//								GpToPracticesVo voPractice = form.getGlobalContext().RefMan.getPatientsGP().getPractices().get(i);
//								if (voPractice.getIsPrimaryPractice())
//								{
//									form.getLocalContext().setCCGCode(voPractice.getPracticeIsNotNull() ? voPractice.getPractice().getPctCode() : null);	//WDEV-20756
//
//									if (form.getLocalContext().getCCGCode() == null	//WDEV-20756
//										&& voPractice.getPracticeIsNotNull()
//										&& voPractice.getPractice().getAddressIsNotNull()
//										&& voPractice.getPractice().getAddress().getPostCodeIsNotNull())	
//										form.getLocalContext().setCCGCode(domain.getCCGCodeFromPostCode(voPractice.getPractice().getAddress().getPostCode())); //WDEV-20756
//								}
//							}
//						}
//					}
//					
//					if (form.getLocalContext().getCCGCode() == null)
//					{
//						form.getLocalContext().setCCGCode(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ?form.getGlobalContext().Core.getPatientShort().getAddress().getPctCode() : "Q99"); //WDEV-20756
//						if (form.getLocalContext().getCCGCode() == null	//WDEV-20756
//							&& form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull()
//							&& form.getGlobalContext().Core.getPatientShort().getAddress().getPostCodeIsNotNull())	
//							form.getLocalContext().setCCGCode(domain.getCCGCodeFromPostCode(form.getGlobalContext().Core.getPatientShort().getAddress().getPostCode())); //WDEV-20756
//					}
//				}
				//WDEV-20756
				if (form.getGlobalContext().Core.getPatientShortIsNotNull())
				{
					if (isReferralTypeChanged)
						form.getLocalContext().setCCGCode(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ?form.getGlobalContext().Core.getPatientShort().getAddress().getPctCode() : "Q99"); 
				}
				//WDEV-20756 ends ere
			}
			else if (form.cmbSOR().getValue().equals(SourceOfReferral.TRANSFER))
			{
				form.ctnGPName().txtGPName().setRequired(false);

				form.chkPatientsGp().setValue(null);
				form.GPSearch().setVisible(false);
				form.lbl7().setVisible(false);
				form.AHPSearch().setVisible(false);
				form.lbl8().setVisible(false);
				form.ctnGPName().txtGPName().setEnabled(FormMode.EDIT.equals(form.getMode()));
				form.txtGPAddress().setEnabled(FormMode.EDIT.equals(form.getMode()));
				form.ctnGPName().setVisible(!SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
				form.btnIPT().setVisible(true);
				form.txtRefPracticeCode().setRequired(false);
				form.txtRefPracticeCode().setEnabled(false);	//wdev-20417
				form.txtRefPracticeCode().setValue(null);		//wdev-20417
				//WDEV-20756
				if (form.getGlobalContext().Core.getPatientShortIsNotNull())
				{
					if (isReferralTypeChanged)
						form.getLocalContext().setCCGCode(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ?form.getGlobalContext().Core.getPatientShort().getAddress().getPctCode() : "Q99"); 
				}
				//WDEV-20756 ends ere
			}
			//wdev-20417
			else if( SourceOfReferral.NATIONAL_SCREENING.equals(form.cmbSOR().getValue()))
			{
				form.ctnGPName().txtGPName().setRequired(false);
				form.chkPatientsGp().setValue(null);
				form.GPSearch().setVisible(false);
				form.lbl7().setVisible(false);
				form.AHPSearch().setVisible(false);
				form.lbl8().setVisible(false);
				form.ctnGPName().txtGPName().setEnabled(false);
				form.txtGPAddress().setEnabled(false);
				form.ctnGPName().setVisible(!SourceOfReferral.TRANSFER.equals(form.cmbSOR().getValue()) && !SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()));
				form.btnIPT().setVisible(false);
				form.txtRefPracticeCode().setRequired(false);
				
				
				if (form.getGlobalContext().Core.getPatientShortIsNotNull())
				{
					/*///-if (isReferralTypeChanged)
						form.RefPCTCode().setValue(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ?form.getGlobalContext().Core.getPatientShort().getAddress().getPctCode() : "");
					
					if (form.RefPCTCode().getValue() == null
						&& form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull()
						&& form.getGlobalContext().Core.getPatientShort().getAddress().getPostCodeIsNotNull())	
						form.RefPCTCode().setValue(domain.getCCGCodeFromPostCode(form.getGlobalContext().Core.getPatientShort().getAddress().getPostCode()));
					
					form.txtGPName().setValue(form.getGlobalContext().Core.getPatientShort().getNameIsNotNull() ? form.getGlobalContext().Core.getPatientShort().getName().toString() : ""); //// -///*/
					form.txtGPAddress().setValue(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ? form.getGlobalContext().Core.getPatientShort().getAddress().toDisplayStringForMultiLineTextBox() : "");
										
					//WDEV-20756
					if (isReferralTypeChanged)
						form.getLocalContext().setCCGCode(form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull() ?form.getGlobalContext().Core.getPatientShort().getAddress().getPctCode() : "Q99"); 
					//WDEV-20756 ends here
					
					populateContactsGrid(form.getGlobalContext().Core.getPatientShort().getCommChannels());
				}
				
				
				form.txtLocation().setValue(null);
				form.txtRefPracticeCode().setValue(null);									//wdev-20417
			
				//form.getLocalContext().setCCGCode(null);											//wdev-20727 //WDEV-20756

				form.ctnGPName().txtGPName().setValue("National Screening Programme");					//wdev-20727
				
				//form.RefPCTCode().setValue(voCats.getPatient().getAddress().getPctCode());
				//form.RefPCTCode().setValue(voCats.getReferralDetails().getPCT());
				
				
				
				
			}
			else if( SourceOfReferral.REQUEST_FOR_SERVICE.equals(form.cmbSOR().getValue()))	//wdev-19930
			{
				form.chkPatientsGp().setEnabled(false);
				form.chkPatientsGp().setEnabled(false);
				form.ctnGPName().txtGPName().setEnabled(false);
				form.txtLocation().setEnabled(false);
				form.txtGPAddress().setEnabled(false);
				form.RefPCTCode().setEnabled(false);
				form.txtRefPracticeCode().setEnabled(false);
				form.GPSearch().setVisible(false);
				form.AHPSearch().setVisible(false);
				form.cmbSOR().setEnabled(false);
				
			}
			else if( SourceOfReferral.TRANSFER_OF_CARE.equals(form.cmbSOR().getValue()))	//wdev-19933
			{
				form.chkPatientsGp().setEnabled(false);
				form.chkPatientsGp().setEnabled(false);
				form.ctnGPName().txtGPName().setEnabled(false);
				form.txtLocation().setEnabled(false);
				form.txtGPAddress().setEnabled(false);
				form.RefPCTCode().setEnabled(false);
				form.txtRefPracticeCode().setEnabled(false);
				form.GPSearch().setVisible(false);
				form.AHPSearch().setVisible(false);
				form.cmbSOR().setEnabled(false);
			}

			else if (form.cmbSOR().getValue() == null || form.qmbService() == null || form.chkPatientsGp() == null)
				initialize(form.getLocalContext().getcallingForm());
		}
		else
		{
			form.cmbSOR().setEnabled(true);
			form.AHPSearch().setVisible(false);
			form.lbl7().setVisible(false);
			form.lbl8().setVisible(false);
			form.GPSearch().setVisible(false);
			form.ctnGPName().txtGPName().setEnabled(false);
			form.txtGPAddress().setEnabled(false);		//wdev-20417
		}
	}

	
	protected void onBtnCancelClick() throws PresentationLogicException
	{
		form.getLocalContext().setcomponentEvent(ReferralDetailsComponentButtonClicked.CANCEL);

		CatsReferralWizardVo cats = domain.getCatsReferral(form.getLocalContext().getCatsReferralWizardVo());
		setValue(cats.getReferralDetails(), cats);

		form.setMode(FormMode.VIEW);
	}

	
	protected void onBtnEditClick() throws PresentationLogicException
	{
		form.getLocalContext().setcomponentEvent(ReferralDetailsComponentButtonClicked.EDIT);
		form.setMode(FormMode.EDIT);
		
		loadUrgency();//WDEV-20797
		
		updateControlState(false);
		//wdev-13647
		if( form.cmbNearestTreatmentCentreLocation().getValue() == null)
			getAndPopulateNearestLocation();
		//--
	}

	
	protected void onBtnSaveClick() throws PresentationLogicException
	{
		doSave(false);
		
	}

	private void doSave(boolean bUrgChangedToEmergency)
	{
		ReferralLetterDetailsVo referralDetailsVo = getValue();
		CatsReferralWizardVo voCats = null;
		
		//WDEV-20558
		if (form.getLocalContext().getCatsReferralWizardVo() != null && domain.isStale(form.getLocalContext().getCatsReferralWizardVo()))
        {
            engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
            form.getLocalContext().setcomponentEvent(ReferralDetailsComponentButtonClicked.CANCEL);
            CatsReferralWizardVo cats = domain.getCatsReferral(form.getLocalContext().getCatsReferralWizardVo());
            form.getLocalContext().setCatsReferralWizardVo(cats);
    		setValue(cats.getReferralDetails(), cats);
    		form.setMode(FormMode.VIEW);
    		return;
        }
		
		try
		{
			String[] errors = validateUILogic();
			
			if (errors != null)
			{
				engine.showErrors(errors);
				return;
			}
			
			errors = referralDetailsVo.validate(errors);
			if (errors != null)
			{
				engine.showErrors(errors);
				return;
			}
			
			voCats = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			if (!bUrgChangedToEmergency && (Boolean.TRUE.equals(form.getLocalContext().getbUrgencyChangedToEmergency()) && CALLINGFORM.REFERRALDETAILS.equals(form.getLocalContext().getcallingForm())))
			{				
				form.getLocalContext().setMessageBoxUrgencyChangedToEmergency(engine.showMessage(getReferralChangeUrgencyMessage(voCats), "Change Urgency", MessageButtons.YESNO, MessageIcon.QUESTION));
				return;
			}
			//WDEV-22259 -- end //WDEV-23904 			
			if (!Boolean.TRUE.equals(validateRTTDate()) && !Boolean.TRUE.equals(form.getLocalContext().getbRTTBreachDateInThePastAcknowledged()))
				return;
			// voCats.setIsAwaitingClinicalInfo(form.getGlobalContext().RefMan.getAwaitingClinicalInfoBoolean());
			// voCats.setAwaitingClinicalInfo(form.getLocalContext().getCurrentAwaitingClinicalInformationVo());

			//WDEV-11713 if (!ConfigFlag.UI.DISABLE_MULTI_SITE_CATS_FUNCTIONALITY.getValue())
			voCats.setContract(form.cmbContract().getValue());

			//WDEV-21733 Contract is not mandatory if referral is for an emergency
//			form.getGlobalContext().RefMan.setReferralContractTypeForPatient(form.cmbContract().getValue().getContractType());
			if (form.cmbContract().getValue() != null 
					&& form.cmbContract().getValue().getContractType()!= null
					&& !(Boolean.TRUE.equals(form.getLocalContext().getCatsReferralWizardVo().getIsEmergencyReferral())))
				form.getGlobalContext().RefMan.setReferralContractTypeForPatient(form.cmbContract().getValue().getContractType()); //WDEV-21733

			voCats.setPatientCategory(form.cmbCategory().getValue());//WDEV-12181
			voCats.setUrgency(form.cmbUrgency().getValue()); // WDEV-17930
			voCats.setCancerType(form.cmbCancerType().getValue()); //WDEV-19700
			if (ReferralUrgency.EMERGENCY.equals(form.cmbUrgency().getValue())) //WDEV-21176
			{
				voCats.setIsEmergencyReferral(Boolean.TRUE);
				if (voCats.getReferralDetails() != null)
				{	
					voCats.getReferralDetails().setEnd18WW(null);
					voCats.getReferralDetails().setEndDateEmailKPI(null);
					voCats.getReferralDetails().setEndDatePaperKPI(null);
					voCats.getReferralDetails().setEndDateKPI(null);
				}
			}			
			//WDEV-20944
			if (Boolean.TRUE.equals(voCats.getIsEmergencyReferral()))
			{
				voCats.setRTTClockImpact(Boolean.FALSE);
			}
			else
			{
				voCats.setRTTClockImpact(form.chkActivityRTTClock().getValue() );
			}
			
			//WDEV-18432
			voCats.setReferralTransfer(form.getLocalContext().getTransferInfo());
			voCats.setPathwayID(form.getLocalContext().getTransferInfoIsNotNull() ? form.getLocalContext().getTransferInfo().getPathwayID() : null);
			

			//wdev-13647
			if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
			{
				voCats.setNearestTreatmentCentre(form.cmbNearestTreatmentCentreLocation().getValue());
			}
			//---
			
			boolean isRefStatusEndCare = ReferralApptStatus.END_OF_CARE.equals(voCats.getCurrentStatus().getReferralStatus());
			boolean removeRTTData = (Boolean.TRUE.equals(voCats.getRTTClockImpact()) || Boolean.TRUE.equals(voCats.getHasPatientJourneyLinked())) && Boolean.TRUE.equals(form.getLocalContext().getbUrgencyChangedToEmergency());
			
			if ((isSORSelfandDirectReferralandUrgEmer(voCats, referralDetailsVo) || isNationalScreeningAndNoLetterRequired(voCats, referralDetailsVo) || (bUrgChangedToEmergency && canAcceptEmergencyReferral(voCats))) && neverHadAcceptedStatusBefore(voCats.getStatusHistory()) && !isRefStatusEndCare)
			{
				CatsReferralStatusVo voStatus = new CatsReferralStatusVo();
				
				voStatus.setAuthoringUser((MemberOfStaffRefVo)domain.getMosUser());
				voStatus.setStatusDateTime(new DateTime());
				
				voStatus.setReferralStatus(ReferralApptStatus.REFERRAL_ACCEPTED);
				
				voCats.setCurrentStatus(voStatus);
				
				if(voCats.getStatusHistory() == null)
				{
					voCats.setStatusHistory(new CatsReferralStatusVoCollection());
				}
				
				voCats.getStatusHistory().add(voStatus);	
			}
			//WDEV-22372
			if (isSORSelfandDirectReferralandUrgEmer(voCats, referralDetailsVo))
			{
				voCats.setHasReferralLetter(true);
			}
			//WDEV-22372 ends here

			errors = voCats.validate(errors);
			if (errors != null)
			{
				engine.showErrors(errors);
				return;
			}

			//			wdev-12682
			form.getLocalContext().setreferralVo(domain.save(referralDetailsVo, voCats, ReferralManagementContractType.DIAGNOSTIC.equals(form.getGlobalContext().RefMan.getReferralContractTypeForPatient()),removeRTTData));

			//WDEV-11535 - update Global Context if specialty has changed
			if(form.getLocalContext().getreferralVoIsNotNull() && form.getLocalContext().getreferralVo().getEpisodeOfCareIsNotNull())
				form.getGlobalContext().Core.setEpisodeofCareShort(form.getLocalContext().getreferralVo().getEpisodeOfCare());
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			form.getLocalContext().setreferralVo(domain.getReferral(referralDetailsVo.toReferralLetterDetailsRefVo()));
		}

		form.getLocalContext().setcomponentEvent(ReferralDetailsComponentButtonClicked.SAVE);
		if (referralDetailsVo.getDateReferralReceivedIsNotNull() && referralDetailsVo.getServiceIsNotNull() && form.getLocalContext().gethasCatsReferralReferralLetterIsNotNull() && form.getLocalContext().gethasCatsReferralReferralLetter())
			form.getLocalContext().setactiveDetailsButton(true);
		else
			form.getLocalContext().setactiveDetailsButton(false);

		form.setMode(FormMode.VIEW);
		//wdev-12256
		form.cmbContract().clear();

		// WDEV-12866
		// Use the new function to list active Contracts for a specific location
		// ContractConfigForReferralDetailsComponentVoCollection contracts = domain.listActiveContracts(domain.getOrganisationByLocation(engine.getCurrentLocation().getID()));
		ContractConfigForReferralDetailsComponentVoCollection contracts = domain.listActiveContractsForLocation((LocationRefVo) engine.getCurrentLocation());
		for (int i = 0; contracts != null && i < contracts.size(); i++)
		{
			form.cmbContract().newRow(contracts.get(i), contracts.get(i).getContractName());
		}
		//---end wdev-12256

		setValue(form.getLocalContext().getreferralVo(), domain.getCatsReferral(voCats));
	}
	
	private boolean isNationalScreeningAndNoLetterRequired(CatsReferralWizardVo voRefWizard, ReferralLetterDetailsVo referralDetailsVo)
	{
		if(voRefWizard == null)
			return false;
		
		return referralDetailsVo != null && SourceOfReferral.NATIONAL_SCREENING.equals(referralDetailsVo.getReferrerType()) && hasCancerTypeNoLetterRequired(voRefWizard.getCancerType());
	}
	private String getReferralChangeUrgencyMessage(CatsReferralWizardVo voCats)
	{
		if (voCats == null || voCats.getReferralDetails() == null)
			return null;
		StringBuilder sb = new StringBuilder();
		sb.append("Are you sure that you want to change this to an emergency referral?");
		if (SourceOfReferral.SELF.equals(voCats.getReferralDetails().getReferrerType()))
		{	
			if ((voCats.getReferralDetails().getEnd18WWIsNotNull() && Boolean.TRUE.equals(voCats.getRTTClockImpact())) || Boolean.TRUE.equals(voCats.getHasPatientJourneyLinked()))  
				sb.append("\nThis action will remove all RTT related information and set the referral's status to accepted.");
			else
				sb.append("\nThis action will set the referral's status to accepted.");
		}
		else
		{
			if (voCats.getReferralDetails().getDateReferralReceivedIsNotNull() && Boolean.TRUE.equals(voCats.getHasReferralLetter()))
			{
				if ((voCats.getReferralDetails().getEnd18WWIsNotNull() && Boolean.TRUE.equals(voCats.getRTTClockImpact())) ||  Boolean.TRUE.equals(voCats.getHasPatientJourneyLinked()))  
					sb.append("\nThis action will remove all RTT related information and set the referral's status to accepted.");
				else
					sb.append("\nThis action will set the referral's status to accepted.");
			}
			else if ((voCats.getReferralDetails().getEnd18WWIsNotNull() && Boolean.TRUE.equals(voCats.getRTTClockImpact())) ||  Boolean.TRUE.equals(voCats.getHasPatientJourneyLinked()))  
				sb.append("\nThis action will remove all RTT related information.");
			
		}
		return sb.toString();
	}
	private boolean hasCancerTypeNoLetterRequired(CancerType cancerType)
	{
		if(cancerType == null || form.getLocalContext().getcancerTypeConfig() == null || form.getLocalContext().getcancerTypeConfig().getCancerItemConfig() == null)
			return false;
		
		for(CancerTypeItemConfigVo item : form.getLocalContext().getcancerTypeConfig().getCancerItemConfig())
		{
			if(item == null)
				continue;
			
			if(cancerType.equals(item.getCancerType()) && Boolean.TRUE.equals(item.getNoReferralLetterRequired()))
				return true;
		}
		
		return false;
	}
	
	private boolean isSORSelfandDirectReferralandUrgEmer(CatsReferralWizardVo voRefWizard, ReferralLetterDetailsVo referralDetailsVo) 
	{	
		if(voRefWizard == null || referralDetailsVo == null)
			return false;
		
		return voRefWizard.getReferralDetails() != null && SourceOfReferral.SELF.equals(voRefWizard.getReferralDetails().getReferrerType())
					&& referralDetailsVo.getService() != null && Boolean.TRUE.equals(referralDetailsVo.getService().getDirectSelfReferralsAccepted())
					&& ReferralUrgency.EMERGENCY.equals(voRefWizard.getUrgency());
	}
	private boolean canAcceptEmergencyReferral(CatsReferralWizardVo voRefWizard) 
	{	
		if(voRefWizard == null)
			return false;
		
		return voRefWizard.getReferralDetails() != null && (SourceOfReferral.SELF.equals(voRefWizard.getReferralDetails().getReferrerType()) || (!SourceOfReferral.SELF.equals(voRefWizard.getReferralDetails().getReferrerType()) && Boolean.TRUE.equals(voRefWizard.getHasReferralLetter())))
						&& ReferralUrgency.EMERGENCY.equals(voRefWizard.getUrgency());
	}
	private boolean neverHadAcceptedStatusBefore(CatsReferralStatusVoCollection statusHistory) 
	{
		if(statusHistory == null)
			return false;
		
		for(int i = 0 ; statusHistory != null && i < statusHistory.size() ; i++)
		{
			if (statusHistory.get(i).getReferralStatusIsNotNull()
				&& (statusHistory.get(i).getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED)
					|| statusHistory.get(i).getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED) ) )
					return false;
		}
		
		return true;
	}

	// 
	// protected void onBtnChangeOfServiceClick() throws
	// PresentationLogicException
	// {
	// form.getGlobalContext().RefMan.setCurrentServiceLiteVo(form.qmbService().getValue());
	// engine.open(form.getForms().RefMan.ChangeServiceDialog);
	// }
	public void setReferralAccepted()
	{
		updateControlState(false);
	}

	public void setIsReferralAccepted(Boolean refStatus)
	{
		form.getLocalContext().setbReferralAccepted(refStatus);
		updateControlState(false);
	}

	public void setPatientsGp(GpShortVo gp)
	{
		form.getLocalContext().setpatientsGp(gp);
	}

	public Boolean getActiveDetails()
	{
		return form.getLocalContext().getactiveDetailsButton();

	}

	public ReferralDetailsComponentButtonClicked getComponentEvent()
	{
		return form.getLocalContext().getcomponentEvent();

	}

	protected void onQmbProcedureTextSubmited(String value) throws PresentationLogicException
	{
		if (form.qmbService().getValue() == null)
		{
			engine.showMessage("Please select a Service and query again.");
			form.qmbProcedure().setEditedText("");
			form.qmbService().setFocus();
			return;
		}

		try
		{
			populateProcedures(domain.listProcedures(value, form.qmbService().getValue()));
		}
		catch (DomainInterfaceException e)
		{
			engine.showMessage(e.getMessage());
		}
	}

	private void populateProcedures(ProcedureLiteVoCollection listProcedures)
	{
		// Clear the query combo box
		form.qmbProcedure().clear();

		if (listProcedures == null)
			return;

		for (int i = 0; i < listProcedures.size(); i++)
		{
			ProcedureLiteVo procedure = listProcedures.get(i);

			if (procedure != null)
			{
				form.qmbProcedure().newRow(procedure, procedure.getProcedureName());
			}
		}

		if (form.qmbProcedure().getValues().size() == 1)
		{
			form.qmbProcedure().setValue((ProcedureLiteVo) form.qmbProcedure().getValues().get(0));
		}
		else
		{
			form.qmbProcedure().showOpened();
		}
	}

	protected void onQmbProcedureValueChanged() throws PresentationLogicException
	{
		// TODO Auto-generated method stub

	}

	
	protected void onCmbContractValueChanged() throws PresentationLogicException
	{
		// WDEV-21265 service etc.. to be cleared when contract value changes
		form.qmbService().clear();
		form.cmbFunction().clear();
		return;
		
		// WDEV-21265
//		loadService();
//		loadLocations();
//		// WDEV-11713
//		clearKpi();
//		calculateKpi();
//		//wdev-13647
//		if(Boolean.TRUE.equals(ConfigFlag.UI.REFERRAL_DETAILS_DISPLAY_NEAREST_TREATMENT_CENTRE.getValue()))
//		{
//			getAndPopulateNearestTreatmentCenterLocation();
//			if( form.cmbNearestTreatmentCentreLocation().getValue() == null)
//				getAndPopulateNearestLocation();
//		}
		//---------
	}

	
	private void loadService(String serviceValue)
	{
		//form.qmbService().clear();  WDEV-21265
		form.cmbFunction().clear();//WDEV-20843
		
		ServiceLiteVoCollection services = domain.listServicesByContractAndWildcard(form.cmbContract().getValue(), serviceValue, Boolean.TRUE.equals(form.getLocalContext().getIsAdmissionEmergencyReferral()));
		if (services != null)
		{
			form.qmbService().clear();
			for (ServiceLiteVo service : services)
			{
				if(service == null)
					continue;
					
				form.qmbService().newRow(service, service.getServiceName());
				form.qmbService().showOpened();
			}
		}
		
		
	}

	protected void onBtnClinicalInfoClick() throws PresentationLogicException
	{
		CatsReferralWizardVo voCats = null;
		if (form.getGlobalContext().RefMan.getCatsReferralIsNotNull()) // The
			// global
			// context
			// is not
			// null
		{
			voCats = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			form.getGlobalContext().RefMan.setAwaitingClinicalInfo(voCats.getAwaitingClinicalInfo());
		}
		else
		{
			form.getGlobalContext().RefMan.setAwaitingClinicalInfo(form.getLocalContext().getCurrentAwaitingClinicalInformationVo());
		}

		form.getGlobalContext().Core.setParentFormMode(form.getMode());

		engine.open(form.getForms().RefMan.AwaitingClinicalInformationDialog);
	}

	public void setCreationMode(Boolean creationMode)
	{
		form.getLocalContext().setIsInCreationMode(creationMode);
	}

	public Boolean getTriageFromButton()
	{
		return Boolean.TRUE.equals(form.getLocalContext().getTriageFromButton());
	}
	//wdev-13647
	private void getAndPopulateNearestTreatmentCenterLocation()
	{
		form.cmbNearestTreatmentCentreLocation().clear();
		if(form.cmbContract().getValue() != null && form.qmbService().getValue() != null)
		{
			ContractServiceLocationsConfigVoCollection tempVoColl = domain.listLocationServiceByContractAndService(form.cmbContract().getValue(),form.qmbService().getValue());
			populateNearestTreatmentCentreCombo(tempVoColl);
		}
		/*if(form.cmbContract().getValue() != null && form.qmbService().getValue() == null)
		{
			ContractServiceLocationsConfigVoCollection tempVoColl = domain.listLocationServiceByContract(form.cmbContract().getValue());
			populateNearestTreatmentCentreCombo(tempVoColl);
		}*/
	}
	//wdev-13647
	private void populateNearestTreatmentCentreCombo(ContractServiceLocationsConfigVoCollection tempVoColl)
	{
		if(tempVoColl != null && tempVoColl.size() > 0)
		{
			ContractServiceLocationsConfigVoCollection locserVoColl = new ContractServiceLocationsConfigVoCollection();
			for(int i = 0; i < tempVoColl.size();i++)
			{
				ContractServiceLocationsConfigVo tempVo = tempVoColl.get(i);
				if(tempVo == null)
					continue;
				if(checIfLocationIsalreadyInCombo(locserVoColl,tempVo) == false)
				{
					locserVoColl.add(tempVo);
					form.cmbNearestTreatmentCentreLocation().newRow(tempVo.getLocation(), tempVo.getLocation().getName());
				}
			}
		}
	}
	//wdev-13647
	private boolean checIfLocationIsalreadyInCombo(ContractServiceLocationsConfigVoCollection locserVoColl,ContractServiceLocationsConfigVo tempVo)
	{
		if(locserVoColl == null || locserVoColl.size() == 0)
			return false;
		for(int i = 0; i < locserVoColl.size();i++)
		{
			ContractServiceLocationsConfigVo tempSerLocVo = locserVoColl.get(i);
			if(tempSerLocVo == null)
				continue;
			if(tempSerLocVo.getLocationIsNotNull() && tempVo.getLocationIsNotNull() && tempSerLocVo.getLocation().getID_Location().equals(tempVo.getLocation().getID_Location()) )
				return true;
		}
		return false;
	}
	//wdev-13647
	private void getAndPopulateNearestLocation()
	{
		try
		{

			if (engine.getAddressProvider() != null && form.getGlobalContext().Core.getPatientShort() != null && form.getGlobalContext().Core.getPatientShort().getAddressIsNotNull())
				form.getLocalContext().setdistanceMAP(engine.getAddressProvider().computeDistances(form.getGlobalContext().Core.getPatientShort().getAddress(), "MILES"));

		}
		catch (PresentationLogicException e)
		{
			engine.showMessage(e.getMessage());
		}
		List<ConfigLocationLiteVo> tempVoColl = form.cmbNearestTreatmentCentreLocation().getValues();
		if(tempVoColl != null && tempVoColl.size() > 0)
		{
			Float distance[] = new Float[tempVoColl.size()];
			ConfigLocationLiteVo location[] = new ConfigLocationLiteVo[tempVoColl.size()];
			int k = 0;
			for(int i = 0; i < tempVoColl.size();i++)
			{
				if(form.getLocalContext().getdistanceMAPIsNotNull())
				{
					Object distanceObj = form.getLocalContext().getdistanceMAP().get(stripspaces(tempVoColl.get(i).getAddress() != null ? tempVoColl.get(i).getAddress().getAddressPostCode():null));
					if(distanceObj != null && distanceObj.toString() != null)
					{
						try
						{
							distance[k] = new Float(Float.parseFloat(distanceObj.toString()));
							location[k] = tempVoColl.get(i);
							k++;
						}
						catch (NumberFormatException e)
						{
							engine.showMessage("Error getting Nearest Treatment Center Location");
						}

					}
				}

			}

			Float min = distance[0];
			ConfigLocationLiteVo locVo= location[0];
			for(int j = 1; j < distance.length; j++)
			{
				if(distance[j] != null && distance[j] < min)
				{
					min = distance[j];
					locVo = location[j];
				}
			}
			if(min != null && locVo != null)
				form.cmbNearestTreatmentCentreLocation().setValue(locVo);


		}
	}
	//wdev-13647
	private String stripspaces(String addressPostCode)
	{
		if(addressPostCode == null)
			return null;
		StringTokenizer st = new StringTokenizer(addressPostCode);
		String t = "";
		while (st.hasMoreElements())
			t += st.nextElement();
		return t;
	}

	
	protected void onCcConsultantValueChanged()throws PresentationLogicException
	{
		form.fireCustomControlValueChanged(); 
		
		if(form.qmbService().getValue() == null)
		{
			form.ccConsultant().clear();
		}
		
		if(SourceOfReferral.CONSULTANT.equals(form.cmbSOR().getValue()))
		{
			clearReferrerDetails();
			
			form.chkRespConsultant().setValue(form.ccConsultant().getValue() != null);
			
			form.ctnReferringConsultant().ccReferringConsultant().setValue(form.ccConsultant().getValue());
			referringConsultantValueChanged();
		}
		
		updateControlState(false);
	}

	public Boolean getRTTClockImpact()
	{
		
		return (form.chkActivityRTTClock().getValue());
	}

	public String getPathwayID() 
	{
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected void onCmbUrgencyValueChanged() throws PresentationLogicException
	{
		populateCancerTypeCombo();//WDEV-19700
		updateControlState(false);
		//WDEV-21176
		form.getLocalContext().setbUrgencyChangedToEmergency(form.getLocalContext().getCatsReferralWizardVoIsNotNull() && form.getLocalContext().getCatsReferralWizardVo().getID_CatsReferralIsNotNull() && (form.getLocalContext().getCatsReferralWizardVo().getUrgency() == null || !ReferralUrgency.EMERGENCY.equals(form.getLocalContext().getCatsReferralWizardVo().getUrgency())) && ReferralUrgency.EMERGENCY.equals(form.cmbUrgency().getValue()));

	}
	
	//WDEV-19700
	private void populateCancerTypeCombo()
	{
		form.cmbCancerType().clear();
		
		if (ReferralUrgency.NATIONAL_SCREENING.equals(form.cmbUrgency().getValue()))
		{
			populateCancerTypeComboByCancerTypeConfig();
		}
		else if (ReferralUrgency.TWO_WEEK_WAIT.equals(form.cmbUrgency().getValue())) 
		{
			bindcmbCancerTypeLookup();
		}
	}

	//WDEV-19700
	private void populateCancerTypeComboByCancerTypeConfig()
	{
		form.cmbCancerType().clear();
		CancerTypeConfigVo cancerTypeConfig = form.getLocalContext().getcancerTypeConfig();
		if (cancerTypeConfig==null || cancerTypeConfig.getCancerItemConfig()==null || cancerTypeConfig.getCancerItemConfig().size()==0)
			return;
		
		for (int i=0;i<cancerTypeConfig.getCancerItemConfig().size();i++)
		{
			if (Boolean.TRUE.equals(cancerTypeConfig.getCancerItemConfig().get(i).getAvailableForNationalScreening()))
			{
				form.cmbCancerType().newRow(cancerTypeConfig.getCancerItemConfig().get(i).getCancerType(), cancerTypeConfig.getCancerItemConfig().get(i).getCancerType().getText());	
			}
		}
	}

	//WDEV-18904 //WDEV-21767
	private String getCCGCode(PatientRefVo patient)
	{
		if (patient == null || patient.getID_Patient() == null)
			return null;

		PatientWithGPForCCGVo patientWithGP = domain.getPatientWithGp(patient);
			
		if (!Boolean.TRUE.equals(ConfigFlag.DOM.GP_USE_SURGERIES.getValue()))
		{
			// 1 - Patient.Gp.practices.practice (with isDefault).PCTCode (this is a CCG so no lookup of CCGPCTPCCodes needed) 
			// 2 - Patient.Gp.practices.practice (with isDefault).Address.Postcode
			if (patientWithGP.getGp() != null && patientWithGP.getGp().getPractices() != null)
			{
				for (GpToPracticesVo gpToPractice : patientWithGP.getGp().getPractices())
				{
					if (Boolean.TRUE.equals(gpToPractice.getIsPrimaryPractice()))
					{
						// Case 1
						if (gpToPractice.getPractice() != null && gpToPractice.getPractice().getPctCode() != null && gpToPractice.getPractice().getPctCode().trim().length() > 0)
							return gpToPractice.getPractice().getPctCode();

						// Case 2
						if (gpToPractice.getPractice() != null && gpToPractice.getPractice().getAddress() != null)
						{
							String ccG = domain.getCCGCodeFromPostCode(gpToPractice.getPractice().getAddress().getPostCode());
							if (ccG != null) 
								return ccG;
						}
					}

				}
			}
		}

		// 3 - Patient.gpSurgery.address.postcode
		if (patientWithGP.getGpSurgery() != null && patientWithGP.getGpSurgery().getAddress() != null)
		{
			String codeCCG = domain.getCCGCodeFromPostCode(patientWithGP.getGpSurgery().getAddress().getPostCode());
			if (codeCCG != null) return codeCCG;
		}
		
		//4 - if overseas visitor, use designated code
		if (Boolean.TRUE.equals(patientWithGP.getOverseasVisitor())) 
			return OVERSEAS_VISITOR_CCG;
		
		// 5 -  Patient.Address.PCT(CCG) or Post code - if no post code on record use default codes for CCG // //WDEV-20585
		if (patientWithGP.getAddress() != null)
		{
			String codeCCG =  null;
			
			if (patientWithGP.getAddress().getPctCode() != null)
			{	
				codeCCG = patientWithGP.getAddress().getPctCode();
			}			
			else
			{
				codeCCG = domain.getCCGCodeFromPostCode(patientWithGP.getAddress().getPostCode());
			}
			
			if (codeCCG != null) return codeCCG;
		}
		
		//6 - current user's organisation
		if (engine.getCurrentLocation() != null)
		{
			String codeCCG = domain.getCCGCodeForCurrentLocationOrg(engine.getCurrentLocation());
			if (codeCCG != null)
				return codeCCG;
		}
		
		return UNKNOWN_RESIDENCE;	
	}
	
	private void populateContactsGrid(CommChannelVoCollection coll)
	{
		form.grdContact().getRows().clear();

		if (coll == null)
			return;

		for (int i = 0; i < coll.size(); i++)
		{
			CommChannelVo chan = coll.get(i);
			grdContactRow row = form.grdContact().getRows().newRow();
			row.setcolType(chan.getChannelType());
			row.setcolContactValue(chan.getCommValue());
			row.setTooltipForcolContactValue(chan.getCommValue());
			row.setValue(chan);
		}
	}

	@Override
	protected void onBtnRemoveChannelClick() throws PresentationLogicException
	{
		form.grdContact().getRows().remove(form.grdContact().getSelectedRowIndex());
		updateControlState(false);
	}

	@Override
	protected void onBtnAddChannelClick() throws PresentationLogicException
	{
		form.grdContact().getRows().newRow(true);
		form.grdContact().resetScrollPosition();
		updateControlState(false); //WDEV-21228
	}

	@Override
	protected void onGrdContactSelectionChanged() throws PresentationLogicException
	{
		updateControlState(false);
	}

	@Override
	protected void onCcReferringConsultantValueChanged() throws PresentationLogicException
	{
		referringConsultantValueChanged();
	}

	private void referringConsultantValueChanged()
	{
		if (form.ctnReferringConsultant().ccReferringConsultant().getValue() != null)
			form.getLocalContext().setReferrerHCP(domain.getHCP(form.ctnReferringConsultant().ccReferringConsultant().getValue()));
		
		form.grdContact().getRows().clear();
		
		if(form.getLocalContext().getReferrerHCP() != null && form.getLocalContext().getReferrerHCP().getMos() != null)
		{
			populateContactsGrid(form.getLocalContext().getReferrerHCP().getMos().getCommChannels());
		}
	}

	@Override
	protected void onChkRespConsultantValueChanged() throws PresentationLogicException
	{
		clearReferrerDetails();
		
		form.ctnReferringConsultant().ccReferringConsultant().setValue(form.chkRespConsultant().getValue() ? form.ccConsultant().getValue() : null);
		
		referringConsultantValueChanged();
		
		
		updateControlState(false);
	}

	@Override
	protected void onLnkServiceClick() throws PresentationLogicException
	{
		//wdev-20727
		if( form.getLocalContext().getreferralVo() != null)
		{
			engine.open(form.getForms().RefMan.ServiceHistoryDlg, new Object[] {form.getLocalContext().getreferralVo().getServiceUpdateHistory()});
		}
		
	}

	@Override
	protected void onLnkUrgencyClick() throws PresentationLogicException
	{
		if (CALLINGFORM.REFERRALWIZARD.equals(form.getLocalContext().getcallingForm()))
				return;
		engine.open(form.getForms().RefMan.UpdateUrgency, new Object[] {FormMode.VIEW});
		
	}

	@Override
	protected void onBtnIPTClick() throws PresentationLogicException
	{
		form.getGlobalContext().RefMan.setReferralTransfer(form.getLocalContext().getTransferInfo());
		if (form.getGlobalContext().RefMan.getReferralTransferIsNotNull())
			form.getGlobalContext().RefMan.getReferralTransfer().setPathwayID(form.getLocalContext().getTransferInfo().getPathwayID());
		
		engine.open(form.getForms().RefMan.ReferralTransferDialog, form.getMode().equals(FormMode.VIEW) ? new Object[]{FormMode.VIEW} : new Object[]{FormMode.EDIT});
	}

	//WDEV-20894
	@Override
	protected void onCmbFunctionValueChanged() throws PresentationLogicException
	{
		if (form.cmbFunction().getValue() != null && form.cmbFunction().getValue().getFunction() != null)
		{
			form.ccConsultant().initializeResponsibleHcp(MosType.HCP, true, form.qmbService().getValue(), form.cmbFunction().getValue().getFunction());
			form.ccConsultant().clear();
		}
		else
		{
			form.ccConsultant().initializeResponsibleHcp(MosType.HCP, true, form.qmbService().getValue(), null);
			form.ccConsultant().clear();
		}
	}

	@Override
	protected void onMessageBoxClosed(int messageBoxId, DialogResult result) throws PresentationLogicException
	{
		if (form.getLocalContext().getMessageBoxUrgencyChangedToEmergencyIsNotNull() && form.getLocalContext().getMessageBoxUrgencyChangedToEmergency().equals(messageBoxId))
		{
			form.getLocalContext().setMessageBoxUrgencyChangedToEmergency(null);
			if (DialogResult.NO.equals(result))
				return;
			doSave(true);
			form.getLocalContext().setbUrgencyChangedToEmergency(false);
			form.fireCustomControlValueChanged();
		}
		//WDEV-23904
		if (form.getLocalContext().getMessageBoxRTTDateInThePastIsNotNull() && form.getLocalContext().getMessageBoxRTTDateInThePast().equals(messageBoxId))
		{
			form.getLocalContext().setMessageBoxRTTDateInThePast(null);
			if (!DialogResult.OK.equals(result))
				return;
			form.getLocalContext().setbRTTBreachDateInThePastAcknowledged(true);
			if (CALLINGFORM.REFERRALDETAILS.equals(form.getLocalContext().getcallingForm()))
				doSave(false);			
			form.fireCustomControlValueChanged();
		}
		
	}

	@Override
	protected void onBtnUpdateReferralDateClick() throws PresentationLogicException
	{
		engine.open(form.getForms().Core.DateEntryDialog, new Object[]{form.dteReferralReceived().getValue()});
		
	}
	//WDEV-23904 
	public Boolean isBreachDateAcknowledged()
	{
		return form.getLocalContext().getbRTTBreachDateInThePastAcknowledged();
	}
	
	public Boolean validateRTTDate()
	{
		if(form.dtimWW().getValue()!=null && form.dtimWW().getValue().isLessThan(new Date()) && !Boolean.FALSE.equals(form.dteReferral().isEnabled()) && !Boolean.TRUE.equals(form.getLocalContext().getbRTTBreachDateInThePastAcknowledged()))
		{	
			form.getLocalContext().setMessageBoxRTTDateInThePast(engine.showMessage("The RTT Breach Date of this referral is earlier than today.", "Date in the past",MessageButtons.OK, MessageIcon.INFORMATION));			
			return false;
		}		
		return true;
	}
}
