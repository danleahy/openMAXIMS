//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.referraldetailscomponent;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbLanguageLookup();
	abstract protected void defaultcmbLanguageLookupValue();
	abstract protected void bindcmbTypeLookup();
	abstract protected void defaultcmbTypeLookupValue();
	abstract protected void bindgrdContactcolTypeLookup();
	abstract protected void bindcmbCategoryLookup();
	abstract protected void defaultcmbCategoryLookupValue();
	abstract protected void bindcmbCancerTypeLookup();
	abstract protected void defaultcmbCancerTypeLookupValue();
	abstract protected void bindcmbSORLookup();
	abstract protected void defaultcmbSORLookupValue();
	abstract protected void bindcmbInitiatedFromLookup();
	abstract protected void defaultcmbInitiatedFromLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUpdateReferralDateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbServiceTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcReferringConsultantValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbFunctionValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onLnkServiceClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onLnkUrgencyClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnIPTClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnClinicalInfoClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbLanguageValueSet(Object value);
	abstract protected void onCmbLanguageValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbTypeValueSet(Object value);
	abstract protected void onBtnRemoveChannelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnAddChannelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdContactSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkRespConsultantValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnAlliedPracticeSearch() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnGPSearch() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPatientsGpValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbContractValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbProcedureValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbProcedureTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbCategoryValueSet(Object value);
	abstract protected void onCcConsultantValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbUrgencyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbCancerTypeValueSet(Object value);
	abstract protected void oncmbSORValueSet(Object value);
	abstract protected void onReferrerTypeSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteReferralReceivedValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteReferralValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbInitiatedFromValueSet(Object value);

	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnUpdateReferralDate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateReferralDateClick();
			}
		});
		this.form.qmbService().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbServiceValueChanged();
			}
		});
		this.form.qmbService().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbServiceTextSubmited(value);
			}
		});
		this.form.ctnReferringConsultant().setccReferringConsultantValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcReferringConsultantValueChanged();
			}
		});
		this.form.cmbFunction().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbFunctionValueChanged();
			}
		});
		this.form.lnkService().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onLnkServiceClick();
			}
		});
		this.form.lnkUrgency().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onLnkUrgencyClick();
			}
		});
		this.form.btnIPT().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnIPTClick();
			}
		});
		this.form.btnClinicalInfo().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnClinicalInfoClick();
			}
		});
		this.form.cmbLanguage().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbLanguageValueSet(value);
			}
		});
		this.form.cmbLanguage().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbLanguageValueChanged();
			}
		});
		this.form.cmbType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbTypeValueSet(value);
			}
		});
		this.form.btnRemoveChannel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnRemoveChannelClick();
			}
		});
		this.form.btnAddChannel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAddChannelClick();
			}
		});
		this.form.grdContact().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdContactSelectionChanged();
			}
		});
		this.form.chkRespConsultant().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkRespConsultantValueChanged();
			}
		});
		this.form.AHPSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAlliedPracticeSearch();
			}
		});
		this.form.GPSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnGPSearch();
			}
		});
		this.form.chkPatientsGp().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPatientsGpValueChanged();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnEdit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClick();
			}
		});
		this.form.cmbContract().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbContractValueChanged();
			}
		});
		this.form.qmbProcedure().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbProcedureValueChanged();
			}
		});
		this.form.qmbProcedure().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbProcedureTextSubmited(value);
			}
		});
		this.form.cmbCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCategoryValueSet(value);
			}
		});
		this.form.setccConsultantValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcConsultantValueChanged();
			}
		});
		this.form.cmbUrgency().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbUrgencyValueChanged();
			}
		});
		this.form.cmbCancerType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbCancerTypeValueSet(value);
			}
		});
		this.form.cmbSOR().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSORValueSet(value);
			}
		});
		this.form.cmbSOR().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onReferrerTypeSelectionChanged();
			}
		});
		this.form.dteReferralReceived().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteReferralReceivedValueChanged();
			}
		});
		this.form.dteReferral().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteReferralValueChanged();
			}
		});
		this.form.cmbInitiatedFrom().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbInitiatedFromValueSet(value);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbLanguageLookup();
		bindcmbTypeLookup();
		bindgrdContactcolTypeLookup();
		bindcmbCategoryLookup();
		bindcmbCancerTypeLookup();
		bindcmbInitiatedFromLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbLanguageLookup();
		bindcmbTypeLookup();
		bindgrdContactcolTypeLookup();
		bindcmbCategoryLookup();
		bindcmbCancerTypeLookup();
		bindcmbSORLookup();
		bindcmbInitiatedFromLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbLanguageLookupValue();
		defaultcmbTypeLookupValue();
		defaultcmbCategoryLookupValue();
		defaultcmbCancerTypeLookupValue();
		defaultcmbSORLookupValue();
		defaultcmbInitiatedFromLookupValue();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIComponentEngine engine;
	protected GenForm form;
}
