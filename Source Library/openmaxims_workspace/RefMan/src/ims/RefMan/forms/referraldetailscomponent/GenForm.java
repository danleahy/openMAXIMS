//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.referraldetailscomponent;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	protected void fireCustomControlValueChanged()
	{
		super.fireValueChanged();
	}
	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class ctnReferringConsultantContainer extends ContainerBridge
	{
		private static final long serialVersionUID = 1L;
		protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
		{
			if(form == null)
				throw new RuntimeException("Invalid form");
			if(appForm == null)
				throw new RuntimeException("Invalid application form");
			if(control == null); // this is to avoid eclipse warning only.
			if(loader == null); // this is to avoid eclipse warning only.
			if(form_images_local == null); // this is to avoid eclipse warning only.
			if(startControlID == null)
				throw new RuntimeException("Invalid startControlID");
			if(designSize == null); // this is to avoid eclipse warning only.
			if(runtimeSize == null); // this is to avoid eclipse warning only.
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex");
	
	
			// Custom Controls
			ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
			RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 8, 16, 280, 20, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
			ims.framework.FormUiLogic m_ccReferringConsultantForm = loader.loadComponent(102256, appForm, startControlID * 10 + 1000, anchoringHelper1.getSize(), instance1, startTabIndex.intValue() + 29, skipContextValidation);
			//ims.framework.Control m_ccReferringConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(8), new Integer(16), new Integer(280), new Integer(20), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, new Integer(startTabIndex.intValue() + 29), m_ccReferringConsultantForm, instance1 } );
			ims.framework.Control m_ccReferringConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1001),  new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, new Integer(startTabIndex.intValue() + 29), m_ccReferringConsultantForm, instance1, Boolean.FALSE } );
			super.addControl(m_ccReferringConsultantControl);
			Menu[] menus1 = m_ccReferringConsultantForm.getForm().getRegisteredMenus();
			for(int x = 0; x < menus1.length; x++)
			{
				form.registerMenu(menus1[x]);
			}
		}
		public ims.core.forms.mosquery.IComponent ccReferringConsultant()
		{
			return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
		}
		public void setccReferringConsultantValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
		{
			((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
		}
		public void setccReferringConsultantVisible(boolean value)
		{
			((ims.framework.Control)super.getControl(0)).setVisible(value);
		}
		public boolean isccReferringConsultantVisible()
		{
			return ((ims.framework.Control)super.getControl(0)).isVisible();
		}
		public void setccReferringConsultantEnabled(boolean value)
		{
			((ims.framework.Control)super.getControl(0)).setEnabled(value);
		}
		public boolean isccReferringConsultantEnabled()
		{
			return ((ims.framework.Control)super.getControl(0)).isEnabled();
		}
	}
	public static class ctnGPNameContainer extends ContainerBridge
	{
		private static final long serialVersionUID = 1L;
		protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
		{
			if(form == null)
				throw new RuntimeException("Invalid form");
			if(appForm == null)
				throw new RuntimeException("Invalid application form");
			if(control == null); // this is to avoid eclipse warning only.
			if(loader == null); // this is to avoid eclipse warning only.
			if(form_images_local == null); // this is to avoid eclipse warning only.
			if(startControlID == null)
				throw new RuntimeException("Invalid startControlID");
			if(designSize == null); // this is to avoid eclipse warning only.
			if(runtimeSize == null); // this is to avoid eclipse warning only.
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex");
	
	
			// TextBox Controls
			RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 8, 16, 264, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
			super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), new Integer(startTabIndex.intValue() + 28), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		}
		public TextBox txtGPName()
		{
			return (TextBox)super.getControl(0);
		}
	}
	public static class cmbFunctionComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.ServiceFunctionLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.ServiceFunctionLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.ServiceFunctionLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.ServiceFunctionLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.ServiceFunctionLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.ServiceFunctionLiteVo getValue()
		{
			return (ims.core.vo.ServiceFunctionLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.ServiceFunctionLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbLanguageComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.Language value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.Language value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.Language value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.Language value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.Language value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.Language getValue()
		{
			return (ims.core.vo.lookups.Language)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.Language value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbTypeComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.scheduling.vo.lookups.ApptTransportType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.scheduling.vo.lookups.ApptTransportType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.scheduling.vo.lookups.ApptTransportType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.scheduling.vo.lookups.ApptTransportType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.scheduling.vo.lookups.ApptTransportType value)
		{
			return super.control.removeRow(value);
		}
		public ims.scheduling.vo.lookups.ApptTransportType getValue()
		{
			return (ims.scheduling.vo.lookups.ApptTransportType)super.control.getValue();
		}
		public void setValue(ims.scheduling.vo.lookups.ApptTransportType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbNearestTreatmentCentreLocationComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.admin.vo.ConfigLocationLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.admin.vo.ConfigLocationLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.admin.vo.ConfigLocationLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.admin.vo.ConfigLocationLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.admin.vo.ConfigLocationLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.admin.vo.ConfigLocationLiteVo getValue()
		{
			return (ims.admin.vo.ConfigLocationLiteVo)super.control.getValue();
		}
		public void setValue(ims.admin.vo.ConfigLocationLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbContractComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo getValue()
		{
			return (ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo)super.control.getValue();
		}
		public void setValue(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbLocationComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.LocationLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.LocationLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.LocationLiteVo getValue()
		{
			return (ims.core.vo.LocationLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.LocationLiteVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbCategoryComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.PatientStatus value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.PatientStatus value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.PatientStatus value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.PatientStatus value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.PatientStatus value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.PatientStatus getValue()
		{
			return (ims.core.vo.lookups.PatientStatus)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.PatientStatus value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbUrgencyComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralUrgency value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.RefMan.vo.lookups.ReferralUrgency value)
		{
			return super.control.removeRow(value);
		}
		public ims.RefMan.vo.lookups.ReferralUrgency getValue()
		{
			return (ims.RefMan.vo.lookups.ReferralUrgency)super.control.getValue();
		}
		public void setValue(ims.RefMan.vo.lookups.ReferralUrgency value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbCancerTypeComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.RefMan.vo.lookups.CancerType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.RefMan.vo.lookups.CancerType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.RefMan.vo.lookups.CancerType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.RefMan.vo.lookups.CancerType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.RefMan.vo.lookups.CancerType value)
		{
			return super.control.removeRow(value);
		}
		public ims.RefMan.vo.lookups.CancerType getValue()
		{
			return (ims.RefMan.vo.lookups.CancerType)super.control.getValue();
		}
		public void setValue(ims.RefMan.vo.lookups.CancerType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbSORComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.SourceOfReferral value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.SourceOfReferral value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.SourceOfReferral value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.SourceOfReferral value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.SourceOfReferral value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.SourceOfReferral getValue()
		{
			return (ims.core.vo.lookups.SourceOfReferral)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.SourceOfReferral value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbInitiatedFromComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.RefMan.vo.lookups.ReferralInitiatedFrom value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralInitiatedFrom value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralInitiatedFrom value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.RefMan.vo.lookups.ReferralInitiatedFrom value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.RefMan.vo.lookups.ReferralInitiatedFrom value)
		{
			return super.control.removeRow(value);
		}
		public ims.RefMan.vo.lookups.ReferralInitiatedFrom getValue()
		{
			return (ims.RefMan.vo.lookups.ReferralInitiatedFrom)super.control.getValue();
		}
		public void setValue(ims.RefMan.vo.lookups.ReferralInitiatedFrom value)
		{
			super.control.setValue(value);
		}
	}
	public static class qmbServiceComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.ServiceLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.ServiceLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.ServiceLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.ServiceLiteVo getValue()
		{
			return (ims.core.vo.ServiceLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.ServiceLiteVo value)
		{
			super.control.setValue(value);
		}
		public void setEditedText(String text)
		{
			super.control.setEditedText(text);
		}
		public String getEditedText()
		{
			return super.control.getEditedText();
		}
	}
	public static class qmbProcedureComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.ProcedureLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.ProcedureLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.ProcedureLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.ProcedureLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.ProcedureLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.ProcedureLiteVo getValue()
		{
			return (ims.core.vo.ProcedureLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.ProcedureLiteVo value)
		{
			super.control.setValue(value);
		}
		public void setEditedText(String text)
		{
			super.control.setEditedText(text);
		}
		public String getEditedText()
		{
			return super.control.getEditedText();
		}
	}
	public static class grdContactRow extends GridRowBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected grdContactRow(GridRow row)
		{
			super(row);
		}
		public void showOpened(int column)
		{
			super.row.showOpened(column);
		}
		public void setcolTypeReadOnly(boolean value)
		{
			super.row.setReadOnly(0, value);
		}
		public boolean iscolTypeReadOnly()
		{
			return super.row.isReadOnly(0);
		}
		public void showcolTypeOpened()
		{
			super.row.showOpened(0);
		}
		public void setTooltipForcolType(String value)
		{
			super.row.setTooltip(0, value);
		}
		public ims.core.vo.lookups.ChannelType getcolType()
		{
			return (ims.core.vo.lookups.ChannelType)super.row.get(0);
		}
		public void setcolType(ims.core.vo.lookups.ChannelType value)
		{
			super.row.set(0, value, true);
		}
		public void setCellcolTypeTooltip(String value)
		{
			super.row.setTooltip(0, value);
		}
		public void setcolContactValueReadOnly(boolean value)
		{
			super.row.setReadOnly(1, value);
		}
		public boolean iscolContactValueReadOnly()
		{
			return super.row.isReadOnly(1);
		}
		public void showcolContactValueOpened()
		{
			super.row.showOpened(1);
		}
		public void setTooltipForcolContactValue(String value)
		{
			super.row.setTooltip(1, value);
		}
		public String getcolContactValue()
		{
			return (String)super.row.get(1);
		}
		public void setcolContactValue(String value)
		{
			super.row.set(1, value);
		}
		public void setCellcolContactValueTooltip(String value)
		{
			super.row.setTooltip(1, value);
		}
		public ims.core.vo.CommChannelVo getValue()
		{
			return (ims.core.vo.CommChannelVo)super.row.getValue();
		}
		public void setValue(ims.core.vo.CommChannelVo value)
		{
			super.row.setValue(value);
		}
	}
	public static class grdContactRowCollection extends GridRowCollectionBridge
	{
		private static final long serialVersionUID = 1L;
		
		private grdContactRowCollection(GridRowCollection collection)
		{
			super(collection);
		}
		public grdContactRow get(int index)
		{
			return new grdContactRow(super.collection.get(index));
		}
		public grdContactRow newRow()
		{
			return new grdContactRow(super.collection.newRow());
		}
		public grdContactRow newRow(boolean autoSelect)
		{
			return new grdContactRow(super.collection.newRow(autoSelect));
		}
		public grdContactRow newRowAt(int index)
		{
			return new grdContactRow(super.collection.newRowAt(index));
		}
		public grdContactRow newRowAt(int index, boolean autoSelect)
		{
			return new grdContactRow(super.collection.newRowAt(index, autoSelect));
		}
	}
	public static class grdContactGrid extends GridBridge
	{
		private static final long serialVersionUID = 1L;
		
		private void addComboBoxColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean canBeEmpty, boolean autoPostBack, boolean bold, boolean canGrow, int maxDropDownItems)
		{
			super.grid.addComboBoxColumn(caption, captionAlignment, alignment, width, readOnly, canBeEmpty, autoPostBack, bold, canGrow, maxDropDownItems);
		}
		private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
		{
			super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
		}
		public ims.core.vo.CommChannelVoCollection getValues()
		{
			ims.core.vo.CommChannelVoCollection listOfValues = new ims.core.vo.CommChannelVoCollection();
			for(int x = 0; x < this.getRows().size(); x++)
			{
				listOfValues.add(this.getRows().get(x).getValue());
			}
			return listOfValues;
		}
		public ims.core.vo.CommChannelVo getValue()
		{
			return (ims.core.vo.CommChannelVo)super.grid.getValue();
		}
		public void setValue(ims.core.vo.CommChannelVo value)
		{
			super.grid.setValue(value);
		}
		public grdContactRow getSelectedRow()
		{
			return super.grid.getSelectedRow() == null ? null : new grdContactRow(super.grid.getSelectedRow());
		}
		public int getSelectedRowIndex()
		{
			return super.grid.getSelectedRowIndex();
		}
		public grdContactRowCollection getRows()
		{
			return new grdContactRowCollection(super.grid.getRows());
		}
		public grdContactRow getRowByValue(ims.core.vo.CommChannelVo value)
		{
			GridRow row = super.grid.getRowByValue(value);
			return row == null?null:new grdContactRow(row);
		}
		public void setcolTypeHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(0, value);
		}
		public String getcolTypeHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(0);
		}
		public GridComboBox colTypeComboBox()
		{
			return new GridComboBox(super.grid, 0);
		}
		public void setcolContactValueHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(1, value);
		}
		public String getcolContactValueHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(1);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
		if(!context.isValidContextType(ims.RefMan.vo.CatsReferralRefVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.RefMan.vo.CatsReferralRefVo' of the global context variable 'RefMan.CatsReferral' is not supported.");
		if(!context.isValidContextType(Boolean.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'Boolean' of the global context variable 'RefMan.IsProviderCancellation' is not supported.");
		if(!context.isValidContextType(ims.core.vo.EpisodeofCareShortVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.EpisodeofCareShortVo' of the global context variable 'Core.EpisodeofCareShort' is not supported.");
		if(!context.isValidContextType(ims.core.vo.lookups.ReferralManagementContractType.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.lookups.ReferralManagementContractType' of the global context variable 'RefMan.ReferralContractTypeForPatient' is not supported.");
		if(!context.isValidContextType(Boolean.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'Boolean' of the global context variable 'RefMan.DiagnosticReferralForApplication' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(824, 576);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Panel Controls
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 408, 48, 408, 384, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT);
		super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT,"Referrer Details", new Integer(2), ""}));

		// Custom Controls
		ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 160, 318, 248, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ims.framework.FormUiLogic m_ccConsultantForm = loader.loadComponent(102256, appForm, startControlID * 10 + 2000, anchoringHelper4.getSize(), instance1, startTabIndex.intValue() + 17, skipContextValidation);
		//ims.framework.Control m_ccConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(160), new Integer(318), new Integer(248), new Integer(20), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 17), m_ccConsultantForm, instance1 } );
		ims.framework.Control m_ccConsultantControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1005),  new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 17), m_ccConsultantForm, instance1, Boolean.FALSE } );
		super.addControl(m_ccConsultantControl);
		Menu[] menus1 = m_ccConsultantForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus1.length; x++)
		{
			form.registerMenu(menus1[x]);
		}

		// Container Clasess
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 516, 104, 292, 40, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		Container m_ctnReferringConsultant = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, null, new Boolean(false)});
		addControl(m_ctnReferringConsultant);
		ctnReferringConsultantContainer ctnReferringConsultant = (ctnReferringConsultantContainer)ContainerBridgeFlyweightFactory.getInstance().createContainerBridge(ctnReferringConsultantContainer.class, m_ctnReferringConsultant, factory);
		ims.framework.utils.SizeInfo m_ctnReferringConsultantDesignSize = new ims.framework.utils.SizeInfo(292, 40);
		ims.framework.utils.SizeInfo m_ctnReferringConsultantRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper5.getWidth(), anchoringHelper5.getHeight());
		ctnReferringConsultant.setContext(form, appForm, m_ctnReferringConsultant, loader, this.getImages(), startControlID, m_ctnReferringConsultantDesignSize, m_ctnReferringConsultantRuntimeSize, startTabIndex, skipContextValidation);
		super.addContainer(ctnReferringConsultant);
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 516, 104, 292, 40, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		Container m_ctnGPName = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, null, new Boolean(false)});
		addControl(m_ctnGPName);
		ctnGPNameContainer ctnGPName = (ctnGPNameContainer)ContainerBridgeFlyweightFactory.getInstance().createContainerBridge(ctnGPNameContainer.class, m_ctnGPName, factory);
		ims.framework.utils.SizeInfo m_ctnGPNameDesignSize = new ims.framework.utils.SizeInfo(292, 40);
		ims.framework.utils.SizeInfo m_ctnGPNameRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper6.getWidth(), anchoringHelper6.getHeight());
		ctnGPName.setContext(form, appForm, m_ctnGPName, loader, this.getImages(), startControlID, m_ctnGPNameDesignSize, m_ctnGPNameRuntimeSize, startTabIndex, skipContextValidation);
		super.addContainer(ctnGPName);

		// Label Controls
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 8, 291, 58, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Function:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 544, 10, 0, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 296, 10, 0, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 8, 493, 64, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Transport:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 8, 464, 127, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Interpreter Required:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 408, 438, 132, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Special Requirements:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 792, 124, 14, 22, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "*", new Integer(0), null, new Integer(1)}));
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 424, 82, 125, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Referral Initiated By:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 792, 157, 14, 22, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "*", new Integer(0), null, new Integer(1)}));
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 424, 127, 41, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Name:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 424, 160, 57, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Location:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 424, 188, 54, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Address:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 424, 244, 64, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "CCG Code:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 424, 268, 86, 17, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "Practice Code:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 8, 320, 104, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Responsible HCP:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 8, 233, 57, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Contract:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 8, 377, 57, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Location:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 8, 435, 66, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Procedure:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 8, 401, 111, 26, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Nearest Treatment \nCentre:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 8, 348, 104, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Patient Category:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 8, 204, 78, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Cancer Type:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 8, 114, 111, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Source of Referral:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 8, 50, 109, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Referral Received:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 8, 82, 147, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Referral Letter Received:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 440, 10, 89, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "1st OP KPI Date:", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 200, 10, 93, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "RTT Breach Date:", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 8, 146, 91, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Initiated From:", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 346, 47, 55, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), new Integer(-1), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Update", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 352, 111, 40, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "IPT", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 160, 528, 208, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), new Integer(startTabIndex.intValue() + 42), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, " Awaiting Clinical Information", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 768, 332, 24, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), new Integer(startTabIndex.intValue() + 38), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "-", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 768, 300, 24, 23, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), new Integer(startTabIndex.intValue() + 37), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "+", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 484, 156, 24, 24, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1040), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), new Integer(startTabIndex.intValue() + 31), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "...", Boolean.FALSE, "Practice Search", Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 484, 123, 24, 24, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1041), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), new Integer(startTabIndex.intValue() + 27), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, "...", Boolean.FALSE, "GP Search", Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper41 = new RuntimeAnchoring(designSize, runtimeSize, 634, 528, 88, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1042), new Integer(anchoringHelper41.getX()), new Integer(anchoringHelper41.getY()), new Integer(anchoringHelper41.getWidth()), new Integer(anchoringHelper41.getHeight()), new Integer(startTabIndex.intValue() + 43), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Save", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper42 = new RuntimeAnchoring(designSize, runtimeSize, 728, 528, 88, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1043), new Integer(anchoringHelper42.getX()), new Integer(anchoringHelper42.getY()), new Integer(anchoringHelper42.getWidth()), new Integer(anchoringHelper42.getHeight()), new Integer(startTabIndex.intValue() + 44), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Cancel", Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper43 = new RuntimeAnchoring(designSize, runtimeSize, 8, 528, 88, 24, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1044), new Integer(anchoringHelper43.getX()), new Integer(anchoringHelper43.getY()), new Integer(anchoringHelper43.getWidth()), new Integer(anchoringHelper43.getHeight()), new Integer(startTabIndex.intValue() + 41), ControlState.UNKNOWN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Edit", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper44 = new RuntimeAnchoring(designSize, runtimeSize, 408, 456, 408, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1045), new Integer(anchoringHelper44.getX()), new Integer(anchoringHelper44.getY()), new Integer(anchoringHelper44.getWidth()), new Integer(anchoringHelper44.getHeight()), new Integer(startTabIndex.intValue() + 39), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT,Boolean.TRUE, new Integer(250), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper45 = new RuntimeAnchoring(designSize, runtimeSize, 523, 158, 264, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1046), new Integer(anchoringHelper45.getX()), new Integer(anchoringHelper45.getY()), new Integer(anchoringHelper45.getWidth()), new Integer(anchoringHelper45.getHeight()), new Integer(startTabIndex.intValue() + 32), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper46 = new RuntimeAnchoring(designSize, runtimeSize, 523, 188, 264, 48, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1047), new Integer(anchoringHelper46.getX()), new Integer(anchoringHelper46.getY()), new Integer(anchoringHelper46.getWidth()), new Integer(anchoringHelper46.getHeight()), new Integer(startTabIndex.intValue() + 33), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper47 = new RuntimeAnchoring(designSize, runtimeSize, 523, 244, 264, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1048), new Integer(anchoringHelper47.getX()), new Integer(anchoringHelper47.getY()), new Integer(anchoringHelper47.getWidth()), new Integer(anchoringHelper47.getHeight()), new Integer(startTabIndex.intValue() + 34), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(15), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper48 = new RuntimeAnchoring(designSize, runtimeSize, 523, 268, 264, 21, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1049), new Integer(anchoringHelper48.getX()), new Integer(anchoringHelper48.getY()), new Integer(anchoringHelper48.getWidth()), new Integer(anchoringHelper48.getHeight()), new Integer(startTabIndex.intValue() + 35), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Controls
		RuntimeAnchoring anchoringHelper49 = new RuntimeAnchoring(designSize, runtimeSize, 552, 8, 88, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1050), new Integer(anchoringHelper49.getX()), new Integer(anchoringHelper49.getY()), new Integer(anchoringHelper49.getWidth()), new Integer(anchoringHelper49.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper50 = new RuntimeAnchoring(designSize, runtimeSize, 304, 8, 88, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1051), new Integer(anchoringHelper50.getX()), new Integer(anchoringHelper50.getY()), new Integer(anchoringHelper50.getWidth()), new Integer(anchoringHelper50.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper51 = new RuntimeAnchoring(designSize, runtimeSize, 160, 80, 184, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1052), new Integer(anchoringHelper51.getX()), new Integer(anchoringHelper51.getY()), new Integer(anchoringHelper51.getWidth()), new Integer(anchoringHelper51.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper52 = new RuntimeAnchoring(designSize, runtimeSize, 160, 48, 184, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1053), new Integer(anchoringHelper52.getX()), new Integer(anchoringHelper52.getY()), new Integer(anchoringHelper52.getWidth()), new Integer(anchoringHelper52.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.TRUE, null, Boolean.TRUE, null}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper53 = new RuntimeAnchoring(designSize, runtimeSize, 160, 289, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbFunctionTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1054), new Integer(anchoringHelper53.getX()), new Integer(anchoringHelper53.getY()), new Integer(anchoringHelper53.getWidth()), new Integer(anchoringHelper53.getHeight()), new Integer(startTabIndex.intValue() + 15), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbFunctionTemp);
		cmbFunctionComboBox cmbFunction = (cmbFunctionComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbFunctionComboBox.class, m_cmbFunctionTemp);
		super.addComboBox(cmbFunction);
		RuntimeAnchoring anchoringHelper54 = new RuntimeAnchoring(designSize, runtimeSize, 160, 462, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbLanguageTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1055), new Integer(anchoringHelper54.getX()), new Integer(anchoringHelper54.getY()), new Integer(anchoringHelper54.getWidth()), new Integer(anchoringHelper54.getHeight()), new Integer(startTabIndex.intValue() + 23), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbLanguageTemp);
		cmbLanguageComboBox cmbLanguage = (cmbLanguageComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbLanguageComboBox.class, m_cmbLanguageTemp);
		super.addComboBox(cmbLanguage);
		RuntimeAnchoring anchoringHelper55 = new RuntimeAnchoring(designSize, runtimeSize, 160, 491, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1056), new Integer(anchoringHelper55.getX()), new Integer(anchoringHelper55.getY()), new Integer(anchoringHelper55.getWidth()), new Integer(anchoringHelper55.getHeight()), new Integer(startTabIndex.intValue() + 24), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbTypeTemp);
		cmbTypeComboBox cmbType = (cmbTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbTypeComboBox.class, m_cmbTypeTemp);
		super.addComboBox(cmbType);
		RuntimeAnchoring anchoringHelper56 = new RuntimeAnchoring(designSize, runtimeSize, 160, 404, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbNearestTreatmentCentreLocationTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1057), new Integer(anchoringHelper56.getX()), new Integer(anchoringHelper56.getY()), new Integer(anchoringHelper56.getWidth()), new Integer(anchoringHelper56.getHeight()), new Integer(startTabIndex.intValue() + 21), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbNearestTreatmentCentreLocationTemp);
		cmbNearestTreatmentCentreLocationComboBox cmbNearestTreatmentCentreLocation = (cmbNearestTreatmentCentreLocationComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbNearestTreatmentCentreLocationComboBox.class, m_cmbNearestTreatmentCentreLocationTemp);
		super.addComboBox(cmbNearestTreatmentCentreLocation);
		RuntimeAnchoring anchoringHelper57 = new RuntimeAnchoring(designSize, runtimeSize, 160, 231, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbContractTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1058), new Integer(anchoringHelper57.getX()), new Integer(anchoringHelper57.getY()), new Integer(anchoringHelper57.getWidth()), new Integer(anchoringHelper57.getHeight()), new Integer(startTabIndex.intValue() + 11), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbContractTemp);
		cmbContractComboBox cmbContract = (cmbContractComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbContractComboBox.class, m_cmbContractTemp);
		super.addComboBox(cmbContract);
		RuntimeAnchoring anchoringHelper58 = new RuntimeAnchoring(designSize, runtimeSize, 160, 375, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbLocationTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1059), new Integer(anchoringHelper58.getX()), new Integer(anchoringHelper58.getY()), new Integer(anchoringHelper58.getWidth()), new Integer(anchoringHelper58.getHeight()), new Integer(startTabIndex.intValue() + 20), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbLocationTemp);
		cmbLocationComboBox cmbLocation = (cmbLocationComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbLocationComboBox.class, m_cmbLocationTemp);
		super.addComboBox(cmbLocation);
		RuntimeAnchoring anchoringHelper59 = new RuntimeAnchoring(designSize, runtimeSize, 160, 346, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbCategoryTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1060), new Integer(anchoringHelper59.getX()), new Integer(anchoringHelper59.getY()), new Integer(anchoringHelper59.getWidth()), new Integer(anchoringHelper59.getHeight()), new Integer(startTabIndex.intValue() + 19), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbCategoryTemp);
		cmbCategoryComboBox cmbCategory = (cmbCategoryComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbCategoryComboBox.class, m_cmbCategoryTemp);
		super.addComboBox(cmbCategory);
		RuntimeAnchoring anchoringHelper60 = new RuntimeAnchoring(designSize, runtimeSize, 160, 173, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbUrgencyTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1061), new Integer(anchoringHelper60.getX()), new Integer(anchoringHelper60.getY()), new Integer(anchoringHelper60.getWidth()), new Integer(anchoringHelper60.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbUrgencyTemp);
		cmbUrgencyComboBox cmbUrgency = (cmbUrgencyComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbUrgencyComboBox.class, m_cmbUrgencyTemp);
		super.addComboBox(cmbUrgency);
		RuntimeAnchoring anchoringHelper61 = new RuntimeAnchoring(designSize, runtimeSize, 160, 202, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbCancerTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1062), new Integer(anchoringHelper61.getX()), new Integer(anchoringHelper61.getY()), new Integer(anchoringHelper61.getWidth()), new Integer(anchoringHelper61.getHeight()), new Integer(startTabIndex.intValue() + 10), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbCancerTypeTemp);
		cmbCancerTypeComboBox cmbCancerType = (cmbCancerTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbCancerTypeComboBox.class, m_cmbCancerTypeTemp);
		super.addComboBox(cmbCancerType);
		RuntimeAnchoring anchoringHelper62 = new RuntimeAnchoring(designSize, runtimeSize, 160, 112, 176, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbSORTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1063), new Integer(anchoringHelper62.getX()), new Integer(anchoringHelper62.getY()), new Integer(anchoringHelper62.getWidth()), new Integer(anchoringHelper62.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.DISABLED, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbSORTemp);
		cmbSORComboBox cmbSOR = (cmbSORComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbSORComboBox.class, m_cmbSORTemp);
		super.addComboBox(cmbSOR);
		RuntimeAnchoring anchoringHelper63 = new RuntimeAnchoring(designSize, runtimeSize, 160, 144, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbInitiatedFromTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1064), new Integer(anchoringHelper63.getX()), new Integer(anchoringHelper63.getY()), new Integer(anchoringHelper63.getWidth()), new Integer(anchoringHelper63.getHeight()), new Integer(startTabIndex.intValue() + 7), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbInitiatedFromTemp);
		cmbInitiatedFromComboBox cmbInitiatedFrom = (cmbInitiatedFromComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbInitiatedFromComboBox.class, m_cmbInitiatedFromTemp);
		super.addComboBox(cmbInitiatedFrom);

		// Query ComboBox Controls
		RuntimeAnchoring anchoringHelper64 = new RuntimeAnchoring(designSize, runtimeSize, 160, 264, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_qmbServiceTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1065), new Integer(anchoringHelper64.getX()), new Integer(anchoringHelper64.getY()), new Integer(anchoringHelper64.getWidth()), new Integer(anchoringHelper64.getHeight()), new Integer(startTabIndex.intValue() + 13), ControlState.DISABLED, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.TRUE, new Integer(1), null, Boolean.TRUE, new Integer(-1), Boolean.FALSE});
		addControl(m_qmbServiceTemp);
		qmbServiceComboBox qmbService = (qmbServiceComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(qmbServiceComboBox.class, m_qmbServiceTemp);
		super.addComboBox(qmbService);
		RuntimeAnchoring anchoringHelper65 = new RuntimeAnchoring(designSize, runtimeSize, 160, 433, 232, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_qmbProcedureTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1066), new Integer(anchoringHelper65.getX()), new Integer(anchoringHelper65.getY()), new Integer(anchoringHelper65.getWidth()), new Integer(anchoringHelper65.getHeight()), new Integer(startTabIndex.intValue() + 22), ControlState.HIDDEN, ControlState.HIDDEN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.TRUE, new Integer(1), null, Boolean.FALSE, new Integer(-1), Boolean.FALSE});
		addControl(m_qmbProcedureTemp);
		qmbProcedureComboBox qmbProcedure = (qmbProcedureComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(qmbProcedureComboBox.class, m_qmbProcedureTemp);
		super.addComboBox(qmbProcedure);

		// CheckBox Controls
		RuntimeAnchoring anchoringHelper66 = new RuntimeAnchoring(designSize, runtimeSize, 560, 82, 104, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1067), new Integer(anchoringHelper66.getX()), new Integer(anchoringHelper66.getY()), new Integer(anchoringHelper66.getWidth()), new Integer(anchoringHelper66.getHeight()), new Integer(startTabIndex.intValue() + 25), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"Resp. Consultant", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper67 = new RuntimeAnchoring(designSize, runtimeSize, 688, 82, 88, 16, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1068), new Integer(anchoringHelper67.getX()), new Integer(anchoringHelper67.getY()), new Integer(anchoringHelper67.getWidth()), new Integer(anchoringHelper67.getHeight()), new Integer(startTabIndex.intValue() + 26), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPRIGHT ,"Patient's GP", Boolean.TRUE, null}));
		RuntimeAnchoring anchoringHelper68 = new RuntimeAnchoring(designSize, runtimeSize, 408, 544, 160, 16, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1069), new Integer(anchoringHelper68.getX()), new Integer(anchoringHelper68.getY()), new Integer(anchoringHelper68.getWidth()), new Integer(anchoringHelper68.getHeight()), new Integer(startTabIndex.intValue() + 40), ControlState.HIDDEN, ControlState.HIDDEN,ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT ,"Activity subject to RTT Clock", Boolean.TRUE, null}));

		// Grid Controls
		RuntimeAnchoring anchoringHelper69 = new RuntimeAnchoring(designSize, runtimeSize, 424, 300, 336, 80, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT);
		Grid m_grdContactTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1070), new Integer(anchoringHelper69.getX()), new Integer(anchoringHelper69.getY()), new Integer(anchoringHelper69.getWidth()), new Integer(anchoringHelper69.getHeight()), new Integer(startTabIndex.intValue() + 36), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT,Boolean.TRUE, Boolean.FALSE, new Integer(24), Boolean.FALSE, null, Boolean.TRUE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.TRUE});
		addControl(m_grdContactTemp);
		grdContactGrid grdContact = (grdContactGrid)GridFlyweightFactory.getInstance().createGridBridge(grdContactGrid.class, m_grdContactTemp);
		grdContact.addComboBoxColumn("Contact Type", 0, 0, 170, false, true, false, false, false, -1);
		grdContact.addStringColumn("Contact Value", 0, 0, -1, false, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		super.addGrid(grdContact);

		// Link Controls
		RuntimeAnchoring anchoringHelper70 = new RuntimeAnchoring(designSize, runtimeSize, 8, 262, 100, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Link.class, new Object[] { control, new Integer(startControlID.intValue() + 1071), new Integer(anchoringHelper70.getX()), new Integer(anchoringHelper70.getY()), new Integer(anchoringHelper70.getWidth()), new Integer(anchoringHelper70.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,"Service:", Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper71 = new RuntimeAnchoring(designSize, runtimeSize, 8, 175, 100, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Link.class, new Object[] { control, new Integer(startControlID.intValue() + 1072), new Integer(anchoringHelper71.getX()), new Integer(anchoringHelper71.getY()), new Integer(anchoringHelper71.getWidth()), new Integer(anchoringHelper71.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,"Urgency:", Boolean.FALSE, null}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public Panel GPContainer()
	{
		return (Panel)super.getControl(0);
	}
	public ims.core.forms.mosquery.IComponent ccConsultant()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(1)).getLogic();
	}
	public void setccConsultantValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(1)).setValueChangedEvent(delegate);
	}
	public void setccConsultantVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(1)).setVisible(value);
	}
	public boolean isccConsultantVisible()
	{
		return ((ims.framework.Control)super.getControl(1)).isVisible();
	}
	public void setccConsultantEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(1)).setEnabled(value);
	}
	public boolean isccConsultantEnabled()
	{
		return ((ims.framework.Control)super.getControl(1)).isEnabled();
	}
	public ctnReferringConsultantContainer ctnReferringConsultant()
	{
		return (ctnReferringConsultantContainer)super.getContainer(0);
	}
	public ctnGPNameContainer ctnGPName()
	{
		return (ctnGPNameContainer)super.getContainer(1);
	}
	public Label lblFunction()
	{
		return (Label)super.getControl(4);
	}
	public Label lblKPI()
	{
		return (Label)super.getControl(5);
	}
	public Label lblWW()
	{
		return (Label)super.getControl(6);
	}
	public Label lbl8()
	{
		return (Label)super.getControl(10);
	}
	public Label lbl4()
	{
		return (Label)super.getControl(11);
	}
	public Label lbl7()
	{
		return (Label)super.getControl(12);
	}
	public Label lblNameGP()
	{
		return (Label)super.getControl(13);
	}
	public Label lblLocationGP()
	{
		return (Label)super.getControl(14);
	}
	public Label lblAddressGP()
	{
		return (Label)super.getControl(15);
	}
	public Label lbl33()
	{
		return (Label)super.getControl(16);
	}
	public Label lbl31()
	{
		return (Label)super.getControl(17);
	}
	public Label lblContract()
	{
		return (Label)super.getControl(19);
	}
	public Label lblLocation()
	{
		return (Label)super.getControl(20);
	}
	public Label lblProcedure()
	{
		return (Label)super.getControl(21);
	}
	public Label lblNearestTreatment()
	{
		return (Label)super.getControl(22);
	}
	public Label lblEKPI()
	{
		return (Label)super.getControl(28);
	}
	public Label lbl18ww()
	{
		return (Label)super.getControl(29);
	}
	public Label lblInitiatedFrom()
	{
		return (Label)super.getControl(30);
	}
	public Button btnUpdateReferralDate()
	{
		return (Button)super.getControl(31);
	}
	public Button btnIPT()
	{
		return (Button)super.getControl(32);
	}
	public Button btnClinicalInfo()
	{
		return (Button)super.getControl(33);
	}
	public Button btnRemoveChannel()
	{
		return (Button)super.getControl(34);
	}
	public Button btnAddChannel()
	{
		return (Button)super.getControl(35);
	}
	public Button AHPSearch()
	{
		return (Button)super.getControl(36);
	}
	public Button GPSearch()
	{
		return (Button)super.getControl(37);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(38);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(39);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(40);
	}
	public TextBox txtSpecialRequirements()
	{
		return (TextBox)super.getControl(41);
	}
	public TextBox txtLocation()
	{
		return (TextBox)super.getControl(42);
	}
	public TextBox txtGPAddress()
	{
		return (TextBox)super.getControl(43);
	}
	public TextBox RefPCTCode()
	{
		return (TextBox)super.getControl(44);
	}
	public TextBox txtRefPracticeCode()
	{
		return (TextBox)super.getControl(45);
	}
	public DateControl dtimKPI()
	{
		return (DateControl)super.getControl(46);
	}
	public DateControl dtimWW()
	{
		return (DateControl)super.getControl(47);
	}
	public DateControl dteReferralReceived()
	{
		return (DateControl)super.getControl(48);
	}
	public DateControl dteReferral()
	{
		return (DateControl)super.getControl(49);
	}
	public cmbFunctionComboBox cmbFunction()
	{
		return (cmbFunctionComboBox)super.getComboBox(0);
	}
	public cmbLanguageComboBox cmbLanguage()
	{
		return (cmbLanguageComboBox)super.getComboBox(1);
	}
	public cmbTypeComboBox cmbType()
	{
		return (cmbTypeComboBox)super.getComboBox(2);
	}
	public cmbNearestTreatmentCentreLocationComboBox cmbNearestTreatmentCentreLocation()
	{
		return (cmbNearestTreatmentCentreLocationComboBox)super.getComboBox(3);
	}
	public cmbContractComboBox cmbContract()
	{
		return (cmbContractComboBox)super.getComboBox(4);
	}
	public cmbLocationComboBox cmbLocation()
	{
		return (cmbLocationComboBox)super.getComboBox(5);
	}
	public cmbCategoryComboBox cmbCategory()
	{
		return (cmbCategoryComboBox)super.getComboBox(6);
	}
	public cmbUrgencyComboBox cmbUrgency()
	{
		return (cmbUrgencyComboBox)super.getComboBox(7);
	}
	public cmbCancerTypeComboBox cmbCancerType()
	{
		return (cmbCancerTypeComboBox)super.getComboBox(8);
	}
	public cmbSORComboBox cmbSOR()
	{
		return (cmbSORComboBox)super.getComboBox(9);
	}
	public cmbInitiatedFromComboBox cmbInitiatedFrom()
	{
		return (cmbInitiatedFromComboBox)super.getComboBox(10);
	}
	public qmbServiceComboBox qmbService()
	{
		return (qmbServiceComboBox)super.getComboBox(11);
	}
	public qmbProcedureComboBox qmbProcedure()
	{
		return (qmbProcedureComboBox)super.getComboBox(12);
	}
	public CheckBox chkRespConsultant()
	{
		return (CheckBox)super.getControl(63);
	}
	public CheckBox chkPatientsGp()
	{
		return (CheckBox)super.getControl(64);
	}
	public CheckBox chkActivityRTTClock()
	{
		return (CheckBox)super.getControl(65);
	}
	public grdContactGrid grdContact()
	{
		return (grdContactGrid)super.getGrid(0);
	}
	public Link lnkService()
	{
		return (Link)super.getControl(67);
	}
	public Link lnkUrgency()
	{
		return (Link)super.getControl(68);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
			Admin = new AdminForms();
			RefMan = new RefManForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				GpSelectionOnly = new LocalFormName(102251);
				DateEntryDialog = new LocalFormName(102425);
			}
			public final FormName GpSelectionOnly;
			public final FormName DateEntryDialog;
		}
		public final class AdminForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private AdminForms()
			{
				GPPracticeSelect = new LocalFormName(103112);
			}
			public final FormName GPPracticeSelect;
		}
		public final class RefManForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private RefManForms()
			{
				ChangeServiceDialog = new LocalFormName(134122);
				AwaitingClinicalInformationDialog = new LocalFormName(134189);
				ReferralTransferDialog = new LocalFormName(134232);
				UpdateUrgency = new LocalFormName(134275);
				ServiceHistoryDlg = new LocalFormName(134277);
			}
			public final FormName ChangeServiceDialog;
			public final FormName AwaitingClinicalInformationDialog;
			public final FormName ReferralTransferDialog;
			public final FormName UpdateUrgency;
			public final FormName ServiceHistoryDlg;
		}

		public CoreForms Core;
		public AdminForms Admin;
		public RefManForms RefMan;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
			RefMan = new RefManImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				ZoomInDisabled16 = new ImageHelper(102159, "Images/Core/zoom_disabled.png", new Integer(16), new Integer(16));
				ZoomInEnabled16 = new ImageHelper(102158, "Images/Core/zoom.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image ZoomInDisabled16;
			public final ims.framework.utils.Image ZoomInEnabled16;
		}
		public final class RefManImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private RefManImages()
			{
				AwaitingClinicalInformation = new ImageHelper(134168, "Images/RefMan/AwaitingClinicaInformation.png", new Integer(16), new Integer(16));
				ClinicalInformationReceived = new ImageHelper(134169, "Images/RefMan/ClinicalInformationReceived.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image AwaitingClinicalInformation;
			public final ims.framework.utils.Image ClinicalInformationReceived;
		}
		public final CoreImages Core;
		public final RefManImages RefMan;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_GPInfo = new ims.framework.ContextVariable("GPInfo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__GPInfo_" + componentIdentifier + "");
			cxl_AHPInfo = new ims.framework.ContextVariable("AHPInfo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier + "");
			cxl_referralVo = new ims.framework.ContextVariable("referralVo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier + "");
			cxl_bReferralDetailsInitialized = new ims.framework.ContextVariable("bReferralDetailsInitialized", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__bReferralDetailsInitialized_" + componentIdentifier + "");
			cxl_callingForm = new ims.framework.ContextVariable("callingForm", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__callingForm_" + componentIdentifier + "");
			cxl_bReferralAccepted = new ims.framework.ContextVariable("bReferralAccepted", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__bReferralAccepted_" + componentIdentifier + "");
			cxl_patientsGp = new ims.framework.ContextVariable("patientsGp", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__patientsGp_" + componentIdentifier + "");
			cxl_componentEvent = new ims.framework.ContextVariable("componentEvent", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__componentEvent_" + componentIdentifier + "");
			cxl_hasCatsReferralReferralLetter = new ims.framework.ContextVariable("hasCatsReferralReferralLetter", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__hasCatsReferralReferralLetter_" + componentIdentifier + "");
			cxl_activeDetailsButton = new ims.framework.ContextVariable("activeDetailsButton", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__activeDetailsButton_" + componentIdentifier + "");
			cxl_CurrentAwaitingClinicalInformationVo = new ims.framework.ContextVariable("CurrentAwaitingClinicalInformationVo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier + "");
			cxl_CatsReferralWizardVo = new ims.framework.ContextVariable("CatsReferralWizardVo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier + "");
			cxl_IsInCreationMode = new ims.framework.ContextVariable("IsInCreationMode", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__IsInCreationMode_" + componentIdentifier + "");
			cxl_TriageFromButton = new ims.framework.ContextVariable("TriageFromButton", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TriageFromButton_" + componentIdentifier + "");
			cxl_distanceMAP = new ims.framework.ContextVariable("distanceMAP", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__distanceMAP_" + componentIdentifier + "");
			cxl_TransferInfo = new ims.framework.ContextVariable("TransferInfo", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier + "");
			cxl_ContractConfigurations = new ims.framework.ContextVariable("ContractConfigurations", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ContractConfigurations_" + componentIdentifier + "");
			cxl_cancerTypeConfig = new ims.framework.ContextVariable("cancerTypeConfig", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__cancerTypeConfig_" + componentIdentifier + "");
			cxl_SourceOfReferralConfiguration = new ims.framework.ContextVariable("SourceOfReferralConfiguration", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__SourceOfReferralConfiguration_" + componentIdentifier + "");
			cxl_ReferrerHCP = new ims.framework.ContextVariable("ReferrerHCP", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ReferrerHCP_" + componentIdentifier + "");
			cxl_IPT = new ims.framework.ContextVariable("IPT", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__IPT_" + componentIdentifier + "");
			cxl_CCGCode = new ims.framework.ContextVariable("CCGCode", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CCGCode_" + componentIdentifier + "");
			cxl_MessageBoxUrgencyChangedToEmergency = new ims.framework.ContextVariable("MessageBoxUrgencyChangedToEmergency", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__MessageBoxUrgencyChangedToEmergency_" + componentIdentifier + "");
			cxl_bUrgencyChangedToEmergency = new ims.framework.ContextVariable("bUrgencyChangedToEmergency", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__bUrgencyChangedToEmergency_" + componentIdentifier + "");
			cxl_IsAdmissionEmergencyReferral = new ims.framework.ContextVariable("IsAdmissionEmergencyReferral", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__IsAdmissionEmergencyReferral_" + componentIdentifier + "");
			cxl_bRTTBreachDateInThePastAcknowledged = new ims.framework.ContextVariable("bRTTBreachDateInThePastAcknowledged", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__bRTTBreachDateInThePastAcknowledged_" + componentIdentifier + "");
			cxl_MessageBoxRTTDateInThePast = new ims.framework.ContextVariable("MessageBoxRTTDateInThePast", prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__MessageBoxRTTDateInThePast_" + componentIdentifier + "");
		}
		
		public boolean getGPInfoIsNotNull()
		{
			return !cxl_GPInfo.getValueIsNull(context);
		}
		public ims.core.vo.GpShortVo getGPInfo()
		{
			return (ims.core.vo.GpShortVo)cxl_GPInfo.getValue(context);
		}
		public void setGPInfo(ims.core.vo.GpShortVo value)
		{
			cxl_GPInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_GPInfo = null;
		public boolean getAHPInfoIsNotNull()
		{
			return !cxl_AHPInfo.getValueIsNull(context);
		}
		public ims.core.vo.OrganisationWithSitesVo getAHPInfo()
		{
			return (ims.core.vo.OrganisationWithSitesVo)cxl_AHPInfo.getValue(context);
		}
		public void setAHPInfo(ims.core.vo.OrganisationWithSitesVo value)
		{
			cxl_AHPInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AHPInfo = null;
		public boolean getreferralVoIsNotNull()
		{
			return !cxl_referralVo.getValueIsNull(context);
		}
		public ims.clinical.vo.ReferralLetterDetailsVo getreferralVo()
		{
			return (ims.clinical.vo.ReferralLetterDetailsVo)cxl_referralVo.getValue(context);
		}
		public void setreferralVo(ims.clinical.vo.ReferralLetterDetailsVo value)
		{
			cxl_referralVo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_referralVo = null;
		public boolean getbReferralDetailsInitializedIsNotNull()
		{
			return !cxl_bReferralDetailsInitialized.getValueIsNull(context);
		}
		public Boolean getbReferralDetailsInitialized()
		{
			return (Boolean)cxl_bReferralDetailsInitialized.getValue(context);
		}
		public void setbReferralDetailsInitialized(Boolean value)
		{
			cxl_bReferralDetailsInitialized.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bReferralDetailsInitialized = null;
		public boolean getcallingFormIsNotNull()
		{
			return !cxl_callingForm.getValueIsNull(context);
		}
		public ims.RefMan.vo.enums.CALLINGFORM getcallingForm()
		{
			return (ims.RefMan.vo.enums.CALLINGFORM)cxl_callingForm.getValue(context);
		}
		public void setcallingForm(ims.RefMan.vo.enums.CALLINGFORM value)
		{
			cxl_callingForm.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_callingForm = null;
		public boolean getbReferralAcceptedIsNotNull()
		{
			return !cxl_bReferralAccepted.getValueIsNull(context);
		}
		public Boolean getbReferralAccepted()
		{
			return (Boolean)cxl_bReferralAccepted.getValue(context);
		}
		public void setbReferralAccepted(Boolean value)
		{
			cxl_bReferralAccepted.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bReferralAccepted = null;
		public boolean getpatientsGpIsNotNull()
		{
			return !cxl_patientsGp.getValueIsNull(context);
		}
		public ims.core.vo.GpShortVo getpatientsGp()
		{
			return (ims.core.vo.GpShortVo)cxl_patientsGp.getValue(context);
		}
		public void setpatientsGp(ims.core.vo.GpShortVo value)
		{
			cxl_patientsGp.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_patientsGp = null;
		public boolean getcomponentEventIsNotNull()
		{
			return !cxl_componentEvent.getValueIsNull(context);
		}
		public ims.RefMan.vo.enums.ReferralDetailsComponentButtonClicked getcomponentEvent()
		{
			return (ims.RefMan.vo.enums.ReferralDetailsComponentButtonClicked)cxl_componentEvent.getValue(context);
		}
		public void setcomponentEvent(ims.RefMan.vo.enums.ReferralDetailsComponentButtonClicked value)
		{
			cxl_componentEvent.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_componentEvent = null;
		public boolean gethasCatsReferralReferralLetterIsNotNull()
		{
			return !cxl_hasCatsReferralReferralLetter.getValueIsNull(context);
		}
		public Boolean gethasCatsReferralReferralLetter()
		{
			return (Boolean)cxl_hasCatsReferralReferralLetter.getValue(context);
		}
		public void sethasCatsReferralReferralLetter(Boolean value)
		{
			cxl_hasCatsReferralReferralLetter.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_hasCatsReferralReferralLetter = null;
		public boolean getactiveDetailsButtonIsNotNull()
		{
			return !cxl_activeDetailsButton.getValueIsNull(context);
		}
		public Boolean getactiveDetailsButton()
		{
			return (Boolean)cxl_activeDetailsButton.getValue(context);
		}
		public void setactiveDetailsButton(Boolean value)
		{
			cxl_activeDetailsButton.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_activeDetailsButton = null;
		public boolean getCurrentAwaitingClinicalInformationVoIsNotNull()
		{
			return !cxl_CurrentAwaitingClinicalInformationVo.getValueIsNull(context);
		}
		public ims.RefMan.vo.AwaitingClinicalInfoVo getCurrentAwaitingClinicalInformationVo()
		{
			return (ims.RefMan.vo.AwaitingClinicalInfoVo)cxl_CurrentAwaitingClinicalInformationVo.getValue(context);
		}
		public void setCurrentAwaitingClinicalInformationVo(ims.RefMan.vo.AwaitingClinicalInfoVo value)
		{
			cxl_CurrentAwaitingClinicalInformationVo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentAwaitingClinicalInformationVo = null;
		public boolean getCatsReferralWizardVoIsNotNull()
		{
			return !cxl_CatsReferralWizardVo.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralWizardVo getCatsReferralWizardVo()
		{
			return (ims.RefMan.vo.CatsReferralWizardVo)cxl_CatsReferralWizardVo.getValue(context);
		}
		public void setCatsReferralWizardVo(ims.RefMan.vo.CatsReferralWizardVo value)
		{
			cxl_CatsReferralWizardVo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CatsReferralWizardVo = null;
		public boolean getIsInCreationModeIsNotNull()
		{
			return !cxl_IsInCreationMode.getValueIsNull(context);
		}
		public Boolean getIsInCreationMode()
		{
			return (Boolean)cxl_IsInCreationMode.getValue(context);
		}
		public void setIsInCreationMode(Boolean value)
		{
			cxl_IsInCreationMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsInCreationMode = null;
		public boolean getTriageFromButtonIsNotNull()
		{
			return !cxl_TriageFromButton.getValueIsNull(context);
		}
		public Boolean getTriageFromButton()
		{
			return (Boolean)cxl_TriageFromButton.getValue(context);
		}
		public void setTriageFromButton(Boolean value)
		{
			cxl_TriageFromButton.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_TriageFromButton = null;
		public boolean getdistanceMAPIsNotNull()
		{
			return !cxl_distanceMAP.getValueIsNull(context);
		}
		public java.util.Map getdistanceMAP()
		{
			return (java.util.Map)cxl_distanceMAP.getValue(context);
		}
		public void setdistanceMAP(java.util.Map value)
		{
			cxl_distanceMAP.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_distanceMAP = null;
		public boolean getTransferInfoIsNotNull()
		{
			return !cxl_TransferInfo.getValueIsNull(context);
		}
		public ims.RefMan.vo.ReferralTransferVo getTransferInfo()
		{
			return (ims.RefMan.vo.ReferralTransferVo)cxl_TransferInfo.getValue(context);
		}
		public void setTransferInfo(ims.RefMan.vo.ReferralTransferVo value)
		{
			cxl_TransferInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_TransferInfo = null;
		public boolean getContractConfigurationsIsNotNull()
		{
			return !cxl_ContractConfigurations.getValueIsNull(context);
		}
		public ims.RefMan.vo.ContractConfigForReferralDetailsComponentVoCollection getContractConfigurations()
		{
			return (ims.RefMan.vo.ContractConfigForReferralDetailsComponentVoCollection)cxl_ContractConfigurations.getValue(context);
		}
		public void setContractConfigurations(ims.RefMan.vo.ContractConfigForReferralDetailsComponentVoCollection value)
		{
			cxl_ContractConfigurations.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ContractConfigurations = null;
		public boolean getcancerTypeConfigIsNotNull()
		{
			return !cxl_cancerTypeConfig.getValueIsNull(context);
		}
		public ims.RefMan.vo.CancerTypeConfigVo getcancerTypeConfig()
		{
			return (ims.RefMan.vo.CancerTypeConfigVo)cxl_cancerTypeConfig.getValue(context);
		}
		public void setcancerTypeConfig(ims.RefMan.vo.CancerTypeConfigVo value)
		{
			cxl_cancerTypeConfig.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_cancerTypeConfig = null;
		public boolean getSourceOfReferralConfigurationIsNotNull()
		{
			return !cxl_SourceOfReferralConfiguration.getValueIsNull(context);
		}
		public ims.core.vo.ReferralSourceUrgencyVoCollection getSourceOfReferralConfiguration()
		{
			return (ims.core.vo.ReferralSourceUrgencyVoCollection)cxl_SourceOfReferralConfiguration.getValue(context);
		}
		public void setSourceOfReferralConfiguration(ims.core.vo.ReferralSourceUrgencyVoCollection value)
		{
			cxl_SourceOfReferralConfiguration.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SourceOfReferralConfiguration = null;
		public boolean getReferrerHCPIsNotNull()
		{
			return !cxl_ReferrerHCP.getValueIsNull(context);
		}
		public ims.core.vo.Hcp getReferrerHCP()
		{
			return (ims.core.vo.Hcp)cxl_ReferrerHCP.getValue(context);
		}
		public void setReferrerHCP(ims.core.vo.Hcp value)
		{
			cxl_ReferrerHCP.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ReferrerHCP = null;
		public boolean getIPTIsNotNull()
		{
			return !cxl_IPT.getValueIsNull(context);
		}
		public String getIPT()
		{
			return (String)cxl_IPT.getValue(context);
		}
		public void setIPT(String value)
		{
			cxl_IPT.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IPT = null;
		public boolean getCCGCodeIsNotNull()
		{
			return !cxl_CCGCode.getValueIsNull(context);
		}
		public String getCCGCode()
		{
			return (String)cxl_CCGCode.getValue(context);
		}
		public void setCCGCode(String value)
		{
			cxl_CCGCode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CCGCode = null;
		public boolean getMessageBoxUrgencyChangedToEmergencyIsNotNull()
		{
			return !cxl_MessageBoxUrgencyChangedToEmergency.getValueIsNull(context);
		}
		public Integer getMessageBoxUrgencyChangedToEmergency()
		{
			return (Integer)cxl_MessageBoxUrgencyChangedToEmergency.getValue(context);
		}
		public void setMessageBoxUrgencyChangedToEmergency(Integer value)
		{
			cxl_MessageBoxUrgencyChangedToEmergency.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxUrgencyChangedToEmergency = null;
		public boolean getbUrgencyChangedToEmergencyIsNotNull()
		{
			return !cxl_bUrgencyChangedToEmergency.getValueIsNull(context);
		}
		public Boolean getbUrgencyChangedToEmergency()
		{
			return (Boolean)cxl_bUrgencyChangedToEmergency.getValue(context);
		}
		public void setbUrgencyChangedToEmergency(Boolean value)
		{
			cxl_bUrgencyChangedToEmergency.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bUrgencyChangedToEmergency = null;
		public boolean getIsAdmissionEmergencyReferralIsNotNull()
		{
			return !cxl_IsAdmissionEmergencyReferral.getValueIsNull(context);
		}
		public Boolean getIsAdmissionEmergencyReferral()
		{
			return (Boolean)cxl_IsAdmissionEmergencyReferral.getValue(context);
		}
		public void setIsAdmissionEmergencyReferral(Boolean value)
		{
			cxl_IsAdmissionEmergencyReferral.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsAdmissionEmergencyReferral = null;
		public boolean getbRTTBreachDateInThePastAcknowledgedIsNotNull()
		{
			return !cxl_bRTTBreachDateInThePastAcknowledged.getValueIsNull(context);
		}
		public Boolean getbRTTBreachDateInThePastAcknowledged()
		{
			return (Boolean)cxl_bRTTBreachDateInThePastAcknowledged.getValue(context);
		}
		public void setbRTTBreachDateInThePastAcknowledged(Boolean value)
		{
			cxl_bRTTBreachDateInThePastAcknowledged.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bRTTBreachDateInThePastAcknowledged = null;
		public boolean getMessageBoxRTTDateInThePastIsNotNull()
		{
			return !cxl_MessageBoxRTTDateInThePast.getValueIsNull(context);
		}
		public Integer getMessageBoxRTTDateInThePast()
		{
			return (Integer)cxl_MessageBoxRTTDateInThePast.getValue(context);
		}
		public void setMessageBoxRTTDateInThePast(Integer value)
		{
			cxl_MessageBoxRTTDateInThePast.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxRTTDateInThePast = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[324];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-ID", "ID_Organisation");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-NAME", "Name");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-TYPE", "Type");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-ISACTIVE", "IsActive");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-COMMENT", "Comment");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_Admin.Practice", "BO-1007100003-PCTCODE", "PctCode");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-ID", "ID_Gp");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-STATUS", "Status");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-ID", "ID_Service");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-SERVICENAME", "ServiceName");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-SERVICECATEGORY", "ServiceCategory");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-CANBESCHEDULED", "CanBeScheduled");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-SPECIALTY", "Specialty");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-EXPECTEDTURNAROUND", "ExpectedTurnaround");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-TURNAROUNDMEASURE", "TurnaroundMeasure");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-MATERNITYINDICATOR", "MaternityIndicator");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-ISACTIVE", "IsActive");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-ISSUBJECTTORTTCLOCK", "IsSubjectToRTTClock");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-DIRECTSELFREFERRALSACCEPTED", "DirectSelfReferralsAccepted");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_RefMan.CurrentServiceLiteVo", "BO-1003100032-ISPREASSESSMENTCOMPLETIONEXEMPT", "IsPreAssessmentCompletionExempt");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ID", "ID_CatsReferral");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CARECONTEXT", "CareContext");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ADDITIONALINVAPPTSSTATUS", "AdditionalInvApptsStatus");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASINVESTIGATIONS", "HasInvestigations");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASAPPOINTMENTS", "HasAppointments");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASDOCUMENTS", "HasDocuments");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASREFERRALLETTER", "HasReferralLetter");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISCAB", "IsCAB");
			fields[172] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASREJECTEDINV", "HasRejectedInv");
			fields[173] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ONWARDREFERRALSTATUS", "OnwardReferralStatus");
			fields[174] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PROVIDERCANCELLATION", "ProviderCancellation");
			fields[175] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-HASCONSULTATIONDETAILS", "HasConsultationDetails");
			fields[176] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-DISCHARGEDATE", "DischargeDate");
			fields[177] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISFINALREPORTREQUIRED", "IsFinalReportRequired");
			fields[178] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-TRIAGEDATETIME", "TriageDateTime");
			fields[179] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-LASTAPPTARRIVEDDATE", "LastApptArrivedDate");
			fields[180] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISACCEPTEDONCAB", "IsAcceptedOnCAB");
			fields[181] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISREFERRALREJECTEDONCAB", "IsReferralRejectedOnCAB");
			fields[182] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASPATIENTREJECTIONLETTERSENT", "WasPatientRejectionLetterSent");
			fields[183] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASPATIENTPROVIDERCANCELLATIONLETTERSENT", "WasPatientProviderCancellationLetterSent");
			fields[184] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-REQUIRESDISCHARGEREP", "RequiresDischargeRep");
			fields[185] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISSECONDARYREPORTREQUIRED", "IsSecondaryReportRequired");
			fields[186] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-WASFURTHERMANAGEMENTDETAILSREVIEWED", "WasFurtherManagementDetailsReviewed");
			fields[187] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ONWARDREFERRALREASON", "OnwardReferralReason");
			fields[188] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-DISCHARGETOGPDETAILSREVIEWSTATUS", "DischargeToGPDetailsReviewStatus");
			fields[189] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISSUITABLEFORSURGERY", "IsSuitableForSurgery");
			fields[190] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISFITFORSURGERY", "IsFitForSurgery");
			fields[191] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISAWAITINGCLINICALINFO", "IsAwaitingClinicalInfo");
			fields[192] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISACTIVEMONITORAPPTREQUIRED", "IsActiveMonitorApptRequired");
			fields[193] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CATSREPORTSENTDATE", "CATSReportSentDate");
			fields[194] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ENDOFCAREDATE", "EndOfCareDate");
			fields[195] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PROCEDUREFORPOSTOPREVIEW", "ProcedureForPostOpReview");
			fields[196] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-REFERRALCATEGORY", "ReferralCategory");
			fields[197] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISONWARDREFERRALTRIAGE", "IsOnwardReferralTriage");
			fields[198] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-URGENCY", "Urgency");
			fields[199] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PATHWAYID", "PathwayID");
			fields[200] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-RTTCLOCKIMPACT", "RTTClockImpact");
			fields[201] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CONSUPGRADEDATE", "ConsUpgradeDate");
			fields[202] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CANCERTYPE", "CancerType");
			fields[203] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-EPISODEOFCARE", "EpisodeOfCare");
			fields[204] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CURRENT31TARGETDATE", "Current31TargetDate");
			fields[205] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CURRENT62TARGETDATE", "Current62TargetDate");
			fields[206] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-PATIENTCATEGORY", "PatientCategory");
			fields[207] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-ISEMERGENCYREFERRAL", "IsEmergencyReferral");
			fields[208] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-MANUALLYMARKEDASNOTRTTIMPACT", "ManuallyMarkedAsNotRTTImpact");
			fields[209] = new ims.framework.ReportField(this.context, "_cv_RefMan.CatsReferralWizard", "BO-1004100035-CHANGECBAPPOINTMENT", "ChangeCBAppointment");
			fields[210] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-ID", "ID_AwaitingClinicalInfo");
			fields[211] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-OTHERCLINICALINFORMATION", "OtherClinicalInformation");
			fields[212] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-DATEAWAITINGCLINICALINFO", "DateAwaitingClinicalInfo");
			fields[213] = new ims.framework.ReportField(this.context, "_cv_RefMan.AwaitingClinicalInfo", "BO-1096100044-DATECLINICALINFORECEIVED", "DateClinicalInfoReceived");
			fields[214] = new ims.framework.ReportField(this.context, "_cv_RefMan.PatientsGP", "BO-1006100001-ID", "ID_Gp");
			fields[215] = new ims.framework.ReportField(this.context, "_cv_RefMan.PatientsGP", "BO-1006100001-STATUS", "Status");
			fields[216] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-ID", "ID_ReferralTransfer");
			fields[217] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-OTHERPATIENTNUMBER", "OtherPatientNumber");
			fields[218] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-OTHERORGANISATIONCODE", "OTherOrganisationCode");
			fields[219] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-REFERRINGORGANISATIONCODE", "ReferringOrganisationCode");
			fields[220] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-PATHWAYID", "PathwayID");
			fields[221] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-RTTSTARTDATE", "RTTStartDate");
			fields[222] = new ims.framework.ReportField(this.context, "_cv_RefMan.ReferralTransfer", "BO-1096100070-RTTSTATUSDATE", "RTTStatusDate");
			fields[223] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__GPInfo_" + componentIdentifier, "BO-1006100001-ID", "ID_Gp");
			fields[224] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__GPInfo_" + componentIdentifier, "BO-1006100001-STATUS", "Status");
			fields[225] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-ID", "ID_Organisation");
			fields[226] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-NAME", "Name");
			fields[227] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-TYPE", "Type");
			fields[228] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-ISACTIVE", "IsActive");
			fields[229] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-COMMENT", "Comment");
			fields[230] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__AHPInfo_" + componentIdentifier, "BO-1007100003-PCTCODE", "PctCode");
			fields[231] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ID", "ID_ReferralLetterDetails");
			fields[232] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-REFERRERTYPE", "ReferrerType");
			fields[233] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ALLIEDHEALTHPROFNAME", "AlliedHealthProfName");
			fields[234] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-DATEOFREFERRAL", "DateOfReferral");
			fields[235] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[236] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-END18WW", "End18WW");
			fields[237] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[238] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-LANGUAGE", "Language");
			fields[239] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-TRANSPORTREQUIRED", "TransportRequired");
			fields[240] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-TRANSPORT", "Transport");
			fields[241] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-AUTHORINGDATETIME", "AuthoringDateTime");
			fields[242] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-COPYDISCHARGETOPATIENT", "CopyDischargeToPatient");
			fields[243] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-PCT", "PCT");
			fields[244] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-OTHERLANGUAGE", "OtherLanguage");
			fields[245] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-SPECIALREQUIREMENTS", "SpecialRequirements");
			fields[246] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ISDADREFERRAL", "IsDADReferral");
			fields[247] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-DADUBRN", "DadUbrn");
			fields[248] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ISREFERRERPATIENTSGP", "IsReferrerPatientsGp");
			fields[249] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ENDDATEKPI", "EndDateKPI");
			fields[250] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ENDDATEEMAILKPI", "EndDateEmailKPI");
			fields[251] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ENDDATEPAPERKPI", "EndDatePaperKPI");
			fields[252] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-ORIGINALDATEOFREFERRAL", "OriginalDateOfReferral");
			fields[253] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-REFERERADDRESS", "RefererAddress");
			fields[254] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-TRANSFEREDBY", "TransferedBY");
			fields[255] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-INITIATEDFROM", "InitiatedFrom");
			fields[256] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__referralVo_" + componentIdentifier, "BO-1003100093-OTHERLOCATION", "OtherLocation");
			fields[257] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__patientsGp_" + componentIdentifier, "BO-1006100001-ID", "ID_Gp");
			fields[258] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__patientsGp_" + componentIdentifier, "BO-1006100001-STATUS", "Status");
			fields[259] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier, "BO-1096100044-ID", "ID_AwaitingClinicalInfo");
			fields[260] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier, "BO-1096100044-OTHERCLINICALINFORMATION", "OtherClinicalInformation");
			fields[261] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier, "BO-1096100044-DATEAWAITINGCLINICALINFO", "DateAwaitingClinicalInfo");
			fields[262] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CurrentAwaitingClinicalInformationVo_" + componentIdentifier, "BO-1096100044-DATECLINICALINFORECEIVED", "DateClinicalInfoReceived");
			fields[263] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ID", "ID_CatsReferral");
			fields[264] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CARECONTEXT", "CareContext");
			fields[265] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ADDITIONALINVAPPTSSTATUS", "AdditionalInvApptsStatus");
			fields[266] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASINVESTIGATIONS", "HasInvestigations");
			fields[267] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASAPPOINTMENTS", "HasAppointments");
			fields[268] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASDOCUMENTS", "HasDocuments");
			fields[269] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASREFERRALLETTER", "HasReferralLetter");
			fields[270] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISCAB", "IsCAB");
			fields[271] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASREJECTEDINV", "HasRejectedInv");
			fields[272] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ONWARDREFERRALSTATUS", "OnwardReferralStatus");
			fields[273] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-PROVIDERCANCELLATION", "ProviderCancellation");
			fields[274] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-HASCONSULTATIONDETAILS", "HasConsultationDetails");
			fields[275] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-DISCHARGEDATE", "DischargeDate");
			fields[276] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISFINALREPORTREQUIRED", "IsFinalReportRequired");
			fields[277] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-TRIAGEDATETIME", "TriageDateTime");
			fields[278] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-LASTAPPTARRIVEDDATE", "LastApptArrivedDate");
			fields[279] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISACCEPTEDONCAB", "IsAcceptedOnCAB");
			fields[280] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISREFERRALREJECTEDONCAB", "IsReferralRejectedOnCAB");
			fields[281] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-WASPATIENTREJECTIONLETTERSENT", "WasPatientRejectionLetterSent");
			fields[282] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-WASPATIENTPROVIDERCANCELLATIONLETTERSENT", "WasPatientProviderCancellationLetterSent");
			fields[283] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-REQUIRESDISCHARGEREP", "RequiresDischargeRep");
			fields[284] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISSECONDARYREPORTREQUIRED", "IsSecondaryReportRequired");
			fields[285] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-WASFURTHERMANAGEMENTDETAILSREVIEWED", "WasFurtherManagementDetailsReviewed");
			fields[286] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ONWARDREFERRALREASON", "OnwardReferralReason");
			fields[287] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-DISCHARGETOGPDETAILSREVIEWSTATUS", "DischargeToGPDetailsReviewStatus");
			fields[288] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISSUITABLEFORSURGERY", "IsSuitableForSurgery");
			fields[289] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISFITFORSURGERY", "IsFitForSurgery");
			fields[290] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISAWAITINGCLINICALINFO", "IsAwaitingClinicalInfo");
			fields[291] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISACTIVEMONITORAPPTREQUIRED", "IsActiveMonitorApptRequired");
			fields[292] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CATSREPORTSENTDATE", "CATSReportSentDate");
			fields[293] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ENDOFCAREDATE", "EndOfCareDate");
			fields[294] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-PROCEDUREFORPOSTOPREVIEW", "ProcedureForPostOpReview");
			fields[295] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-REFERRALCATEGORY", "ReferralCategory");
			fields[296] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISONWARDREFERRALTRIAGE", "IsOnwardReferralTriage");
			fields[297] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-URGENCY", "Urgency");
			fields[298] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-PATHWAYID", "PathwayID");
			fields[299] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-RTTCLOCKIMPACT", "RTTClockImpact");
			fields[300] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CONSUPGRADEDATE", "ConsUpgradeDate");
			fields[301] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CANCERTYPE", "CancerType");
			fields[302] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-EPISODEOFCARE", "EpisodeOfCare");
			fields[303] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CURRENT31TARGETDATE", "Current31TargetDate");
			fields[304] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CURRENT62TARGETDATE", "Current62TargetDate");
			fields[305] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-PATIENTCATEGORY", "PatientCategory");
			fields[306] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-ISEMERGENCYREFERRAL", "IsEmergencyReferral");
			fields[307] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-MANUALLYMARKEDASNOTRTTIMPACT", "ManuallyMarkedAsNotRTTImpact");
			fields[308] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__CatsReferralWizardVo_" + componentIdentifier, "BO-1004100035-CHANGECBAPPOINTMENT", "ChangeCBAppointment");
			fields[309] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-ID", "ID_ReferralTransfer");
			fields[310] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-OTHERPATIENTNUMBER", "OtherPatientNumber");
			fields[311] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-OTHERORGANISATIONCODE", "OTherOrganisationCode");
			fields[312] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-REFERRINGORGANISATIONCODE", "ReferringOrganisationCode");
			fields[313] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-PATHWAYID", "PathwayID");
			fields[314] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-RTTSTARTDATE", "RTTStartDate");
			fields[315] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__TransferInfo_" + componentIdentifier, "BO-1096100070-RTTSTATUSDATE", "RTTStatusDate");
			fields[316] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__cancerTypeConfig_" + componentIdentifier, "BO-1096100071-ID", "ID_CancerTypeConfig");
			fields[317] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ReferrerHCP_" + componentIdentifier, "BO-1006100000-ID", "ID_Hcp");
			fields[318] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ReferrerHCP_" + componentIdentifier, "BO-1006100000-HCPTYPE", "HcpType");
			fields[319] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ReferrerHCP_" + componentIdentifier, "BO-1006100000-ISACTIVE", "IsActive");
			fields[320] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ReferrerHCP_" + componentIdentifier, "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[321] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ReferrerHCP_" + componentIdentifier, "BO-1006100000-ISALOCALCONSULTANT", "IsALocalConsultant");
			fields[322] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ReferrerHCP_" + componentIdentifier, "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[323] = new ims.framework.ReportField(this.context, prefix + "_lv_RefMan.ReferralDetailsComponent.__internal_x_context__ReferrerHCP_" + componentIdentifier, "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return formInfo.getLocalVariablesPrefix() + formInfo.getNamespaceName() + formInfo.getFormName() + formInfo.getFormId() + "_" + this.componentIdentifier;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
