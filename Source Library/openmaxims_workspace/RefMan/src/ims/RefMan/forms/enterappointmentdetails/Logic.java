//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.66 build 3238.28152)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.RefMan.forms.enterappointmentdetails;

import ims.framework.enumerations.DialogResult;
import ims.framework.utils.Date;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		// WDEV-16850
		if (args != null && args.length >0)
		{
			if (args[0] instanceof Date)
			{
				form.getLocalContext().setClinicalOrderInvDate((Date) args[0]);
			}
		}
	}
	@Override
	protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException
	{	
			if (ValidateApptDate()) // WDEV-16850 Appointment Date is now required to be >= Order Date
			{
			form.getGlobalContext().RefMan.EnterAppointmentDetails.setApptDate(form.dtimAppt().getValue());
			engine.close(DialogResult.OK);
			}
		
	}
	private boolean ValidateApptDate()
	{
	
		if(form.dtimAppt().getValue() == null)
		{
			engine.showErrors(new String[]{"Appointment Date is mandatory."});
			return false;
		}	
		
		if (form.dtimAppt().getValue() != null && form.getLocalContext().getClinicalOrderInvDateIsNotNull() && form.dtimAppt().getValue().getDate().isLessThan(form.getLocalContext().getClinicalOrderInvDate()))
		{	
			engine.showErrors(new String[]{"Appointment Date cannot be set before Order Date of the clinical investigation."});
			form.dtimAppt().setFocus();
			return false;
		}
		return true;
	} // end WDEV-16850
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
}
