//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.bookemergencytheatre;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		Core = new CoreContext(context);
		RefMan = new RefManContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getTheatreAppointmentIsNotNull()
		{
			return !cx_SchedulingTheatreAppointment.getValueIsNull(context);
		}
		public ims.scheduling.vo.BookingAppointmentTheatreVo getTheatreAppointment()
		{
			return (ims.scheduling.vo.BookingAppointmentTheatreVo)cx_SchedulingTheatreAppointment.getValue(context);
		}
		public void setTheatreAppointment(ims.scheduling.vo.BookingAppointmentTheatreVo value)
		{
			cx_SchedulingTheatreAppointment.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreAppointment = new ims.framework.ContextVariable("Scheduling.TheatreAppointment", "_cv_Scheduling.TheatreAppointment");
		public boolean getSessionParentChildSlotIsNotNull()
		{
			return !cx_SchedulingSessionParentChildSlot.getValueIsNull(context);
		}
		public ims.scheduling.vo.SessionParentChildSlotVo getSessionParentChildSlot()
		{
			return (ims.scheduling.vo.SessionParentChildSlotVo)cx_SchedulingSessionParentChildSlot.getValue(context);
		}
		public void setSessionParentChildSlot(ims.scheduling.vo.SessionParentChildSlotVo value)
		{
			cx_SchedulingSessionParentChildSlot.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingSessionParentChildSlot = new ims.framework.ContextVariable("Scheduling.SessionParentChildSlot", "_cv_Scheduling.SessionParentChildSlot");
		public boolean getTheatreTypeIsNotNull()
		{
			return !cx_SchedulingTheatreType.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.TheatreType getTheatreType()
		{
			return (ims.scheduling.vo.lookups.TheatreType)cx_SchedulingTheatreType.getValue(context);
		}
		public void setTheatreType(ims.scheduling.vo.lookups.TheatreType value)
		{
			cx_SchedulingTheatreType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreType = new ims.framework.ContextVariable("Scheduling.TheatreType", "_cv_Scheduling.TheatreType");
		public boolean getBookTheatreSlotDialogDataIsNotNull()
		{
			return !cx_SchedulingBookTheatreSlotDialogData.getValueIsNull(context);
		}
		public ims.scheduling.vo.BookTheatreSlotDialogVo getBookTheatreSlotDialogData()
		{
			return (ims.scheduling.vo.BookTheatreSlotDialogVo)cx_SchedulingBookTheatreSlotDialogData.getValue(context);
		}
		public void setBookTheatreSlotDialogData(ims.scheduling.vo.BookTheatreSlotDialogVo value)
		{
			cx_SchedulingBookTheatreSlotDialogData.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookTheatreSlotDialogData = new ims.framework.ContextVariable("Scheduling.BookTheatreSlotDialogData", "_cv_Scheduling.BookTheatreSlotDialogData");
		public boolean getTheatreServiceIsNotNull()
		{
			return !cx_SchedulingTheatreService.getValueIsNull(context);
		}
		public ims.core.vo.ServiceLiteVo getTheatreService()
		{
			return (ims.core.vo.ServiceLiteVo)cx_SchedulingTheatreService.getValue(context);
		}
		public void setTheatreService(ims.core.vo.ServiceLiteVo value)
		{
			cx_SchedulingTheatreService.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreService = new ims.framework.ContextVariable("Scheduling.TheatreService", "_cv_Scheduling.TheatreService");
		public boolean getMoveAppointmentDialogDataIsNotNull()
		{
			return !cx_SchedulingMoveAppointmentDialogData.getValueIsNull(context);
		}
		public ims.scheduling.vo.MoveAppointmentDataVo getMoveAppointmentDialogData()
		{
			return (ims.scheduling.vo.MoveAppointmentDataVo)cx_SchedulingMoveAppointmentDialogData.getValue(context);
		}
		public void setMoveAppointmentDialogData(ims.scheduling.vo.MoveAppointmentDataVo value)
		{
			cx_SchedulingMoveAppointmentDialogData.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingMoveAppointmentDialogData = new ims.framework.ContextVariable("Scheduling.MoveAppointmentDialogData", "_cv_Scheduling.MoveAppointmentDialogData");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPELProcedureDetailsForBookingIsNotNull()
		{
			return !cx_RefManPELProcedureDetailsForBooking.getValueIsNull(context);
		}
		public String getPELProcedureDetailsForBooking()
		{
			return (String)cx_RefManPELProcedureDetailsForBooking.getValue(context);
		}
		public void setPELProcedureDetailsForBooking(String value)
		{
			cx_RefManPELProcedureDetailsForBooking.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManPELProcedureDetailsForBooking = new ims.framework.ContextVariable("RefMan.PELProcedureDetailsForBooking", "_cv_RefMan.PELProcedureDetailsForBooking");
		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");

		private ims.framework.Context context;
	}

	public SchedulingContext Scheduling;
	public CoreContext Core;
	public RefManContext RefMan;
}
