//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.inpatientclinicalcodingworklist;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		RefMan = new RefManContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getSelectedLookupInstancesIsNotNull()
		{
			return !cx_CoreSelectedLookupInstances.getValueIsNull(context);
		}
		public ims.vo.LookupInstanceCollection getSelectedLookupInstances()
		{
			return (ims.vo.LookupInstanceCollection)cx_CoreSelectedLookupInstances.getValue(context);
		}
		public void setSelectedLookupInstances(ims.vo.LookupInstanceCollection value)
		{
			cx_CoreSelectedLookupInstances.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreSelectedLookupInstances = new ims.framework.ContextVariable("Core.SelectedLookupInstances", "_cv_Core.SelectedLookupInstances");
		public boolean getSelectLookupTypeIsNotNull()
		{
			return !cx_CoreSelectLookupType.getValueIsNull(context);
		}
		public ims.vo.LookupTypeVo getSelectLookupType()
		{
			return (ims.vo.LookupTypeVo)cx_CoreSelectLookupType.getValue(context);
		}
		public void setSelectLookupType(ims.vo.LookupTypeVo value)
		{
			cx_CoreSelectLookupType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreSelectLookupType = new ims.framework.ContextVariable("Core.SelectLookupType", "_cv_Core.SelectLookupType");
		public boolean getImsReportIdIsNotNull()
		{
			return !cx_CoreImsReportId.getValueIsNull(context);
		}
		public Integer getImsReportId()
		{
			return (Integer)cx_CoreImsReportId.getValue(context);
		}
		public void setImsReportId(Integer value)
		{
			cx_CoreImsReportId.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreImsReportId = new ims.framework.ContextVariable("Core.ImsReportId", "_cv_Core.ImsReportId");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getAdmissionDetailRefIsNotNull()
		{
			return !cx_RefManAdmissionDetailRef.getValueIsNull(context);
		}
		public ims.core.admin.pas.vo.AdmissionDetailRefVo getAdmissionDetailRef()
		{
			return (ims.core.admin.pas.vo.AdmissionDetailRefVo)cx_RefManAdmissionDetailRef.getValue(context);
		}
		public void setAdmissionDetailRef(ims.core.admin.pas.vo.AdmissionDetailRefVo value)
		{
			cx_RefManAdmissionDetailRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManAdmissionDetailRef = new ims.framework.ContextVariable("RefMan.AdmissionDetailRef", "_cv_RefMan.AdmissionDetailRef");
		public boolean getSelectedHospitalIsNotNull()
		{
			return !cx_RefManSelectedHospital.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVo getSelectedHospital()
		{
			return (ims.core.vo.LocationLiteVo)cx_RefManSelectedHospital.getValue(context);
		}
		public void setSelectedHospital(ims.core.vo.LocationLiteVo value)
		{
			cx_RefManSelectedHospital.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedHospital = new ims.framework.ContextVariable("RefMan.SelectedHospital", "_cv_RefMan.SelectedHospital");
		public boolean getSelectedWardsIsNotNull()
		{
			return !cx_RefManSelectedWards.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVoCollection getSelectedWards()
		{
			return (ims.core.vo.LocationLiteVoCollection)cx_RefManSelectedWards.getValue(context);
		}
		public void setSelectedWards(ims.core.vo.LocationLiteVoCollection value)
		{
			cx_RefManSelectedWards.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedWards = new ims.framework.ContextVariable("RefMan.SelectedWards", "_cv_RefMan.SelectedWards");
		public boolean getSelectedCaseNoteFolderLocationsIsNotNull()
		{
			return !cx_RefManSelectedCaseNoteFolderLocations.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVoCollection getSelectedCaseNoteFolderLocations()
		{
			return (ims.core.vo.LocationLiteVoCollection)cx_RefManSelectedCaseNoteFolderLocations.getValue(context);
		}
		public void setSelectedCaseNoteFolderLocations(ims.core.vo.LocationLiteVoCollection value)
		{
			cx_RefManSelectedCaseNoteFolderLocations.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedCaseNoteFolderLocations = new ims.framework.ContextVariable("RefMan.SelectedCaseNoteFolderLocations", "_cv_RefMan.SelectedCaseNoteFolderLocations");
		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");
		public boolean getInpatientClinicalCodingWorklistCriteriaIsNotNull()
		{
			return !cx_RefManInpatientClinicalCodingWorklistCriteria.getValueIsNull(context);
		}
		public ims.RefMan.vo.InpatientClinicalCodingWorklistSearchCriteriaVo getInpatientClinicalCodingWorklistCriteria()
		{
			return (ims.RefMan.vo.InpatientClinicalCodingWorklistSearchCriteriaVo)cx_RefManInpatientClinicalCodingWorklistCriteria.getValue(context);
		}
		public void setInpatientClinicalCodingWorklistCriteria(ims.RefMan.vo.InpatientClinicalCodingWorklistSearchCriteriaVo value)
		{
			cx_RefManInpatientClinicalCodingWorklistCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManInpatientClinicalCodingWorklistCriteria = new ims.framework.ContextVariable("RefMan.InpatientClinicalCodingWorklistCriteria", "_cvp_RefMan.InpatientClinicalCodingWorklistCriteria");
		public boolean getDischargedEpisodeForReferralCodingIsNotNull()
		{
			return !cx_RefManDischargedEpisodeForReferralCoding.getValueIsNull(context);
		}
		public ims.core.admin.pas.vo.DischargedEpisodeRefVo getDischargedEpisodeForReferralCoding()
		{
			return (ims.core.admin.pas.vo.DischargedEpisodeRefVo)cx_RefManDischargedEpisodeForReferralCoding.getValue(context);
		}
		public void setDischargedEpisodeForReferralCoding(ims.core.admin.pas.vo.DischargedEpisodeRefVo value)
		{
			cx_RefManDischargedEpisodeForReferralCoding.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManDischargedEpisodeForReferralCoding = new ims.framework.ContextVariable("RefMan.DischargedEpisodeForReferralCoding", "_cv_RefMan.DischargedEpisodeForReferralCoding");
		public boolean getDischargedEpisodeRefCollIsNotNull()
		{
			return !cx_RefManDischargedEpisodeRefColl.getValueIsNull(context);
		}
		public ims.core.admin.pas.vo.DischargedEpisodeRefVoCollection getDischargedEpisodeRefColl()
		{
			return (ims.core.admin.pas.vo.DischargedEpisodeRefVoCollection)cx_RefManDischargedEpisodeRefColl.getValue(context);
		}
		public void setDischargedEpisodeRefColl(ims.core.admin.pas.vo.DischargedEpisodeRefVoCollection value)
		{
			cx_RefManDischargedEpisodeRefColl.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManDischargedEpisodeRefColl = new ims.framework.ContextVariable("RefMan.DischargedEpisodeRefColl", "_cv_RefMan.DischargedEpisodeRefColl");

		private ims.framework.Context context;
	}

	public CoreContext Core;
	public RefManContext RefMan;
}
