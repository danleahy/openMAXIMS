//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.62 build 3110.16630)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.RefMan.forms.referraldetails;

import ims.admin.vo.enums.CommitMode;
import ims.RefMan.forms.referraldetails.GenForm.lyrDetailLayer.tabPayerDetailsContainer.Group1Enumeration;
import ims.RefMan.vo.CatsReferralDetailsVo;
import ims.RefMan.vo.CatsReferralFlaggedForReviewVo;
import ims.RefMan.vo.CatsReferralForRequestServiceVo;
import ims.RefMan.vo.CatsReferralMasterVo;
import ims.RefMan.vo.CatsReferralStatusVo;
import ims.RefMan.vo.CatsReferralStatusVoCollection;
import ims.RefMan.vo.CatsReferralWizardVo;
import ims.RefMan.vo.OnwardReferralFromTriageVo;
import ims.RefMan.vo.RejectReferralVo;
import ims.RefMan.vo.WorkAllocationVo;
import ims.RefMan.vo.enums.CALLINGFORM;
import ims.RefMan.vo.enums.ReferralAppointmentDetailsAction;
import ims.RefMan.vo.enums.ReferralAppointmentOutcomeAction;
import ims.RefMan.vo.enums.ReferralDetailsComponentButtonClicked;
import ims.RefMan.vo.enums.ReferralDetailsSelectedTab;
import ims.RefMan.vo.enums.ReferralOutcomeReportType;
import ims.RefMan.vo.enums.ReferralReviewDetail;
import ims.RefMan.vo.lookups.ReferralApptStatus;
import ims.RefMan.vo.lookups.ReferralUrgency;
import ims.configuration.AppRight;
import ims.configuration.gen.ConfigFlag;
import ims.core.resource.people.vo.MemberOfStaffRefVo;
import ims.core.resource.place.vo.LocationRefVo;
import ims.core.vo.OrgLiteVo;
import ims.core.vo.OrgLiteVoCollection;
import ims.core.vo.enums.DocumentViewLevel;
import ims.core.vo.enums.UploadDocumentAction;
import ims.core.vo.enums.UploadDocumentStoreLevel;
import ims.core.vo.lookups.ReferralManagementContractType;
import ims.core.vo.lookups.SourceOfReferral;
import ims.core.vo.lookups.YesNo;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.FormName;
import ims.framework.LayerBridge;
import ims.framework.MessageButtons;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.PresentationLogicException;
import ims.framework.utils.DateTime;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;
	
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		initialise();
		open();
		
		if (form.getGlobalContext().RefMan.getOpenApptAndInvTabIsNotNull()
			&& form.getGlobalContext().RefMan.getOpenApptAndInvTab())
		{
			form.lyrDetail().showtabAppt();
			form.getGlobalContext().RefMan.setOpenApptAndInvTab(Boolean.FALSE);
		}
		
		if(args != null && args.length > 0)
		{
			if(args[0] instanceof Boolean && Boolean.TRUE.equals(args[0]))
			{
				form.getLocalContext().setOpenForReferralTriage(true);
				form.lyrDetail().tabLetter().ccUpload().openReferralTriageDialog(true);
				form.lyrDetail().showtabLetter();
			}
			//WDEV-21187
			else if(args[0] instanceof String && ("ACTIVATE_REF_APP_TAB").equals(args[0]))
			{
				form.lyrDetail().showtabAppt();
				engine.open(form.getForms().RefMan.BookAppointmentDialog, false); //WDEV-22308
			}
				
			
		}
		
		updateReviewButton();
		
		//WDEV-20944 //WDEV-21176
		CatsReferralWizardVo referral = form.getLocalContext().getSelectedRecord();
		
		boolean referralTransfered = referral != null && referral.getCurrentStatus() != null && ReferralApptStatus.TRANSFERRED.equals(referral.getCurrentStatus().getReferralStatus());
		
		if (referral != null && (Boolean.TRUE.equals(referral.getIsEmergencyReferral()) || ReferralUrgency.EMERGENCY.equals(referral.getUrgency()) || referralTransfered))
		{
			form.lyrDetail().tabJourney().setHeaderVisible(false); 
		}
			
		form.setMode(FormMode.VIEW);
	}

	
	@Override
	protected void onBtnRejectClick() throws PresentationLogicException
	{
		CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		form.getLocalContext().setSelectedRecord(voRefWizard);
		if ((form.getGlobalContext().RefMan.getReferralContractTypeForPatientIsNotNull() 
				&& form.getGlobalContext().RefMan.getReferralContractTypeForPatient().equals(ReferralManagementContractType.REFERRALTRIAGE))
				|| (form.getLocalContext().getSelectedRecordIsNotNull()
						&& form.getLocalContext().getSelectedRecord().getCurrentStatusIsNotNull()	
						&& form.getLocalContext().getSelectedRecord().getCurrentStatus().getReferralStatusIsNotNull()
						&& (form.getLocalContext().getSelectedRecord().getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.PROVISIONAL_REJECTION)
							||(ReferralApptStatus.AWAITING_TRIAGE.equals(form.getLocalContext().getSelectedRecord().getCurrentStatus().getReferralStatus()) 
							   && engine.hasRight(AppRight.CAN_DIRECTLY_REJECT_REFERRAL)))) )
		{			
			if(voRefWizard != null && voRefWizard.getCurrentStatus() != null && voRefWizard.getCurrentStatus().getReferralStatus() != null)
				if(voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED) || voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED) || voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER))
				{
					engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
					initialise();
					open();
					return;
				}
			engine.open(form.getForms().RefMan.RejectionReasondialog);
			form.lyrDetail().tabLetter().ccUpload().hideHtmlControl();
		}

		CatsReferralWizardVo catsReferralWizardVo = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		if (catsReferralWizardVo.getCurrentStatusIsNotNull())
			if (catsReferralWizardVo.getCurrentStatus().getReferralStatusIsNotNull())
				if (!catsReferralWizardVo.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.AWAITING_TRIAGE))
				{
					catsReferralWizardVo.setTriageDateTime(new DateTime());
					String[] arrErrors = catsReferralWizardVo.validate();
					if(arrErrors != null)
					{
						engine.showErrors(arrErrors);
						return;
					}
					try
					{
						domain.saveCatsReferral(catsReferralWizardVo);
					}
					catch (DomainInterfaceException e)
					{
						e.printStackTrace();
					}
					catch (StaleObjectException e)
					{
						engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
					}
				}
	}

	
	private void open()
	{
		CatsReferralDetailsVo voContainer = domain.getReferralDetail(form.getGlobalContext().RefMan.getCatsReferral());
		if(voContainer.getAppointmentDetailIsNotNull() && voContainer.getAppointmentDetail().getCurrentStatusIsNotNull())
			form.getGlobalContext().RefMan.setCatsReferralStatus(voContainer.getAppointmentDetail().getCurrentStatus());

		CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());

		// WDEV-17903 if no appointments then set the GC for service )as this will default in then when booking appointment
		if (voRefWizard != null && (!voRefWizard.getIsCABIsNotNull() || !voRefWizard.getIsCAB()) 
				&& !Boolean.TRUE.equals(voRefWizard.getHasAppointments()) && voRefWizard.getReferralDetailsIsNotNull())	//wdev-19933 it was !voRefWizard.getHasAppointments()
		{
			form.getGlobalContext().Scheduling.setBookingService(voRefWizard.getReferralDetails().getService());
		}
		
		form.lyrDetail().tabDetails().ccDetails().setValue(voContainer.getLetterDetail(), voRefWizard);
		form.lyrDetail().tabPresentation().ccPresentation().setValue(voContainer.getPresentation());
		form.lyrDetail().tabAppt().ccApptDetail().setValue(voContainer.getAppointmentDetail());
		
		updateButtonsState(voRefWizard);

		if (voRefWizard != null && voRefWizard.getCurrentStatusIsNotNull() && voRefWizard.getCurrentStatus().getReferralStatusIsNotNull())
			setReferralAcceptedOnApptTab(voRefWizard.getCurrentStatus().getReferralStatus());

		if (voRefWizard != null
			&& voRefWizard.getReferralDetailsIsNotNull()
			&& voRefWizard.getReferralDetails().getIsDADReferralIsNotNull()
			&& voRefWizard.getReferralDetails().getIsDADReferral())
			form.lyrDetail().tabAppt().ccApptDetail().enableBookingButton();

		if (voRefWizard != null 
			&& (voRefWizard.getReferralDetails() == null
			|| (voRefWizard.getReferralDetailsIsNotNull()
			&& voRefWizard.getReferralDetails().getService() == null)) )
		{
			form.lyrDetail().tabLetter().setHeaderEnabled(false);
			form.lyrDetail().tabLetter().setEnabled(false);
		}

		form.getLocalContext().setSelectedRecord(voRefWizard);

		form.btnComplete().setVisible(false);
		form.getLocalContext().setWorkAllocation(null);
		if (voRefWizard != null
			&& ((MemberOfStaffRefVo)domain.getMosUser()) != null
			&& ((MemberOfStaffRefVo)domain.getMosUser()).getID_MemberOfStaffIsNotNull())
		{
			WorkAllocationVo voWork = domain.getWorkAllocation(voRefWizard, (MemberOfStaffRefVo)domain.getMosUser());
			if (voWork != null)
			{
				form.btnComplete().setVisible(true);
				form.getLocalContext().setWorkAllocation(voWork);
			}
		}
		
		//WDEV-23399
		if (form.lyrDetail().tabOverview().isVisible())
		{
			form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().initialize(form.getGlobalContext().RefMan.getCatsReferral());
		}
		
		if (form.lyrDetail().tabJourney().isVisible())				
		{
			form.lyrDetail().tabJourney().ccPatientJourney().initialise(form.getGlobalContext().RefMan.getCatsReferral());
		}

		openOnwardReferral(voRefWizard);

	}

	private void openOnwardReferral(CatsReferralWizardVo voRefWizard) 
	{
		form.lyrDetail().tabOnwardReferral().setHeaderVisible(false);
		initialiseOnwardTab();
		populateOnwardReferralTabFromData(domain.getOnwardReferralByCatsReferral(voRefWizard));
		if (voRefWizard.getCurrentStatusIsNotNull()
			&& voRefWizard.getCurrentStatus().getReferralStatusIsNotNull()
			&& voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.ONWARDREFERRALREQUESTED))
			form.lyrDetail().tabOnwardReferral().setHeaderVisible(true);

	}

	private void initialise()
	{
		
		if (ConfigFlag.GEN.SHOW_REFERRAL_DETAILS_BILLING_TABS.getValue())
		{
			form.lyrDetail().tabPayerDetails().Group1().setValue(Group1Enumeration.rdoInsurance);
			form.lyrDetail().tabPayerDetails().setHeaderVisible(true);
			form.lyrDetail().tabPayerDetails().setHeaderEnabled(true);
			form.lyrDetail().tabContractDetails().setHeaderVisible(true);
			form.lyrDetail().tabContractDetails().setHeaderEnabled(true);
		}
		else
		{
			form.lyrDetail().tabPayerDetails().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().setHeaderEnabled(false);
			form.lyrDetail().tabContractDetails().setHeaderVisible(false);
			form.lyrDetail().tabContractDetails().setHeaderEnabled(false);
		}
		
		form.lyrDetail().showtabOverview();
		form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().initialize(form.getGlobalContext().RefMan.getCatsReferral());
		form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().setMode(FormMode.VIEW);
		
		form.getLocalContext().setSelectedTab(ReferralDetailsSelectedTab.OVERVIEW);
		
		form.lyrDetail().tabDetails().ccDetails().initialize(CALLINGFORM.REFERRALDETAILS);
		form.lyrDetail().tabDetails().ccDetails().setMode(FormMode.VIEW);
		
		//wdev-7998
		if (ConfigFlag.GEN.SHOW_PRESENTATION_TAB.getValue()) 
			form.lyrDetail().tabPresentation().ccPresentation().initialize();
		else
			form.lyrDetail().tabPresentation().setHeaderVisible(false);
		
		form.lyrDetail().tabAppt().ccApptDetail().initialise(engine.hasRight(AppRight.ALLOW_ORDERINVESTIGATIONS_CAREUK));
		
		form.getGlobalContext().RefMan.setCatsReferralHasGpLetter(null);
		form.lyrDetail().tabLetter().ccUpload().initialize(null, UploadDocumentStoreLevel.REFERRAL,DocumentViewLevel.REFERRAL);//WDEV-12242
		
		form.getGlobalContext().RefMan.setRejectionReason(null);		
		form.getGlobalContext().RefMan.setSecondOpinionReferralStatus(null);
		
		//form.lyrDetail().tabOnwardReferral().setVisible(false); //WDEV-12736
		
		if (form.getGlobalContext().RefMan.getDiagnosticReferralForApplication() == null)
			form.getGlobalContext().RefMan.setDiagnosticReferralForApplication(domain.hasLocationDiagnosicContracts((LocationRefVo) engine.getCurrentLocation()));
	}

	protected void onFormDialogClosed(FormName formName, DialogResult result) throws PresentationLogicException
	{		
		//refresh the appt tab after possible placing of order
		if(formName.equals(form.getForms().OCRR.SelectAndOrderDialog))
			form.lyrDetail().tabAppt().ccApptDetail().setValue( domain.getReferralApptDetail(form.getGlobalContext().RefMan.getCatsReferral()));
		
		// Refresh the appointments tab after a possible placing of a theatre booking right after a boooking appointment
		if (formName.equals(form.getForms().RefMan.BookTheatreSlot))
			form.lyrDetail().tabAppt().ccApptDetail().setValue(domain.getReferralApptDetail(form.getGlobalContext().RefMan.getCatsReferral()));
			
		
		if(formName.equals(form.getForms().RefMan.SecondOpinionDialog)
			&& result.equals(DialogResult.OK))
		{
			form.lyrDetail().tabLetter().ccUpload().showHtmlControl();
			CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			
			if (form.getGlobalContext().RefMan.getSecondOpinionReferralStatusIsNotNull()
				&& form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getID_CATSReferralStatusIsNotNull())
				saveSecondOpinion(voRefWizard, form.getGlobalContext().RefMan.getSecondOpinionReferralStatus());
			else
				setCatsReferralStatus(voRefWizard,ReferralApptStatus.PROVISIONAL_REJECTION, null, form.getGlobalContext().RefMan.getSecondOpinionReferralStatus());
			
			if (form.getGlobalContext().RefMan.getSecondOpinionReferralStatusIsNotNull())
			{
				form.lyrDetail().tabNotes().ccNotes().addNotes("SECOND OPINION COMMENTS : " 
						+ (form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getCommentIsNotNull() ? form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getComment() : "")
						+ "  " + (form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getSecondOpinionCategoryIsNotNull() ? ("Reason : " + form.getGlobalContext().RefMan.getSecondOpinionReferralStatus().getSecondOpinionCategory().toString()) : ""));
			}
		}
		
		else if(formName.equals(form.getForms().RefMan.RejectionReasondialog)
				&& result.equals(DialogResult.OK))
		{
			form.lyrDetail().tabLetter().ccUpload().showHtmlControl();
			CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			if(voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED))
			{
				engine.showMessage("The Referral was rejected by another user.");
				initialise();
				open();
				return;
			}
					
			setCatsReferralStatus(voRefWizard,ReferralApptStatus.REFERRAL_REJECTED, form.getGlobalContext().RefMan.getRejectionReason(), null);
			if (form.getGlobalContext().RefMan.getRejectionReasonIsNotNull())
			{
				form.lyrDetail().tabNotes().ccNotes().addNotes("REFERRAL REJECTED \n Reason : " + 
						(form.getGlobalContext().RefMan.getRejectionReason().getReasonIsNotNull() ? (form.getGlobalContext().RefMan.getRejectionReason().getReasonIsNotNull() ? form.getGlobalContext().RefMan.getRejectionReason().getReason().getText() : "") : "")
						+ "\n Comment : " + (form.getGlobalContext().RefMan.getRejectionReason().getReasonIsNotNull() ? form.getGlobalContext().RefMan.getRejectionReason().getRejectionComments() : ""));
			}
						
			if (form.getGlobalContext().RefMan.getPrintRejectionLettersIsNotNull()
				&& form.getGlobalContext().RefMan.getPrintRejectionLetters())
			{
				printRejectionLetters();
				return;
			}

		}

		if(formName.equals(form.getForms().Core.UploadDocumentDialog)&& result.equals(DialogResult.OK))
		{
			if (Boolean.TRUE.equals(form.getGlobalContext().RefMan.getCatsReferralHasGpLetter()))
			{
				CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
				//WDEV-21176 automatically accept it in this case
				if (ReferralUrgency.EMERGENCY.equals(voRefWizard.getUrgency()) &&  voRefWizard.getReferralDetails() != null && !SourceOfReferral.SELF.equals(voRefWizard.getReferralDetails().getReferrerType()))
				{	
					acceptReferral(voRefWizard);
				}
				else
				{	
					setCatsReferralStatus(voRefWizard,ReferralApptStatus.AWAITING_TRIAGE, null, form.getGlobalContext().RefMan.getCatsReferralStatus());
				}
				form.getGlobalContext().RefMan.setCatsReferralHasGpLetter(Boolean.TRUE);
			}
		}
		
		if(formName.equals(form.getForms().RefMan.ReferralReviewDetails))
		{
			
			updateReviewButton();			
		}

		if (formName.equals(form.getForms().Pathways.AdminEvent))
		{
			CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			
			if (ReferralApptStatus.END_OF_CARE.equals(voRefWizard.getCurrentStatus().getReferralStatus()))
			{
				form.lyrDetail().tabAppt().ccApptDetail().refreshComponentScreenControls(false, true);
			}
			else
			{
				form.lyrDetail().tabAppt().ccApptDetail().refreshComponentScreenControls(true, false);
			}

			form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().initialize(voRefWizard);
			form.lyrDetail().tabDetails().ccDetails().setValue(voRefWizard.getReferralDetails(), voRefWizard);
			form.lyrDetail().tabJourney().ccPatientJourney().initialise(voRefWizard);
		}
		
		if ( (form.getLocalContext().getSelectedRecordIsNotNull()
				&& form.getLocalContext().getSelectedRecord().getCurrentStatusIsNotNull()
				&& linkICPCheckStatus( form.getLocalContext().getSelectedRecord().getCurrentStatus().getReferralStatus()) 
				&& formName.equals(form.getForms().ICP.ICPPatientSelect))
			||(formName.equals(form.getForms().ICP.ICPPatientSelect) 
					&& result.equals(DialogResult.CANCEL)) )
			{
				form.btnLinkICP().setVisible(false);
				
				if (ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue())
				{
					if( form.getLocalContext().getSelectedRecordIsNotNull()
						&& form.getLocalContext().getSelectedRecord().getCareContextIsNotNull())
					{
						boolean bShow = ! domain.getPatientICPForCareContext(form.getLocalContext().getSelectedRecord().getCareContext());
						form.btnLinkICP().setVisible(bShow);
						form.btnLinkICP().setVisible(bShow);
					}
				}
		}
		
		if (form.getLocalContext().getSelectedRecordIsNotNull())
			updateButtonsState(domain.getCatsReferral(form.getLocalContext().getSelectedRecord()));
		

		
		if(formName.equals(form.getForms().RefMan.ChangeServiceDialog)
			&& result.equals(DialogResult.OK))
		{
			acceptReferral(null);
			open();
		}
		//wdev-19933,wdev-19930 //WDEV-22786
		if(formName.equals(form.getForms().RefMan.CatsReferralRequestServiceDlg))
		{
			if(form.getLocalContext().getSelectedTabIsNotNull() && form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.OVERVIEW))		//wdev-20721
			{
				form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().initialize(form.getGlobalContext().RefMan.getCatsReferral());
				form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().setMode(FormMode.VIEW);
			}
			if (DialogResult.OK.equals(result))
			{	
				//WDEV-21195
				form.getLocalContext().setTransferOrRequestButtonActions(null);
				form.getGlobalContext().RefMan.setChildCatsReferral(null);

				if (form.getLocalContext().getSelectedRecordIsNotNull())
					updateButtonsState(domain.getCatsReferral(form.getLocalContext().getSelectedRecord()));
			}
		}
		if(formName.equals(form.getForms().RefMan.TransferOfCare)&& result.equals(DialogResult.OK)) //WDEV-21195
		{
			try
			{
				domain.saveChildCatsReferral(form.getGlobalContext().RefMan.getChildCatsReferral(), form.getGlobalContext().RefMan.getCatsReferral(), form.getLocalContext().getTransferOrRequestButtonActions());
			}
			catch (DomainInterfaceException e)
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			catch (StaleObjectException e)
			{
				// TODO Auto-generated catch block
				engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
				open();
				return;
			}
			form.getLocalContext().setTransferOrRequestButtonActions(null);
			form.getGlobalContext().RefMan.setChildCatsReferral(null);
			
			if(form.getLocalContext().getSelectedTabIsNotNull() && form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.OVERVIEW))		//wdev-20721
			{
				form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().initialize(form.getGlobalContext().RefMan.getCatsReferral());
				form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().setMode(FormMode.VIEW);
			}
			
			if (form.getLocalContext().getSelectedRecordIsNotNull())
				updateButtonsState(domain.getCatsReferral(form.getLocalContext().getSelectedRecord()));
		}
		if((formName.equals(form.getForms().RefMan.UpdateUrgency)) && (result.equals(DialogResult.OK)))
		{
			form.getGlobalContext().RefMan.setCatsReferral(domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral()));
			
			open();
			return;
		}
		
		form.lyrDetail().tabLetter().ccUpload().showHtmlControl();
	}	

	private void saveSecondOpinion(CatsReferralWizardVo voRefWizard, CatsReferralStatusVo vo) 
	{
		voRefWizard.setCurrentStatus(vo);

		String[] arrErrors = voRefWizard.validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}

		try 
		{
			voRefWizard = domain.saveCatsReferral(voRefWizard);
		} 
		catch (DomainInterfaceException e) 
		{
			engine.showMessage(e.getMessage());
			return;
		} 
		catch (StaleObjectException e) 
		{			
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			open();
			return;
		}
		
		updateButtonsState(voRefWizard);
		form.getLocalContext().setSelectedRecord(voRefWizard);
	}
	private void printRejectionLetters()
	{
		form.lyrDetail().tabLetter().ccUpload().hideHtmlControl();
		engine.open(form.getForms().RefMan.PrinterSelectionDialog);
	
		form.getGlobalContext().RefMan.setReferralOutcomeReportType(ReferralOutcomeReportType.REJECTIONS);
			
		form.getGlobalContext().RefMan.setPrintRejectionLetters(Boolean.FALSE);
	}

	protected void onBtnCloseClick() throws PresentationLogicException
	{			
		engine.close(DialogResult.OK);
	}
	
	protected void onBtnOrderInvestigationsClick() throws PresentationLogicException
	{
		engine.open(form.getForms().OCRR.SelectAndOrderDialog);		
		form.lyrDetail().tabLetter().ccUpload().hideHtmlControl();
	}
	
	protected void onCmbStatusValueChanged() throws PresentationLogicException
	{
		//TODO
	}

	@Override
	protected void onBtnSecondOpinionClick() throws PresentationLogicException 
	{
		if(!tabsAreBeingEdited())
		{
			CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			if(voRefWizard != null && voRefWizard.getCurrentStatus() != null && voRefWizard.getCurrentStatus().getReferralStatus() != null)
				if(voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED)  || voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.PROVISIONAL_REJECTION) || voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED) || voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER))
				{
					engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
					initialise();
					open();
					return;
				}
			engine.open(form.getForms().RefMan.SecondOpinionDialog);
			form.lyrDetail().tabLetter().ccUpload().hideHtmlControl();
		}

		CatsReferralWizardVo catsReferralWizardVo = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		if (catsReferralWizardVo.getCurrentStatusIsNotNull())
			if (catsReferralWizardVo.getCurrentStatus().getReferralStatusIsNotNull())
				if (!catsReferralWizardVo.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.AWAITING_TRIAGE))
				{
					catsReferralWizardVo.setTriageDateTime(new DateTime());
					String[] arrErrors = catsReferralWizardVo.validate();
					if(arrErrors != null)
					{
						engine.showErrors(arrErrors);
						return;
					}
					try
					{
						domain.saveCatsReferral(catsReferralWizardVo);
					}
					catch (DomainInterfaceException e)
					{
						e.printStackTrace();
					}
					catch (StaleObjectException e)
					{
						engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
					}
				}
	}

	@Override
	protected void onCcApptDetailValueChanged() throws PresentationLogicException
	{
		//Cancel Appointment on Custom control triggers a refresh of the custom control data
		//the domain calls are in the parent (this) form and so must be called here to refresh the screen
		if(form.lyrDetail().tabAppt().ccApptDetail().getAction() != null)
		{
			if(form.lyrDetail().tabAppt().ccApptDetail().getAction().equals(ReferralAppointmentDetailsAction.REFRESH))
			{
				form.lyrDetail().tabAppt().ccApptDetail().setValue(domain.getReferralApptDetail(form.getGlobalContext().RefMan.getCatsReferral()));
				return;
			}
			if(form.lyrDetail().tabAppt().ccApptDetail().getAction().equals(ReferralAppointmentDetailsAction.REFERRALSTATUSCHANGED))
			{
				open();
				return;
			}
		}
	}

	@Override
	protected void onBtnAcceptClick() throws PresentationLogicException 
	{
		if (form.getGlobalContext().RefMan.getReferralContractTypeForPatientIsNotNull() 
			&& ! form.getGlobalContext().RefMan.getReferralContractTypeForPatient().equals(ReferralManagementContractType.REFERRALTRIAGE))
		{
			acceptReferral(null);
			open();
		}
		else
		{
			if (form.getLocalContext().getSelectedRecordIsNotNull()
				&& form.getLocalContext().getSelectedRecord().getReferralDetailsIsNotNull()
				&& form.getLocalContext().getSelectedRecord().getReferralDetails().getServiceIsNotNull())
				form.getLocalContext().setChangeServiceMessageBoxID(engine.showMessage("Do you need to change the Service from - '" + form.getLocalContext().getSelectedRecord().getReferralDetails().getService().getServiceName() + "' to some other Service ?", "Change Service", MessageButtons.YESNO));
		}
	}

	private void acceptReferral(CatsReferralWizardVo voRefWizard) 
	{
		if(!tabsAreBeingEdited())
		{
			if (voRefWizard == null)
			{	
				voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			}
			if(voRefWizard != null && voRefWizard.getCurrentStatus() != null && voRefWizard.getCurrentStatus().getReferralStatus() != null)
				if(voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED)  || voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED) || voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER))
				{
					engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
					
					initialise();
					open();
					return;
				}
	 		setCatsReferralStatus(voRefWizard,ReferralApptStatus.REFERRAL_ACCEPTED, null, null);
	 		form.lyrDetail().tabDetails().ccDetails().setIsReferralAccepted(true);
		}
		
		CatsReferralWizardVo catsReferralWizardVo = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		catsReferralWizardVo.setTriageDateTime(new DateTime());
		
		//wdev-8061
		if (catsReferralWizardVo.getIsCABIsNotNull()
			&& catsReferralWizardVo.getIsCAB())
			catsReferralWizardVo.setIsAcceptedOnCAB(new Boolean(false));
		
		String[] arrErrors = catsReferralWizardVo.validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}
		try
		{
			domain.saveCatsReferral(catsReferralWizardVo);
		}
		catch (DomainInterfaceException e)
		{
			e.printStackTrace();
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}
		
		//WDEV-21973 
		domain.createCaseNoteFolderIfNone(form.getGlobalContext().Core.getPatientShort());
	}

	private void createPatientICP(CatsReferralWizardVo referral)
	{
		if (referral != null
			&& referral.getReferralDetailsIsNotNull()
			&& referral.getCurrentStatusIsNotNull()
			&& referral.getCurrentStatus().getReferralStatusIsNotNull()
			&& linkICPCheckStatus(referral.getCurrentStatus().getReferralStatus())
			&& ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue())
		{
			form.getGlobalContext().ICP.setProcedureID(null);
			form.getGlobalContext().ICP.setService(null);

			form.lyrDetail().showtabDetails();
			
			if (referral.getReferralDetails().getProcedureIsNotNull())
				form.getGlobalContext().ICP.setProcedureID(referral.getReferralDetails().getProcedure());

			if (referral.getReferralDetails().getServiceIsNotNull())
				form.getGlobalContext().ICP.setService(referral.getReferralDetails().getService());
			
			form.getGlobalContext().RefMan.setCatsReferral(referral);
			engine.open(form.getForms().ICP.ICPPatientSelect);
		}
	}

	private boolean tabsAreBeingEdited()
	{
		if(form.lyrDetail().tabDetails().ccDetails().getMode().equals(FormMode.EDIT))
		{
			engine.showMessage("Please finish editing the Details Tab");
			form.lyrDetail().showtabDetails();
			return true;
		}
		if(form.lyrDetail().tabPresentation().ccPresentation().getMode().equals(FormMode.EDIT))
		{
//			wdev-7998
			if (ConfigFlag.GEN.SHOW_PRESENTATION_TAB.getValue()) 
			{
				engine.showMessage("Please finish editing the Presentation Tab");
				form.lyrDetail().showtabPresentation();
				return true;
			}
		}
		
		return false;
	}
	
	private void setCatsReferralStatus(CatsReferralWizardVo voRefWizard,ReferralApptStatus statusLookup, RejectReferralVo rejectionVo, CatsReferralStatusVo voSecondOpinionStat) 
	{
		//CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
						
		if ((voRefWizard.getCurrentStatusIsNotNull()
			&& voRefWizard.getCurrentStatus().getReferralStatusIsNotNull())
			&& (voRefWizard.getCurrentStatus().getReferralStatus().equals(statusLookup))
				|| voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.END_OF_CARE))
		{
			updateButtonsState(voRefWizard);
			return;
		}
		
//		wdev-12682
		if ( ( (form.getGlobalContext().RefMan.getReferralContractTypeForPatient() == null)
				|| (form.getGlobalContext().RefMan.getReferralContractTypeForPatientIsNotNull()
					&& ! form.getGlobalContext().RefMan.getReferralContractTypeForPatient().equals(ReferralManagementContractType.DIAGNOSTIC)) )
					&& Boolean.TRUE.equals(!isSORSelfandDirectReferralandUrgEmer(voRefWizard))//WDEV-20329
			&& (voRefWizard.getReferralDetailsIsNotNull() && voRefWizard.getCurrentStatus() != null
					&& voRefWizard.getReferralDetails().getDateReferralReceived() == null && !ReferralApptStatus.REFERRAL_REJECTED.equals(statusLookup))) //WDEV-18415
		{
			updateButtonsState(voRefWizard);
			
			if (form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.OVERVIEW))
			{
				form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().initialize(form.getGlobalContext().RefMan.getCatsReferral());
			}
			
			return;
		}

		CatsReferralStatusVoCollection voStatusColl = voRefWizard.getStatusHistory();
		
		CatsReferralStatusVo currentStatus = new CatsReferralStatusVo(); 		
		if (voSecondOpinionStat != null)
			currentStatus = voSecondOpinionStat;
		else
		{
			currentStatus.setReferralStatus(statusLookup);
			currentStatus.setAuthoringUser((MemberOfStaffRefVo)domain.getMosUser());
			currentStatus.setStatusDateTime(new DateTime());
		}
		
		voRefWizard.setCurrentStatus(currentStatus);

		if (voStatusColl == null)
			voStatusColl = new CatsReferralStatusVoCollection();
		
		voStatusColl.add(currentStatus);
		voRefWizard.setStatusHistory(voStatusColl);		

		if (rejectionVo !=null)
			voRefWizard.setRejectReferralDetail(rejectionVo);
		
		String[] arrErrors = voRefWizard.validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}

		boolean bUpdate = ! domain.getPatientICPForCareContext(voRefWizard.getCareContext());

		try 
		{
			voRefWizard = domain.saveCatsReferral(voRefWizard);
			
			// Fixed for WDEV-7458 (creating an ICP when the details were on edit)
			//wdev-9090
			if (bUpdate)
				createPatientICP(voRefWizard);
		} 
		catch (DomainInterfaceException e) 
		{
			engine.showMessage(e.getMessage());
			return;
		} 
		catch (StaleObjectException e) 
		{			
			engine.showMessage(ims.configuration.gen.ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			open();
			return;
		}
		
		updateButtonsState(voRefWizard);
		form.getLocalContext().setSelectedRecord(voRefWizard);

		engine.showMessage("The Referral is now saved with the status : " + statusLookup.getText());
		
		if (form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.OVERVIEW))
		{
			form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().initialize(form.getGlobalContext().RefMan.getCatsReferral());
		}
		if (form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.REFERRAPPOINTMENTDETAILS))
		{
			CatsReferralDetailsVo voContainer = domain.getReferralDetail(form.getGlobalContext().RefMan.getCatsReferral());			
			form.lyrDetail().tabAppt().ccApptDetail().setValue(voContainer.getAppointmentDetail());
		}
		
		if (statusLookup != null)
			setReferralAcceptedOnApptTab(statusLookup);
	}

	//WDEV-20329 Accept referral without a referral letter
	private boolean isSORSelfandDirectReferralandUrgEmer(CatsReferralWizardVo voRefWizard) 
	{	
		if(voRefWizard == null)
			return false;
			return (SourceOfReferral.SELF.equals(voRefWizard.getReferralDetails().getReferrerType())
					&& Boolean.TRUE.equals(voRefWizard.getReferralDetails().getService().getDirectSelfReferralsAccepted())
					&& ReferralUrgency.EMERGENCY.equals(voRefWizard.getUrgency()));
	}

	private void setReferralAcceptedOnApptTab(ReferralApptStatus statusLookup)
	{
		if (statusLookup.equals(ReferralApptStatus.REFERRAL_ACCEPTED) 
				|| statusLookup.equals(ReferralApptStatus.FURTHER_MANAGEMENT_REQUIRED) 
				|| statusLookup.equals(ReferralApptStatus.ACTIVE_MONITORING) 
				|| statusLookup.equals(ReferralApptStatus.DISCHARGED) 
				|| statusLookup.equals(ReferralApptStatus.APPOINTMENTBOOKED))
				form.lyrDetail().tabAppt().ccApptDetail().setReferralAccepted();
	}

	private void updateButtonsState(CatsReferralWizardVo voRefWizard) 
	{
		form.btnOnward().setEnabled(false); //WDEV-12736
		if (form.getGlobalContext().RefMan.getReferralContractTypeForPatientIsNotNull() 
			&& ! form.getGlobalContext().RefMan.getReferralContractTypeForPatient().equals(ReferralManagementContractType.REFERRALTRIAGE))
			form.btnOnward().setVisible(false); //WDEV-12736

		form.btnAccept().setEnabled(false);
		form.btnEditSecondOpinion().setVisible(false);
		form.btnLinkICP().setVisible(false);
		form.btnRecAdminEvent().setVisible(false); //WDEV-20294
		form.btnReject().setVisible(false);//WDEV-20294
		form.btnSecondOpinion().setVisible(false);//WDEV-20294
				
		if (voRefWizard.getCurrentStatusIsNotNull()
			&& voRefWizard.getCurrentStatus().getReferralStatusIsNotNull())
		{
			
			// WDEV-17896 - Functionality 'Second Opinion' and 'Reject' are now called from separate buttons
			
			// Conditions for button 'Reject' enable / visible
			form.btnReject().setEnabled(ReferralApptStatus.PROVISIONAL_REJECTION.equals(voRefWizard.getCurrentStatus().getReferralStatus())
					|| (ReferralApptStatus.AWAITING_TRIAGE.equals(voRefWizard.getCurrentStatus().getReferralStatus()) && engine.hasRight(AppRight.CAN_DIRECTLY_REJECT_REFERRAL)));
			
			form.btnReject().setVisible(!ConfigFlag.UI.REFERRAL_DETAILS_USE_REFERRAL_TRIAGE.getValue() && ((engine.hasRight(AppRight.CAN_REJECT_CATS_REFERRAL)
												&& ReferralApptStatus.PROVISIONAL_REJECTION.equals(voRefWizard.getCurrentStatus().getReferralStatus()))
										|| (engine.hasRight(AppRight.CAN_DIRECTLY_REJECT_REFERRAL)
												&& !ReferralApptStatus.REFERRAL_ACCEPTED.equals(voRefWizard.getCurrentStatus().getReferralStatus())
												&& !ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER.equals(voRefWizard.getCurrentStatus().getReferralStatus())
												&& !ReferralApptStatus.ONWARDREFERRALREQUESTED.equals(voRefWizard.getCurrentStatus().getReferralStatus())
												&& !Boolean.TRUE.equals(form.getGlobalContext().RefMan.getIsProviderCancellation()))));
			
			// Conditions for button 'Second Opinion' enable / visible			
			form.btnSecondOpinion().setEnabled(ReferralApptStatus.AWAITING_TRIAGE.equals(voRefWizard.getCurrentStatus().getReferralStatus()) &&
					(ReferralManagementContractType.DIAGNOSTIC.equals(form.getGlobalContext().RefMan.getReferralContractTypeForPatient())
							|| ( !ReferralManagementContractType.DIAGNOSTIC.equals(form.getGlobalContext().RefMan.getReferralContractTypeForPatient()) 
									&& voRefWizard.getReferralDetails() != null && voRefWizard.getReferralDetails().getDateReferralReceived() != null)));//WDEV-18415
			
			form.btnSecondOpinion().setVisible(!ConfigFlag.UI.REFERRAL_DETAILS_USE_REFERRAL_TRIAGE.getValue() && voRefWizard.getCurrentStatus() != null
												&& (!ReferralApptStatus.REFERRAL_ACCEPTED.equals(voRefWizard.getCurrentStatus().getReferralStatus())
														&& !ReferralApptStatus.PROVISIONAL_REJECTION.equals(voRefWizard.getCurrentStatus().getReferralStatus())
														&& !ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER.equals(voRefWizard.getCurrentStatus().getReferralStatus())
														&& !ReferralApptStatus.ONWARDREFERRALREQUESTED.equals(voRefWizard.getCurrentStatus().getReferralStatus()))
												&& !Boolean.TRUE.equals(form.getGlobalContext().RefMan.getIsProviderCancellation())
												&& engine.hasRight(AppRight.CAN_REQUEST_SECOND_OPINION_FOR_CATS_REFERRAL));
			

			
			if (voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.AWAITING_TRIAGE)
				|| voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.PROVISIONAL_REJECTION))
				form.btnAccept().setEnabled(true);

//			wdev-12682
			//WDEV-18488
			boolean isRefStatusEndCare = ReferralApptStatus.END_OF_CARE.equals(voRefWizard.getCurrentStatus().getReferralStatus());
			if (form.getGlobalContext().RefMan.getReferralContractTypeForPatientIsNotNull()
				&& form.getGlobalContext().RefMan.getReferralContractTypeForPatient().equals(ReferralManagementContractType.DIAGNOSTIC))
			{
				//WDEV-7447 - ignore referral letter details
				if (neverHadAcceptedStatusBefore(voRefWizard.getStatusHistory()) && !isRefStatusEndCare)
					form.btnAccept().setEnabled(true);
			}
			
			else
			{
				//wdev-6789
				if (voRefWizard.getIsCABIsNotNull()
					&& voRefWizard.getIsCAB().booleanValue()
					&& voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.APPOINTMENTBOOKED)
					&& voRefWizard.getReferralDetailsIsNotNull()
					&& voRefWizard.getReferralDetails().getDateReferralReceivedIsNotNull()
					&& voRefWizard.getHasReferralLetterIsNotNull()
					&& voRefWizard.getHasReferralLetter().booleanValue()
					&& neverHadAcceptedStatusBefore(voRefWizard.getStatusHistory())
					&& !isRefStatusEndCare)
					form.btnAccept().setEnabled(true);
			}
			
			
//			if (voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.AWAITING_TRIAGE) )
//				form.btnSecondOpinion().setEnabled(true);

			if (voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.PROVISIONAL_REJECTION) )
			{
//				form.btnSecondOpinion().setText("Reject");
				form.btnAccept().setEnabled(true);
//				form.btnSecondOpinion().setEnabled(true);
				form.btnOnward().setEnabled(true);//WDEV-12736
				form.btnEditSecondOpinion().setEnabled(true);
				form.btnEditSecondOpinion().setVisible(true);
				form.getGlobalContext().RefMan.setSecondOpinionReferralStatus(voRefWizard.getCurrentStatus());
			}

			if ( linkICPCheckStatus(voRefWizard.getCurrentStatus().getReferralStatus()) )
			{
				form.btnLinkICP().setVisible(false);
				
				if (ConfigFlag.GEN.CREATE_ICP_ON_ACCEPTANCE_OF_REFERRAL.getValue())
				{
					if (voRefWizard.getReferralDetailsIsNotNull() && voRefWizard.getReferralDetails().getID_ReferralLetterDetailsIsNotNull())
					{
						boolean bShow = ! domain.getPatientICPForCareContext(voRefWizard.getCareContext());
						form.btnLinkICP().setVisible(bShow);
					}
				}
			}
			
			//wdev-8061
			form.btnAcceptOnCAB().setVisible(false);
			
			if (voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED)	)
			{
				form.btnAccept().setVisible(false);
				form.btnOnward().setVisible(false); //WDEV-12736

				//WDEV-23000
				if (Boolean.FALSE.equals(voRefWizard.getIsAcceptedOnCAB()))
				{
					form.btnAcceptOnCAB().setText(Boolean.TRUE.equals(voRefWizard.getChangeCBAppointment()) ? "Appt Booked and Accepted on C&B" : "Accepted on C&B");
					form.btnAcceptOnCAB().setTooltip(Boolean.TRUE.equals(voRefWizard.getChangeCBAppointment()) ? "Select this option to indicate that this Referral has been Accepted on Choose and Book and the Appointment has been changed either in C&B or within MAXIMS" : "");
					 
					form.btnAcceptOnCAB().setVisible(true);
				}
				
			
			}
			
			form.btnUpdateUrgency().setVisible(engine.hasRight(AppRight.CAN_UPDATE_REFERRAL_URGENCY) && voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED));
		
			//wdev-19933
			CatsReferralForRequestServiceVo tempCatsChild = domain.getChildCatsReferralForTransferOfCare(voRefWizard);
			
			form.btnRequestforService().setVisible(voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED) && tempCatsChild == null);	//wdev-19933
			form.btnTransferofCare().setVisible(voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED) && tempCatsChild == null);		//wdev-19933
			
			if (voRefWizard.getCurrentStatus().getReferralStatusIsNotNull())
				form.lblActualStatus().setValue(voRefWizard.getCurrentStatus().getReferralStatus().getText());
		
			//WDEV-7447 - ignore referral letter details
//			wdev-12682
			if (form.getGlobalContext().RefMan.getReferralContractTypeForPatientIsNotNull()
				&& ! form.getGlobalContext().RefMan.getReferralContractTypeForPatient().equals(ReferralManagementContractType.DIAGNOSTIC))
			{
				if (voRefWizard.getReferralDetailsIsNotNull() && voRefWizard.getReferralDetails().getDateReferralReceived() == null)
					form.btnAccept().setEnabled(false);
			}
			//WDEV-20329 Accept referral without a referral letter
			if(isSORSelfandDirectReferralandUrgEmer(voRefWizard))
				if (neverHadAcceptedStatusBefore(voRefWizard.getStatusHistory()) && !isRefStatusEndCare)
					form.btnAccept().setEnabled(true);


			
			//WDEV-12736
			if (voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.AWAITING_TRIAGE) 
				&& (form.getGlobalContext().RefMan.getReferralContractTypeForPatientIsNotNull() 
				&& form.getGlobalContext().RefMan.getReferralContractTypeForPatient().equals(ReferralManagementContractType.REFERRALTRIAGE))
				&& voRefWizard.getReferralDetailsIsNotNull()
				&& voRefWizard.getReferralDetails().getDateReferralReceivedIsNotNull()
				&& voRefWizard.getHasReferralLetterIsNotNull()
				&& voRefWizard.getHasReferralLetter().booleanValue())
			{
					form.btnOnward().setVisible(true);
					form.btnOnward().setEnabled(true);
			}
			
			//WDEV-18456
			boolean isCancelledByProvider = ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER.equals(voRefWizard.getCurrentStatus().getReferralStatus());
			boolean isReferralRejected =  ReferralApptStatus.REFERRAL_REJECTED.equals(voRefWizard.getCurrentStatus().getReferralStatus());
			form.btnRecAdminEvent().setVisible(form.getGlobalContext().RefMan.getCatsReferralIsNotNull() && voRefWizard.getID_CatsReferralIsNotNull() && !isCancelledByProvider && !isReferralRejected && !isRefStatusEndCare && engine.hasRight(AppRight.CAN_RECORD_REFERRAL_ADMIN_EVENT));//WDEV-20635
		}
		
		//Now check apprights
		if ( !engine.hasRight(AppRight.CAN_ACCEPT_CATS_REFERRAL) || ConfigFlag.UI.REFERRAL_DETAILS_USE_REFERRAL_TRIAGE.getValue())
			form.btnAccept().setVisible(false);
			

		//wdev-6163
		if(form.getGlobalContext().RefMan.getIsProviderCancellationIsNotNull()
			&& 	form.getGlobalContext().RefMan.getIsProviderCancellation())
		{
			form.btnAccept().setVisible(false);
			form.btnOnward().setVisible(false); //WDEV-12736
			form.btnEditSecondOpinion().setVisible(false);
		}
		
		//WDEV-6197
		if(voRefWizard != null && voRefWizard.getCurrentStatusIsNotNull())
		{
			ReferralApptStatus referralStatus = voRefWizard.getCurrentStatus().getReferralStatus();
			if (referralStatus != null)
				setReferralAcceptedOnApptTab(referralStatus);
		}
		//WDEV-20294 this used to throw a NPE
		if (voRefWizard.getCurrentStatus() != null && (ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER.equals(voRefWizard.getCurrentStatus().getReferralStatus()) || ReferralApptStatus.ONWARDREFERRALREQUESTED.equals(voRefWizard.getCurrentStatus().getReferralStatus())))
		{
			form.btnAccept().setVisible(false);
			form.btnOnward().setVisible(false);
			form.btnEditSecondOpinion().setVisible(false);
		}	
		//wdev-19933
		if( voRefWizard.getCurrentStatus() != null && ReferralApptStatus.TRANSFERRED.equals(voRefWizard.getCurrentStatus().getReferralStatus()))
		{
			form.btnAccept().setEnabled(false);
			form.btnRecAdminEvent().setEnabled(false);
			
		}
		//wdev-19933,wdev-19930
		if( voRefWizard.getReferralDetailsIsNotNull() && ( SourceOfReferral.TRANSFER_OF_CARE.equals(voRefWizard.getReferralDetails().getReferrerType()) || SourceOfReferral.REQUEST_FOR_SERVICE.equals(voRefWizard.getReferralDetails().getReferrerType())))
		{
			form.btnRequestforService().setVisible(false);
			form.btnTransferofCare().setVisible(false);
		}
	}
	
	private boolean linkICPCheckStatus(ReferralApptStatus referralStatus) 
	{
		if (!referralStatus.equals(ReferralApptStatus.AWAITING_TRIAGE)	
			&& !referralStatus.equals(ReferralApptStatus.DISCHARGED)
			&& !referralStatus.equals(ReferralApptStatus.CAB_CANCELLATION)
			&& !referralStatus.equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER)
			&& !referralStatus.equals(ReferralApptStatus.REFERRAL_REJECTED)
			&& !referralStatus.equals(ReferralApptStatus.WAITING_ON_GP_REFERRAL))
			return true;
		else
			return false;
	}

	private boolean neverHadAcceptedStatusBefore(CatsReferralStatusVoCollection statusHistory) 
	{
		for(int i = 0 ; statusHistory != null && i < statusHistory.size() ; i++)
		{
			if (statusHistory.get(i).getReferralStatusIsNotNull()
				&& (statusHistory.get(i).getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED)
					|| statusHistory.get(i).getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED) ) )
					return false;
		}
		return true;
	}

	@Override
	protected void onlyrDetailTabChanged(LayerBridge tab)
	{
		getSelectedTab(tab);
		if (form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.NOTES))				
		{
			form.lyrDetail().tabNotes().ccNotes().initialize();
		}
		else if (form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.DOCUMENTS))				
		{
			// If people don't update the global contexts - next time I will stab myself with my keyboard.
			form.getGlobalContext().RefMan.setCatsReferral(domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral()));
			CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			form.getGlobalContext().RefMan.setCatsReferralStatus(voRefWizard.getCurrentStatus());
			form.getGlobalContext().RefMan.setReferralContractTypeForPatient(voRefWizard.getContractIsNotNull() ? voRefWizard.getContract().getContractType() : null);//wdev-12682

			if (voRefWizard != null
				&& voRefWizard.getReferralDetailsIsNotNull()
				&& voRefWizard.getReferralDetails().getService() == null)
				form.lyrDetail().tabLetter().ccUpload().setMode(FormMode.VIEW);
		}
		else if(form.getLocalContext().getSelectedTabIsNotNull() && form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.OVERVIEW))
		{
			form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().initialize(form.getGlobalContext().RefMan.getCatsReferral());
			form.lyrDetail().tabOverview().ccReferralOverviewAndKpis().setMode(FormMode.VIEW);
		}
		else if(form.getLocalContext().getSelectedTabIsNotNull() && form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.REFERRAPPOINTMENTDETAILS))
		{
			CatsReferralDetailsVo voContainer = domain.getReferralDetail(form.getGlobalContext().RefMan.getCatsReferral());			
			form.lyrDetail().tabAppt().ccApptDetail().setValue(voContainer.getAppointmentDetail());
		}
		if (form.getLocalContext().getSelectedTab().equals(ReferralDetailsSelectedTab.PATIENTJOURNEY))				
		{
			form.lyrDetail().tabJourney().ccPatientJourney().initialise(form.getGlobalContext().RefMan.getCatsReferral());
		}
	}

	private void getSelectedTab(LayerBridge tab)
	{
		if (tab.equals(form.lyrDetail().tabOverview()))
		{
			form.getLocalContext().setSelectedTab(ReferralDetailsSelectedTab.OVERVIEW);
		}
		else if (tab.equals(form.lyrDetail().tabDetails()))
		{
			form.getLocalContext().setSelectedTab(ReferralDetailsSelectedTab.DETAILS);
		}
		else if (tab.equals(form.lyrDetail().tabPresentation()))
		{
			form.getLocalContext().setSelectedTab(ReferralDetailsSelectedTab.PRESENTATION);
		}
		else if (tab.equals(form.lyrDetail().tabLetter()))
		{
			form.getLocalContext().setSelectedTab(ReferralDetailsSelectedTab.DOCUMENTS);			
		}
		else if (tab.equals(form.lyrDetail().tabAppt()))
		{
			form.getLocalContext().setSelectedTab(ReferralDetailsSelectedTab.REFERRAPPOINTMENTDETAILS);			
		}
		else if (tab.equals(form.lyrDetail().tabNotes()))
		{
			form.getLocalContext().setSelectedTab(ReferralDetailsSelectedTab.NOTES);			
		}
		else if (tab.equals(form.lyrDetail().tabJourney()))
		{
			form.getLocalContext().setSelectedTab(ReferralDetailsSelectedTab.PATIENTJOURNEY);		
		}
		
	}
	
	@Override
	protected void onCcUploadValueChanged() throws PresentationLogicException 
	{
		CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		
		if(form.getGlobalContext().RefMan.getCatsReferralHasGpLetterIsNotNull() 
			&& form.getGlobalContext().RefMan.getCatsReferralHasGpLetter()
			&& ! form.getGlobalContext().RefMan.getCatsReferralStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER))
		{
			//WDEV-16158
			if (voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED))
			{
				updateButtonsState(voRefWizard);
				form.getGlobalContext().RefMan.setCatsReferralHasGpLetter(null);
				return;
			}
			//WDEV-21176 automatically accept it in this case
			if (ReferralUrgency.EMERGENCY.equals(voRefWizard.getUrgency()) && voRefWizard.getReferralDetails() != null && !SourceOfReferral.SELF.equals(voRefWizard.getReferralDetails().getReferrerType()) && voRefWizard.getCurrentStatus() != null && !ReferralApptStatus.REFERRAL_ACCEPTED.equals(voRefWizard.getCurrentStatus().getReferralStatus()))
			{	
				acceptReferral(voRefWizard);
			}
			else
			{	
				setCatsReferralStatus(voRefWizard,ReferralApptStatus.AWAITING_TRIAGE, null, form.getGlobalContext().RefMan.getCatsReferralStatus());
			}
			form.getGlobalContext().RefMan.setCatsReferralHasGpLetter(null);
		}
		//wdev-10366
		else if(form.getGlobalContext().RefMan.getCatsReferralHasGpLetterIsNotNull() 
				&& !form.getGlobalContext().RefMan.getCatsReferralHasGpLetter()
				&& ! form.getGlobalContext().RefMan.getCatsReferralStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER))
		{
			if(voRefWizard != null)
			{
				updateButtonsState(voRefWizard);
				if(voRefWizard.getCurrentStatus() != null && voRefWizard.getCurrentStatus().getReferralStatus() != null)
					form.lblActualStatus().setValue(voRefWizard.getCurrentStatus().getReferralStatus().getText());
				
			}
		}
		
		//WDEV-19330 
		if (voRefWizard != null)
			form.lyrDetail().tabDetails().ccDetails().setValue(voRefWizard.getReferralDetails(), voRefWizard);
		
		if(Boolean.TRUE.equals(form.getLocalContext().getOpenForReferralTriage()) && UploadDocumentAction.CLOSEDIALOG.equals(form.lyrDetail().tabLetter().ccUpload().getAction()))
		{
			engine.close(DialogResult.OK);
		}
	}

	@Override
	protected void onCcDetailsValueChanged() throws PresentationLogicException
	{
		form.btnClose().setEnabled(FormMode.VIEW.equals(form.getMode()) && FormMode.VIEW.equals(form.lyrDetail().tabDetails().ccDetails().getMode()));
		form.btnReview().setEnabled(FormMode.VIEW.equals(form.getMode()) && FormMode.VIEW.equals(form.lyrDetail().tabDetails().ccDetails().getMode()));//WDEV-20294
		//WDEV-7512
		//WDEV-20294
		if (form.lyrDetail().tabDetails().ccDetails().getComponentEvent() != null)
		{	
			disableOtherTabs(FormMode.VIEW.equals(form.getMode())&& FormMode.VIEW.equals(form.lyrDetail().tabDetails().ccDetails().getMode()));
		}
		if (ReferralDetailsComponentButtonClicked.EDIT.equals(form.lyrDetail().tabDetails().ccDetails().getComponentEvent()))	
		{			
			updateButtonsState(new CatsReferralWizardVo()); //dummy parameter should make all buttons unavailable
			return;
		}
		CatsReferralWizardVo voCats = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		if(form.lyrDetail().tabDetails().ccDetails().getComponentEvent() == null)
		{
			updateButtonsState(voCats);
			return;
		}		
		//WDEV-20294 --- end of
		// Put equals on the lookup and you prevent the NULL pointer from WDEV-7512
		if (ReferralDetailsComponentButtonClicked.SAVE.equals(form.lyrDetail().tabDetails().ccDetails().getComponentEvent()))
		{			
			form.btnAccept().setEnabled(Boolean.TRUE.equals(form.lyrDetail().tabDetails().ccDetails().getActiveDetails()) && voCats != null	&& neverHadAcceptedStatusBefore(voCats.getStatusHistory()));
			//updateButtonsState(voCats);							
			form.lyrDetail().tabJourney().setHeaderVisible(voCats != null && Boolean.TRUE.equals(voCats.getHasPatientJourneyLinked()));
			form.lyrDetail().tabLetter().setHeaderEnabled(form.lyrDetail().tabDetails().ccDetails().getValue().getServiceIsNotNull());
			form.lyrDetail().tabLetter().setEnabled(form.lyrDetail().tabDetails().ccDetails().getValue().getServiceIsNotNull());
		}	
		updateButtonsState(voCats);
	}

	//WDEV-20294
	private void disableOtherTabs(boolean bDisable)
	{
		form.lyrDetail().tabOverview().setHeaderEnabled(bDisable);
		form.lyrDetail().tabAppt().setHeaderEnabled(bDisable);
		form.lyrDetail().tabPayerDetails().setHeaderEnabled(bDisable);
		form.lyrDetail().tabContractDetails().setHeaderEnabled(bDisable);
		form.lyrDetail().tabPresentation().setHeaderEnabled(bDisable);
		form.lyrDetail().tabLetter().setHeaderEnabled(bDisable);
		form.lyrDetail().tabNotes().setHeaderEnabled(bDisable);
		form.lyrDetail().tabOnwardReferral().setHeaderEnabled(bDisable);
		form.lyrDetail().tabJourney().setHeaderEnabled(bDisable);
	}

	@Override
	protected void onBtnReviewClick() throws PresentationLogicException 
	{	
		if(form.getLocalContext().getFlagForReviewIsNotNull())
		{
			flagForReview(form.getLocalContext().getFlagForReview());
		}	
	}
	
	private void flagForReview(ReferralReviewDetail referralReviewDetail) 
	{
		form.getGlobalContext().RefMan.setReferralReviewDetailsMode(referralReviewDetail);
		engine.open(form.getForms().RefMan.ReferralReviewDetails);
		form.lyrDetail().tabLetter().ccUpload().hideHtmlControl();
	}
	
	private void updateReviewButton()
	{		
		CatsReferralFlaggedForReviewVo vo = domain.getCatsReferralFlaggedForReview(form.getGlobalContext().RefMan.getCatsReferral());
		if (vo.getIsFlaggedForReviewIsNotNull() &&
				vo.getIsFlaggedForReview().equals(Boolean.TRUE))
		{
			form.btnReview().setText("Flag for Review + Review Detail");
			form.getLocalContext().setFlagForReview(ReferralReviewDetail.REVIEW);
		}
		else
		{
			form.btnReview().setText("Flag for Review");
			form.getLocalContext().setFlagForReview(ReferralReviewDetail.RECORDING);
		}
	}

	@Override
	protected void onCcPresentationValueChanged()
			throws PresentationLogicException 
	{
		if (form.getGlobalContext().RefMan.getIsComponentInEditModeIsNotNull())
		{
			if (form.getGlobalContext().RefMan.getIsComponentInEditMode().equals(FormMode.EDIT))
			{
				disableTabs();				
			}
			if (form.getGlobalContext().RefMan.getIsComponentInEditMode().equals(FormMode.VIEW))
			{
				enableTabs();				
			}
		}		
	}
	
	private void enableTabs()
	{
		form.lyrDetail().tabOverview().setHeaderEnabled(true);
		form.lyrDetail().tabDetails().setHeaderEnabled(true);
		//		wdev-7998
		if (ConfigFlag.GEN.SHOW_PRESENTATION_TAB.getValue()) 
			form.lyrDetail().tabPresentation().setHeaderEnabled(true);				
		
		CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		if (voRefWizard != null 
			&& (voRefWizard.getReferralDetails() == null
			|| (voRefWizard.getReferralDetailsIsNotNull()
			&& voRefWizard.getReferralDetails().getService() == null)) )
		{
			form.lyrDetail().tabLetter().setHeaderEnabled(false);
			form.lyrDetail().tabLetter().setEnabled(false);
		}
		else
		{
			form.lyrDetail().tabLetter().setHeaderEnabled(true);
			form.lyrDetail().tabLetter().setEnabled(true);
		}
		form.lyrDetail().tabAppt().setHeaderEnabled(true);
		form.lyrDetail().tabNotes().setHeaderEnabled(true);				
	}	
	
	private void disableTabs()
	{
		if (form.getLocalContext().getSelectedTabIsNotNull())
		{
			ReferralDetailsSelectedTab tab = form.getLocalContext().getSelectedTab();
			if (tab.equals(ReferralDetailsSelectedTab.PRESENTATION))
			{
				form.lyrDetail().tabOverview().setHeaderEnabled(false);
				form.lyrDetail().tabDetails().setHeaderEnabled(false);							
				form.lyrDetail().tabLetter().setHeaderEnabled(false);
				form.lyrDetail().tabAppt().setHeaderEnabled(false);
				form.lyrDetail().tabNotes().setHeaderEnabled(false);
			}
		}
	}

	@Override
	protected void onBtnLinkICPClick() throws PresentationLogicException 
	{
		// WDEV-8402 - Remember to always pass the latest from database
		createPatientICP(domain.getCatsReferral(form.getLocalContext().getSelectedRecord()));
		updateButtonsState(form.getLocalContext().getSelectedRecord());
	}

	@Override
	//wdev-8061
	protected void onBtnAcceptOnCABClick() throws PresentationLogicException 
	{
		if(tabsAreBeingEdited())
			return;
		
		CatsReferralWizardVo catsReferralWizardVo = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
	
		catsReferralWizardVo.setIsAcceptedOnCAB(new Boolean(true));
		
		String[] arrErrors = catsReferralWizardVo.validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}
		try
		{
			catsReferralWizardVo = domain.saveCatsReferral(catsReferralWizardVo);
		}
		catch (DomainInterfaceException e)
		{
			e.printStackTrace();
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}

		form.getLocalContext().setSelectedRecord(catsReferralWizardVo);
		updateButtonsState(form.getLocalContext().getSelectedRecord());
	}

	@Override
	protected void onBtnCompleteClick() throws PresentationLogicException
	{
		WorkAllocationVo voWork = form.getLocalContext().getWorkAllocation();
		
		if (voWork != null)
		{
			if (domain.getMosUser() != null//wdev-10771 
				&& ((MemberOfStaffRefVo)domain.getMosUser()).getID_MemberOfStaffIsNotNull())
				voWork.setCompletedBy((MemberOfStaffRefVo) domain.getMosUser());
			
			voWork.setCompletedDateTime(new DateTime());
				
			String[] arrErrors = voWork.validate();
			if(arrErrors != null)
			{
				engine.showErrors(arrErrors);
				return;
			}
			try
			{
				voWork = domain.saveWorkAllocation(voWork);
			}
			catch (DomainInterfaceException e)
			{
				e.printStackTrace();
			}
			catch (StaleObjectException e)
			{
				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			}

			form.btnComplete().setVisible(false);
		}
	}
	@Override
	protected void onBtnEditSecondOpinionClick() throws PresentationLogicException 
	{
		engine.open(form.getForms().RefMan.SecondOpinionDialog);
	}
	
	protected void onBtnCancelOnwardClick() throws PresentationLogicException
	{
		populateOnwardReferralTabFromData(domain.getOnwardReferralByCatsReferral(form.getGlobalContext().RefMan.getCatsReferral()));
		form.setMode(FormMode.VIEW);
	}

	protected void onBtnEditOnwardClick() throws PresentationLogicException
	{
		openOnwardReferral(form.getLocalContext().getSelectedRecord());

		form.setMode(FormMode.EDIT);
		if(form.getLocalContext().getOnwardReferral() == null)
			form.getLocalContext().setOnwardReferral(new OnwardReferralFromTriageVo());
		
		updateMantaoryFields();
	}

	protected void onBtnSaveOnwardClick() throws PresentationLogicException
	{
		if (!validateData())
			return;
		
		OnwardReferralFromTriageVo voOnward = populateOnwardReferralDataFromScreen();
		
		String[] arrErrors = voOnward.validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}
		
		try
		{
			form.getLocalContext().setOnwardReferral(domain.saveOnwardReferral(voOnward));	
		}
		catch(StaleObjectException ex)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			open();
			return;
		}
		populateOnwardReferralTabFromData(form.getLocalContext().getOnwardReferral());
		
		form.setMode(FormMode.VIEW);
	}
	
	private boolean validateData() 
	{
		StringBuffer sb = new StringBuffer();
		if (form.lyrDetail().tabOnwardReferral().ansComplete().getValue() != null
			&& form.lyrDetail().tabOnwardReferral().ansComplete().getValue().equals(YesNo.YES))
		{
			if (form.lyrDetail().tabOnwardReferral().cmbSecondaryCareProvider().getValue() == null)
				sb.append("'Secondary Care Provider' is mandatory.\n\n");

			if (form.lyrDetail().tabOnwardReferral().dtimReferred().getValue() == null)
				sb.append("'Onward Referral Date and Time' is mandatory.\n\n");
		}	
		
		if (form.lyrDetail().tabOnwardReferral().ansAgree().getValue() != null
			&& form.lyrDetail().tabOnwardReferral().ansAgree().getValue().equals(YesNo.NO))
		{
			if (form.lyrDetail().tabOnwardReferral().txtOnwardNotes().getValue() == null)
				sb.append("Notes are required when 'Agree With Decision' is NO.\n\n");
		}
		if (sb.length() > 0)
		{
			engine.showMessage(sb.toString());
			return false;
		}

		return true;
	}
	private OnwardReferralFromTriageVo populateOnwardReferralDataFromScreen()
	{
		OnwardReferralFromTriageVo voOnward = form.getLocalContext().getOnwardReferral();
		if(voOnward == null)
			voOnward = new OnwardReferralFromTriageVo();
		
		voOnward.setAgreeWithDecision(form.lyrDetail().tabOnwardReferral().ansAgree().getValue());
		voOnward.setCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		voOnward.setNotes(form.lyrDetail().tabOnwardReferral().txtOnwardNotes().getValue());
		voOnward.setReferredDate(form.lyrDetail().tabOnwardReferral().dtimReferred().getValue());
		voOnward.setRequestedByGP(form.lyrDetail().tabOnwardReferral().ansRequestedByGP().getValue());
		voOnward.setSecondaryCareProvider(form.lyrDetail().tabOnwardReferral().cmbSecondaryCareProvider().getValue());
		voOnward.setServiceReferredInto(form.lyrDetail().tabOnwardReferral().cmbReferredInto().getValue());
		voOnward.setReferralComplete(form.lyrDetail().tabOnwardReferral().ansComplete().getValue());
		
		return voOnward;
	}
	@Override
	protected void onBtnOnwardClick() throws PresentationLogicException
	{
		if(!tabsAreBeingEdited())
		{
			CatsReferralWizardVo voRefWizard = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
			if(voRefWizard != null && voRefWizard.getCurrentStatus() != null && voRefWizard.getCurrentStatus().getReferralStatus() != null)
			{
				if(voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_ACCEPTED)  
					|| voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.ONWARDREFERRALREQUESTED) 
					|| voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_REJECTED) 
					|| voRefWizard.getCurrentStatus().getReferralStatus().equals(ReferralApptStatus.REFERRAL_CANCELLED_BY_PROVIDER))
				{
					engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
					
					initialise();
					open();
					return;
				}
			}
	 		setCatsReferralStatus(voRefWizard,ReferralApptStatus.ONWARDREFERRALREQUESTED, null, null);
		}
		
		CatsReferralWizardVo catsReferralWizardVo = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());

		catsReferralWizardVo.setIsOnwardReferralTriage(true);
		
		String[] arrErrors = catsReferralWizardVo.validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}
		try
		{
			form.getLocalContext().setSelectedRecord(domain.saveCatsReferral(catsReferralWizardVo));
		}
		catch (DomainInterfaceException e)
		{
			e.printStackTrace();
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}

		
		initialiseOnwardTab();
		form.lyrDetail().showtabOnwardReferral();
		form.lyrDetail().tabOnwardReferral().setHeaderVisible(true);
		form.setMode(FormMode.EDIT);
	}
	
	private void populateOnwardReferralTabFromData(OnwardReferralFromTriageVo voOnwardReferral)
	{
		clearOnwardReferralControls();
		
		if(voOnwardReferral == null)
			return;
		
		form.getLocalContext().setOnwardReferral(voOnwardReferral);
		form.lyrDetail().tabOnwardReferral().setHeaderVisible(true);

		form.lyrDetail().tabOnwardReferral().ansAgree().setValue(voOnwardReferral.getAgreeWithDecision());
		form.lyrDetail().tabOnwardReferral().ansRequestedByGP().setValue(voOnwardReferral.getRequestedByGP());
		form.lyrDetail().tabOnwardReferral().cmbReferredInto().setValue(voOnwardReferral.getServiceReferredInto());
		form.lyrDetail().tabOnwardReferral().cmbSecondaryCareProvider().setValue(voOnwardReferral.getSecondaryCareProvider());
		form.lyrDetail().tabOnwardReferral().dtimReferred().setValue(voOnwardReferral.getReferredDate());
		form.lyrDetail().tabOnwardReferral().txtOnwardNotes().setValue(voOnwardReferral.getNotes());
		form.lyrDetail().tabOnwardReferral().ansComplete().setValue(voOnwardReferral.getReferralComplete());
		
		form.lyrDetail().tabOnwardReferral().btnRemove().setVisible(false);
		if (voOnwardReferral.getReferralCompleteIsNotNull()
			&& voOnwardReferral.getReferralComplete().equals(YesNo.YES)
			&& form.getLocalContext().getSelectedRecordIsNotNull()
			&& form.getLocalContext().getSelectedRecord().getIsOnwardReferralTriageIsNotNull()
			&& form.getLocalContext().getSelectedRecord().getIsOnwardReferralTriage())
		{
			//if the IsOnwardReferralTriage is true in memory, double check with a domain call, cos could have been removed from worklist by another user
			form.getLocalContext().setSelectedRecord(domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral()));
			if( form.getLocalContext().getSelectedRecordIsNotNull()
				&& form.getLocalContext().getSelectedRecord().getIsOnwardReferralTriageIsNotNull()
				&& form.getLocalContext().getSelectedRecord().getIsOnwardReferralTriage())
				form.lyrDetail().tabOnwardReferral().btnRemove().setVisible(true);
		}
	}
	
	private void initialiseOnwardTab()
	{
		form.setMode(FormMode.VIEW);
		
		//load SecondaryCareProviders 
		OrgLiteVoCollection voCollOrg = domain.listAllSuppliers();
		
		form.lyrDetail().tabOnwardReferral().cmbSecondaryCareProvider().clear();
		for(OrgLiteVo voOrg: voCollOrg)
			form.lyrDetail().tabOnwardReferral().cmbSecondaryCareProvider().newRow(voOrg, voOrg.getName());
		
		form.lyrDetail().tabOnwardReferral().btnRemove().setVisible(false);
		
		form.lyrDetail().tabOnwardReferral().cmbReferredInto().setRequired(true);
	}
	
	private void clearOnwardReferralControls()
	{
		form.lyrDetail().tabOnwardReferral().ansAgree().setValue(null);
		form.lyrDetail().tabOnwardReferral().ansRequestedByGP().setValue(null);
		form.lyrDetail().tabOnwardReferral().cmbSecondaryCareProvider().setValue(null);
		form.lyrDetail().tabOnwardReferral().cmbReferredInto().setValue(null);
		form.lyrDetail().tabOnwardReferral().dtimReferred().setValue(null);
		form.lyrDetail().tabOnwardReferral().txtOnwardNotes().setValue(null);
	}
	@Override
	protected void onMessageBoxClosed(int messageBoxId, DialogResult result) throws PresentationLogicException 
	{
		if (result.equals(DialogResult.YES)
			&& form.getLocalContext().getChangeServiceMessageBoxIDIsNotNull()
			&& form.getLocalContext().getChangeServiceMessageBoxID().equals(messageBoxId))
		{
			form.getGlobalContext().RefMan.setCurrentServiceLiteVo(form.getLocalContext().getSelectedRecord().getReferralDetails().getService());
			engine.open(form.getForms().RefMan.ChangeServiceDialog);
		}
		else if (form.getLocalContext().getChangeServiceMessageBoxIDIsNotNull()
				&& form.getLocalContext().getChangeServiceMessageBoxID().equals(messageBoxId))
			acceptReferral(null);
		
	}
	@Override
	protected void onBtnRemoveClick() throws PresentationLogicException 
	{
		CatsReferralWizardVo catsReferralWizardVo = domain.getCatsReferral(form.getGlobalContext().RefMan.getCatsReferral());
		
		catsReferralWizardVo.setIsOnwardReferralTriage(null);
		
		String[] arrErrors = catsReferralWizardVo.validate();
		if(arrErrors != null)
		{
			engine.showErrors(arrErrors);
			return;
		}
		try
		{
			domain.saveCatsReferral(catsReferralWizardVo);
		}
		catch (DomainInterfaceException e)
		{
			e.printStackTrace();
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
		}
		form.lyrDetail().tabOnwardReferral().btnRemove().setVisible(false);
	}
	
	@Override
	protected void onAnsCompleteValueChanged() throws PresentationLogicException 
	{
		updateMantaoryFields();
	}

	private void updateMantaoryFields() 
	{
		form.lyrDetail().tabOnwardReferral().dtimReferred().setRequired(false);
		form.lyrDetail().tabOnwardReferral().cmbSecondaryCareProvider().setRequired(false);
		if (form.lyrDetail().tabOnwardReferral().ansComplete().getValue() != null
			&& form.lyrDetail().tabOnwardReferral().ansComplete().getValue().equals(YesNo.YES))
		{
			form.lyrDetail().tabOnwardReferral().dtimReferred().setRequired(true);
			form.lyrDetail().tabOnwardReferral().cmbSecondaryCareProvider().setRequired(true);
		}
		form.lyrDetail().tabOnwardReferral().txtOnwardNotes().setRequired(false);
		if (form.lyrDetail().tabOnwardReferral().ansAgree().getValue() != null
			&& form.lyrDetail().tabOnwardReferral().ansAgree().getValue().equals(YesNo.NO))
			form.lyrDetail().tabOnwardReferral().txtOnwardNotes().setRequired(true);
	}
	
	@Override
	protected void onAnsAgreeValueChanged() throws PresentationLogicException 
	{
		updateMantaoryFields();
	}
	@Override
	protected void onRadioButtonGroup1ValueChanged()	throws PresentationLogicException 
	{	
		if (form.lyrDetail().tabPayerDetails().Group1().getValue().equals(Group1Enumeration.rdoInsurance))
		{
			form.lyrDetail().tabPayerDetails().lyrDetails().tabInsuranceDetails().setHeaderVisible(true);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabInsuranceDetails().setHeaderEnabled(true);
			form.lyrDetail().tabPayerDetails().lyrDetails().tab3rdParty().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tab3rdParty().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabSelfPay().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabSelfPay().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabNHS().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabNHS().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().showtabInsuranceDetails();
		}
		else if (form.lyrDetail().tabPayerDetails().Group1().getValue().equals(Group1Enumeration.rdo3rdParty))
		{
			form.lyrDetail().tabPayerDetails().lyrDetails().tabInsuranceDetails().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabInsuranceDetails().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tab3rdParty().setHeaderVisible(true);
			form.lyrDetail().tabPayerDetails().lyrDetails().tab3rdParty().setHeaderEnabled(true);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabSelfPay().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabSelfPay().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabNHS().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabNHS().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().showtab3rdParty();
		}
		else if (form.lyrDetail().tabPayerDetails().Group1().getValue().equals(Group1Enumeration.rdoSelfPay))
		{
			form.lyrDetail().tabPayerDetails().lyrDetails().tabInsuranceDetails().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabInsuranceDetails().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tab3rdParty().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tab3rdParty().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabSelfPay().setHeaderVisible(true);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabSelfPay().setHeaderEnabled(true);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabNHS().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabNHS().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().showtabSelfPay();
		}
		else if (form.lyrDetail().tabPayerDetails().Group1().getValue().equals(Group1Enumeration.rdoNHS))
		{
			form.lyrDetail().tabPayerDetails().lyrDetails().tabInsuranceDetails().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabInsuranceDetails().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tab3rdParty().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tab3rdParty().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabSelfPay().setHeaderVisible(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabSelfPay().setHeaderEnabled(false);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabNHS().setHeaderVisible(true);
			form.lyrDetail().tabPayerDetails().lyrDetails().tabNHS().setHeaderEnabled(true);
			form.lyrDetail().tabPayerDetails().lyrDetails().showtabNHS();
		}
	}
	@Override
	protected void onBtnRecAdminEventClick() throws PresentationLogicException
	{
		engine.open(form.getForms().Pathways.AdminEvent,  new Object[]{FormMode.EDIT});
		if (form.lyrDetail().tabLetter().isVisible())
		{
			form.lyrDetail().tabLetter().ccUpload().hideHtmlControl();
		}	
	}

	//wdev-19933
	protected void onBtnTransferofCareClick() throws PresentationLogicException
	{
		form.getLocalContext().setTransferOrRequestButtonActions(ReferralAppointmentOutcomeAction.TRANSFER_OF_CARE);	
		form.getGlobalContext().RefMan.setChildCatsReferral(null);
		CatsReferralMasterVo parentCatsRef = domain.getParentCatsReferrall(form.getGlobalContext().RefMan.getCatsReferral());
		engine.open(form.getForms().RefMan.TransferOfCare, new Object[] {parentCatsRef,Boolean.FALSE,null,ReferralAppointmentOutcomeAction.TRANSFER_OF_CARE},"Transfer of Care"); //WDEV-21195	 
		
		
	}

	//wdev-19933
	protected void onBtnRequestforServiceClick() throws PresentationLogicException
	{
		form.getLocalContext().setTransferOrRequestButtonActions(ReferralAppointmentOutcomeAction.REQUEST_FOR_SERVICE);	
		form.getGlobalContext().RefMan.setChildCatsReferral(null);
		CatsReferralMasterVo parentCatsRef = domain.getParentCatsReferrall(form.getGlobalContext().RefMan.getCatsReferral());

		Object[] openParameters = new Object[] {
													parentCatsRef,										// Parent Cats Referral
													null,												// No Appointment Outcome created
													CommitMode.COMMIT_TO_DATABASE,						// Commit to database
													Boolean.FALSE										// Form is NOT in ReadOnly mode
												};
		
		engine.open(form.getForms().RefMan.CatsReferralRequestServiceDlg, openParameters,"Request For Service"); //WDEV-21195	
	}

	@Override
	protected void onBtnUpdateUrgencyClick() throws PresentationLogicException
	{
		engine.open(form.getForms().RefMan.UpdateUrgency);
	}
}
