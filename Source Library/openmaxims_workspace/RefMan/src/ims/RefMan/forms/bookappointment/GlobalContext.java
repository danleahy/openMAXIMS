//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.forms.bookappointment;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		RefMan = new RefManContext(context);
		Scheduling = new SchedulingContext(context);
		Core = new CoreContext(context);
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");
		public boolean getSelectedSessionsIsNotNull()
		{
			return !cx_RefManSelectedSessions.getValueIsNull(context);
		}
		public ims.scheduling.vo.SessionShortVoCollection getSelectedSessions()
		{
			return (ims.scheduling.vo.SessionShortVoCollection)cx_RefManSelectedSessions.getValue(context);
		}
		public void setSelectedSessions(ims.scheduling.vo.SessionShortVoCollection value)
		{
			cx_RefManSelectedSessions.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedSessions = new ims.framework.ContextVariable("RefMan.SelectedSessions", "_cv_RefMan.SelectedSessions");
		public boolean getIsProviderCancellationIsNotNull()
		{
			return !cx_RefManIsProviderCancellation.getValueIsNull(context);
		}
		public Boolean getIsProviderCancellation()
		{
			return (Boolean)cx_RefManIsProviderCancellation.getValue(context);
		}
		public void setIsProviderCancellation(Boolean value)
		{
			cx_RefManIsProviderCancellation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManIsProviderCancellation = new ims.framework.ContextVariable("RefMan.IsProviderCancellation", "_cvp_RefMan.IsProviderCancellation");
		public boolean getSelectedSessionIsNotNull()
		{
			return !cx_RefManSelectedSession.getValueIsNull(context);
		}
		public ims.scheduling.vo.SessionShortVo getSelectedSession()
		{
			return (ims.scheduling.vo.SessionShortVo)cx_RefManSelectedSession.getValue(context);
		}
		public void setSelectedSession(ims.scheduling.vo.SessionShortVo value)
		{
			cx_RefManSelectedSession.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedSession = new ims.framework.ContextVariable("RefMan.SelectedSession", "_cv_RefMan.SelectedSession");
		public boolean getReferralContractTypeForPatientIsNotNull()
		{
			return !cx_RefManReferralContractTypeForPatient.getValueIsNull(context);
		}
		public ims.core.vo.lookups.ReferralManagementContractType getReferralContractTypeForPatient()
		{
			return (ims.core.vo.lookups.ReferralManagementContractType)cx_RefManReferralContractTypeForPatient.getValue(context);
		}
		public void setReferralContractTypeForPatient(ims.core.vo.lookups.ReferralManagementContractType value)
		{
			cx_RefManReferralContractTypeForPatient.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralContractTypeForPatient = new ims.framework.ContextVariable("RefMan.ReferralContractTypeForPatient", "_cvp_RefMan.ReferralContractTypeForPatient");
		public boolean getReasonPastFirstApptKPIIsNotNull()
		{
			return !cx_RefManReasonPastFirstApptKPI.getValueIsNull(context);
		}
		public ims.RefMan.vo.ReasonPastFirstApptKPIVo getReasonPastFirstApptKPI()
		{
			return (ims.RefMan.vo.ReasonPastFirstApptKPIVo)cx_RefManReasonPastFirstApptKPI.getValue(context);
		}
		public void setReasonPastFirstApptKPI(ims.RefMan.vo.ReasonPastFirstApptKPIVo value)
		{
			cx_RefManReasonPastFirstApptKPI.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReasonPastFirstApptKPI = new ims.framework.ContextVariable("RefMan.ReasonPastFirstApptKPI", "_cv_RefMan.ReasonPastFirstApptKPI");
		public boolean getReferralERODIsNotNull()
		{
			return !cx_RefManReferralEROD.getValueIsNull(context);
		}
		public ims.RefMan.vo.ReferralERODVo getReferralEROD()
		{
			return (ims.RefMan.vo.ReferralERODVo)cx_RefManReferralEROD.getValue(context);
		}
		public void setReferralEROD(ims.RefMan.vo.ReferralERODVo value)
		{
			cx_RefManReferralEROD.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManReferralEROD = new ims.framework.ContextVariable("RefMan.ReferralEROD", "_cv_RefMan.ReferralEROD");
		public boolean getAppointmentSavedIsNotNull()
		{
			return !cx_RefManAppointmentSaved.getValueIsNull(context);
		}
		public Boolean getAppointmentSaved()
		{
			return (Boolean)cx_RefManAppointmentSaved.getValue(context);
		}
		public void setAppointmentSaved(Boolean value)
		{
			cx_RefManAppointmentSaved.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManAppointmentSaved = new ims.framework.ContextVariable("RefMan.AppointmentSaved", "_cv_RefMan.AppointmentSaved");
		public boolean getLinkApptsOnMultipleBookingIsNotNull()
		{
			return !cx_RefManLinkApptsOnMultipleBooking.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentVoCollection getLinkApptsOnMultipleBooking()
		{
			return (ims.scheduling.vo.Booking_AppointmentVoCollection)cx_RefManLinkApptsOnMultipleBooking.getValue(context);
		}
		public void setLinkApptsOnMultipleBooking(ims.scheduling.vo.Booking_AppointmentVoCollection value)
		{
			cx_RefManLinkApptsOnMultipleBooking.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManLinkApptsOnMultipleBooking = new ims.framework.ContextVariable("RefMan.LinkApptsOnMultipleBooking", "_cv_RefMan.LinkApptsOnMultipleBooking");
		public boolean getPatientElectiveListRefIsNotNull()
		{
			return !cx_RefManPatientElectiveListRef.getValueIsNull(context);
		}
		public ims.RefMan.vo.PatientElectiveListRefVo getPatientElectiveListRef()
		{
			return (ims.RefMan.vo.PatientElectiveListRefVo)cx_RefManPatientElectiveListRef.getValue(context);
		}
		public void setPatientElectiveListRef(ims.RefMan.vo.PatientElectiveListRefVo value)
		{
			cx_RefManPatientElectiveListRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManPatientElectiveListRef = new ims.framework.ContextVariable("RefMan.PatientElectiveListRef", "_cv_RefMan.PatientElectiveListRef");
		public boolean getLinkedAppointmentsCollectionIsNotNull()
		{
			return !cx_RefManLinkedAppointmentsCollection.getValueIsNull(context);
		}
		public ims.scheduling.vo.BookingAppointmentForLinkedAppointmentsVoCollection getLinkedAppointmentsCollection()
		{
			return (ims.scheduling.vo.BookingAppointmentForLinkedAppointmentsVoCollection)cx_RefManLinkedAppointmentsCollection.getValue(context);
		}
		public void setLinkedAppointmentsCollection(ims.scheduling.vo.BookingAppointmentForLinkedAppointmentsVoCollection value)
		{
			cx_RefManLinkedAppointmentsCollection.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManLinkedAppointmentsCollection = new ims.framework.ContextVariable("RefMan.LinkedAppointmentsCollection", "_cv_RefMan.LinkedAppointmentsCollection");
		public boolean getCatsRefConsultationActivityRequiredIsNotNull()
		{
			return !cx_RefManCatsRefConsultationActivityRequired.getValueIsNull(context);
		}
		public Boolean getCatsRefConsultationActivityRequired()
		{
			return (Boolean)cx_RefManCatsRefConsultationActivityRequired.getValue(context);
		}
		public void setCatsRefConsultationActivityRequired(Boolean value)
		{
			cx_RefManCatsRefConsultationActivityRequired.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsRefConsultationActivityRequired = new ims.framework.ContextVariable("RefMan.CatsRefConsultationActivityRequired", "_cv_RefMan.CatsRefConsultationActivityRequired");
		public boolean getBookedOnDayOfAppointmentIsNotNull()
		{
			return !cx_RefManBookedOnDayOfAppointment.getValueIsNull(context);
		}
		public Boolean getBookedOnDayOfAppointment()
		{
			return (Boolean)cx_RefManBookedOnDayOfAppointment.getValue(context);
		}
		public void setBookedOnDayOfAppointment(Boolean value)
		{
			cx_RefManBookedOnDayOfAppointment.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManBookedOnDayOfAppointment = new ims.framework.ContextVariable("RefMan.BookedOnDayOfAppointment", "_cv_RefMan.BookedOnDayOfAppointment");

		private ims.framework.Context context;
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getAppointmentIdsIsNotNull()
		{
			return !cx_SchedulingAppointmentIds.getValueIsNull(context);
		}
		public java.util.ArrayList getAppointmentIds()
		{
			return (java.util.ArrayList)cx_SchedulingAppointmentIds.getValue(context);
		}
		public void setAppointmentIds(java.util.ArrayList value)
		{
			cx_SchedulingAppointmentIds.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingAppointmentIds = new ims.framework.ContextVariable("Scheduling.AppointmentIds", "_cv_Scheduling.AppointmentIds");
		public boolean getBookingActivityIsNotNull()
		{
			return !cx_SchedulingBookingActivity.getValueIsNull(context);
		}
		public ims.core.resource.place.vo.ActivityRefVo getBookingActivity()
		{
			return (ims.core.resource.place.vo.ActivityRefVo)cx_SchedulingBookingActivity.getValue(context);
		}
		public void setBookingActivity(ims.core.resource.place.vo.ActivityRefVo value)
		{
			cx_SchedulingBookingActivity.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingActivity = new ims.framework.ContextVariable("Scheduling.BookingActivity", "_cv_Scheduling.BookingActivity");
		public boolean getBookingAppointmentIsNotNull()
		{
			return !cx_SchedulingBookingAppointment.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentVo getBookingAppointment()
		{
			return (ims.scheduling.vo.Booking_AppointmentVo)cx_SchedulingBookingAppointment.getValue(context);
		}
		public void setBookingAppointment(ims.scheduling.vo.Booking_AppointmentVo value)
		{
			cx_SchedulingBookingAppointment.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingAppointment = new ims.framework.ContextVariable("Scheduling.BookingAppointment", "_cv_Scheduling.BookingAppointment");
		public boolean getBookingServiceIsNotNull()
		{
			return !cx_SchedulingBookingService.getValueIsNull(context);
		}
		public ims.core.clinical.vo.ServiceRefVo getBookingService()
		{
			return (ims.core.clinical.vo.ServiceRefVo)cx_SchedulingBookingService.getValue(context);
		}
		public void setBookingService(ims.core.clinical.vo.ServiceRefVo value)
		{
			cx_SchedulingBookingService.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingService = new ims.framework.ContextVariable("Scheduling.BookingService", "_cv_Scheduling.BookingService");
		public boolean getSessionSlotsIsNotNull()
		{
			return !cx_SchedulingSessionSlots.getValueIsNull(context);
		}
		public ims.scheduling.vo.SessionSlotVoCollection getSessionSlots()
		{
			return (ims.scheduling.vo.SessionSlotVoCollection)cx_SchedulingSessionSlots.getValue(context);
		}
		public void setSessionSlots(ims.scheduling.vo.SessionSlotVoCollection value)
		{
			cx_SchedulingSessionSlots.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingSessionSlots = new ims.framework.ContextVariable("Scheduling.SessionSlots", "_cv_Scheduling.SessionSlots");
		public boolean getWardAttendanceIsNotNull()
		{
			return !cx_SchedulingWardAttendance.getValueIsNull(context);
		}
		public Boolean getWardAttendance()
		{
			return (Boolean)cx_SchedulingWardAttendance.getValue(context);
		}
		public void setWardAttendance(Boolean value)
		{
			cx_SchedulingWardAttendance.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingWardAttendance = new ims.framework.ContextVariable("Scheduling.WardAttendance", "_cv_Scheduling.WardAttendance");
		public boolean getServiceFunctionRefIsNotNull()
		{
			return !cx_SchedulingServiceFunctionRef.getValueIsNull(context);
		}
		public ims.core.clinical.vo.ServiceFunctionRefVo getServiceFunctionRef()
		{
			return (ims.core.clinical.vo.ServiceFunctionRefVo)cx_SchedulingServiceFunctionRef.getValue(context);
		}
		public void setServiceFunctionRef(ims.core.clinical.vo.ServiceFunctionRefVo value)
		{
			cx_SchedulingServiceFunctionRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingServiceFunctionRef = new ims.framework.ContextVariable("Scheduling.ServiceFunctionRef", "_cv_Scheduling.ServiceFunctionRef");
		public boolean getBookingHospitalIsNotNull()
		{
			return !cx_SchedulingBookingHospital.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVo getBookingHospital()
		{
			return (ims.core.vo.LocationLiteVo)cx_SchedulingBookingHospital.getValue(context);
		}
		public void setBookingHospital(ims.core.vo.LocationLiteVo value)
		{
			cx_SchedulingBookingHospital.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingHospital = new ims.framework.ContextVariable("Scheduling.BookingHospital", "_cv_Scheduling.BookingHospital");
		public boolean getBookingListTypeIsNotNull()
		{
			return !cx_SchedulingBookingListType.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.ProfileListType getBookingListType()
		{
			return (ims.scheduling.vo.lookups.ProfileListType)cx_SchedulingBookingListType.getValue(context);
		}
		public void setBookingListType(ims.scheduling.vo.lookups.ProfileListType value)
		{
			cx_SchedulingBookingListType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingListType = new ims.framework.ContextVariable("Scheduling.BookingListType", "_cv_Scheduling.BookingListType");
		public boolean getBookingLocationIsNotNull()
		{
			return !cx_SchedulingBookingLocation.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVo getBookingLocation()
		{
			return (ims.core.vo.LocationLiteVo)cx_SchedulingBookingLocation.getValue(context);
		}
		public void setBookingLocation(ims.core.vo.LocationLiteVo value)
		{
			cx_SchedulingBookingLocation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingLocation = new ims.framework.ContextVariable("Scheduling.BookingLocation", "_cv_Scheduling.BookingLocation");
		public boolean getBookingUrgencyIsNotNull()
		{
			return !cx_SchedulingBookingUrgency.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.SchedulingPriority getBookingUrgency()
		{
			return (ims.scheduling.vo.lookups.SchedulingPriority)cx_SchedulingBookingUrgency.getValue(context);
		}
		public void setBookingUrgency(ims.scheduling.vo.lookups.SchedulingPriority value)
		{
			cx_SchedulingBookingUrgency.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingUrgency = new ims.framework.ContextVariable("Scheduling.BookingUrgency", "_cv_Scheduling.BookingUrgency");
		public boolean getFlexibleSessionSlotsIsNotNull()
		{
			return !cx_SchedulingFlexibleSessionSlots.getValueIsNull(context);
		}
		public ims.scheduling.vo.SessionParentChildSlotVoCollection getFlexibleSessionSlots()
		{
			return (ims.scheduling.vo.SessionParentChildSlotVoCollection)cx_SchedulingFlexibleSessionSlots.getValue(context);
		}
		public void setFlexibleSessionSlots(ims.scheduling.vo.SessionParentChildSlotVoCollection value)
		{
			cx_SchedulingFlexibleSessionSlots.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingFlexibleSessionSlots = new ims.framework.ContextVariable("Scheduling.FlexibleSessionSlots", "_cv_Scheduling.FlexibleSessionSlots");
		public boolean getBookingListOwnerIsNotNull()
		{
			return !cx_SchedulingBookingListOwner.getValueIsNull(context);
		}
		public ims.core.vo.HcpLiteVo getBookingListOwner()
		{
			return (ims.core.vo.HcpLiteVo)cx_SchedulingBookingListOwner.getValue(context);
		}
		public void setBookingListOwner(ims.core.vo.HcpLiteVo value)
		{
			cx_SchedulingBookingListOwner.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingListOwner = new ims.framework.ContextVariable("Scheduling.BookingListOwner", "_cv_Scheduling.BookingListOwner");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getDuplicatedPatientsIsNotNull()
		{
			return !cx_CoreDuplicatedPatients.getValueIsNull(context);
		}
		public ims.core.vo.PatientLiteVoCollection getDuplicatedPatients()
		{
			return (ims.core.vo.PatientLiteVoCollection)cx_CoreDuplicatedPatients.getValue(context);
		}
		public void setDuplicatedPatients(ims.core.vo.PatientLiteVoCollection value)
		{
			cx_CoreDuplicatedPatients.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreDuplicatedPatients = new ims.framework.ContextVariable("Core.DuplicatedPatients", "_cv_Core.DuplicatedPatients");
		public boolean getSamlXmlIsNotNull()
		{
			return !cx_CoreSamlXml.getValueIsNull(context);
		}
		public String getSamlXml()
		{
			return (String)cx_CoreSamlXml.getValue(context);
		}
		public void setSamlXml(String value)
		{
			cx_CoreSamlXml.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreSamlXml = new ims.framework.ContextVariable("Core.SamlXml", "_cv_Core.SamlXml");

		private ims.framework.Context context;
	}

	public RefManContext RefMan;
	public SchedulingContext Scheduling;
	public CoreContext Core;
}
