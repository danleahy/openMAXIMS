//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.71 build 3800.18244)
// Copyright (C) 1995-2010 IMS MAXIMS. All rights reserved.

package ims.oncology.forms.patientactionsheetwizard;

import ims.configuration.gen.ConfigFlag;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.Control;
import ims.framework.FormName;
import ims.framework.controls.DynamicGridCell;
import ims.framework.controls.DynamicGridColumn;
import ims.framework.enumerations.DialogResult;
import ims.framework.enumerations.FormMode;
import ims.framework.exceptions.PresentationLogicException;

import com.ims.query.builder.client.QueryBuilderClient;
import com.ims.query.builder.client.exceptions.QueryBuilderClientException;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	public static final Integer		COLTYPE_NAME			= new Integer(-1);
	public static final Integer		COLTYPE_VALUE			= new Integer(-2);
	public static final Integer		COLTYPE_NAME2			= new Integer(-3);
	public static final Integer		COLTYPE_VALUE2			= new Integer(-4);
	public static final Integer		COLTYPE_NAME3			= new Integer(-5);
	public static final Integer		COLTYPE_VALUE3			= new Integer(-6);
	private String urlQueryServer = ConfigFlag.GEN.QUERY_SERVER_URL.getValue();
	private String urlReportServer = ConfigFlag.GEN.REPORT_SERVER_URL.getValue();

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.setMode(FormMode.EDIT);
		
		form.lyr1().tabPageOverview().setVisible(true);
		form.lyr1().tabPageOverview().ccOverview().initialise();
		
		form.lyr1().tabPageTreatOptions().setVisible(false);
		form.lyr1().tabPageTreatOptions().ccTreatmentOptions().initialise();
		
		form.lyr1().tabPage4().setVisible(false);
		form.lyr1().tabPage1().setVisible(false);
		form.lyr1().tabPage5().setVisible(false);
		initialise();

	}
	
	private void initialise()
	{
		form.lyr1().tabPage4().lbl28().setVisible(false);
	}
	
	private String buildReport()
	{		
		Object[] obj = null;
		QueryBuilderClient client = new QueryBuilderClient(urlQueryServer, engine.getSessionId());
		String url = "";
		
		Integer reportID = 163;
		obj = domain.getSystemReportAndTemplate(reportID);
		
		if(obj == null || obj.length < 2)
		{
			engine.showMessage("I could not get the report and template !");
			return "";
		}
		
		if(obj[0] == null || obj[1] == null)
		{
			engine.showMessage("The report has not been deployed !");
			return "";
		}
				
		try
		{
			url = client.buildReportAsUrlInlineFrame((String)obj[0], (String)obj[1], urlReportServer, "PDF", "", 1);
			if (url != null)
			{
				return url;
			}
		}
		catch (QueryBuilderClientException e1)
		{
			engine.showMessage("Error creating report: " + e1.getMessage());
			return "";
		}
				
		return "";
	}


	@Override
	protected void onContextMenuItemClick(int menuItemID, Control sender) throws PresentationLogicException 
	{
	}

	
	protected void onChkOffProtocolValueChanged() throws PresentationLogicException 
	{
		
	}
	
	
	protected void onRadioButtonGroupPosValueChanged()throws PresentationLogicException 
	{
		
	}
	@Override
	protected void onDyngrdPlanningOptionsCellButtonClicked(DynamicGridCell cell)
	{
		if(cell != null)
		{
				
		}
	}
	private DynamicGridCell getCell(DynamicGridColumn column)
	{
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	protected void onDyngrdPlanningOptionsCellValueChanged(DynamicGridCell cell)
	{
		if(cell != null)
		{
			if (cell.getIdentifier()!= null
				&& cell.getIdentifier().equals("IV_CONT") )
			{
				form.lyr1().tabPage4().lbl28().setVisible(cell.getValue() != null);
			}
		}
	}

	@Override
	protected void onFormDialogClosed(FormName formName, DialogResult result) throws PresentationLogicException
	{
		if (form.getGlobalContext().Oncology.getEASTumourCompletion().equals(ims.oncology.vo.enums.EASTumourCompletionAnswer.TUMOURS))
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(true);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(false);
			return;
		}
		if (form.getGlobalContext().Oncology.getEASTumourCompletion().equals(ims.oncology.vo.enums.EASTumourCompletionAnswer.SITES))
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(true);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(false);
			return;
		}

		
	}

	protected void onBtnCCCResultsClick() throws PresentationLogicException 
	{
		engine.open(form.getForms().OCRR.PatientResultsAndOrders);		
	}

	protected void onBtnSaveClick() throws PresentationLogicException 
	{
		form.btnBack().setVisible(true);
		if (form.lyr1().tabPageOverview().isVisible())
		{			
			if (form.lyr1().tabPageOverview().ccOverview().save())
				form.getLocalContext().setElectronisActionSheet(form.lyr1().tabPageOverview().ccOverview().getValue());
			else
			{
				form.getLocalContext().setElectronisActionSheet(form.lyr1().tabPageOverview().ccOverview().getValue());
				form.lyr1().tabPageOverview().setVisible(false);
				form.lyr1().tabPageTreatOptions().setVisible(true);
				form.lyr1().tabPage4().setVisible(false);
				form.lyr1().tabPage5().setVisible(false);
				form.lyr1().tabPage1().setVisible(false);
				form.lyr1().tabSummary().setVisible(false);
				return;
			}
				
			
//			String[] str = form.getLocalContext().getElectronisActionSheet().validate();
//			
//			if (str != null && str.length > 0)
//			{
//				engine.showErrors(str);
//				return;
//			}
//
//			try 
//			{
//				form.getLocalContext().setElectronisActionSheet(domain.saveElectronicActionSheet(form.getLocalContext().getElectronisActionSheet()));
//			} 
//			catch (DomainInterfaceException e) 
//			{
//				engine.showMessage(e.getMessage());
//				
//				form.getLocalContext().setElectronisActionSheet(domain.getElectronicActionSheet(form.getLocalContext().getElectronisActionSheet()));
//				form.lyr1().tabPageOverview().ccOverview().setValue(form.getLocalContext().getElectronisActionSheet());
//
//				form.setMode(FormMode.VIEW);			
//				return;
//			} 
//			catch (StaleObjectException e) 
//			{
//				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
//
//				form.getLocalContext().setElectronisActionSheet(domain.getElectronicActionSheet(form.getLocalContext().getElectronisActionSheet()));
//				form.lyr1().tabPageOverview().ccOverview().setValue(form.getLocalContext().getElectronisActionSheet());
//				
//				form.setMode(FormMode.VIEW);
//				return;
//			} 
			
			form.setMode(FormMode.VIEW);			
			
			return;
		}

		if (form.lyr1().tabPageTreatOptions().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(true);
			form.lyr1().tabPageTreatOptions().ccTreatmentOptions().initialise();
			
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			if (form.lyr1().tabPageTreatOptions().ccTreatmentOptions().getGroupReqEnumeration())
				form.lyr1().tabPage1().setVisible(true);
			else
				form.lyr1().tabPage4().setVisible(true);
				
			form.lyr1().tabSummary().setVisible(false);
			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);

			if (form.lyr1().tabPageTreatOptions().ccTreatmentOptions().save())
				form.getLocalContext().setElectronisActionSheet(form.lyr1().tabPageTreatOptions().ccTreatmentOptions().getValue());
			else
				return;
			
//			String[] str = form.getLocalContext().getElectronisActionSheet().validate();
//			
//			if (str != null && str.length > 0)
//			{
//				engine.showErrors(str);
//				return;
//			}
//
//			try 
//			{
//				form.getLocalContext().setElectronisActionSheet(domain.saveElectronicActionSheet(form.getLocalContext().getElectronisActionSheet()));
//			} 
//			catch (DomainInterfaceException e) 
//			{
//				engine.showMessage(e.getMessage());
//				
//				form.getLocalContext().setElectronisActionSheet(domain.getElectronicActionSheet(form.getLocalContext().getElectronisActionSheet()));
//				form.lyr1().tabPageTreatOptions().ccTreatmentOptions().setValue(form.getLocalContext().getElectronisActionSheet());
//
//				form.setMode(FormMode.VIEW);			
//				return;
//			} 
//			catch (StaleObjectException e) 
//			{
//				engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
//
//				form.getLocalContext().setElectronisActionSheet(domain.getElectronicActionSheet(form.getLocalContext().getElectronisActionSheet()));
//				form.lyr1().tabPageTreatOptions().ccTreatmentOptions().setValue(form.getLocalContext().getElectronisActionSheet());
//				
//				form.setMode(FormMode.VIEW);
//				return;
//			} 
			

			return;
		}

		if (form.lyr1().tabPage4().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			
			form.lyr1().tabPage5().setVisible(true);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(false);
			//form.btnSave().setText("Save");
			//form.btn3().setVisible(false);
			return;
		}

		if (form.lyr1().tabPage1().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(true);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(false);
			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);
			return;
		}
		if (form.lyr1().tabPage5().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(true);
			form.btnSave().setText("Complete");
			//form.btn3().setVisible(false);
			
			String url = buildReport();
			form.lyr1().tabSummary().htm1().setHTML("<p align='center'>" + url );

			return;
		}
		if (form.lyr1().tabSummary().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(true);
			form.btnSave().setText("Complete");
			//form.btn3().setVisible(false);
			
			engine.open(form.getForms().Oncology.PatientActionSheetWizardConfirmationDialog);
			
			return;
		}
		
	}
	
	protected void onBtnBackClick() throws PresentationLogicException 
	{
		form.btnBack().setVisible(true);
		if (form.lyr1().tabPage5().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(true);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);
			return;
		}

		if (form.lyr1().tabPage1().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(true);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);
			return;
		}

		if (form.lyr1().tabPage4().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
//			if (form.lyr1().tabPageTreatOptions().GroupReq().getValue().equals(GroupReqEnumeration.rdoRequestYes))
//				form.lyr1().tabPage1().setVisible(true);
//			else
//				form.lyr1().tabPageTreatOptions().setVisible(true);

			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);
			return;
		}

		if (form.lyr1().tabPageTreatOptions().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(true);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);
			form.btnBack().setVisible(false);

			//pass in current value to components
			form.getLocalContext().setElectronisActionSheet(form.lyr1().tabPageTreatOptions().ccTreatmentOptions().getValue());
			form.lyr1().tabPageOverview().ccOverview().setValue(form.getLocalContext().getElectronisActionSheet());			
			
			return;
		}

		if (form.lyr1().tabSummary().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(true);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(false);
			//form.btnSave().setText("Save");
			//form.btn3().setVisible(false);
			return;
		}
		
	}

	protected void onBtnNextClick() throws PresentationLogicException 
	{
		form.btnBack().setVisible(true);
		if (form.lyr1().tabPageOverview().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(true);
			form.lyr1().tabPageTreatOptions().ccTreatmentOptions().initialise();
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(false);
			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);
			
			//pass in current value to components
			form.getLocalContext().setElectronisActionSheet(form.lyr1().tabPageOverview().ccOverview().getValue());
			form.lyr1().tabPageTreatOptions().ccTreatmentOptions().setValue(form.getLocalContext().getElectronisActionSheet());
			form.lyr1().tabPageTreatOptions().ccTreatmentOptions().initialise();
			return;
		}

		if (form.lyr1().tabPageTreatOptions().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);			
			
			//populateDynamicGrdPlanningOptions();
			form.lyr1().tabPage4().setVisible(true);
			form.lyr1().tabPage5().setVisible(false);

			form.lyr1().tabPage1().setVisible(false);
//			if (form.lyr1().tabPageTreatOptions().ccTreatmentOptions().getGroupReqEnumeration())
//				form.lyr1().tabPage1().setVisible(true);
//			else
//				form.lyr1().tabPage4().setVisible(true);
//				
			form.lyr1().tabSummary().setVisible(false);
			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);
			
			//pass in current value to components
			form.getLocalContext().setElectronisActionSheet(form.lyr1().tabPageTreatOptions().ccTreatmentOptions().getValue());
			form.lyr1().tabPageOverview().ccOverview().setValue(form.getLocalContext().getElectronisActionSheet());
			
			//populateSummaryPanels();
			return;
		}

		if (form.lyr1().tabPage4().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			
			form.lyr1().tabPage5().setVisible(true);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(false);
			//form.btnSave().setText("Save");
			//form.btn3().setVisible(false);
			return;
		}

		if (form.lyr1().tabPage1().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(true);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(false);
			//form.btnSave().setText("Next");
			//form.btn3().setVisible(true);
			return;
		}
		if (form.lyr1().tabPage5().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(true);
			//form.btnSave().setText("Complete");
			//form.btn3().setVisible(false);
			
			String url = buildReport();
			form.lyr1().tabSummary().htm1().setHTML("<p align='center'>" + url );

			return;
		}
		if (form.lyr1().tabSummary().isVisible())
		{
			form.lyr1().tabPageOverview().setVisible(false);
			form.lyr1().tabPageTreatOptions().setVisible(false);
			form.lyr1().tabPage4().setVisible(false);
			form.lyr1().tabPage5().setVisible(false);
			form.lyr1().tabPage1().setVisible(false);
			form.lyr1().tabSummary().setVisible(true);
			form.btnSave().setText("Complete");
			//form.btn3().setVisible(false);
			
			engine.open(form.getForms().Oncology.PatientActionSheetWizardConfirmationDialog);
			
			return;
		}
		
	}

	protected void onBtnExitClick() throws PresentationLogicException 
	{
		form.lyr1().tabPageOverview().ccOverview().setMode(FormMode.VIEW);
		form.lyr1().tabPageTreatOptions().ccTreatmentOptions().setMode(FormMode.VIEW);
		
		//TODO other tabs
		
		form.setMode(FormMode.VIEW);
		engine.close(DialogResult.CANCEL);		
	}
}
