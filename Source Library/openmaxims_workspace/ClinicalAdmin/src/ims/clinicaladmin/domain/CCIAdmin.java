//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinicaladmin.domain;

// Generated from form domain impl
public interface CCIAdmin extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	public ims.vo.interfaces.IGenericItemInfo[] listCciLite(String filter, ims.clinicaladmin.vo.enums.CciType cciType, Boolean activeOnly);

	// Generated from form domain interface definition
	public ims.vo.interfaces.ICciFull getCci(ims.vo.interfaces.IGenericItemInfo cci, ims.clinicaladmin.vo.enums.CciType cciType);

	// Generated from form domain interface definition
	public ims.vo.interfaces.ICciFull saveCci(ims.vo.interfaces.ICciFull fullCci, ims.clinicaladmin.vo.enums.CciType cciType) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* lists the hotlists associated with a given IGenericItemInfo object
	*/
	public ims.vo.interfaces.IHotlistShort[] listIHotlistShortsByCCI(Integer cciID, ims.clinicaladmin.vo.enums.CciType cciType);

	// Generated from form domain interface definition
	/**
	* Removes an igeneric item and its hotlist item from a hotlist
	*/
	public void removeIGenericItemFromHotlist(Integer hotlistID, ims.vo.interfaces.IGenericItemInfo cciItem, ims.clinicaladmin.vo.enums.CciType cciType) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.ForeignKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Lists the hotlist shorts associated with a given LookupInstVi (specialty)
	*/
	public ims.vo.interfaces.IHotlistShort[] listIHotlistShortsBySpecialty(ims.vo.LookupInstVo specialty, ims.clinicaladmin.vo.enums.CciType cciType);

	// Generated from form domain interface definition
	/**
	* Adds a given cci object to a given hotlist and saves based on cci type
	*/
	public ims.vo.interfaces.IHotlistShort addIGenericItemToHotlist(Integer hotlistID, ims.vo.interfaces.IGenericItemInfo cciItem, ims.clinicaladmin.vo.enums.CciType cciType) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* Saves a given IHotlistShort based on its value and object type
	*/
	public ims.vo.interfaces.IHotlistShort saveIHotlistShort(ims.vo.interfaces.IHotlistShort iHotlistShort) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* Runs a search based on a given filter string, CciType and Boolean. Returns the results as a collection of IGenericItem interfaces
	*/
	public ims.vo.interfaces.IGenericItem[] listIGenericItems(String filter, ims.clinicaladmin.vo.enums.CciType cciType, Boolean astiveOnly);
}
