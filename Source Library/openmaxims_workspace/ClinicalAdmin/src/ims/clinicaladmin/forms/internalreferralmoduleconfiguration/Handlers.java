//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinicaladmin.forms.internalreferralmoduleconfiguration;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode, ims.framework.interfaces.IClearInfo
{
	abstract protected void bindcmbInternalReferralStatusLookup();
	abstract protected void defaultcmbInternalReferralStatusLookupValue();
	abstract protected void bindcmbNewConditionBackToGPLookup();
	abstract protected void defaultcmbNewConditionBackToGPLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrMainTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onImbRemoveQuestionClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbAddQuestionClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdQuestionsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbClinicalServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbClinicalServiceTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClinicalServiceClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClinicalServiceClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditClinicalServiceClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnNewClinicalServiceClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdServicesSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbInternalReferralStatusValueSet(Object value);
	abstract protected void onCmbInternalReferralStatusValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelActionsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveActionsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditActionsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelSettingsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveSettingsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnEditSettingsClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbNewConditionBackToGPValueSet(Object value);

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.lyrMain().tabPageService().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabPageServiceActivated();
			}
		});
		this.form.lyrMain().tabPageInternalReferralWorkflow().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabPageInternalReferralWorkflowActivated();
			}
		});
		this.form.lyrMain().tabPageInternalReferralSettings().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrMaintabPageInternalReferralSettingsActivated();
			}
		});
		this.form.lyrMain().tabPageService().imbRemoveQuestion().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbRemoveQuestionClick();
			}
		});
		this.form.lyrMain().tabPageService().imbAddQuestion().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbAddQuestionClick();
			}
		});
		this.form.lyrMain().tabPageService().grdQuestions().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdQuestionsSelectionChanged();
			}
		});
		this.form.lyrMain().tabPageService().qmbClinicalService().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbClinicalServiceValueChanged();
			}
		});
		this.form.lyrMain().tabPageService().qmbClinicalService().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbClinicalServiceTextSubmited(value);
			}
		});
		this.form.lyrMain().tabPageService().btnCancelClinicalService().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClinicalServiceClick();
			}
		});
		this.form.lyrMain().tabPageService().btnSaveClinicalService().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClinicalServiceClick();
			}
		});
		this.form.lyrMain().tabPageService().btnEditClinicalService().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditClinicalServiceClick();
			}
		});
		this.form.lyrMain().tabPageService().btnNewClinicalService().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnNewClinicalServiceClick();
			}
		});
		this.form.lyrMain().tabPageService().grdServices().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdServicesSelectionChanged();
			}
		});
		this.form.lyrMain().tabPageService().btnClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnClearClick();
			}
		});
		this.form.lyrMain().tabPageService().btnSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSearchClick();
			}
		});
		this.form.lyrMain().tabPageInternalReferralWorkflow().cmbInternalReferralStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbInternalReferralStatusValueSet(value);
			}
		});
		this.form.lyrMain().tabPageInternalReferralWorkflow().cmbInternalReferralStatus().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbInternalReferralStatusValueChanged();
			}
		});
		this.form.lyrMain().tabPageInternalReferralWorkflow().btnCancelActions().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelActionsClick();
			}
		});
		this.form.lyrMain().tabPageInternalReferralWorkflow().btnSaveActions().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveActionsClick();
			}
		});
		this.form.lyrMain().tabPageInternalReferralWorkflow().btnEditActions().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditActionsClick();
			}
		});
		this.form.lyrMain().tabPageInternalReferralSettings().btnCancelSettings().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelSettingsClick();
			}
		});
		this.form.lyrMain().tabPageInternalReferralSettings().btnSaveSettings().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveSettingsClick();
			}
		});
		this.form.lyrMain().tabPageInternalReferralSettings().btnEditSettings().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditSettingsClick();
			}
		});
		this.form.lyrMain().tabPageInternalReferralSettings().cmbNewConditionBackToGP().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbNewConditionBackToGPValueSet(value);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbInternalReferralStatusLookup();
		bindcmbNewConditionBackToGPLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbInternalReferralStatusLookup();
		bindcmbNewConditionBackToGPLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbInternalReferralStatusLookupValue();
		defaultcmbNewConditionBackToGPLookupValue();
	}
	private void onlyrMaintabPageServiceActivated()
	{
		this.form.lyrMain().showtabPageService();
		onlyrMainTabChanged(this.form.lyrMain().tabPageService());
	}
	private void onlyrMaintabPageInternalReferralWorkflowActivated()
	{
		this.form.lyrMain().showtabPageInternalReferralWorkflow();
		onlyrMainTabChanged(this.form.lyrMain().tabPageInternalReferralWorkflow());
	}
	private void onlyrMaintabPageInternalReferralSettingsActivated()
	{
		this.form.lyrMain().showtabPageInternalReferralSettings();
		onlyrMainTabChanged(this.form.lyrMain().tabPageInternalReferralSettings());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	public abstract void clearContextInformation();
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
