//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Bogdan Tofei using IMS Development Environment (version 1.80 build 4847.21738)
// Copyright (C) 1995-2013 IMS MAXIMS. All rights reserved.

package ims.eas.forms.easstatushistory;

import ims.eas.forms.easstatushistory.GenForm.grdEASStatusHistoryRow;
import ims.eas.vo.EASStatusRecordVoCollection;
import ims.framework.enumerations.DialogResult;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		populateScreenFromData();
	}

	private void populateScreenFromData()
	{
		EASStatusRecordVoCollection statuses = form.getGlobalContext().EAS.getEasStatusHistory();

		if (statuses == null || statuses.size() == 0)
			return;

		for (int i = 0; i < statuses.size(); i++)
		{
			grdEASStatusHistoryRow newRow = form.grdEASStatusHistory().getRows().newRow();

			newRow.setColDate(statuses.get(i).getRecordingDateTime() != null ? statuses.get(i).getRecordingDateTime().toString() : "");
			newRow.setColStatus(statuses.get(i).getStatus() != null ? statuses.get(i).getStatus().getText() : "");
			newRow.setColUser(statuses.get(i).getRecordingMos() != null ? statuses.get(i).getRecordingMos().getIMosName() : "");
			newRow.setTooltipForColUser(statuses.get(i).getRecordingMos() != null ? statuses.get(i).getRecordingMos().getIMosName() : "");
			newRow.setColTpCreated(Boolean.TRUE.equals(statuses.get(i).getTPCreated()) ? Boolean.TRUE : Boolean.FALSE);
			newRow.setColActionRequired(Boolean.TRUE.equals(statuses.get(i).getActionRequired()) ? Boolean.TRUE : Boolean.FALSE);
			newRow.setColRemoved(Boolean.TRUE.equals(statuses.get(i).getRemovedStat()) ? Boolean.TRUE : Boolean.FALSE);
			newRow.setColComment(statuses.get(i).getComment() != null ? statuses.get(i).getComment() : "");
			newRow.setColRemovalReason(statuses.get(i).getRemovalReason() != null ? statuses.get(i).getRemovalReason().getText() : "");
			newRow.setValue(statuses.get(i));
		}
	}

	@Override
	protected void onBtnOkClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.OK);
	}
}
