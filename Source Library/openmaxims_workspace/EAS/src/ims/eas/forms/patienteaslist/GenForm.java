//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.eas.forms.patienteaslist;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class grdEasListRow extends GridRowBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected grdEasListRow(GridRow row)
		{
			super(row);
		}
		public void showOpened(int column)
		{
			super.row.showOpened(column);
		}
		public void setColDateSeenReadOnly(boolean value)
		{
			super.row.setReadOnly(0, value);
		}
		public boolean isColDateSeenReadOnly()
		{
			return super.row.isReadOnly(0);
		}
		public void showColDateSeenOpened()
		{
			super.row.showOpened(0);
		}
		public void setTooltipForColDateSeen(String value)
		{
			super.row.setTooltip(0, value);
		}
		public String getColDateSeen()
		{
			return (String)super.row.get(0);
		}
		public void setColDateSeen(String value)
		{
			super.row.set(0, value);
		}
		public void setCellColDateSeenTooltip(String value)
		{
			super.row.setTooltip(0, value);
		}
		public void setColResponsibleHCPReadOnly(boolean value)
		{
			super.row.setReadOnly(1, value);
		}
		public boolean isColResponsibleHCPReadOnly()
		{
			return super.row.isReadOnly(1);
		}
		public void showColResponsibleHCPOpened()
		{
			super.row.showOpened(1);
		}
		public void setTooltipForColResponsibleHCP(String value)
		{
			super.row.setTooltip(1, value);
		}
		public String getColResponsibleHCP()
		{
			return (String)super.row.get(1);
		}
		public void setColResponsibleHCP(String value)
		{
			super.row.set(1, value);
		}
		public void setCellColResponsibleHCPTooltip(String value)
		{
			super.row.setTooltip(1, value);
		}
		public void setColTreatmentIntentReadOnly(boolean value)
		{
			super.row.setReadOnly(2, value);
		}
		public boolean isColTreatmentIntentReadOnly()
		{
			return super.row.isReadOnly(2);
		}
		public void showColTreatmentIntentOpened()
		{
			super.row.showOpened(2);
		}
		public void setTooltipForColTreatmentIntent(String value)
		{
			super.row.setTooltip(2, value);
		}
		public String getColTreatmentIntent()
		{
			return (String)super.row.get(2);
		}
		public void setColTreatmentIntent(String value)
		{
			super.row.set(2, value);
		}
		public void setCellColTreatmentIntentTooltip(String value)
		{
			super.row.setTooltip(2, value);
		}
		public void setColPrimaryTumourReadOnly(boolean value)
		{
			super.row.setReadOnly(3, value);
		}
		public boolean isColPrimaryTumourReadOnly()
		{
			return super.row.isReadOnly(3);
		}
		public void showColPrimaryTumourOpened()
		{
			super.row.showOpened(3);
		}
		public void setTooltipForColPrimaryTumour(String value)
		{
			super.row.setTooltip(3, value);
		}
		public String getColPrimaryTumour()
		{
			return (String)super.row.get(3);
		}
		public void setColPrimaryTumour(String value)
		{
			super.row.set(3, value);
		}
		public void setCellColPrimaryTumourTooltip(String value)
		{
			super.row.setTooltip(3, value);
		}
		public void setColTreatmentSiteReadOnly(boolean value)
		{
			super.row.setReadOnly(4, value);
		}
		public boolean isColTreatmentSiteReadOnly()
		{
			return super.row.isReadOnly(4);
		}
		public void showColTreatmentSiteOpened()
		{
			super.row.showOpened(4);
		}
		public void setTooltipForColTreatmentSite(String value)
		{
			super.row.setTooltip(4, value);
		}
		public String getColTreatmentSite()
		{
			return (String)super.row.get(4);
		}
		public void setColTreatmentSite(String value)
		{
			super.row.set(4, value);
		}
		public void setCellColTreatmentSiteTooltip(String value)
		{
			super.row.setTooltip(4, value);
		}
		public void setColDateRecordedReadOnly(boolean value)
		{
			super.row.setReadOnly(5, value);
		}
		public boolean isColDateRecordedReadOnly()
		{
			return super.row.isReadOnly(5);
		}
		public void showColDateRecordedOpened()
		{
			super.row.showOpened(5);
		}
		public void setTooltipForColDateRecorded(String value)
		{
			super.row.setTooltip(5, value);
		}
		public String getColDateRecorded()
		{
			return (String)super.row.get(5);
		}
		public void setColDateRecorded(String value)
		{
			super.row.set(5, value);
		}
		public void setCellColDateRecordedTooltip(String value)
		{
			super.row.setTooltip(5, value);
		}
		public void setColRecordedByReadOnly(boolean value)
		{
			super.row.setReadOnly(6, value);
		}
		public boolean isColRecordedByReadOnly()
		{
			return super.row.isReadOnly(6);
		}
		public void showColRecordedByOpened()
		{
			super.row.showOpened(6);
		}
		public void setTooltipForColRecordedBy(String value)
		{
			super.row.setTooltip(6, value);
		}
		public String getColRecordedBy()
		{
			return (String)super.row.get(6);
		}
		public void setColRecordedBy(String value)
		{
			super.row.set(6, value);
		}
		public void setCellColRecordedByTooltip(String value)
		{
			super.row.setTooltip(6, value);
		}
		public void setColEasStatusReadOnly(boolean value)
		{
			super.row.setReadOnly(7, value);
		}
		public boolean isColEasStatusReadOnly()
		{
			return super.row.isReadOnly(7);
		}
		public void showColEasStatusOpened()
		{
			super.row.showOpened(7);
		}
		public void setTooltipForColEasStatus(String value)
		{
			super.row.setTooltip(7, value);
		}
		public String getColEasStatus()
		{
			return (String)super.row.get(7);
		}
		public void setColEasStatus(String value)
		{
			super.row.set(7, value);
		}
		public void setCellColEasStatusTooltip(String value)
		{
			super.row.setTooltip(7, value);
		}
		public void setColTpIndicatorReadOnly(boolean value)
		{
			super.row.setReadOnly(8, value);
		}
		public boolean isColTpIndicatorReadOnly()
		{
			return super.row.isReadOnly(8);
		}
		public void showColTpIndicatorOpened()
		{
			super.row.showOpened(8);
		}
		public void setTooltipForColTpIndicator(String value)
		{
			super.row.setTooltip(8, value);
		}
		public boolean getColTpIndicator()
		{
			return ((Boolean)super.row.get(8)).booleanValue();
		}
		public void setColTpIndicator(boolean value)
		{
			super.row.set(8, new Boolean(value));
		}
		public void setCellColTpIndicatorTooltip(String value)
		{
			super.row.setTooltip(8, value);
		}
		public ims.eas.vo.PatientEasListVo getValue()
		{
			return (ims.eas.vo.PatientEasListVo)super.row.getValue();
		}
		public void setValue(ims.eas.vo.PatientEasListVo value)
		{
			super.row.setValue(value);
		}
	}
	public static class grdEasListRowCollection extends GridRowCollectionBridge
	{
		private static final long serialVersionUID = 1L;
		
		private grdEasListRowCollection(GridRowCollection collection)
		{
			super(collection);
		}
		public grdEasListRow get(int index)
		{
			return new grdEasListRow(super.collection.get(index));
		}
		public grdEasListRow newRow()
		{
			return new grdEasListRow(super.collection.newRow());
		}
		public grdEasListRow newRow(boolean autoSelect)
		{
			return new grdEasListRow(super.collection.newRow(autoSelect));
		}
		public grdEasListRow newRowAt(int index)
		{
			return new grdEasListRow(super.collection.newRowAt(index));
		}
		public grdEasListRow newRowAt(int index, boolean autoSelect)
		{
			return new grdEasListRow(super.collection.newRowAt(index, autoSelect));
		}
	}
	public static class grdEasListGrid extends GridBridge
	{
		private static final long serialVersionUID = 1L;
		
		private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
		{
			super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
		}
		private void addBoolColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean autoPostBack, int sortOrder, boolean canGrow)
		{
			super.grid.addBoolColumn(caption, captionAlignment, alignment, width, readOnly, autoPostBack, sortOrder, canGrow);
		}
		public ims.eas.vo.PatientEasListVoCollection getValues()
		{
			ims.eas.vo.PatientEasListVoCollection listOfValues = new ims.eas.vo.PatientEasListVoCollection();
			for(int x = 0; x < this.getRows().size(); x++)
			{
				listOfValues.add(this.getRows().get(x).getValue());
			}
			return listOfValues;
		}
		public ims.eas.vo.PatientEasListVo getValue()
		{
			return (ims.eas.vo.PatientEasListVo)super.grid.getValue();
		}
		public void setValue(ims.eas.vo.PatientEasListVo value)
		{
			super.grid.setValue(value);
		}
		public grdEasListRow getSelectedRow()
		{
			return super.grid.getSelectedRow() == null ? null : new grdEasListRow(super.grid.getSelectedRow());
		}
		public int getSelectedRowIndex()
		{
			return super.grid.getSelectedRowIndex();
		}
		public grdEasListRowCollection getRows()
		{
			return new grdEasListRowCollection(super.grid.getRows());
		}
		public grdEasListRow getRowByValue(ims.eas.vo.PatientEasListVo value)
		{
			GridRow row = super.grid.getRowByValue(value);
			return row == null?null:new grdEasListRow(row);
		}
		public void setColDateSeenHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(0, value);
		}
		public String getColDateSeenHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(0);
		}
		public void setColResponsibleHCPHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(1, value);
		}
		public String getColResponsibleHCPHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(1);
		}
		public void setColTreatmentIntentHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(2, value);
		}
		public String getColTreatmentIntentHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(2);
		}
		public void setColPrimaryTumourHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(3, value);
		}
		public String getColPrimaryTumourHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(3);
		}
		public void setColTreatmentSiteHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(4, value);
		}
		public String getColTreatmentSiteHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(4);
		}
		public void setColDateRecordedHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(5, value);
		}
		public String getColDateRecordedHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(5);
		}
		public void setColRecordedByHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(6, value);
		}
		public String getColRecordedByHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(6);
		}
		public void setColEasStatusHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(7, value);
		}
		public String getColEasStatusHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(7);
		}
		public void setColTpIndicatorHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(8, value);
		}
		public String getColTpIndicatorHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(8);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
		if(!context.isValidContextType(ims.eas.vo.PatientEASListSearchCriteriaVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.eas.vo.PatientEASListSearchCriteriaVo' of the global context variable 'EAS.PatientEASListSearchCriteria' is not supported.");
	}
	private void validateMandatoryContext(Context context)
	{
		if(new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort").getValueIsNull(context))
			throw new ims.framework.exceptions.FormMandatoryContextMissingException("The required context data 'Core.PatientShort' is not available.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
			validateMandatoryContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.EAS.contextMenuPatientEasListMenu = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.EAS.contextMenuPatientEasListMenuNEWItem = factory.createMenuItem(startControlID.intValue() + 1, "New", true, false, new Integer(102149), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140001)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuNEWItem);
		contextMenus.EAS.contextMenuPatientEasListMenuVIEWItem = factory.createMenuItem(startControlID.intValue() + 2, "View", true, false, new Integer(103152), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140002)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuVIEWItem);
		contextMenus.EAS.contextMenuPatientEasListMenuVIEW_SUMMARYItem = factory.createMenuItem(startControlID.intValue() + 3, "View Summary", true, false, new Integer(102240), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140003)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuVIEW_SUMMARYItem);
		contextMenus.EAS.contextMenuPatientEasListMenuEDITItem = factory.createMenuItem(startControlID.intValue() + 4, "Edit", true, false, new Integer(102150), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140004)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuEDITItem);
		contextMenus.EAS.contextMenuPatientEasListMenuCANCELItem = factory.createMenuItem(startControlID.intValue() + 5, "Cancel", true, false, new Integer(103421), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140005)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuCANCELItem);
		contextMenus.EAS.contextMenuPatientEasListMenuPRINTItem = factory.createMenuItem(startControlID.intValue() + 6, "Print", true, false, new Integer(102556), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140006)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuPRINTItem);
		contextMenus.EAS.contextMenuPatientEasListMenuAUTHORISEItem = factory.createMenuItem(startControlID.intValue() + 7, "Authorise", true, false, new Integer(111154), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140007)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuAUTHORISEItem);
		contextMenus.EAS.contextMenuPatientEasListMenuANNOTATEItem = factory.createMenuItem(startControlID.intValue() + 8, "Annotate", true, false, new Integer(111107), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140008)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuANNOTATEItem);
		contextMenus.EAS.contextMenuPatientEasListMenuVIEW_HISTORYItem = factory.createMenuItem(startControlID.intValue() + 9, "View History", true, false, new Integer(129100), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5140009)))
			contextMenus.EAS.contextMenuPatientEasListMenu.add(contextMenus.EAS.contextMenuPatientEasListMenuVIEW_HISTORYItem);
		form.registerMenu(contextMenus.EAS.contextMenuPatientEasListMenu);


		// CheckBox Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 8, 13, 128, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Show Cancelled EAS", Boolean.TRUE, null}));

		// Grid Controls
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 8, 40, 832, 584, ims.framework.enumerations.ControlAnchoring.ALL);
		Grid m_grdEasListTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.READONLY, ControlState.READONLY, ims.framework.enumerations.ControlAnchoring.ALL,Boolean.TRUE, Boolean.FALSE, new Integer(24), Boolean.TRUE, contextMenus.EAS.contextMenuPatientEasListMenu, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.TRUE});
		addControl(m_grdEasListTemp);
		grdEasListGrid grdEasList = (grdEasListGrid)GridFlyweightFactory.getInstance().createGridBridge(grdEasListGrid.class, m_grdEasListTemp);
		grdEasList.addStringColumn("Date Seen", 0, 0, 73, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdEasList.addStringColumn("Responsible HCP", 0, 0, 112, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdEasList.addStringColumn("Treatment Intent", 0, 0, 113, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdEasList.addStringColumn("Primary Tumour", 0, 0, 104, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdEasList.addStringColumn("Treatment Site", 0, 0, 110, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdEasList.addStringColumn("Date Recorded", 0, 0, 92, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdEasList.addStringColumn("Recorded By", 0, 0, 100, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdEasList.addStringColumn("EAS Status", 0, 0, 100, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdEasList.addBoolColumn("TP", 1, 1, -1, true, false, 0, true);
		super.addGrid(grdEasList);
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}
	public CheckBox chkShowCancelledEAS()
	{
		return (CheckBox)super.getControl(0);
	}
	public grdEasListGrid grdEasList()
	{
		return (grdEasListGrid)super.getGrid(0);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			EAS = new EASForms();
		}
		public final class EASForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private EASForms()
			{
				PatientElectronicActionSheet = new LocalFormName(145108);
				CancellationReason = new LocalFormName(145116);
				EasStatusHistory = new LocalFormName(145114);
			}
			public final FormName PatientElectronicActionSheet;
			public final FormName CancellationReason;
			public final FormName EasStatusHistory;
		}

		public EASForms EAS;
	}

	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_selectedEAS = new ims.framework.ContextVariable("selectedEAS", prefix + "_lv_EAS.PatientEasList.__internal_x_context__selectedEAS_" + componentIdentifier + "");
			cxl_ElectronicActionSheet = new ims.framework.ContextVariable("ElectronicActionSheet", prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier + "");
		}
		
		public boolean getselectedEASIsNotNull()
		{
			return !cxl_selectedEAS.getValueIsNull(context);
		}
		public ims.eas.vo.PatientEasListVo getselectedEAS()
		{
			return (ims.eas.vo.PatientEasListVo)cxl_selectedEAS.getValue(context);
		}
		public void setselectedEAS(ims.eas.vo.PatientEasListVo value)
		{
			cxl_selectedEAS.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_selectedEAS = null;
		public boolean getElectronicActionSheetIsNotNull()
		{
			return !cxl_ElectronicActionSheet.getValueIsNull(context);
		}
		public ims.eas.vo.ElectronicActionSheetVo getElectronicActionSheet()
		{
			return (ims.eas.vo.ElectronicActionSheetVo)cxl_ElectronicActionSheet.getValue(context);
		}
		public void setElectronicActionSheet(ims.eas.vo.ElectronicActionSheetVo value)
		{
			cxl_ElectronicActionSheet.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ElectronicActionSheet = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public EASNamespace EAS = new EASNamespace();
		public final class EASNamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class PatientEasListMenu implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int NEW = 1;
				public static final int VIEW = 2;
				public static final int VIEW_SUMMARY = 3;
				public static final int EDIT = 4;
				public static final int CANCEL = 5;
				public static final int PRINT = 6;
				public static final int AUTHORISE = 7;
				public static final int ANNOTATE = 8;
				public static final int VIEW_HISTORY = 9;
			}
			public void disableAllPatientEasListMenuMenuItems()
			{
				this.contextMenuPatientEasListMenuNEWItem.setEnabled(false);
				this.contextMenuPatientEasListMenuVIEWItem.setEnabled(false);
				this.contextMenuPatientEasListMenuVIEW_SUMMARYItem.setEnabled(false);
				this.contextMenuPatientEasListMenuEDITItem.setEnabled(false);
				this.contextMenuPatientEasListMenuCANCELItem.setEnabled(false);
				this.contextMenuPatientEasListMenuPRINTItem.setEnabled(false);
				this.contextMenuPatientEasListMenuAUTHORISEItem.setEnabled(false);
				this.contextMenuPatientEasListMenuANNOTATEItem.setEnabled(false);
				this.contextMenuPatientEasListMenuVIEW_HISTORYItem.setEnabled(false);
			}
			public void hideAllPatientEasListMenuMenuItems()
			{
				this.contextMenuPatientEasListMenuNEWItem.setVisible(false);
				this.contextMenuPatientEasListMenuVIEWItem.setVisible(false);
				this.contextMenuPatientEasListMenuVIEW_SUMMARYItem.setVisible(false);
				this.contextMenuPatientEasListMenuEDITItem.setVisible(false);
				this.contextMenuPatientEasListMenuCANCELItem.setVisible(false);
				this.contextMenuPatientEasListMenuPRINTItem.setVisible(false);
				this.contextMenuPatientEasListMenuAUTHORISEItem.setVisible(false);
				this.contextMenuPatientEasListMenuANNOTATEItem.setVisible(false);
				this.contextMenuPatientEasListMenuVIEW_HISTORYItem.setVisible(false);
			}
			private Menu contextMenuPatientEasListMenu;
			public ReadOnlyMenuItem getPatientEasListMenuNEWItem()
			{
				return this.contextMenuPatientEasListMenuNEWItem;
			}
			private MenuItem contextMenuPatientEasListMenuNEWItem;
			public ReadOnlyMenuItem getPatientEasListMenuVIEWItem()
			{
				return this.contextMenuPatientEasListMenuVIEWItem;
			}
			private MenuItem contextMenuPatientEasListMenuVIEWItem;
			public ReadOnlyMenuItem getPatientEasListMenuVIEW_SUMMARYItem()
			{
				return this.contextMenuPatientEasListMenuVIEW_SUMMARYItem;
			}
			private MenuItem contextMenuPatientEasListMenuVIEW_SUMMARYItem;
			public ReadOnlyMenuItem getPatientEasListMenuEDITItem()
			{
				return this.contextMenuPatientEasListMenuEDITItem;
			}
			private MenuItem contextMenuPatientEasListMenuEDITItem;
			public ReadOnlyMenuItem getPatientEasListMenuCANCELItem()
			{
				return this.contextMenuPatientEasListMenuCANCELItem;
			}
			private MenuItem contextMenuPatientEasListMenuCANCELItem;
			public ReadOnlyMenuItem getPatientEasListMenuPRINTItem()
			{
				return this.contextMenuPatientEasListMenuPRINTItem;
			}
			private MenuItem contextMenuPatientEasListMenuPRINTItem;
			public ReadOnlyMenuItem getPatientEasListMenuAUTHORISEItem()
			{
				return this.contextMenuPatientEasListMenuAUTHORISEItem;
			}
			private MenuItem contextMenuPatientEasListMenuAUTHORISEItem;
			public ReadOnlyMenuItem getPatientEasListMenuANNOTATEItem()
			{
				return this.contextMenuPatientEasListMenuANNOTATEItem;
			}
			private MenuItem contextMenuPatientEasListMenuANNOTATEItem;
			public ReadOnlyMenuItem getPatientEasListMenuVIEW_HISTORYItem()
			{
				return this.contextMenuPatientEasListMenuVIEW_HISTORYItem;
			}
			private MenuItem contextMenuPatientEasListMenuVIEW_HISTORYItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[256];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-ID", "ID_ElectronicActionSheet");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PATIENT", "Patient");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-AUTHORISEDDATETIME", "AuthorisedDateTime");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-TPCREATED", "TPCreated");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-ACTIONREQUIRED", "ActionRequired");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-REMOVEDSTAT", "RemovedStat");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-REMOVALREASON", "RemovalReason");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-DATESEEN", "DateSeen");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-DATEDECISIONTOTREAT", "DateDecisionToTreat");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-FIRSTTHERAPEUTICINTERVENTION", "FirstTherapeuticIntervention");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-CLINICALTRIALPATIENT", "ClinicalTrialPatient");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PROTOCOLUSED", "ProtocolUsed");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PATIENTCONSENT", "PatientConsent");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PLANCONSSESSION", "PlanConsSession");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-APPROPCCCL", "AppropCCCL");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-IMAGETRANSFER", "ImageTransfer");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-CONCURRENTSYSTEMICTREATMENT", "ConcurrentSystemicTreatment");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-SEENAT", "SeenAt");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-INTENT", "Intent");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PRIORITY", "Priority");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-DELAYED", "Delayed");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-DELAYEDCOMMENT", "DelayedComment");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-READYTOTREATDATE", "ReadyToTreatDate");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-DELAYEDREASON", "DelayedReason");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-TREATSITELATERALITY", "TreatSiteLaterality");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-ANATOMICALSITE", "AnatomicalSite");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-CLINICALTRIAL", "ClinicalTrial");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-OFFPROTOCOLREASON", "OffProtocolReason");
			fields[172] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-EASCOMMENT", "EasComment");
			fields[173] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PLANNINGCT", "PlanningCT");
			fields[174] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PLANNINGCTTEXT", "PlanningCTText");
			fields[175] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-MRIFORCOREG", "MRIforCoReg");
			fields[176] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-DENTISTREQUIRED", "DentistRequired");
			fields[177] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PEGREQUIRED", "PegRequired");
			fields[178] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-SIMULATIONREQUIRED", "SimulationRequired");
			fields[179] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-IVCONTRAST", "IVContrast");
			fields[180] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-INVESTIGATIONDATE", "InvestigationDate");
			fields[181] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-CREATININELEVEL", "CreatinineLevel");
			fields[182] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-GATINGOPTIONS", "GatingOptions");
			fields[183] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-IMRT", "IMRT");
			fields[184] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PETCT", "PetCT");
			fields[185] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-IMMOBTYPE", "ImmobType");
			fields[186] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-MOULDROOMACTIVITY", "MouldRoomActivity");
			fields[187] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-AGENT", "Agent");
			fields[188] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PLANNINGAPPTDATE", "PlanningApptDate");
			fields[189] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PLANNINGTRANSPORT", "PlanningTransport");
			fields[190] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-TREATMENTTRANSPORT", "TreatmentTransport");
			fields[191] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-IP_OP_PLANNING", "IP_OP_Planning");
			fields[192] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-IP_OP_TREATMENT", "IP_OP_Treatment");
			fields[193] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PATIENTSTATUS", "PatientStatus");
			fields[194] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-GRAPHICASSESSMENT", "GraphicAssessment");
			fields[195] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-RECENTCREATININE", "RecentCreatinine");
			fields[196] = new ims.framework.ReportField(this.context, "_cv_EAS.ElectronicActionSheet", "BO-1113100000-PLANNINGCTREQUIRED", "PlanningCTRequired");
			fields[197] = new ims.framework.ReportField(this.context, "_cv_Core.OutpatientAttendanceForOrder", "BO-1014100001-ID", "ID_OutpatientAttendance");
			fields[198] = new ims.framework.ReportField(this.context, "_cv_Core.OutpatientAttendanceForOrder", "BO-1014100001-APPOINTMENTDATETIME", "AppointmentDateTime");
			fields[199] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__selectedEAS_" + componentIdentifier, "BO-1113100000-ID", "ID_ElectronicActionSheet");
			fields[200] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__selectedEAS_" + componentIdentifier, "BO-1113100000-DATESEEN", "DateSeen");
			fields[201] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__selectedEAS_" + componentIdentifier, "BO-1113100000-INTENT", "Intent");
			fields[202] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__selectedEAS_" + componentIdentifier, "BO-1113100000-TPCREATED", "TPCreated");
			fields[203] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-ID", "ID_ElectronicActionSheet");
			fields[204] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PATIENT", "Patient");
			fields[205] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-AUTHORISEDDATETIME", "AuthorisedDateTime");
			fields[206] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-TPCREATED", "TPCreated");
			fields[207] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-ACTIONREQUIRED", "ActionRequired");
			fields[208] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-REMOVEDSTAT", "RemovedStat");
			fields[209] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-REMOVALREASON", "RemovalReason");
			fields[210] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-DATESEEN", "DateSeen");
			fields[211] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-DATEDECISIONTOTREAT", "DateDecisionToTreat");
			fields[212] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-FIRSTTHERAPEUTICINTERVENTION", "FirstTherapeuticIntervention");
			fields[213] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-CLINICALTRIALPATIENT", "ClinicalTrialPatient");
			fields[214] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PROTOCOLUSED", "ProtocolUsed");
			fields[215] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PATIENTCONSENT", "PatientConsent");
			fields[216] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PLANCONSSESSION", "PlanConsSession");
			fields[217] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-APPROPCCCL", "AppropCCCL");
			fields[218] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-IMAGETRANSFER", "ImageTransfer");
			fields[219] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-CONCURRENTSYSTEMICTREATMENT", "ConcurrentSystemicTreatment");
			fields[220] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-SEENAT", "SeenAt");
			fields[221] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-INTENT", "Intent");
			fields[222] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PRIORITY", "Priority");
			fields[223] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-DELAYED", "Delayed");
			fields[224] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-DELAYEDCOMMENT", "DelayedComment");
			fields[225] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-READYTOTREATDATE", "ReadyToTreatDate");
			fields[226] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-DELAYEDREASON", "DelayedReason");
			fields[227] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-TREATSITELATERALITY", "TreatSiteLaterality");
			fields[228] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-ANATOMICALSITE", "AnatomicalSite");
			fields[229] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-CLINICALTRIAL", "ClinicalTrial");
			fields[230] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-OFFPROTOCOLREASON", "OffProtocolReason");
			fields[231] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-EASCOMMENT", "EasComment");
			fields[232] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PLANNINGCT", "PlanningCT");
			fields[233] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PLANNINGCTTEXT", "PlanningCTText");
			fields[234] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-MRIFORCOREG", "MRIforCoReg");
			fields[235] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-DENTISTREQUIRED", "DentistRequired");
			fields[236] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PEGREQUIRED", "PegRequired");
			fields[237] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-SIMULATIONREQUIRED", "SimulationRequired");
			fields[238] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-IVCONTRAST", "IVContrast");
			fields[239] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-INVESTIGATIONDATE", "InvestigationDate");
			fields[240] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-CREATININELEVEL", "CreatinineLevel");
			fields[241] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-GATINGOPTIONS", "GatingOptions");
			fields[242] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-IMRT", "IMRT");
			fields[243] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PETCT", "PetCT");
			fields[244] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-IMMOBTYPE", "ImmobType");
			fields[245] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-MOULDROOMACTIVITY", "MouldRoomActivity");
			fields[246] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-AGENT", "Agent");
			fields[247] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PLANNINGAPPTDATE", "PlanningApptDate");
			fields[248] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PLANNINGTRANSPORT", "PlanningTransport");
			fields[249] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-TREATMENTTRANSPORT", "TreatmentTransport");
			fields[250] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-IP_OP_PLANNING", "IP_OP_Planning");
			fields[251] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-IP_OP_TREATMENT", "IP_OP_Treatment");
			fields[252] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PATIENTSTATUS", "PatientStatus");
			fields[253] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-GRAPHICASSESSMENT", "GraphicAssessment");
			fields[254] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-RECENTCREATININE", "RecentCreatinine");
			fields[255] = new ims.framework.ReportField(this.context, prefix + "_lv_EAS.PatientEasList.__internal_x_context__ElectronicActionSheet_" + componentIdentifier, "BO-1113100000-PLANNINGCTREQUIRED", "PlanningCTRequired");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
