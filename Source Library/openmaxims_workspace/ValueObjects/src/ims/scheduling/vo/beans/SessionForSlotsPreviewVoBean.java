//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.vo.beans;

public class SessionForSlotsPreviewVoBean extends ims.vo.ValueObjectBean
{
	public SessionForSlotsPreviewVoBean()
	{
	}
	public SessionForSlotsPreviewVoBean(ims.scheduling.vo.SessionForSlotsPreviewVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.name = vo.getName();
		this.isfixed = vo.getIsFixed();
		this.sessiontype = vo.getSessionType() == null ? null : (ims.vo.LookupInstanceBean)vo.getSessionType().getBean();
		this.sessionslots = vo.getSessionSlots() == null ? null : vo.getSessionSlots().getBeanCollection();
		this.theatreslots = vo.getTheatreSlots() == null ? null : vo.getTheatreSlots().getBeanCollection();
		this.parentchildslots = vo.getParentChildSlots() == null ? null : vo.getParentChildSlots().getBeanCollection();
		this.slottype = vo.getSlotType() == null ? null : (ims.vo.LookupInstanceBean)vo.getSlotType().getBean();
		this.sessionactivities = vo.getSessionActivities() == null ? null : vo.getSessionActivities().getBeanCollection();
		this.sessiondate = vo.getSessionDate() == null ? null : (ims.framework.utils.beans.DateBean)vo.getSessionDate().getBean();
		this.theatreproceduresremaining = vo.getTheatreProceduresRemaining() == null ? null : (ims.scheduling.vo.beans.SessionTheatreProceduresForSlotsPreviewVoBean)vo.getTheatreProceduresRemaining().getBean();
		this.datesgeneratedfor = vo.getDatesGeneratedFor() == null ? null : ims.framework.utils.Date.getBeanArray(vo.getDatesGeneratedFor());
		this.sessionprofiletype = vo.getSessionProfileType() == null ? null : (ims.vo.LookupInstanceBean)vo.getSessionProfileType().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.scheduling.vo.SessionForSlotsPreviewVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.name = vo.getName();
		this.isfixed = vo.getIsFixed();
		this.sessiontype = vo.getSessionType() == null ? null : (ims.vo.LookupInstanceBean)vo.getSessionType().getBean();
		this.sessionslots = vo.getSessionSlots() == null ? null : vo.getSessionSlots().getBeanCollection();
		this.theatreslots = vo.getTheatreSlots() == null ? null : vo.getTheatreSlots().getBeanCollection();
		this.parentchildslots = vo.getParentChildSlots() == null ? null : vo.getParentChildSlots().getBeanCollection();
		this.slottype = vo.getSlotType() == null ? null : (ims.vo.LookupInstanceBean)vo.getSlotType().getBean();
		this.sessionactivities = vo.getSessionActivities() == null ? null : vo.getSessionActivities().getBeanCollection();
		this.sessiondate = vo.getSessionDate() == null ? null : (ims.framework.utils.beans.DateBean)vo.getSessionDate().getBean();
		this.theatreproceduresremaining = vo.getTheatreProceduresRemaining() == null ? null : (ims.scheduling.vo.beans.SessionTheatreProceduresForSlotsPreviewVoBean)vo.getTheatreProceduresRemaining().getBean(map);
		this.datesgeneratedfor = vo.getDatesGeneratedFor() == null ? null : ims.framework.utils.Date.getBeanArray(vo.getDatesGeneratedFor());
		this.sessionprofiletype = vo.getSessionProfileType() == null ? null : (ims.vo.LookupInstanceBean)vo.getSessionProfileType().getBean();
	}

	public ims.scheduling.vo.SessionForSlotsPreviewVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.scheduling.vo.SessionForSlotsPreviewVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.scheduling.vo.SessionForSlotsPreviewVo vo = null;
		if(map != null)
			vo = (ims.scheduling.vo.SessionForSlotsPreviewVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.scheduling.vo.SessionForSlotsPreviewVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public String getName()
	{
		return this.name;
	}
	public void setName(String value)
	{
		this.name = value;
	}
	public Boolean getIsFixed()
	{
		return this.isfixed;
	}
	public void setIsFixed(Boolean value)
	{
		this.isfixed = value;
	}
	public ims.vo.LookupInstanceBean getSessionType()
	{
		return this.sessiontype;
	}
	public void setSessionType(ims.vo.LookupInstanceBean value)
	{
		this.sessiontype = value;
	}
	public ims.scheduling.vo.beans.SessionSlotForPreviewVoBean[] getSessionSlots()
	{
		return this.sessionslots;
	}
	public void setSessionSlots(ims.scheduling.vo.beans.SessionSlotForPreviewVoBean[] value)
	{
		this.sessionslots = value;
	}
	public ims.scheduling.vo.beans.SessionTheatreTCISlotForPreviewVoBean[] getTheatreSlots()
	{
		return this.theatreslots;
	}
	public void setTheatreSlots(ims.scheduling.vo.beans.SessionTheatreTCISlotForPreviewVoBean[] value)
	{
		this.theatreslots = value;
	}
	public ims.scheduling.vo.beans.SessionParentChildSlotForPreviewVoBean[] getParentChildSlots()
	{
		return this.parentchildslots;
	}
	public void setParentChildSlots(ims.scheduling.vo.beans.SessionParentChildSlotForPreviewVoBean[] value)
	{
		this.parentchildslots = value;
	}
	public ims.vo.LookupInstanceBean getSlotType()
	{
		return this.slottype;
	}
	public void setSlotType(ims.vo.LookupInstanceBean value)
	{
		this.slottype = value;
	}
	public ims.scheduling.vo.beans.SessionActivityLiteVoBean[] getSessionActivities()
	{
		return this.sessionactivities;
	}
	public void setSessionActivities(ims.scheduling.vo.beans.SessionActivityLiteVoBean[] value)
	{
		this.sessionactivities = value;
	}
	public ims.framework.utils.beans.DateBean getSessionDate()
	{
		return this.sessiondate;
	}
	public void setSessionDate(ims.framework.utils.beans.DateBean value)
	{
		this.sessiondate = value;
	}
	public ims.scheduling.vo.beans.SessionTheatreProceduresForSlotsPreviewVoBean getTheatreProceduresRemaining()
	{
		return this.theatreproceduresremaining;
	}
	public void setTheatreProceduresRemaining(ims.scheduling.vo.beans.SessionTheatreProceduresForSlotsPreviewVoBean value)
	{
		this.theatreproceduresremaining = value;
	}
	public ims.framework.utils.beans.DateBean[] getDatesGeneratedFor()
	{
		return this.datesgeneratedfor;
	}
	public void setDatesGeneratedFor(ims.framework.utils.beans.DateBean[] value)
	{
		this.datesgeneratedfor = value;
	}
	public ims.vo.LookupInstanceBean getSessionProfileType()
	{
		return this.sessionprofiletype;
	}
	public void setSessionProfileType(ims.vo.LookupInstanceBean value)
	{
		this.sessionprofiletype = value;
	}

	private Integer id;
	private int version;
	private String name;
	private Boolean isfixed;
	private ims.vo.LookupInstanceBean sessiontype;
	private ims.scheduling.vo.beans.SessionSlotForPreviewVoBean[] sessionslots;
	private ims.scheduling.vo.beans.SessionTheatreTCISlotForPreviewVoBean[] theatreslots;
	private ims.scheduling.vo.beans.SessionParentChildSlotForPreviewVoBean[] parentchildslots;
	private ims.vo.LookupInstanceBean slottype;
	private ims.scheduling.vo.beans.SessionActivityLiteVoBean[] sessionactivities;
	private ims.framework.utils.beans.DateBean sessiondate;
	private ims.scheduling.vo.beans.SessionTheatreProceduresForSlotsPreviewVoBean theatreproceduresremaining;
	private ims.framework.utils.beans.DateBean[] datesgeneratedfor;
	private ims.vo.LookupInstanceBean sessionprofiletype;
}
