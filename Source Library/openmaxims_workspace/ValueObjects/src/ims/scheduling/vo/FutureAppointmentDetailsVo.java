//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.vo;

/**
 * Linked to Scheduling.FutureAppointmentDetails business object (ID: 1090100021).
 */
public class FutureAppointmentDetailsVo extends ims.scheduling.vo.FutureAppointmentDetailsRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public FutureAppointmentDetailsVo()
	{
	}
	public FutureAppointmentDetailsVo(Integer id, int version)
	{
		super(id, version);
	}
	public FutureAppointmentDetailsVo(ims.scheduling.vo.beans.FutureAppointmentDetailsVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.appointments = bean.getAppointments() == null ? null : new ims.scheduling.vo.Booking_AppointmentRefVo(new Integer(bean.getAppointments().getId()), bean.getAppointments().getVersion());
		this.currentstatus = bean.getCurrentStatus() == null ? null : bean.getCurrentStatus().buildVo();
		this.statushistory = ims.RefMan.vo.FutureAppointmentStatusVoCollection.buildFromBeanCollection(bean.getStatusHistory());
		this.source = bean.getSource() == null ? null : ims.scheduling.vo.lookups.FutureAppointmentSource.buildLookup(bean.getSource());
		this.sameservice = bean.getSameService();
		this.sameday = bean.getSameDay();
		this.linkeddiagnostics = ims.RefMan.vo.LinkedDiagnosticVoCollection.buildFromBeanCollection(bean.getLinkedDiagnostics());
		this.requesttoschedule = bean.getRequestToSchedule() == null ? null : ims.scheduling.vo.lookups.RequestToSchedule.buildLookup(bean.getRequestToSchedule());
		this.startingweek = bean.getStartingWeek() == null ? null : bean.getStartingWeek().buildDate();
		this.mon = bean.getMon();
		this.tues = bean.getTues();
		this.wed = bean.getWed();
		this.thurs = bean.getThurs();
		this.fri = bean.getFri();
		this.sat = bean.getSat();
		this.sun = bean.getSun();
		this.comments = bean.getComments();
		this.referral = bean.getReferral() == null ? null : new ims.RefMan.vo.CatsReferralRefVo(new Integer(bean.getReferral().getId()), bean.getReferral().getVersion());
		this.numberoflinkedrecurringapptstobook = bean.getNumberOfLinkedRecurringApptsToBook();
		this.firstapptservice = bean.getFirstApptService() == null ? null : bean.getFirstApptService().buildVo();
		this.firstapptfunction = bean.getFirstApptFunction() == null ? null : ims.core.vo.lookups.ServiceFunction.buildLookup(bean.getFirstApptFunction());
		this.firstapptperiodvalue = bean.getFirstApptPeriodValue();
		this.firstapptperiodtype = bean.getFirstApptPeriodType() == null ? null : ims.core.vo.lookups.TimeUnitsSecondsToMonths.buildLookup(bean.getFirstApptPeriodType());
		this.firstapptfutureapptbydate = bean.getFirstApptFutureApptByDate() == null ? null : bean.getFirstApptFutureApptByDate().buildDate();
		this.firstappttosee = bean.getFirstApptToSee() == null ? null : bean.getFirstApptToSee().buildVo();
		this.secondapptservice = bean.getSecondApptService() == null ? null : bean.getSecondApptService().buildVo();
		this.secondapptfunction = bean.getSecondApptFunction() == null ? null : ims.core.vo.lookups.ServiceFunction.buildLookup(bean.getSecondApptFunction());
		this.secondapptperiodvalue = bean.getSecondApptPeriodValue();
		this.secondapptperiodtype = bean.getSecondApptPeriodType() == null ? null : ims.core.vo.lookups.TimeUnitsSecondsToMonths.buildLookup(bean.getSecondApptPeriodType());
		this.secondapptfutureapptbydate = bean.getSecondApptFutureApptByDate() == null ? null : bean.getSecondApptFutureApptByDate().buildDate();
		this.secondappttosee = bean.getSecondApptToSee() == null ? null : bean.getSecondApptToSee().buildVo();
		this.thirdapptservice = bean.getThirdApptService() == null ? null : bean.getThirdApptService().buildVo();
		this.thirdapptfunction = bean.getThirdApptFunction() == null ? null : ims.core.vo.lookups.ServiceFunction.buildLookup(bean.getThirdApptFunction());
		this.thirdapptperiodvalue = bean.getThirdApptPeriodValue();
		this.thirdapptperiodtype = bean.getThirdApptPeriodType() == null ? null : ims.core.vo.lookups.TimeUnitsSecondsToMonths.buildLookup(bean.getThirdApptPeriodType());
		this.thirdapptfutureapptbydate = bean.getThirdApptFutureApptByDate() == null ? null : bean.getThirdApptFutureApptByDate().buildDate();
		this.thirdapptosee = bean.getThirdAppToSee() == null ? null : bean.getThirdAppToSee().buildVo();
		this.recurring = bean.getRecurring() == null ? null : ims.RefMan.vo.lookups.Recurring.buildLookup(bean.getRecurring());
		this.endafternoccurrences = bean.getEndAfterNOccurrences();
		this.nooftimesperweek = bean.getNoOfTimesPerWeek();
		this.everynmonths = bean.getEveryNMonths();
		this.weekinthemonth = bean.getWeekInTheMonth() == null ? null : ims.RefMan.vo.lookups.WeekInTheMonth.buildLookup(bean.getWeekInTheMonth());
		this.futureappointmentcomments = bean.getFutureAppointmentComments();
		this.donotmovedate = bean.getDoNotMoveDate();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.scheduling.vo.beans.FutureAppointmentDetailsVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.appointments = bean.getAppointments() == null ? null : new ims.scheduling.vo.Booking_AppointmentRefVo(new Integer(bean.getAppointments().getId()), bean.getAppointments().getVersion());
		this.currentstatus = bean.getCurrentStatus() == null ? null : bean.getCurrentStatus().buildVo(map);
		this.statushistory = ims.RefMan.vo.FutureAppointmentStatusVoCollection.buildFromBeanCollection(bean.getStatusHistory());
		this.source = bean.getSource() == null ? null : ims.scheduling.vo.lookups.FutureAppointmentSource.buildLookup(bean.getSource());
		this.sameservice = bean.getSameService();
		this.sameday = bean.getSameDay();
		this.linkeddiagnostics = ims.RefMan.vo.LinkedDiagnosticVoCollection.buildFromBeanCollection(bean.getLinkedDiagnostics());
		this.requesttoschedule = bean.getRequestToSchedule() == null ? null : ims.scheduling.vo.lookups.RequestToSchedule.buildLookup(bean.getRequestToSchedule());
		this.startingweek = bean.getStartingWeek() == null ? null : bean.getStartingWeek().buildDate();
		this.mon = bean.getMon();
		this.tues = bean.getTues();
		this.wed = bean.getWed();
		this.thurs = bean.getThurs();
		this.fri = bean.getFri();
		this.sat = bean.getSat();
		this.sun = bean.getSun();
		this.comments = bean.getComments();
		this.referral = bean.getReferral() == null ? null : new ims.RefMan.vo.CatsReferralRefVo(new Integer(bean.getReferral().getId()), bean.getReferral().getVersion());
		this.numberoflinkedrecurringapptstobook = bean.getNumberOfLinkedRecurringApptsToBook();
		this.firstapptservice = bean.getFirstApptService() == null ? null : bean.getFirstApptService().buildVo(map);
		this.firstapptfunction = bean.getFirstApptFunction() == null ? null : ims.core.vo.lookups.ServiceFunction.buildLookup(bean.getFirstApptFunction());
		this.firstapptperiodvalue = bean.getFirstApptPeriodValue();
		this.firstapptperiodtype = bean.getFirstApptPeriodType() == null ? null : ims.core.vo.lookups.TimeUnitsSecondsToMonths.buildLookup(bean.getFirstApptPeriodType());
		this.firstapptfutureapptbydate = bean.getFirstApptFutureApptByDate() == null ? null : bean.getFirstApptFutureApptByDate().buildDate();
		this.firstappttosee = bean.getFirstApptToSee() == null ? null : bean.getFirstApptToSee().buildVo(map);
		this.secondapptservice = bean.getSecondApptService() == null ? null : bean.getSecondApptService().buildVo(map);
		this.secondapptfunction = bean.getSecondApptFunction() == null ? null : ims.core.vo.lookups.ServiceFunction.buildLookup(bean.getSecondApptFunction());
		this.secondapptperiodvalue = bean.getSecondApptPeriodValue();
		this.secondapptperiodtype = bean.getSecondApptPeriodType() == null ? null : ims.core.vo.lookups.TimeUnitsSecondsToMonths.buildLookup(bean.getSecondApptPeriodType());
		this.secondapptfutureapptbydate = bean.getSecondApptFutureApptByDate() == null ? null : bean.getSecondApptFutureApptByDate().buildDate();
		this.secondappttosee = bean.getSecondApptToSee() == null ? null : bean.getSecondApptToSee().buildVo(map);
		this.thirdapptservice = bean.getThirdApptService() == null ? null : bean.getThirdApptService().buildVo(map);
		this.thirdapptfunction = bean.getThirdApptFunction() == null ? null : ims.core.vo.lookups.ServiceFunction.buildLookup(bean.getThirdApptFunction());
		this.thirdapptperiodvalue = bean.getThirdApptPeriodValue();
		this.thirdapptperiodtype = bean.getThirdApptPeriodType() == null ? null : ims.core.vo.lookups.TimeUnitsSecondsToMonths.buildLookup(bean.getThirdApptPeriodType());
		this.thirdapptfutureapptbydate = bean.getThirdApptFutureApptByDate() == null ? null : bean.getThirdApptFutureApptByDate().buildDate();
		this.thirdapptosee = bean.getThirdAppToSee() == null ? null : bean.getThirdAppToSee().buildVo(map);
		this.recurring = bean.getRecurring() == null ? null : ims.RefMan.vo.lookups.Recurring.buildLookup(bean.getRecurring());
		this.endafternoccurrences = bean.getEndAfterNOccurrences();
		this.nooftimesperweek = bean.getNoOfTimesPerWeek();
		this.everynmonths = bean.getEveryNMonths();
		this.weekinthemonth = bean.getWeekInTheMonth() == null ? null : ims.RefMan.vo.lookups.WeekInTheMonth.buildLookup(bean.getWeekInTheMonth());
		this.futureappointmentcomments = bean.getFutureAppointmentComments();
		this.donotmovedate = bean.getDoNotMoveDate();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.scheduling.vo.beans.FutureAppointmentDetailsVoBean bean = null;
		if(map != null)
			bean = (ims.scheduling.vo.beans.FutureAppointmentDetailsVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.scheduling.vo.beans.FutureAppointmentDetailsVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("APPOINTMENTS"))
			return getAppointments();
		if(fieldName.equals("CURRENTSTATUS"))
			return getCurrentStatus();
		if(fieldName.equals("STATUSHISTORY"))
			return getStatusHistory();
		if(fieldName.equals("SOURCE"))
			return getSource();
		if(fieldName.equals("SAMESERVICE"))
			return getSameService();
		if(fieldName.equals("SAMEDAY"))
			return getSameDay();
		if(fieldName.equals("LINKEDDIAGNOSTICS"))
			return getLinkedDiagnostics();
		if(fieldName.equals("REQUESTTOSCHEDULE"))
			return getRequestToSchedule();
		if(fieldName.equals("STARTINGWEEK"))
			return getStartingWeek();
		if(fieldName.equals("MON"))
			return getMon();
		if(fieldName.equals("TUES"))
			return getTues();
		if(fieldName.equals("WED"))
			return getWed();
		if(fieldName.equals("THURS"))
			return getThurs();
		if(fieldName.equals("FRI"))
			return getFri();
		if(fieldName.equals("SAT"))
			return getSat();
		if(fieldName.equals("SUN"))
			return getSun();
		if(fieldName.equals("COMMENTS"))
			return getComments();
		if(fieldName.equals("REFERRAL"))
			return getReferral();
		if(fieldName.equals("NUMBEROFLINKEDRECURRINGAPPTSTOBOOK"))
			return getNumberOfLinkedRecurringApptsToBook();
		if(fieldName.equals("FIRSTAPPTSERVICE"))
			return getFirstApptService();
		if(fieldName.equals("FIRSTAPPTFUNCTION"))
			return getFirstApptFunction();
		if(fieldName.equals("FIRSTAPPTPERIODVALUE"))
			return getFirstApptPeriodValue();
		if(fieldName.equals("FIRSTAPPTPERIODTYPE"))
			return getFirstApptPeriodType();
		if(fieldName.equals("FIRSTAPPTFUTUREAPPTBYDATE"))
			return getFirstApptFutureApptByDate();
		if(fieldName.equals("FIRSTAPPTTOSEE"))
			return getFirstApptToSee();
		if(fieldName.equals("SECONDAPPTSERVICE"))
			return getSecondApptService();
		if(fieldName.equals("SECONDAPPTFUNCTION"))
			return getSecondApptFunction();
		if(fieldName.equals("SECONDAPPTPERIODVALUE"))
			return getSecondApptPeriodValue();
		if(fieldName.equals("SECONDAPPTPERIODTYPE"))
			return getSecondApptPeriodType();
		if(fieldName.equals("SECONDAPPTFUTUREAPPTBYDATE"))
			return getSecondApptFutureApptByDate();
		if(fieldName.equals("SECONDAPPTTOSEE"))
			return getSecondApptToSee();
		if(fieldName.equals("THIRDAPPTSERVICE"))
			return getThirdApptService();
		if(fieldName.equals("THIRDAPPTFUNCTION"))
			return getThirdApptFunction();
		if(fieldName.equals("THIRDAPPTPERIODVALUE"))
			return getThirdApptPeriodValue();
		if(fieldName.equals("THIRDAPPTPERIODTYPE"))
			return getThirdApptPeriodType();
		if(fieldName.equals("THIRDAPPTFUTUREAPPTBYDATE"))
			return getThirdApptFutureApptByDate();
		if(fieldName.equals("THIRDAPPTOSEE"))
			return getThirdAppToSee();
		if(fieldName.equals("RECURRING"))
			return getRecurring();
		if(fieldName.equals("ENDAFTERNOCCURRENCES"))
			return getEndAfterNOccurrences();
		if(fieldName.equals("NOOFTIMESPERWEEK"))
			return getNoOfTimesPerWeek();
		if(fieldName.equals("EVERYNMONTHS"))
			return getEveryNMonths();
		if(fieldName.equals("WEEKINTHEMONTH"))
			return getWeekInTheMonth();
		if(fieldName.equals("FUTUREAPPOINTMENTCOMMENTS"))
			return getFutureAppointmentComments();
		if(fieldName.equals("DONOTMOVEDATE"))
			return getDoNotMoveDate();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getAppointmentsIsNotNull()
	{
		return this.appointments != null;
	}
	public ims.scheduling.vo.Booking_AppointmentRefVo getAppointments()
	{
		return this.appointments;
	}
	public void setAppointments(ims.scheduling.vo.Booking_AppointmentRefVo value)
	{
		this.isValidated = false;
		this.appointments = value;
	}
	public boolean getCurrentStatusIsNotNull()
	{
		return this.currentstatus != null;
	}
	public ims.RefMan.vo.FutureAppointmentStatusVo getCurrentStatus()
	{
		return this.currentstatus;
	}
	public void setCurrentStatus(ims.RefMan.vo.FutureAppointmentStatusVo value)
	{
		this.isValidated = false;
		this.currentstatus = value;
	}
	public boolean getStatusHistoryIsNotNull()
	{
		return this.statushistory != null;
	}
	public ims.RefMan.vo.FutureAppointmentStatusVoCollection getStatusHistory()
	{
		return this.statushistory;
	}
	public void setStatusHistory(ims.RefMan.vo.FutureAppointmentStatusVoCollection value)
	{
		this.isValidated = false;
		this.statushistory = value;
	}
	public boolean getSourceIsNotNull()
	{
		return this.source != null;
	}
	public ims.scheduling.vo.lookups.FutureAppointmentSource getSource()
	{
		return this.source;
	}
	public void setSource(ims.scheduling.vo.lookups.FutureAppointmentSource value)
	{
		this.isValidated = false;
		this.source = value;
	}
	public boolean getSameServiceIsNotNull()
	{
		return this.sameservice != null;
	}
	public Boolean getSameService()
	{
		return this.sameservice;
	}
	public void setSameService(Boolean value)
	{
		this.isValidated = false;
		this.sameservice = value;
	}
	public boolean getSameDayIsNotNull()
	{
		return this.sameday != null;
	}
	public Boolean getSameDay()
	{
		return this.sameday;
	}
	public void setSameDay(Boolean value)
	{
		this.isValidated = false;
		this.sameday = value;
	}
	public boolean getLinkedDiagnosticsIsNotNull()
	{
		return this.linkeddiagnostics != null;
	}
	public ims.RefMan.vo.LinkedDiagnosticVoCollection getLinkedDiagnostics()
	{
		return this.linkeddiagnostics;
	}
	public void setLinkedDiagnostics(ims.RefMan.vo.LinkedDiagnosticVoCollection value)
	{
		this.isValidated = false;
		this.linkeddiagnostics = value;
	}
	public boolean getRequestToScheduleIsNotNull()
	{
		return this.requesttoschedule != null;
	}
	public ims.scheduling.vo.lookups.RequestToSchedule getRequestToSchedule()
	{
		return this.requesttoschedule;
	}
	public void setRequestToSchedule(ims.scheduling.vo.lookups.RequestToSchedule value)
	{
		this.isValidated = false;
		this.requesttoschedule = value;
	}
	public boolean getStartingWeekIsNotNull()
	{
		return this.startingweek != null;
	}
	public ims.framework.utils.Date getStartingWeek()
	{
		return this.startingweek;
	}
	public void setStartingWeek(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.startingweek = value;
	}
	public boolean getMonIsNotNull()
	{
		return this.mon != null;
	}
	public Boolean getMon()
	{
		return this.mon;
	}
	public void setMon(Boolean value)
	{
		this.isValidated = false;
		this.mon = value;
	}
	public boolean getTuesIsNotNull()
	{
		return this.tues != null;
	}
	public Boolean getTues()
	{
		return this.tues;
	}
	public void setTues(Boolean value)
	{
		this.isValidated = false;
		this.tues = value;
	}
	public boolean getWedIsNotNull()
	{
		return this.wed != null;
	}
	public Boolean getWed()
	{
		return this.wed;
	}
	public void setWed(Boolean value)
	{
		this.isValidated = false;
		this.wed = value;
	}
	public boolean getThursIsNotNull()
	{
		return this.thurs != null;
	}
	public Boolean getThurs()
	{
		return this.thurs;
	}
	public void setThurs(Boolean value)
	{
		this.isValidated = false;
		this.thurs = value;
	}
	public boolean getFriIsNotNull()
	{
		return this.fri != null;
	}
	public Boolean getFri()
	{
		return this.fri;
	}
	public void setFri(Boolean value)
	{
		this.isValidated = false;
		this.fri = value;
	}
	public boolean getSatIsNotNull()
	{
		return this.sat != null;
	}
	public Boolean getSat()
	{
		return this.sat;
	}
	public void setSat(Boolean value)
	{
		this.isValidated = false;
		this.sat = value;
	}
	public boolean getSunIsNotNull()
	{
		return this.sun != null;
	}
	public Boolean getSun()
	{
		return this.sun;
	}
	public void setSun(Boolean value)
	{
		this.isValidated = false;
		this.sun = value;
	}
	public boolean getCommentsIsNotNull()
	{
		return this.comments != null;
	}
	public String getComments()
	{
		return this.comments;
	}
	public static int getCommentsMaxLength()
	{
		return 5000;
	}
	public void setComments(String value)
	{
		this.isValidated = false;
		this.comments = value;
	}
	public boolean getReferralIsNotNull()
	{
		return this.referral != null;
	}
	public ims.RefMan.vo.CatsReferralRefVo getReferral()
	{
		return this.referral;
	}
	public void setReferral(ims.RefMan.vo.CatsReferralRefVo value)
	{
		this.isValidated = false;
		this.referral = value;
	}
	public boolean getNumberOfLinkedRecurringApptsToBookIsNotNull()
	{
		return this.numberoflinkedrecurringapptstobook != null;
	}
	public Integer getNumberOfLinkedRecurringApptsToBook()
	{
		return this.numberoflinkedrecurringapptstobook;
	}
	public void setNumberOfLinkedRecurringApptsToBook(Integer value)
	{
		this.isValidated = false;
		this.numberoflinkedrecurringapptstobook = value;
	}
	public boolean getFirstApptServiceIsNotNull()
	{
		return this.firstapptservice != null;
	}
	public ims.core.vo.ServiceLiteVo getFirstApptService()
	{
		return this.firstapptservice;
	}
	public void setFirstApptService(ims.core.vo.ServiceLiteVo value)
	{
		this.isValidated = false;
		this.firstapptservice = value;
	}
	public boolean getFirstApptFunctionIsNotNull()
	{
		return this.firstapptfunction != null;
	}
	public ims.core.vo.lookups.ServiceFunction getFirstApptFunction()
	{
		return this.firstapptfunction;
	}
	public void setFirstApptFunction(ims.core.vo.lookups.ServiceFunction value)
	{
		this.isValidated = false;
		this.firstapptfunction = value;
	}
	public boolean getFirstApptPeriodValueIsNotNull()
	{
		return this.firstapptperiodvalue != null;
	}
	public Integer getFirstApptPeriodValue()
	{
		return this.firstapptperiodvalue;
	}
	public void setFirstApptPeriodValue(Integer value)
	{
		this.isValidated = false;
		this.firstapptperiodvalue = value;
	}
	public boolean getFirstApptPeriodTypeIsNotNull()
	{
		return this.firstapptperiodtype != null;
	}
	public ims.core.vo.lookups.TimeUnitsSecondsToMonths getFirstApptPeriodType()
	{
		return this.firstapptperiodtype;
	}
	public void setFirstApptPeriodType(ims.core.vo.lookups.TimeUnitsSecondsToMonths value)
	{
		this.isValidated = false;
		this.firstapptperiodtype = value;
	}
	public boolean getFirstApptFutureApptByDateIsNotNull()
	{
		return this.firstapptfutureapptbydate != null;
	}
	public ims.framework.utils.Date getFirstApptFutureApptByDate()
	{
		return this.firstapptfutureapptbydate;
	}
	public void setFirstApptFutureApptByDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.firstapptfutureapptbydate = value;
	}
	public boolean getFirstApptToSeeIsNotNull()
	{
		return this.firstappttosee != null;
	}
	public ims.RefMan.vo.OPAVo getFirstApptToSee()
	{
		return this.firstappttosee;
	}
	public void setFirstApptToSee(ims.RefMan.vo.OPAVo value)
	{
		this.isValidated = false;
		this.firstappttosee = value;
	}
	public boolean getSecondApptServiceIsNotNull()
	{
		return this.secondapptservice != null;
	}
	public ims.core.vo.ServiceLiteVo getSecondApptService()
	{
		return this.secondapptservice;
	}
	public void setSecondApptService(ims.core.vo.ServiceLiteVo value)
	{
		this.isValidated = false;
		this.secondapptservice = value;
	}
	public boolean getSecondApptFunctionIsNotNull()
	{
		return this.secondapptfunction != null;
	}
	public ims.core.vo.lookups.ServiceFunction getSecondApptFunction()
	{
		return this.secondapptfunction;
	}
	public void setSecondApptFunction(ims.core.vo.lookups.ServiceFunction value)
	{
		this.isValidated = false;
		this.secondapptfunction = value;
	}
	public boolean getSecondApptPeriodValueIsNotNull()
	{
		return this.secondapptperiodvalue != null;
	}
	public Integer getSecondApptPeriodValue()
	{
		return this.secondapptperiodvalue;
	}
	public void setSecondApptPeriodValue(Integer value)
	{
		this.isValidated = false;
		this.secondapptperiodvalue = value;
	}
	public boolean getSecondApptPeriodTypeIsNotNull()
	{
		return this.secondapptperiodtype != null;
	}
	public ims.core.vo.lookups.TimeUnitsSecondsToMonths getSecondApptPeriodType()
	{
		return this.secondapptperiodtype;
	}
	public void setSecondApptPeriodType(ims.core.vo.lookups.TimeUnitsSecondsToMonths value)
	{
		this.isValidated = false;
		this.secondapptperiodtype = value;
	}
	public boolean getSecondApptFutureApptByDateIsNotNull()
	{
		return this.secondapptfutureapptbydate != null;
	}
	public ims.framework.utils.Date getSecondApptFutureApptByDate()
	{
		return this.secondapptfutureapptbydate;
	}
	public void setSecondApptFutureApptByDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.secondapptfutureapptbydate = value;
	}
	public boolean getSecondApptToSeeIsNotNull()
	{
		return this.secondappttosee != null;
	}
	public ims.RefMan.vo.OPAVo getSecondApptToSee()
	{
		return this.secondappttosee;
	}
	public void setSecondApptToSee(ims.RefMan.vo.OPAVo value)
	{
		this.isValidated = false;
		this.secondappttosee = value;
	}
	public boolean getThirdApptServiceIsNotNull()
	{
		return this.thirdapptservice != null;
	}
	public ims.core.vo.ServiceLiteVo getThirdApptService()
	{
		return this.thirdapptservice;
	}
	public void setThirdApptService(ims.core.vo.ServiceLiteVo value)
	{
		this.isValidated = false;
		this.thirdapptservice = value;
	}
	public boolean getThirdApptFunctionIsNotNull()
	{
		return this.thirdapptfunction != null;
	}
	public ims.core.vo.lookups.ServiceFunction getThirdApptFunction()
	{
		return this.thirdapptfunction;
	}
	public void setThirdApptFunction(ims.core.vo.lookups.ServiceFunction value)
	{
		this.isValidated = false;
		this.thirdapptfunction = value;
	}
	public boolean getThirdApptPeriodValueIsNotNull()
	{
		return this.thirdapptperiodvalue != null;
	}
	public Integer getThirdApptPeriodValue()
	{
		return this.thirdapptperiodvalue;
	}
	public void setThirdApptPeriodValue(Integer value)
	{
		this.isValidated = false;
		this.thirdapptperiodvalue = value;
	}
	public boolean getThirdApptPeriodTypeIsNotNull()
	{
		return this.thirdapptperiodtype != null;
	}
	public ims.core.vo.lookups.TimeUnitsSecondsToMonths getThirdApptPeriodType()
	{
		return this.thirdapptperiodtype;
	}
	public void setThirdApptPeriodType(ims.core.vo.lookups.TimeUnitsSecondsToMonths value)
	{
		this.isValidated = false;
		this.thirdapptperiodtype = value;
	}
	public boolean getThirdApptFutureApptByDateIsNotNull()
	{
		return this.thirdapptfutureapptbydate != null;
	}
	public ims.framework.utils.Date getThirdApptFutureApptByDate()
	{
		return this.thirdapptfutureapptbydate;
	}
	public void setThirdApptFutureApptByDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.thirdapptfutureapptbydate = value;
	}
	public boolean getThirdAppToSeeIsNotNull()
	{
		return this.thirdapptosee != null;
	}
	public ims.RefMan.vo.OPAVo getThirdAppToSee()
	{
		return this.thirdapptosee;
	}
	public void setThirdAppToSee(ims.RefMan.vo.OPAVo value)
	{
		this.isValidated = false;
		this.thirdapptosee = value;
	}
	public boolean getRecurringIsNotNull()
	{
		return this.recurring != null;
	}
	public ims.RefMan.vo.lookups.Recurring getRecurring()
	{
		return this.recurring;
	}
	public void setRecurring(ims.RefMan.vo.lookups.Recurring value)
	{
		this.isValidated = false;
		this.recurring = value;
	}
	public boolean getEndAfterNOccurrencesIsNotNull()
	{
		return this.endafternoccurrences != null;
	}
	public Integer getEndAfterNOccurrences()
	{
		return this.endafternoccurrences;
	}
	public void setEndAfterNOccurrences(Integer value)
	{
		this.isValidated = false;
		this.endafternoccurrences = value;
	}
	public boolean getNoOfTimesPerWeekIsNotNull()
	{
		return this.nooftimesperweek != null;
	}
	public Integer getNoOfTimesPerWeek()
	{
		return this.nooftimesperweek;
	}
	public void setNoOfTimesPerWeek(Integer value)
	{
		this.isValidated = false;
		this.nooftimesperweek = value;
	}
	public boolean getEveryNMonthsIsNotNull()
	{
		return this.everynmonths != null;
	}
	public Integer getEveryNMonths()
	{
		return this.everynmonths;
	}
	public void setEveryNMonths(Integer value)
	{
		this.isValidated = false;
		this.everynmonths = value;
	}
	public boolean getWeekInTheMonthIsNotNull()
	{
		return this.weekinthemonth != null;
	}
	public ims.RefMan.vo.lookups.WeekInTheMonth getWeekInTheMonth()
	{
		return this.weekinthemonth;
	}
	public void setWeekInTheMonth(ims.RefMan.vo.lookups.WeekInTheMonth value)
	{
		this.isValidated = false;
		this.weekinthemonth = value;
	}
	public boolean getFutureAppointmentCommentsIsNotNull()
	{
		return this.futureappointmentcomments != null;
	}
	public String getFutureAppointmentComments()
	{
		return this.futureappointmentcomments;
	}
	public static int getFutureAppointmentCommentsMaxLength()
	{
		return 750;
	}
	public void setFutureAppointmentComments(String value)
	{
		this.isValidated = false;
		this.futureappointmentcomments = value;
	}
	public boolean getDoNotMoveDateIsNotNull()
	{
		return this.donotmovedate != null;
	}
	public Boolean getDoNotMoveDate()
	{
		return this.donotmovedate;
	}
	public void setDoNotMoveDate(Boolean value)
	{
		this.isValidated = false;
		this.donotmovedate = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.currentstatus != null)
		{
			if(!this.currentstatus.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.statushistory != null)
		{
			if(!this.statushistory.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.linkeddiagnostics != null)
		{
			if(!this.linkeddiagnostics.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.firstappttosee != null)
		{
			if(!this.firstappttosee.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.secondappttosee != null)
		{
			if(!this.secondappttosee.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.thirdapptosee != null)
		{
			if(!this.thirdapptosee.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.currentstatus == null)
			listOfErrors.add("CurrentStatus is mandatory");
		if(this.currentstatus != null)
		{
			String[] listOfOtherErrors = this.currentstatus.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.statushistory == null || this.statushistory.size() == 0)
			listOfErrors.add("StatusHistory are mandatory");
		if(this.statushistory != null)
		{
			String[] listOfOtherErrors = this.statushistory.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.source == null)
			listOfErrors.add("Source is mandatory");
		if(this.linkeddiagnostics != null)
		{
			String[] listOfOtherErrors = this.linkeddiagnostics.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.requesttoschedule == null)
			listOfErrors.add("RequestToSchedule is mandatory");
		if(this.referral == null)
			listOfErrors.add("Referral is mandatory");
		if(this.firstappttosee != null)
		{
			String[] listOfOtherErrors = this.firstappttosee.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.secondappttosee != null)
		{
			String[] listOfOtherErrors = this.secondappttosee.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.thirdapptosee != null)
		{
			String[] listOfOtherErrors = this.thirdapptosee.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.futureappointmentcomments != null)
			if(this.futureappointmentcomments.length() > 750)
				listOfErrors.add("The length of the field [futureappointmentcomments] in the value object [ims.scheduling.vo.FutureAppointmentDetailsVo] is too big. It should be less or equal to 750");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		FutureAppointmentDetailsVo clone = new FutureAppointmentDetailsVo(this.id, this.version);
		
		clone.appointments = this.appointments;
		if(this.currentstatus == null)
			clone.currentstatus = null;
		else
			clone.currentstatus = (ims.RefMan.vo.FutureAppointmentStatusVo)this.currentstatus.clone();
		if(this.statushistory == null)
			clone.statushistory = null;
		else
			clone.statushistory = (ims.RefMan.vo.FutureAppointmentStatusVoCollection)this.statushistory.clone();
		if(this.source == null)
			clone.source = null;
		else
			clone.source = (ims.scheduling.vo.lookups.FutureAppointmentSource)this.source.clone();
		clone.sameservice = this.sameservice;
		clone.sameday = this.sameday;
		if(this.linkeddiagnostics == null)
			clone.linkeddiagnostics = null;
		else
			clone.linkeddiagnostics = (ims.RefMan.vo.LinkedDiagnosticVoCollection)this.linkeddiagnostics.clone();
		if(this.requesttoschedule == null)
			clone.requesttoschedule = null;
		else
			clone.requesttoschedule = (ims.scheduling.vo.lookups.RequestToSchedule)this.requesttoschedule.clone();
		if(this.startingweek == null)
			clone.startingweek = null;
		else
			clone.startingweek = (ims.framework.utils.Date)this.startingweek.clone();
		clone.mon = this.mon;
		clone.tues = this.tues;
		clone.wed = this.wed;
		clone.thurs = this.thurs;
		clone.fri = this.fri;
		clone.sat = this.sat;
		clone.sun = this.sun;
		clone.comments = this.comments;
		clone.referral = this.referral;
		clone.numberoflinkedrecurringapptstobook = this.numberoflinkedrecurringapptstobook;
		if(this.firstapptservice == null)
			clone.firstapptservice = null;
		else
			clone.firstapptservice = (ims.core.vo.ServiceLiteVo)this.firstapptservice.clone();
		if(this.firstapptfunction == null)
			clone.firstapptfunction = null;
		else
			clone.firstapptfunction = (ims.core.vo.lookups.ServiceFunction)this.firstapptfunction.clone();
		clone.firstapptperiodvalue = this.firstapptperiodvalue;
		if(this.firstapptperiodtype == null)
			clone.firstapptperiodtype = null;
		else
			clone.firstapptperiodtype = (ims.core.vo.lookups.TimeUnitsSecondsToMonths)this.firstapptperiodtype.clone();
		if(this.firstapptfutureapptbydate == null)
			clone.firstapptfutureapptbydate = null;
		else
			clone.firstapptfutureapptbydate = (ims.framework.utils.Date)this.firstapptfutureapptbydate.clone();
		if(this.firstappttosee == null)
			clone.firstappttosee = null;
		else
			clone.firstappttosee = (ims.RefMan.vo.OPAVo)this.firstappttosee.clone();
		if(this.secondapptservice == null)
			clone.secondapptservice = null;
		else
			clone.secondapptservice = (ims.core.vo.ServiceLiteVo)this.secondapptservice.clone();
		if(this.secondapptfunction == null)
			clone.secondapptfunction = null;
		else
			clone.secondapptfunction = (ims.core.vo.lookups.ServiceFunction)this.secondapptfunction.clone();
		clone.secondapptperiodvalue = this.secondapptperiodvalue;
		if(this.secondapptperiodtype == null)
			clone.secondapptperiodtype = null;
		else
			clone.secondapptperiodtype = (ims.core.vo.lookups.TimeUnitsSecondsToMonths)this.secondapptperiodtype.clone();
		if(this.secondapptfutureapptbydate == null)
			clone.secondapptfutureapptbydate = null;
		else
			clone.secondapptfutureapptbydate = (ims.framework.utils.Date)this.secondapptfutureapptbydate.clone();
		if(this.secondappttosee == null)
			clone.secondappttosee = null;
		else
			clone.secondappttosee = (ims.RefMan.vo.OPAVo)this.secondappttosee.clone();
		if(this.thirdapptservice == null)
			clone.thirdapptservice = null;
		else
			clone.thirdapptservice = (ims.core.vo.ServiceLiteVo)this.thirdapptservice.clone();
		if(this.thirdapptfunction == null)
			clone.thirdapptfunction = null;
		else
			clone.thirdapptfunction = (ims.core.vo.lookups.ServiceFunction)this.thirdapptfunction.clone();
		clone.thirdapptperiodvalue = this.thirdapptperiodvalue;
		if(this.thirdapptperiodtype == null)
			clone.thirdapptperiodtype = null;
		else
			clone.thirdapptperiodtype = (ims.core.vo.lookups.TimeUnitsSecondsToMonths)this.thirdapptperiodtype.clone();
		if(this.thirdapptfutureapptbydate == null)
			clone.thirdapptfutureapptbydate = null;
		else
			clone.thirdapptfutureapptbydate = (ims.framework.utils.Date)this.thirdapptfutureapptbydate.clone();
		if(this.thirdapptosee == null)
			clone.thirdapptosee = null;
		else
			clone.thirdapptosee = (ims.RefMan.vo.OPAVo)this.thirdapptosee.clone();
		if(this.recurring == null)
			clone.recurring = null;
		else
			clone.recurring = (ims.RefMan.vo.lookups.Recurring)this.recurring.clone();
		clone.endafternoccurrences = this.endafternoccurrences;
		clone.nooftimesperweek = this.nooftimesperweek;
		clone.everynmonths = this.everynmonths;
		if(this.weekinthemonth == null)
			clone.weekinthemonth = null;
		else
			clone.weekinthemonth = (ims.RefMan.vo.lookups.WeekInTheMonth)this.weekinthemonth.clone();
		clone.futureappointmentcomments = this.futureappointmentcomments;
		clone.donotmovedate = this.donotmovedate;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(FutureAppointmentDetailsVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A FutureAppointmentDetailsVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((FutureAppointmentDetailsVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((FutureAppointmentDetailsVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.appointments != null)
			count++;
		if(this.currentstatus != null)
			count++;
		if(this.statushistory != null)
			count++;
		if(this.source != null)
			count++;
		if(this.sameservice != null)
			count++;
		if(this.sameday != null)
			count++;
		if(this.linkeddiagnostics != null)
			count++;
		if(this.requesttoschedule != null)
			count++;
		if(this.startingweek != null)
			count++;
		if(this.mon != null)
			count++;
		if(this.tues != null)
			count++;
		if(this.wed != null)
			count++;
		if(this.thurs != null)
			count++;
		if(this.fri != null)
			count++;
		if(this.sat != null)
			count++;
		if(this.sun != null)
			count++;
		if(this.comments != null)
			count++;
		if(this.referral != null)
			count++;
		if(this.numberoflinkedrecurringapptstobook != null)
			count++;
		if(this.firstapptservice != null)
			count++;
		if(this.firstapptfunction != null)
			count++;
		if(this.firstapptperiodvalue != null)
			count++;
		if(this.firstapptperiodtype != null)
			count++;
		if(this.firstapptfutureapptbydate != null)
			count++;
		if(this.firstappttosee != null)
			count++;
		if(this.secondapptservice != null)
			count++;
		if(this.secondapptfunction != null)
			count++;
		if(this.secondapptperiodvalue != null)
			count++;
		if(this.secondapptperiodtype != null)
			count++;
		if(this.secondapptfutureapptbydate != null)
			count++;
		if(this.secondappttosee != null)
			count++;
		if(this.thirdapptservice != null)
			count++;
		if(this.thirdapptfunction != null)
			count++;
		if(this.thirdapptperiodvalue != null)
			count++;
		if(this.thirdapptperiodtype != null)
			count++;
		if(this.thirdapptfutureapptbydate != null)
			count++;
		if(this.thirdapptosee != null)
			count++;
		if(this.recurring != null)
			count++;
		if(this.endafternoccurrences != null)
			count++;
		if(this.nooftimesperweek != null)
			count++;
		if(this.everynmonths != null)
			count++;
		if(this.weekinthemonth != null)
			count++;
		if(this.futureappointmentcomments != null)
			count++;
		if(this.donotmovedate != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 44;
	}
	protected ims.scheduling.vo.Booking_AppointmentRefVo appointments;
	protected ims.RefMan.vo.FutureAppointmentStatusVo currentstatus;
	protected ims.RefMan.vo.FutureAppointmentStatusVoCollection statushistory;
	protected ims.scheduling.vo.lookups.FutureAppointmentSource source;
	protected Boolean sameservice;
	protected Boolean sameday;
	protected ims.RefMan.vo.LinkedDiagnosticVoCollection linkeddiagnostics;
	protected ims.scheduling.vo.lookups.RequestToSchedule requesttoschedule;
	protected ims.framework.utils.Date startingweek;
	protected Boolean mon;
	protected Boolean tues;
	protected Boolean wed;
	protected Boolean thurs;
	protected Boolean fri;
	protected Boolean sat;
	protected Boolean sun;
	protected String comments;
	protected ims.RefMan.vo.CatsReferralRefVo referral;
	protected Integer numberoflinkedrecurringapptstobook;
	protected ims.core.vo.ServiceLiteVo firstapptservice;
	protected ims.core.vo.lookups.ServiceFunction firstapptfunction;
	protected Integer firstapptperiodvalue;
	protected ims.core.vo.lookups.TimeUnitsSecondsToMonths firstapptperiodtype;
	protected ims.framework.utils.Date firstapptfutureapptbydate;
	protected ims.RefMan.vo.OPAVo firstappttosee;
	protected ims.core.vo.ServiceLiteVo secondapptservice;
	protected ims.core.vo.lookups.ServiceFunction secondapptfunction;
	protected Integer secondapptperiodvalue;
	protected ims.core.vo.lookups.TimeUnitsSecondsToMonths secondapptperiodtype;
	protected ims.framework.utils.Date secondapptfutureapptbydate;
	protected ims.RefMan.vo.OPAVo secondappttosee;
	protected ims.core.vo.ServiceLiteVo thirdapptservice;
	protected ims.core.vo.lookups.ServiceFunction thirdapptfunction;
	protected Integer thirdapptperiodvalue;
	protected ims.core.vo.lookups.TimeUnitsSecondsToMonths thirdapptperiodtype;
	protected ims.framework.utils.Date thirdapptfutureapptbydate;
	protected ims.RefMan.vo.OPAVo thirdapptosee;
	protected ims.RefMan.vo.lookups.Recurring recurring;
	protected Integer endafternoccurrences;
	protected Integer nooftimesperweek;
	protected Integer everynmonths;
	protected ims.RefMan.vo.lookups.WeekInTheMonth weekinthemonth;
	protected String futureappointmentcomments;
	protected Boolean donotmovedate;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
