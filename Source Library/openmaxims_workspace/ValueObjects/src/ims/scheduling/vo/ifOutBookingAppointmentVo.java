//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.vo;

/**
 * Linked to Scheduling.Booking_Appointment business object (ID: 1055100007).
 */
public class ifOutBookingAppointmentVo extends ims.scheduling.vo.Booking_AppointmentRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public ifOutBookingAppointmentVo()
	{
	}
	public ifOutBookingAppointmentVo(Integer id, int version)
	{
		super(id, version);
	}
	public ifOutBookingAppointmentVo(ims.scheduling.vo.beans.ifOutBookingAppointmentVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.appointmentdate = bean.getAppointmentDate() == null ? null : bean.getAppointmentDate().buildDate();
		this.apptstarttime = bean.getApptStartTime() == null ? null : bean.getApptStartTime().buildTime();
		this.apptendtime = bean.getApptEndTime() == null ? null : bean.getApptEndTime().buildTime();
		this.apptstatus = bean.getApptStatus() == null ? null : ims.scheduling.vo.lookups.Status_Reason.buildLookup(bean.getApptStatus());
		this.patient = bean.getPatient() == null ? null : bean.getPatient().buildVo();
		this.ubrn = bean.getUBRN();
		this.maximsapptid = bean.getMaximsApptId();
		this.apptdate = bean.getApptDate() == null ? null : bean.getApptDate().buildDate();
		this.apptstart = bean.getApptStart();
		this.apptend = bean.getApptEnd();
		this.usrn = bean.getUSRN();
		this.activitycode = bean.getActivityCode();
		this.priority = bean.getPriority();
		this.profilename = bean.getProfileName();
		this.locationcode = bean.getLocationCode();
		this.facilitycode = bean.getFacilityCode();
		this.locationname = bean.getLocationName();
		this.mos = ims.core.vo.MemberOfStaffShortVoCollection.buildFromBeanCollection(bean.getMos());
		this.servicecode = bean.getServiceCode();
		this.gp = bean.getGP() == null ? null : bean.getGP().buildVo();
		this.ahp = bean.getAhp();
		this.practiceaddress = bean.getPracticeAddress() == null ? null : bean.getPracticeAddress().buildVo();
		this.practicecode = bean.getPracticeCode();
		this.dosname = bean.getDoSName();
		this.dosid = bean.getDoSId();
		this.practiceworknumber = bean.getPracticeWorkNumber() == null ? null : bean.getPracticeWorkNumber().buildVo();
		this.locationtypecode = bean.getLocationTypeCode();
		this.catsreferral = bean.getCatsReferral() == null ? null : bean.getCatsReferral().buildVo();
		this.responsiblehcp = bean.getResponsibleHCP() == null ? null : bean.getResponsibleHCP().buildVo();
		this.slotresponsibility = bean.getSlotResponsibility() == null ? null : bean.getSlotResponsibility().buildVo();
		this.externalid = bean.getExternalID();
		this.listowners = ims.scheduling.vo.ifSessionListOwnerVoCollection.buildFromBeanCollection(bean.getListOwners());
		this.systeminfo = bean.getSystemInfo() == null ? null : bean.getSystemInfo().buildSystemInformation();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.scheduling.vo.beans.ifOutBookingAppointmentVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.appointmentdate = bean.getAppointmentDate() == null ? null : bean.getAppointmentDate().buildDate();
		this.apptstarttime = bean.getApptStartTime() == null ? null : bean.getApptStartTime().buildTime();
		this.apptendtime = bean.getApptEndTime() == null ? null : bean.getApptEndTime().buildTime();
		this.apptstatus = bean.getApptStatus() == null ? null : ims.scheduling.vo.lookups.Status_Reason.buildLookup(bean.getApptStatus());
		this.patient = bean.getPatient() == null ? null : bean.getPatient().buildVo(map);
		this.ubrn = bean.getUBRN();
		this.maximsapptid = bean.getMaximsApptId();
		this.apptdate = bean.getApptDate() == null ? null : bean.getApptDate().buildDate();
		this.apptstart = bean.getApptStart();
		this.apptend = bean.getApptEnd();
		this.usrn = bean.getUSRN();
		this.activitycode = bean.getActivityCode();
		this.priority = bean.getPriority();
		this.profilename = bean.getProfileName();
		this.locationcode = bean.getLocationCode();
		this.facilitycode = bean.getFacilityCode();
		this.locationname = bean.getLocationName();
		this.mos = ims.core.vo.MemberOfStaffShortVoCollection.buildFromBeanCollection(bean.getMos());
		this.servicecode = bean.getServiceCode();
		this.gp = bean.getGP() == null ? null : bean.getGP().buildVo(map);
		this.ahp = bean.getAhp();
		this.practiceaddress = bean.getPracticeAddress() == null ? null : bean.getPracticeAddress().buildVo(map);
		this.practicecode = bean.getPracticeCode();
		this.dosname = bean.getDoSName();
		this.dosid = bean.getDoSId();
		this.practiceworknumber = bean.getPracticeWorkNumber() == null ? null : bean.getPracticeWorkNumber().buildVo(map);
		this.locationtypecode = bean.getLocationTypeCode();
		this.catsreferral = bean.getCatsReferral() == null ? null : bean.getCatsReferral().buildVo(map);
		this.responsiblehcp = bean.getResponsibleHCP() == null ? null : bean.getResponsibleHCP().buildVo(map);
		this.slotresponsibility = bean.getSlotResponsibility() == null ? null : bean.getSlotResponsibility().buildVo(map);
		this.externalid = bean.getExternalID();
		this.listowners = ims.scheduling.vo.ifSessionListOwnerVoCollection.buildFromBeanCollection(bean.getListOwners());
		this.systeminfo = bean.getSystemInfo() == null ? null : bean.getSystemInfo().buildSystemInformation();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.scheduling.vo.beans.ifOutBookingAppointmentVoBean bean = null;
		if(map != null)
			bean = (ims.scheduling.vo.beans.ifOutBookingAppointmentVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.scheduling.vo.beans.ifOutBookingAppointmentVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("APPOINTMENTDATE"))
			return getAppointmentDate();
		if(fieldName.equals("APPTSTARTTIME"))
			return getApptStartTime();
		if(fieldName.equals("APPTENDTIME"))
			return getApptEndTime();
		if(fieldName.equals("APPTSTATUS"))
			return getApptStatus();
		if(fieldName.equals("PATIENT"))
			return getPatient();
		if(fieldName.equals("UBRN"))
			return getUBRN();
		if(fieldName.equals("MAXIMSAPPTID"))
			return getMaximsApptId();
		if(fieldName.equals("APPTDATE"))
			return getApptDate();
		if(fieldName.equals("APPTSTART"))
			return getApptStart();
		if(fieldName.equals("APPTEND"))
			return getApptEnd();
		if(fieldName.equals("USRN"))
			return getUSRN();
		if(fieldName.equals("ACTIVITYCODE"))
			return getActivityCode();
		if(fieldName.equals("PRIORITY"))
			return getPriority();
		if(fieldName.equals("PROFILENAME"))
			return getProfileName();
		if(fieldName.equals("LOCATIONCODE"))
			return getLocationCode();
		if(fieldName.equals("FACILITYCODE"))
			return getFacilityCode();
		if(fieldName.equals("LOCATIONNAME"))
			return getLocationName();
		if(fieldName.equals("MOS"))
			return getMos();
		if(fieldName.equals("SERVICECODE"))
			return getServiceCode();
		if(fieldName.equals("GP"))
			return getGP();
		if(fieldName.equals("AHP"))
			return getAhp();
		if(fieldName.equals("PRACTICEADDRESS"))
			return getPracticeAddress();
		if(fieldName.equals("PRACTICECODE"))
			return getPracticeCode();
		if(fieldName.equals("DOSNAME"))
			return getDoSName();
		if(fieldName.equals("DOSID"))
			return getDoSId();
		if(fieldName.equals("PRACTICEWORKNUMBER"))
			return getPracticeWorkNumber();
		if(fieldName.equals("LOCATIONTYPECODE"))
			return getLocationTypeCode();
		if(fieldName.equals("CATSREFERRAL"))
			return getCatsReferral();
		if(fieldName.equals("RESPONSIBLEHCP"))
			return getResponsibleHCP();
		if(fieldName.equals("SLOTRESPONSIBILITY"))
			return getSlotResponsibility();
		if(fieldName.equals("EXTERNALID"))
			return getExternalID();
		if(fieldName.equals("LISTOWNERS"))
			return getListOwners();
		if(fieldName.equals("SYSTEMINFO"))
			return getSystemInfo();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getAppointmentDateIsNotNull()
	{
		return this.appointmentdate != null;
	}
	public ims.framework.utils.Date getAppointmentDate()
	{
		return this.appointmentdate;
	}
	public void setAppointmentDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.appointmentdate = value;
	}
	public boolean getApptStartTimeIsNotNull()
	{
		return this.apptstarttime != null;
	}
	public ims.framework.utils.Time getApptStartTime()
	{
		return this.apptstarttime;
	}
	public void setApptStartTime(ims.framework.utils.Time value)
	{
		this.isValidated = false;
		this.apptstarttime = value;
	}
	public boolean getApptEndTimeIsNotNull()
	{
		return this.apptendtime != null;
	}
	public ims.framework.utils.Time getApptEndTime()
	{
		return this.apptendtime;
	}
	public void setApptEndTime(ims.framework.utils.Time value)
	{
		this.isValidated = false;
		this.apptendtime = value;
	}
	public boolean getApptStatusIsNotNull()
	{
		return this.apptstatus != null;
	}
	public ims.scheduling.vo.lookups.Status_Reason getApptStatus()
	{
		return this.apptstatus;
	}
	public void setApptStatus(ims.scheduling.vo.lookups.Status_Reason value)
	{
		this.isValidated = false;
		this.apptstatus = value;
	}
	public boolean getPatientIsNotNull()
	{
		return this.patient != null;
	}
	public ims.core.vo.Patient getPatient()
	{
		return this.patient;
	}
	public void setPatient(ims.core.vo.Patient value)
	{
		this.isValidated = false;
		this.patient = value;
	}
	public boolean getUBRNIsNotNull()
	{
		return this.ubrn != null;
	}
	public String getUBRN()
	{
		return this.ubrn;
	}
	public static int getUBRNMaxLength()
	{
		return 255;
	}
	public void setUBRN(String value)
	{
		this.isValidated = false;
		this.ubrn = value;
	}
	public boolean getMaximsApptIdIsNotNull()
	{
		return this.maximsapptid != null;
	}
	public String getMaximsApptId()
	{
		return this.maximsapptid;
	}
	public static int getMaximsApptIdMaxLength()
	{
		return 255;
	}
	public void setMaximsApptId(String value)
	{
		this.isValidated = false;
		this.maximsapptid = value;
	}
	public boolean getApptDateIsNotNull()
	{
		return this.apptdate != null;
	}
	public ims.framework.utils.Date getApptDate()
	{
		return this.apptdate;
	}
	public void setApptDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.apptdate = value;
	}
	public boolean getApptStartIsNotNull()
	{
		return this.apptstart != null;
	}
	public String getApptStart()
	{
		return this.apptstart;
	}
	public static int getApptStartMaxLength()
	{
		return 255;
	}
	public void setApptStart(String value)
	{
		this.isValidated = false;
		this.apptstart = value;
	}
	public boolean getApptEndIsNotNull()
	{
		return this.apptend != null;
	}
	public String getApptEnd()
	{
		return this.apptend;
	}
	public static int getApptEndMaxLength()
	{
		return 255;
	}
	public void setApptEnd(String value)
	{
		this.isValidated = false;
		this.apptend = value;
	}
	public boolean getUSRNIsNotNull()
	{
		return this.usrn != null;
	}
	public String getUSRN()
	{
		return this.usrn;
	}
	public static int getUSRNMaxLength()
	{
		return 255;
	}
	public void setUSRN(String value)
	{
		this.isValidated = false;
		this.usrn = value;
	}
	public boolean getActivityCodeIsNotNull()
	{
		return this.activitycode != null;
	}
	public String getActivityCode()
	{
		return this.activitycode;
	}
	public static int getActivityCodeMaxLength()
	{
		return 255;
	}
	public void setActivityCode(String value)
	{
		this.isValidated = false;
		this.activitycode = value;
	}
	public boolean getPriorityIsNotNull()
	{
		return this.priority != null;
	}
	public String getPriority()
	{
		return this.priority;
	}
	public static int getPriorityMaxLength()
	{
		return 255;
	}
	public void setPriority(String value)
	{
		this.isValidated = false;
		this.priority = value;
	}
	public boolean getProfileNameIsNotNull()
	{
		return this.profilename != null;
	}
	public String getProfileName()
	{
		return this.profilename;
	}
	public static int getProfileNameMaxLength()
	{
		return 255;
	}
	public void setProfileName(String value)
	{
		this.isValidated = false;
		this.profilename = value;
	}
	public boolean getLocationCodeIsNotNull()
	{
		return this.locationcode != null;
	}
	public String getLocationCode()
	{
		return this.locationcode;
	}
	public static int getLocationCodeMaxLength()
	{
		return 255;
	}
	public void setLocationCode(String value)
	{
		this.isValidated = false;
		this.locationcode = value;
	}
	public boolean getFacilityCodeIsNotNull()
	{
		return this.facilitycode != null;
	}
	public String getFacilityCode()
	{
		return this.facilitycode;
	}
	public static int getFacilityCodeMaxLength()
	{
		return 255;
	}
	public void setFacilityCode(String value)
	{
		this.isValidated = false;
		this.facilitycode = value;
	}
	public boolean getLocationNameIsNotNull()
	{
		return this.locationname != null;
	}
	public String getLocationName()
	{
		return this.locationname;
	}
	public static int getLocationNameMaxLength()
	{
		return 255;
	}
	public void setLocationName(String value)
	{
		this.isValidated = false;
		this.locationname = value;
	}
	public boolean getMosIsNotNull()
	{
		return this.mos != null;
	}
	public ims.core.vo.MemberOfStaffShortVoCollection getMos()
	{
		return this.mos;
	}
	public void setMos(ims.core.vo.MemberOfStaffShortVoCollection value)
	{
		this.isValidated = false;
		this.mos = value;
	}
	public boolean getServiceCodeIsNotNull()
	{
		return this.servicecode != null;
	}
	public String getServiceCode()
	{
		return this.servicecode;
	}
	public static int getServiceCodeMaxLength()
	{
		return 255;
	}
	public void setServiceCode(String value)
	{
		this.isValidated = false;
		this.servicecode = value;
	}
	public boolean getGPIsNotNull()
	{
		return this.gp != null;
	}
	public ims.core.vo.GpShortVo getGP()
	{
		return this.gp;
	}
	public void setGP(ims.core.vo.GpShortVo value)
	{
		this.isValidated = false;
		this.gp = value;
	}
	public boolean getAhpIsNotNull()
	{
		return this.ahp != null;
	}
	public String getAhp()
	{
		return this.ahp;
	}
	public static int getAhpMaxLength()
	{
		return 255;
	}
	public void setAhp(String value)
	{
		this.isValidated = false;
		this.ahp = value;
	}
	public boolean getPracticeAddressIsNotNull()
	{
		return this.practiceaddress != null;
	}
	public ims.core.vo.PersonAddress getPracticeAddress()
	{
		return this.practiceaddress;
	}
	public void setPracticeAddress(ims.core.vo.PersonAddress value)
	{
		this.isValidated = false;
		this.practiceaddress = value;
	}
	public boolean getPracticeCodeIsNotNull()
	{
		return this.practicecode != null;
	}
	public String getPracticeCode()
	{
		return this.practicecode;
	}
	public static int getPracticeCodeMaxLength()
	{
		return 255;
	}
	public void setPracticeCode(String value)
	{
		this.isValidated = false;
		this.practicecode = value;
	}
	public boolean getDoSNameIsNotNull()
	{
		return this.dosname != null;
	}
	public String getDoSName()
	{
		return this.dosname;
	}
	public static int getDoSNameMaxLength()
	{
		return 255;
	}
	public void setDoSName(String value)
	{
		this.isValidated = false;
		this.dosname = value;
	}
	public boolean getDoSIdIsNotNull()
	{
		return this.dosid != null;
	}
	public String getDoSId()
	{
		return this.dosid;
	}
	public static int getDoSIdMaxLength()
	{
		return 255;
	}
	public void setDoSId(String value)
	{
		this.isValidated = false;
		this.dosid = value;
	}
	public boolean getPracticeWorkNumberIsNotNull()
	{
		return this.practiceworknumber != null;
	}
	public ims.core.vo.CommChannelVo getPracticeWorkNumber()
	{
		return this.practiceworknumber;
	}
	public void setPracticeWorkNumber(ims.core.vo.CommChannelVo value)
	{
		this.isValidated = false;
		this.practiceworknumber = value;
	}
	public boolean getLocationTypeCodeIsNotNull()
	{
		return this.locationtypecode != null;
	}
	public String getLocationTypeCode()
	{
		return this.locationtypecode;
	}
	public static int getLocationTypeCodeMaxLength()
	{
		return 255;
	}
	public void setLocationTypeCode(String value)
	{
		this.isValidated = false;
		this.locationtypecode = value;
	}
	public boolean getCatsReferralIsNotNull()
	{
		return this.catsreferral != null;
	}
	public ims.RefMan.vo.ifCatsReferralVo getCatsReferral()
	{
		return this.catsreferral;
	}
	public void setCatsReferral(ims.RefMan.vo.ifCatsReferralVo value)
	{
		this.isValidated = false;
		this.catsreferral = value;
	}
	public boolean getResponsibleHCPIsNotNull()
	{
		return this.responsiblehcp != null;
	}
	public ims.core.vo.MemberOfStaffShortVo getResponsibleHCP()
	{
		return this.responsiblehcp;
	}
	public void setResponsibleHCP(ims.core.vo.MemberOfStaffShortVo value)
	{
		this.isValidated = false;
		this.responsiblehcp = value;
	}
	public boolean getSlotResponsibilityIsNotNull()
	{
		return this.slotresponsibility != null;
	}
	public ims.core.vo.MemberOfStaffShortVo getSlotResponsibility()
	{
		return this.slotresponsibility;
	}
	public void setSlotResponsibility(ims.core.vo.MemberOfStaffShortVo value)
	{
		this.isValidated = false;
		this.slotresponsibility = value;
	}
	public boolean getExternalIDIsNotNull()
	{
		return this.externalid != null;
	}
	public String getExternalID()
	{
		return this.externalid;
	}
	public static int getExternalIDMaxLength()
	{
		return 255;
	}
	public void setExternalID(String value)
	{
		this.isValidated = false;
		this.externalid = value;
	}
	public boolean getListOwnersIsNotNull()
	{
		return this.listowners != null;
	}
	public ims.scheduling.vo.ifSessionListOwnerVoCollection getListOwners()
	{
		return this.listowners;
	}
	public void setListOwners(ims.scheduling.vo.ifSessionListOwnerVoCollection value)
	{
		this.isValidated = false;
		this.listowners = value;
	}
	public boolean getSystemInfoIsNotNull()
	{
		return this.systeminfo != null;
	}
	public ims.vo.SystemInformation getSystemInfo()
	{
		return this.systeminfo;
	}
	public void setSystemInfo(ims.vo.SystemInformation value)
	{
		this.isValidated = false;
		this.systeminfo = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.patient == null)
			listOfErrors.add("Patient is mandatory");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		ifOutBookingAppointmentVo clone = new ifOutBookingAppointmentVo(this.id, this.version);
		
		if(this.appointmentdate == null)
			clone.appointmentdate = null;
		else
			clone.appointmentdate = (ims.framework.utils.Date)this.appointmentdate.clone();
		if(this.apptstarttime == null)
			clone.apptstarttime = null;
		else
			clone.apptstarttime = (ims.framework.utils.Time)this.apptstarttime.clone();
		if(this.apptendtime == null)
			clone.apptendtime = null;
		else
			clone.apptendtime = (ims.framework.utils.Time)this.apptendtime.clone();
		if(this.apptstatus == null)
			clone.apptstatus = null;
		else
			clone.apptstatus = (ims.scheduling.vo.lookups.Status_Reason)this.apptstatus.clone();
		if(this.patient == null)
			clone.patient = null;
		else
			clone.patient = (ims.core.vo.Patient)this.patient.clone();
		clone.ubrn = this.ubrn;
		clone.maximsapptid = this.maximsapptid;
		if(this.apptdate == null)
			clone.apptdate = null;
		else
			clone.apptdate = (ims.framework.utils.Date)this.apptdate.clone();
		clone.apptstart = this.apptstart;
		clone.apptend = this.apptend;
		clone.usrn = this.usrn;
		clone.activitycode = this.activitycode;
		clone.priority = this.priority;
		clone.profilename = this.profilename;
		clone.locationcode = this.locationcode;
		clone.facilitycode = this.facilitycode;
		clone.locationname = this.locationname;
		if(this.mos == null)
			clone.mos = null;
		else
			clone.mos = (ims.core.vo.MemberOfStaffShortVoCollection)this.mos.clone();
		clone.servicecode = this.servicecode;
		if(this.gp == null)
			clone.gp = null;
		else
			clone.gp = (ims.core.vo.GpShortVo)this.gp.clone();
		clone.ahp = this.ahp;
		if(this.practiceaddress == null)
			clone.practiceaddress = null;
		else
			clone.practiceaddress = (ims.core.vo.PersonAddress)this.practiceaddress.clone();
		clone.practicecode = this.practicecode;
		clone.dosname = this.dosname;
		clone.dosid = this.dosid;
		if(this.practiceworknumber == null)
			clone.practiceworknumber = null;
		else
			clone.practiceworknumber = (ims.core.vo.CommChannelVo)this.practiceworknumber.clone();
		clone.locationtypecode = this.locationtypecode;
		if(this.catsreferral == null)
			clone.catsreferral = null;
		else
			clone.catsreferral = (ims.RefMan.vo.ifCatsReferralVo)this.catsreferral.clone();
		if(this.responsiblehcp == null)
			clone.responsiblehcp = null;
		else
			clone.responsiblehcp = (ims.core.vo.MemberOfStaffShortVo)this.responsiblehcp.clone();
		if(this.slotresponsibility == null)
			clone.slotresponsibility = null;
		else
			clone.slotresponsibility = (ims.core.vo.MemberOfStaffShortVo)this.slotresponsibility.clone();
		clone.externalid = this.externalid;
		if(this.listowners == null)
			clone.listowners = null;
		else
			clone.listowners = (ims.scheduling.vo.ifSessionListOwnerVoCollection)this.listowners.clone();
		if(this.systeminfo == null)
			clone.systeminfo = null;
		else
			clone.systeminfo = (ims.vo.SystemInformation)this.systeminfo.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(ifOutBookingAppointmentVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A ifOutBookingAppointmentVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((ifOutBookingAppointmentVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((ifOutBookingAppointmentVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.appointmentdate != null)
			count++;
		if(this.apptstarttime != null)
			count++;
		if(this.apptendtime != null)
			count++;
		if(this.apptstatus != null)
			count++;
		if(this.patient != null)
			count++;
		if(this.ubrn != null)
			count++;
		if(this.maximsapptid != null)
			count++;
		if(this.apptdate != null)
			count++;
		if(this.apptstart != null)
			count++;
		if(this.apptend != null)
			count++;
		if(this.usrn != null)
			count++;
		if(this.activitycode != null)
			count++;
		if(this.priority != null)
			count++;
		if(this.profilename != null)
			count++;
		if(this.locationcode != null)
			count++;
		if(this.facilitycode != null)
			count++;
		if(this.locationname != null)
			count++;
		if(this.mos != null)
			count++;
		if(this.servicecode != null)
			count++;
		if(this.gp != null)
			count++;
		if(this.ahp != null)
			count++;
		if(this.practiceaddress != null)
			count++;
		if(this.practicecode != null)
			count++;
		if(this.dosname != null)
			count++;
		if(this.dosid != null)
			count++;
		if(this.practiceworknumber != null)
			count++;
		if(this.locationtypecode != null)
			count++;
		if(this.catsreferral != null)
			count++;
		if(this.responsiblehcp != null)
			count++;
		if(this.slotresponsibility != null)
			count++;
		if(this.externalid != null)
			count++;
		if(this.listowners != null)
			count++;
		if(this.systeminfo != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 33;
	}
	protected ims.framework.utils.Date appointmentdate;
	protected ims.framework.utils.Time apptstarttime;
	protected ims.framework.utils.Time apptendtime;
	protected ims.scheduling.vo.lookups.Status_Reason apptstatus;
	protected ims.core.vo.Patient patient;
	protected String ubrn;
	protected String maximsapptid;
	protected ims.framework.utils.Date apptdate;
	protected String apptstart;
	protected String apptend;
	protected String usrn;
	protected String activitycode;
	protected String priority;
	protected String profilename;
	protected String locationcode;
	protected String facilitycode;
	protected String locationname;
	protected ims.core.vo.MemberOfStaffShortVoCollection mos;
	protected String servicecode;
	protected ims.core.vo.GpShortVo gp;
	protected String ahp;
	protected ims.core.vo.PersonAddress practiceaddress;
	protected String practicecode;
	protected String dosname;
	protected String dosid;
	protected ims.core.vo.CommChannelVo practiceworknumber;
	protected String locationtypecode;
	protected ims.RefMan.vo.ifCatsReferralVo catsreferral;
	protected ims.core.vo.MemberOfStaffShortVo responsiblehcp;
	protected ims.core.vo.MemberOfStaffShortVo slotresponsibility;
	protected String externalid;
	protected ims.scheduling.vo.ifSessionListOwnerVoCollection listowners;
	protected ims.vo.SystemInformation systeminfo;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
