//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.scheduling.vo;

/**
 * Linked to Scheduling.FutureAppointmentDetails business object (ID: 1090100021).
 */
public class FutureAppointmentListVo extends ims.scheduling.vo.FutureAppointmentDetailsRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public FutureAppointmentListVo()
	{
	}
	public FutureAppointmentListVo(Integer id, int version)
	{
		super(id, version);
	}
	public FutureAppointmentListVo(ims.scheduling.vo.beans.FutureAppointmentListVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.referral = bean.getReferral() == null ? null : bean.getReferral().buildVo();
		this.firstapptservice = bean.getFirstApptService() == null ? null : bean.getFirstApptService().buildVo();
		this.firstapptfunction = bean.getFirstApptFunction() == null ? null : ims.core.vo.lookups.ServiceFunction.buildLookup(bean.getFirstApptFunction());
		this.firstapptperiodvalue = bean.getFirstApptPeriodValue();
		this.firstapptperiodtype = bean.getFirstApptPeriodType() == null ? null : ims.core.vo.lookups.TimeUnitsSecondsToMonths.buildLookup(bean.getFirstApptPeriodType());
		this.firstapptfutureapptbydate = bean.getFirstApptFutureApptByDate() == null ? null : bean.getFirstApptFutureApptByDate().buildDate();
		this.firstappttosee = bean.getFirstApptToSee() == null ? null : bean.getFirstApptToSee().buildVo();
		this.requesttoschedule = bean.getRequestToSchedule() == null ? null : ims.scheduling.vo.lookups.RequestToSchedule.buildLookup(bean.getRequestToSchedule());
		this.numberoflinkedrecurringapptstobook = bean.getNumberOfLinkedRecurringApptsToBook();
		this.currentstatus = bean.getCurrentStatus() == null ? null : bean.getCurrentStatus().buildVo();
		this.startingweek = bean.getStartingWeek() == null ? null : bean.getStartingWeek().buildDate();
		this.donotmovedate = bean.getDoNotMoveDate();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.scheduling.vo.beans.FutureAppointmentListVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.referral = bean.getReferral() == null ? null : bean.getReferral().buildVo(map);
		this.firstapptservice = bean.getFirstApptService() == null ? null : bean.getFirstApptService().buildVo(map);
		this.firstapptfunction = bean.getFirstApptFunction() == null ? null : ims.core.vo.lookups.ServiceFunction.buildLookup(bean.getFirstApptFunction());
		this.firstapptperiodvalue = bean.getFirstApptPeriodValue();
		this.firstapptperiodtype = bean.getFirstApptPeriodType() == null ? null : ims.core.vo.lookups.TimeUnitsSecondsToMonths.buildLookup(bean.getFirstApptPeriodType());
		this.firstapptfutureapptbydate = bean.getFirstApptFutureApptByDate() == null ? null : bean.getFirstApptFutureApptByDate().buildDate();
		this.firstappttosee = bean.getFirstApptToSee() == null ? null : bean.getFirstApptToSee().buildVo(map);
		this.requesttoschedule = bean.getRequestToSchedule() == null ? null : ims.scheduling.vo.lookups.RequestToSchedule.buildLookup(bean.getRequestToSchedule());
		this.numberoflinkedrecurringapptstobook = bean.getNumberOfLinkedRecurringApptsToBook();
		this.currentstatus = bean.getCurrentStatus() == null ? null : bean.getCurrentStatus().buildVo(map);
		this.startingweek = bean.getStartingWeek() == null ? null : bean.getStartingWeek().buildDate();
		this.donotmovedate = bean.getDoNotMoveDate();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.scheduling.vo.beans.FutureAppointmentListVoBean bean = null;
		if(map != null)
			bean = (ims.scheduling.vo.beans.FutureAppointmentListVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.scheduling.vo.beans.FutureAppointmentListVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("REFERRAL"))
			return getReferral();
		if(fieldName.equals("FIRSTAPPTSERVICE"))
			return getFirstApptService();
		if(fieldName.equals("FIRSTAPPTFUNCTION"))
			return getFirstApptFunction();
		if(fieldName.equals("FIRSTAPPTPERIODVALUE"))
			return getFirstApptPeriodValue();
		if(fieldName.equals("FIRSTAPPTPERIODTYPE"))
			return getFirstApptPeriodType();
		if(fieldName.equals("FIRSTAPPTFUTUREAPPTBYDATE"))
			return getFirstApptFutureApptByDate();
		if(fieldName.equals("FIRSTAPPTTOSEE"))
			return getFirstApptToSee();
		if(fieldName.equals("REQUESTTOSCHEDULE"))
			return getRequestToSchedule();
		if(fieldName.equals("NUMBEROFLINKEDRECURRINGAPPTSTOBOOK"))
			return getNumberOfLinkedRecurringApptsToBook();
		if(fieldName.equals("CURRENTSTATUS"))
			return getCurrentStatus();
		if(fieldName.equals("STARTINGWEEK"))
			return getStartingWeek();
		if(fieldName.equals("DONOTMOVEDATE"))
			return getDoNotMoveDate();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getReferralIsNotNull()
	{
		return this.referral != null;
	}
	public ims.RefMan.vo.CatsReferralPatientVo getReferral()
	{
		return this.referral;
	}
	public void setReferral(ims.RefMan.vo.CatsReferralPatientVo value)
	{
		this.isValidated = false;
		this.referral = value;
	}
	public boolean getFirstApptServiceIsNotNull()
	{
		return this.firstapptservice != null;
	}
	public ims.core.vo.ServiceLiteVo getFirstApptService()
	{
		return this.firstapptservice;
	}
	public void setFirstApptService(ims.core.vo.ServiceLiteVo value)
	{
		this.isValidated = false;
		this.firstapptservice = value;
	}
	public boolean getFirstApptFunctionIsNotNull()
	{
		return this.firstapptfunction != null;
	}
	public ims.core.vo.lookups.ServiceFunction getFirstApptFunction()
	{
		return this.firstapptfunction;
	}
	public void setFirstApptFunction(ims.core.vo.lookups.ServiceFunction value)
	{
		this.isValidated = false;
		this.firstapptfunction = value;
	}
	public boolean getFirstApptPeriodValueIsNotNull()
	{
		return this.firstapptperiodvalue != null;
	}
	public Integer getFirstApptPeriodValue()
	{
		return this.firstapptperiodvalue;
	}
	public void setFirstApptPeriodValue(Integer value)
	{
		this.isValidated = false;
		this.firstapptperiodvalue = value;
	}
	public boolean getFirstApptPeriodTypeIsNotNull()
	{
		return this.firstapptperiodtype != null;
	}
	public ims.core.vo.lookups.TimeUnitsSecondsToMonths getFirstApptPeriodType()
	{
		return this.firstapptperiodtype;
	}
	public void setFirstApptPeriodType(ims.core.vo.lookups.TimeUnitsSecondsToMonths value)
	{
		this.isValidated = false;
		this.firstapptperiodtype = value;
	}
	public boolean getFirstApptFutureApptByDateIsNotNull()
	{
		return this.firstapptfutureapptbydate != null;
	}
	public ims.framework.utils.Date getFirstApptFutureApptByDate()
	{
		return this.firstapptfutureapptbydate;
	}
	public void setFirstApptFutureApptByDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.firstapptfutureapptbydate = value;
	}
	public boolean getFirstApptToSeeIsNotNull()
	{
		return this.firstappttosee != null;
	}
	public ims.RefMan.vo.OPAVo getFirstApptToSee()
	{
		return this.firstappttosee;
	}
	public void setFirstApptToSee(ims.RefMan.vo.OPAVo value)
	{
		this.isValidated = false;
		this.firstappttosee = value;
	}
	public boolean getRequestToScheduleIsNotNull()
	{
		return this.requesttoschedule != null;
	}
	public ims.scheduling.vo.lookups.RequestToSchedule getRequestToSchedule()
	{
		return this.requesttoschedule;
	}
	public void setRequestToSchedule(ims.scheduling.vo.lookups.RequestToSchedule value)
	{
		this.isValidated = false;
		this.requesttoschedule = value;
	}
	public boolean getNumberOfLinkedRecurringApptsToBookIsNotNull()
	{
		return this.numberoflinkedrecurringapptstobook != null;
	}
	public Integer getNumberOfLinkedRecurringApptsToBook()
	{
		return this.numberoflinkedrecurringapptstobook;
	}
	public void setNumberOfLinkedRecurringApptsToBook(Integer value)
	{
		this.isValidated = false;
		this.numberoflinkedrecurringapptstobook = value;
	}
	public boolean getCurrentStatusIsNotNull()
	{
		return this.currentstatus != null;
	}
	public ims.RefMan.vo.FutureAppointmentStatusVo getCurrentStatus()
	{
		return this.currentstatus;
	}
	public void setCurrentStatus(ims.RefMan.vo.FutureAppointmentStatusVo value)
	{
		this.isValidated = false;
		this.currentstatus = value;
	}
	public boolean getStartingWeekIsNotNull()
	{
		return this.startingweek != null;
	}
	public ims.framework.utils.Date getStartingWeek()
	{
		return this.startingweek;
	}
	public void setStartingWeek(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.startingweek = value;
	}
	public boolean getDoNotMoveDateIsNotNull()
	{
		return this.donotmovedate != null;
	}
	public Boolean getDoNotMoveDate()
	{
		return this.donotmovedate;
	}
	public void setDoNotMoveDate(Boolean value)
	{
		this.isValidated = false;
		this.donotmovedate = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.referral == null)
			listOfErrors.add("Referral is mandatory");
		if(this.requesttoschedule == null)
			listOfErrors.add("RequestToSchedule is mandatory");
		if(this.currentstatus == null)
			listOfErrors.add("CurrentStatus is mandatory");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		FutureAppointmentListVo clone = new FutureAppointmentListVo(this.id, this.version);
		
		if(this.referral == null)
			clone.referral = null;
		else
			clone.referral = (ims.RefMan.vo.CatsReferralPatientVo)this.referral.clone();
		if(this.firstapptservice == null)
			clone.firstapptservice = null;
		else
			clone.firstapptservice = (ims.core.vo.ServiceLiteVo)this.firstapptservice.clone();
		if(this.firstapptfunction == null)
			clone.firstapptfunction = null;
		else
			clone.firstapptfunction = (ims.core.vo.lookups.ServiceFunction)this.firstapptfunction.clone();
		clone.firstapptperiodvalue = this.firstapptperiodvalue;
		if(this.firstapptperiodtype == null)
			clone.firstapptperiodtype = null;
		else
			clone.firstapptperiodtype = (ims.core.vo.lookups.TimeUnitsSecondsToMonths)this.firstapptperiodtype.clone();
		if(this.firstapptfutureapptbydate == null)
			clone.firstapptfutureapptbydate = null;
		else
			clone.firstapptfutureapptbydate = (ims.framework.utils.Date)this.firstapptfutureapptbydate.clone();
		if(this.firstappttosee == null)
			clone.firstappttosee = null;
		else
			clone.firstappttosee = (ims.RefMan.vo.OPAVo)this.firstappttosee.clone();
		if(this.requesttoschedule == null)
			clone.requesttoschedule = null;
		else
			clone.requesttoschedule = (ims.scheduling.vo.lookups.RequestToSchedule)this.requesttoschedule.clone();
		clone.numberoflinkedrecurringapptstobook = this.numberoflinkedrecurringapptstobook;
		if(this.currentstatus == null)
			clone.currentstatus = null;
		else
			clone.currentstatus = (ims.RefMan.vo.FutureAppointmentStatusVo)this.currentstatus.clone();
		if(this.startingweek == null)
			clone.startingweek = null;
		else
			clone.startingweek = (ims.framework.utils.Date)this.startingweek.clone();
		clone.donotmovedate = this.donotmovedate;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(FutureAppointmentListVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A FutureAppointmentListVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((FutureAppointmentListVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((FutureAppointmentListVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.referral != null)
			count++;
		if(this.firstapptservice != null)
			count++;
		if(this.firstapptfunction != null)
			count++;
		if(this.firstapptperiodvalue != null)
			count++;
		if(this.firstapptperiodtype != null)
			count++;
		if(this.firstapptfutureapptbydate != null)
			count++;
		if(this.firstappttosee != null)
			count++;
		if(this.requesttoschedule != null)
			count++;
		if(this.numberoflinkedrecurringapptstobook != null)
			count++;
		if(this.currentstatus != null)
			count++;
		if(this.startingweek != null)
			count++;
		if(this.donotmovedate != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 12;
	}
	protected ims.RefMan.vo.CatsReferralPatientVo referral;
	protected ims.core.vo.ServiceLiteVo firstapptservice;
	protected ims.core.vo.lookups.ServiceFunction firstapptfunction;
	protected Integer firstapptperiodvalue;
	protected ims.core.vo.lookups.TimeUnitsSecondsToMonths firstapptperiodtype;
	protected ims.framework.utils.Date firstapptfutureapptbydate;
	protected ims.RefMan.vo.OPAVo firstappttosee;
	protected ims.scheduling.vo.lookups.RequestToSchedule requesttoschedule;
	protected Integer numberoflinkedrecurringapptstobook;
	protected ims.RefMan.vo.FutureAppointmentStatusVo currentstatus;
	protected ims.framework.utils.Date startingweek;
	protected Boolean donotmovedate;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
