//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.emergency.vo.beans;

public class TrackingAreaVoBean extends ims.vo.ValueObjectBean
{
	public TrackingAreaVoBean()
	{
	}
	public TrackingAreaVoBean(ims.emergency.vo.TrackingAreaVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.areanamedescription = vo.getAreaNameDescription();
		this.areadisplayname = vo.getAreaDisplayName();
		this.status = vo.getStatus() == null ? null : (ims.vo.LookupInstanceBean)vo.getStatus().getBean();
		this.isoverallview = vo.getIsOverallView();
		this.isregistrationarea = vo.getIsRegistrationArea();
		this.patientrefreshrate = vo.getPatientRefreshRate();
		this.sendtoareas = vo.getSendToAreas() == null ? null : vo.getSendToAreas().getBeanCollection();
		this.edlocation = vo.getEDLocation() == null ? null : (ims.core.vo.beans.LocationLiteVoBean)vo.getEDLocation().getBean();
		this.columns = vo.getColumns() == null ? null : vo.getColumns().getBeanCollection();
		this.areatype = vo.getAreaType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAreaType().getBean();
		this.workflowconfig = vo.getWorkflowConfig() == null ? null : (ims.emergency.vo.beans.TrackingStatusWorkflowLightVoBean)vo.getWorkflowConfig().getBean();
		this.associatedworkflowmandatory = vo.getAssociatedWorkflowMandatory();
		this.allocatedcubicle = vo.getAllocatedCubicle() == null ? null : (ims.emergency.vo.beans.TrackingCubicleRoomBedVoBean)vo.getAllocatedCubicle().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.emergency.vo.TrackingAreaVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.areanamedescription = vo.getAreaNameDescription();
		this.areadisplayname = vo.getAreaDisplayName();
		this.status = vo.getStatus() == null ? null : (ims.vo.LookupInstanceBean)vo.getStatus().getBean();
		this.isoverallview = vo.getIsOverallView();
		this.isregistrationarea = vo.getIsRegistrationArea();
		this.patientrefreshrate = vo.getPatientRefreshRate();
		this.sendtoareas = vo.getSendToAreas() == null ? null : vo.getSendToAreas().getBeanCollection();
		this.edlocation = vo.getEDLocation() == null ? null : (ims.core.vo.beans.LocationLiteVoBean)vo.getEDLocation().getBean(map);
		this.columns = vo.getColumns() == null ? null : vo.getColumns().getBeanCollection();
		this.areatype = vo.getAreaType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAreaType().getBean();
		this.workflowconfig = vo.getWorkflowConfig() == null ? null : (ims.emergency.vo.beans.TrackingStatusWorkflowLightVoBean)vo.getWorkflowConfig().getBean(map);
		this.associatedworkflowmandatory = vo.getAssociatedWorkflowMandatory();
		this.allocatedcubicle = vo.getAllocatedCubicle() == null ? null : (ims.emergency.vo.beans.TrackingCubicleRoomBedVoBean)vo.getAllocatedCubicle().getBean(map);
	}

	public ims.emergency.vo.TrackingAreaVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.emergency.vo.TrackingAreaVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.emergency.vo.TrackingAreaVo vo = null;
		if(map != null)
			vo = (ims.emergency.vo.TrackingAreaVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.emergency.vo.TrackingAreaVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public String getAreaNameDescription()
	{
		return this.areanamedescription;
	}
	public void setAreaNameDescription(String value)
	{
		this.areanamedescription = value;
	}
	public String getAreaDisplayName()
	{
		return this.areadisplayname;
	}
	public void setAreaDisplayName(String value)
	{
		this.areadisplayname = value;
	}
	public ims.vo.LookupInstanceBean getStatus()
	{
		return this.status;
	}
	public void setStatus(ims.vo.LookupInstanceBean value)
	{
		this.status = value;
	}
	public Boolean getIsOverallView()
	{
		return this.isoverallview;
	}
	public void setIsOverallView(Boolean value)
	{
		this.isoverallview = value;
	}
	public Boolean getIsRegistrationArea()
	{
		return this.isregistrationarea;
	}
	public void setIsRegistrationArea(Boolean value)
	{
		this.isregistrationarea = value;
	}
	public Integer getPatientRefreshRate()
	{
		return this.patientrefreshrate;
	}
	public void setPatientRefreshRate(Integer value)
	{
		this.patientrefreshrate = value;
	}
	public ims.emergency.vo.beans.TrackingAreaVoBean[] getSendToAreas()
	{
		return this.sendtoareas;
	}
	public void setSendToAreas(ims.emergency.vo.beans.TrackingAreaVoBean[] value)
	{
		this.sendtoareas = value;
	}
	public ims.core.vo.beans.LocationLiteVoBean getEDLocation()
	{
		return this.edlocation;
	}
	public void setEDLocation(ims.core.vo.beans.LocationLiteVoBean value)
	{
		this.edlocation = value;
	}
	public ims.emergency.vo.beans.ColumnDetailVoBean[] getColumns()
	{
		return this.columns;
	}
	public void setColumns(ims.emergency.vo.beans.ColumnDetailVoBean[] value)
	{
		this.columns = value;
	}
	public ims.vo.LookupInstanceBean getAreaType()
	{
		return this.areatype;
	}
	public void setAreaType(ims.vo.LookupInstanceBean value)
	{
		this.areatype = value;
	}
	public ims.emergency.vo.beans.TrackingStatusWorkflowLightVoBean getWorkflowConfig()
	{
		return this.workflowconfig;
	}
	public void setWorkflowConfig(ims.emergency.vo.beans.TrackingStatusWorkflowLightVoBean value)
	{
		this.workflowconfig = value;
	}
	public Boolean getAssociatedWorkflowMandatory()
	{
		return this.associatedworkflowmandatory;
	}
	public void setAssociatedWorkflowMandatory(Boolean value)
	{
		this.associatedworkflowmandatory = value;
	}
	public ims.emergency.vo.beans.TrackingCubicleRoomBedVoBean getAllocatedCubicle()
	{
		return this.allocatedcubicle;
	}
	public void setAllocatedCubicle(ims.emergency.vo.beans.TrackingCubicleRoomBedVoBean value)
	{
		this.allocatedcubicle = value;
	}

	private Integer id;
	private int version;
	private String areanamedescription;
	private String areadisplayname;
	private ims.vo.LookupInstanceBean status;
	private Boolean isoverallview;
	private Boolean isregistrationarea;
	private Integer patientrefreshrate;
	private ims.emergency.vo.beans.TrackingAreaVoBean[] sendtoareas;
	private ims.core.vo.beans.LocationLiteVoBean edlocation;
	private ims.emergency.vo.beans.ColumnDetailVoBean[] columns;
	private ims.vo.LookupInstanceBean areatype;
	private ims.emergency.vo.beans.TrackingStatusWorkflowLightVoBean workflowconfig;
	private Boolean associatedworkflowmandatory;
	private ims.emergency.vo.beans.TrackingCubicleRoomBedVoBean allocatedcubicle;
}
