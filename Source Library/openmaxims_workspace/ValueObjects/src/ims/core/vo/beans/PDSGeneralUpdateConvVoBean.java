//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo.beans;

public class PDSGeneralUpdateConvVoBean extends ims.vo.ValueObjectBean
{
	public PDSGeneralUpdateConvVoBean()
	{
	}
	public PDSGeneralUpdateConvVoBean(ims.core.vo.PDSGeneralUpdateConvVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.cid = vo.getCid() == null ? null : new ims.vo.RefVoBean(vo.getCid().getBoId(), vo.getCid().getBoVersion());
		this.current = vo.getCurrent() == null ? null : new ims.vo.RefVoBean(vo.getCurrent().getBoId(), vo.getCurrent().getBoVersion());
		if(vo.getPoints() != null)
		{
			this.points = new ims.vo.RefVoBean[vo.getPoints().size()];
			for(int points_i = 0; points_i < vo.getPoints().size(); points_i++)
			{
				this.points[points_i] = new ims.vo.RefVoBean(vo.getPoints().get(points_i).getBoId(),vo.getPoints().get(points_i).getBoVersion());
			}
		}
		if(vo.getMsgUids() != null)
		{
			this.msguids = new ims.vo.RefVoBean[vo.getMsgUids().size()];
			for(int msguids_i = 0; msguids_i < vo.getMsgUids().size(); msguids_i++)
			{
				this.msguids[msguids_i] = new ims.vo.RefVoBean(vo.getMsgUids().get(msguids_i).getBoId(),vo.getMsgUids().get(msguids_i).getBoVersion());
			}
		}
		this.dummy = vo.getDummy();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.PDSGeneralUpdateConvVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.cid = vo.getCid() == null ? null : new ims.vo.RefVoBean(vo.getCid().getBoId(), vo.getCid().getBoVersion());
		this.current = vo.getCurrent() == null ? null : new ims.vo.RefVoBean(vo.getCurrent().getBoId(), vo.getCurrent().getBoVersion());
		if(vo.getPoints() != null)
		{
			this.points = new ims.vo.RefVoBean[vo.getPoints().size()];
			for(int points_i = 0; points_i < vo.getPoints().size(); points_i++)
			{
				this.points[points_i] = new ims.vo.RefVoBean(vo.getPoints().get(points_i).getBoId(),vo.getPoints().get(points_i).getBoVersion());
			}
		}
		if(vo.getMsgUids() != null)
		{
			this.msguids = new ims.vo.RefVoBean[vo.getMsgUids().size()];
			for(int msguids_i = 0; msguids_i < vo.getMsgUids().size(); msguids_i++)
			{
				this.msguids[msguids_i] = new ims.vo.RefVoBean(vo.getMsgUids().get(msguids_i).getBoId(),vo.getMsgUids().get(msguids_i).getBoVersion());
			}
		}
		this.dummy = vo.getDummy();
	}

	public ims.core.vo.PDSGeneralUpdateConvVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.core.vo.PDSGeneralUpdateConvVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.PDSGeneralUpdateConvVo vo = null;
		if(map != null)
			vo = (ims.core.vo.PDSGeneralUpdateConvVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.core.vo.PDSGeneralUpdateConvVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.vo.RefVoBean getCid()
	{
		return this.cid;
	}
	public void setCid(ims.vo.RefVoBean value)
	{
		this.cid = value;
	}
	public ims.vo.RefVoBean getCurrent()
	{
		return this.current;
	}
	public void setCurrent(ims.vo.RefVoBean value)
	{
		this.current = value;
	}
	public ims.vo.RefVoBean[] getPoints()
	{
		return this.points;
	}
	public void setPoints(ims.vo.RefVoBean[] value)
	{
		this.points = value;
	}
	public ims.vo.RefVoBean[] getMsgUids()
	{
		return this.msguids;
	}
	public void setMsgUids(ims.vo.RefVoBean[] value)
	{
		this.msguids = value;
	}
	public Boolean getDummy()
	{
		return this.dummy;
	}
	public void setDummy(Boolean value)
	{
		this.dummy = value;
	}

	private Integer id;
	private int version;
	private ims.vo.RefVoBean cid;
	private ims.vo.RefVoBean current;
	private ims.vo.RefVoBean[] points;
	private ims.vo.RefVoBean[] msguids;
	private Boolean dummy;
}
