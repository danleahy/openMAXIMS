//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo.beans;

public class WardBayConfigForWardViewVoBean extends ims.vo.ValueObjectBean
{
	public WardBayConfigForWardViewVoBean()
	{
	}
	public WardBayConfigForWardViewVoBean(ims.core.vo.WardBayConfigForWardViewVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.ward = vo.getWard() == null ? null : (ims.core.vo.beans.LocationLiteVoBean)vo.getWard().getBean();
		this.bays = vo.getBays() == null ? null : vo.getBays().getBeanCollection();
		this.mainspecialty = vo.getMainSpecialty() == null ? null : (ims.vo.LookupInstanceBean)vo.getMainSpecialty().getBean();
		this.specialties = vo.getSpecialties() == null ? null : vo.getSpecialties().getBeanCollection();
		this.iswaitingarea = vo.getIsWaitingArea();
		this.bedsallocated = vo.getBedsAllocated() == null ? null : vo.getBedsAllocated().getBeanCollection();
		this.wardavailabilitystatus = vo.getWardAvailabilityStatus() == null ? null : (ims.vo.LookupInstanceBean)vo.getWardAvailabilityStatus().getBean();
		this.closingdetails = vo.getClosingDetails() == null ? null : vo.getClosingDetails().getBeanCollection();
		this.blockingdetails = vo.getBlockingDetails() == null ? null : vo.getBlockingDetails().getBeanCollection();
		this.numofbeds = vo.getNumOfBeds();
		this.numofoccupiedbeds = vo.getNumOfOccupiedBeds();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.WardBayConfigForWardViewVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.ward = vo.getWard() == null ? null : (ims.core.vo.beans.LocationLiteVoBean)vo.getWard().getBean(map);
		this.bays = vo.getBays() == null ? null : vo.getBays().getBeanCollection();
		this.mainspecialty = vo.getMainSpecialty() == null ? null : (ims.vo.LookupInstanceBean)vo.getMainSpecialty().getBean();
		this.specialties = vo.getSpecialties() == null ? null : vo.getSpecialties().getBeanCollection();
		this.iswaitingarea = vo.getIsWaitingArea();
		this.bedsallocated = vo.getBedsAllocated() == null ? null : vo.getBedsAllocated().getBeanCollection();
		this.wardavailabilitystatus = vo.getWardAvailabilityStatus() == null ? null : (ims.vo.LookupInstanceBean)vo.getWardAvailabilityStatus().getBean();
		this.closingdetails = vo.getClosingDetails() == null ? null : vo.getClosingDetails().getBeanCollection();
		this.blockingdetails = vo.getBlockingDetails() == null ? null : vo.getBlockingDetails().getBeanCollection();
		this.numofbeds = vo.getNumOfBeds();
		this.numofoccupiedbeds = vo.getNumOfOccupiedBeds();
	}

	public ims.core.vo.WardBayConfigForWardViewVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.core.vo.WardBayConfigForWardViewVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.WardBayConfigForWardViewVo vo = null;
		if(map != null)
			vo = (ims.core.vo.WardBayConfigForWardViewVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.core.vo.WardBayConfigForWardViewVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.core.vo.beans.LocationLiteVoBean getWard()
	{
		return this.ward;
	}
	public void setWard(ims.core.vo.beans.LocationLiteVoBean value)
	{
		this.ward = value;
	}
	public ims.core.vo.beans.BayConfigForWardViewVoBean[] getBays()
	{
		return this.bays;
	}
	public void setBays(ims.core.vo.beans.BayConfigForWardViewVoBean[] value)
	{
		this.bays = value;
	}
	public ims.vo.LookupInstanceBean getMainSpecialty()
	{
		return this.mainspecialty;
	}
	public void setMainSpecialty(ims.vo.LookupInstanceBean value)
	{
		this.mainspecialty = value;
	}
	public java.util.Collection getSpecialties()
	{
		return this.specialties;
	}
	public void setSpecialties(java.util.Collection value)
	{
		this.specialties = value;
	}
	public void addSpecialties(java.util.Collection value)
	{
		if(this.specialties == null)
			this.specialties = new java.util.ArrayList();
		this.specialties.add(value);
	}
	public Boolean getIsWaitingArea()
	{
		return this.iswaitingarea;
	}
	public void setIsWaitingArea(Boolean value)
	{
		this.iswaitingarea = value;
	}
	public ims.core.vo.beans.BedsAllocatedVoBean[] getBedsAllocated()
	{
		return this.bedsallocated;
	}
	public void setBedsAllocated(ims.core.vo.beans.BedsAllocatedVoBean[] value)
	{
		this.bedsallocated = value;
	}
	public ims.vo.LookupInstanceBean getWardAvailabilityStatus()
	{
		return this.wardavailabilitystatus;
	}
	public void setWardAvailabilityStatus(ims.vo.LookupInstanceBean value)
	{
		this.wardavailabilitystatus = value;
	}
	public ims.core.vo.beans.WardBayClosingDetailsVoBean[] getClosingDetails()
	{
		return this.closingdetails;
	}
	public void setClosingDetails(ims.core.vo.beans.WardBayClosingDetailsVoBean[] value)
	{
		this.closingdetails = value;
	}
	public ims.core.vo.beans.WardBayBlockingDetailsVoBean[] getBlockingDetails()
	{
		return this.blockingdetails;
	}
	public void setBlockingDetails(ims.core.vo.beans.WardBayBlockingDetailsVoBean[] value)
	{
		this.blockingdetails = value;
	}
	public Integer getNumOfBeds()
	{
		return this.numofbeds;
	}
	public void setNumOfBeds(Integer value)
	{
		this.numofbeds = value;
	}
	public Integer getNumOfOccupiedBeds()
	{
		return this.numofoccupiedbeds;
	}
	public void setNumOfOccupiedBeds(Integer value)
	{
		this.numofoccupiedbeds = value;
	}

	private Integer id;
	private int version;
	private ims.core.vo.beans.LocationLiteVoBean ward;
	private ims.core.vo.beans.BayConfigForWardViewVoBean[] bays;
	private ims.vo.LookupInstanceBean mainspecialty;
	private java.util.Collection specialties;
	private Boolean iswaitingarea;
	private ims.core.vo.beans.BedsAllocatedVoBean[] bedsallocated;
	private ims.vo.LookupInstanceBean wardavailabilitystatus;
	private ims.core.vo.beans.WardBayClosingDetailsVoBean[] closingdetails;
	private ims.core.vo.beans.WardBayBlockingDetailsVoBean[] blockingdetails;
	private Integer numofbeds;
	private Integer numofoccupiedbeds;
}
