//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo.beans;

public class WardViewPatientListVoBean extends ims.vo.ValueObjectBean
{
	public WardViewPatientListVoBean()
	{
	}
	public WardViewPatientListVoBean(ims.core.vo.WardViewPatientListVo vo)
	{
		this.patient = vo.getPatient() == null ? null : (ims.core.vo.beans.PatientLite_IdentifiersVoBean)vo.getPatient().getBean();
		this.inpatientepisode = vo.getInpatientEpisode() == null ? null : (ims.core.vo.beans.InpatientEpisodeForWardPatientListVoBean)vo.getInpatientEpisode().getBean();
		this.bedspacestate = vo.getBedSpaceState() == null ? null : new ims.vo.RefVoBean(vo.getBedSpaceState().getBoId(), vo.getBedSpaceState().getBoVersion());
		this.pendingtransfer = vo.getPendingTransfer() == null ? null : (ims.core.vo.beans.PendingTransferForBedReadyDetailsVoBean)vo.getPendingTransfer().getBean();
		this.latestpatientsecs = vo.getLatestPatientSECS() == null ? null : (ims.clinical.vo.beans.PatientSECSLiteVoBean)vo.getLatestPatientSECS().getBean();
		this.canreopenhomeleave = vo.getCanReopenHomeLeave();
		this.bayavailabilitystatus = vo.getBayAvailabilityStatus() == null ? null : (ims.vo.LookupInstanceBean)vo.getBayAvailabilityStatus().getBean();
		this.haspendingtransfer = vo.getHasPendingTransfer();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.WardViewPatientListVo vo)
	{
		this.patient = vo.getPatient() == null ? null : (ims.core.vo.beans.PatientLite_IdentifiersVoBean)vo.getPatient().getBean(map);
		this.inpatientepisode = vo.getInpatientEpisode() == null ? null : (ims.core.vo.beans.InpatientEpisodeForWardPatientListVoBean)vo.getInpatientEpisode().getBean(map);
		this.bedspacestate = vo.getBedSpaceState() == null ? null : new ims.vo.RefVoBean(vo.getBedSpaceState().getBoId(), vo.getBedSpaceState().getBoVersion());
		this.pendingtransfer = vo.getPendingTransfer() == null ? null : (ims.core.vo.beans.PendingTransferForBedReadyDetailsVoBean)vo.getPendingTransfer().getBean(map);
		this.latestpatientsecs = vo.getLatestPatientSECS() == null ? null : (ims.clinical.vo.beans.PatientSECSLiteVoBean)vo.getLatestPatientSECS().getBean(map);
		this.canreopenhomeleave = vo.getCanReopenHomeLeave();
		this.bayavailabilitystatus = vo.getBayAvailabilityStatus() == null ? null : (ims.vo.LookupInstanceBean)vo.getBayAvailabilityStatus().getBean();
		this.haspendingtransfer = vo.getHasPendingTransfer();
	}

	public ims.core.vo.WardViewPatientListVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.core.vo.WardViewPatientListVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.WardViewPatientListVo vo = null;
		if(map != null)
			vo = (ims.core.vo.WardViewPatientListVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.core.vo.WardViewPatientListVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public ims.core.vo.beans.PatientLite_IdentifiersVoBean getPatient()
	{
		return this.patient;
	}
	public void setPatient(ims.core.vo.beans.PatientLite_IdentifiersVoBean value)
	{
		this.patient = value;
	}
	public ims.core.vo.beans.InpatientEpisodeForWardPatientListVoBean getInpatientEpisode()
	{
		return this.inpatientepisode;
	}
	public void setInpatientEpisode(ims.core.vo.beans.InpatientEpisodeForWardPatientListVoBean value)
	{
		this.inpatientepisode = value;
	}
	public ims.vo.RefVoBean getBedSpaceState()
	{
		return this.bedspacestate;
	}
	public void setBedSpaceState(ims.vo.RefVoBean value)
	{
		this.bedspacestate = value;
	}
	public ims.core.vo.beans.PendingTransferForBedReadyDetailsVoBean getPendingTransfer()
	{
		return this.pendingtransfer;
	}
	public void setPendingTransfer(ims.core.vo.beans.PendingTransferForBedReadyDetailsVoBean value)
	{
		this.pendingtransfer = value;
	}
	public ims.clinical.vo.beans.PatientSECSLiteVoBean getLatestPatientSECS()
	{
		return this.latestpatientsecs;
	}
	public void setLatestPatientSECS(ims.clinical.vo.beans.PatientSECSLiteVoBean value)
	{
		this.latestpatientsecs = value;
	}
	public Boolean getCanReopenHomeLeave()
	{
		return this.canreopenhomeleave;
	}
	public void setCanReopenHomeLeave(Boolean value)
	{
		this.canreopenhomeleave = value;
	}
	public ims.vo.LookupInstanceBean getBayAvailabilityStatus()
	{
		return this.bayavailabilitystatus;
	}
	public void setBayAvailabilityStatus(ims.vo.LookupInstanceBean value)
	{
		this.bayavailabilitystatus = value;
	}
	public Boolean getHasPendingTransfer()
	{
		return this.haspendingtransfer;
	}
	public void setHasPendingTransfer(Boolean value)
	{
		this.haspendingtransfer = value;
	}

	private ims.core.vo.beans.PatientLite_IdentifiersVoBean patient;
	private ims.core.vo.beans.InpatientEpisodeForWardPatientListVoBean inpatientepisode;
	private ims.vo.RefVoBean bedspacestate;
	private ims.core.vo.beans.PendingTransferForBedReadyDetailsVoBean pendingtransfer;
	private ims.clinical.vo.beans.PatientSECSLiteVoBean latestpatientsecs;
	private Boolean canreopenhomeleave;
	private ims.vo.LookupInstanceBean bayavailabilitystatus;
	private Boolean haspendingtransfer;
}
