//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo;

/**
 * Linked to core.clinical.VaccineManufacturerBatch business object (ID: 1003100089).
 */
public class VaccineManufacturerBatchVo extends ims.core.clinical.vo.VaccineManufacturerBatchRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public VaccineManufacturerBatchVo()
	{
	}
	public VaccineManufacturerBatchVo(Integer id, int version)
	{
		super(id, version);
	}
	public VaccineManufacturerBatchVo(ims.core.vo.beans.VaccineManufacturerBatchVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.vaccine = bean.getVaccine() == null ? null : bean.getVaccine().buildVo();
		this.manufacturer = bean.getManufacturer() == null ? null : ims.clinical.vo.lookups.VaccineManufacturer.buildLookup(bean.getManufacturer());
		this.expirydate = bean.getExpiryDate() == null ? null : bean.getExpiryDate().buildDate();
		this.batchnumber = bean.getBatchNumber();
		this.status = bean.getStatus() == null ? null : ims.core.vo.lookups.PreActiveActiveInactiveStatus.buildLookup(bean.getStatus());
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.beans.VaccineManufacturerBatchVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.vaccine = bean.getVaccine() == null ? null : bean.getVaccine().buildVo(map);
		this.manufacturer = bean.getManufacturer() == null ? null : ims.clinical.vo.lookups.VaccineManufacturer.buildLookup(bean.getManufacturer());
		this.expirydate = bean.getExpiryDate() == null ? null : bean.getExpiryDate().buildDate();
		this.batchnumber = bean.getBatchNumber();
		this.status = bean.getStatus() == null ? null : ims.core.vo.lookups.PreActiveActiveInactiveStatus.buildLookup(bean.getStatus());
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.beans.VaccineManufacturerBatchVoBean bean = null;
		if(map != null)
			bean = (ims.core.vo.beans.VaccineManufacturerBatchVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.core.vo.beans.VaccineManufacturerBatchVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("VACCINE"))
			return getVaccine();
		if(fieldName.equals("MANUFACTURER"))
			return getManufacturer();
		if(fieldName.equals("EXPIRYDATE"))
			return getExpiryDate();
		if(fieldName.equals("BATCHNUMBER"))
			return getBatchNumber();
		if(fieldName.equals("STATUS"))
			return getStatus();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getVaccineIsNotNull()
	{
		return this.vaccine != null;
	}
	public ims.core.vo.VaccineLiteVo getVaccine()
	{
		return this.vaccine;
	}
	public void setVaccine(ims.core.vo.VaccineLiteVo value)
	{
		this.isValidated = false;
		this.vaccine = value;
	}
	public boolean getManufacturerIsNotNull()
	{
		return this.manufacturer != null;
	}
	public ims.clinical.vo.lookups.VaccineManufacturer getManufacturer()
	{
		return this.manufacturer;
	}
	public void setManufacturer(ims.clinical.vo.lookups.VaccineManufacturer value)
	{
		this.isValidated = false;
		this.manufacturer = value;
	}
	public boolean getExpiryDateIsNotNull()
	{
		return this.expirydate != null;
	}
	public ims.framework.utils.Date getExpiryDate()
	{
		return this.expirydate;
	}
	public void setExpiryDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.expirydate = value;
	}
	public boolean getBatchNumberIsNotNull()
	{
		return this.batchnumber != null;
	}
	public String getBatchNumber()
	{
		return this.batchnumber;
	}
	public static int getBatchNumberMaxLength()
	{
		return 25;
	}
	public void setBatchNumber(String value)
	{
		this.isValidated = false;
		this.batchnumber = value;
	}
	public boolean getStatusIsNotNull()
	{
		return this.status != null;
	}
	public ims.core.vo.lookups.PreActiveActiveInactiveStatus getStatus()
	{
		return this.status;
	}
	public void setStatus(ims.core.vo.lookups.PreActiveActiveInactiveStatus value)
	{
		this.isValidated = false;
		this.status = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.vaccine == null)
			listOfErrors.add("Vaccine is mandatory");
		if(this.manufacturer == null)
			listOfErrors.add("Manufacturer is mandatory");
		if(this.expirydate == null)
			listOfErrors.add("ExpiryDate is mandatory");
		if(this.batchnumber == null || this.batchnumber.length() == 0)
			listOfErrors.add("BatchNumber is mandatory");
		else if(this.batchnumber.length() > 25)
			listOfErrors.add("The length of the field [batchnumber] in the value object [ims.core.vo.VaccineManufacturerBatchVo] is too big. It should be less or equal to 25");
		if(this.status == null)
			listOfErrors.add("Status is mandatory");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		VaccineManufacturerBatchVo clone = new VaccineManufacturerBatchVo(this.id, this.version);
		
		if(this.vaccine == null)
			clone.vaccine = null;
		else
			clone.vaccine = (ims.core.vo.VaccineLiteVo)this.vaccine.clone();
		if(this.manufacturer == null)
			clone.manufacturer = null;
		else
			clone.manufacturer = (ims.clinical.vo.lookups.VaccineManufacturer)this.manufacturer.clone();
		if(this.expirydate == null)
			clone.expirydate = null;
		else
			clone.expirydate = (ims.framework.utils.Date)this.expirydate.clone();
		clone.batchnumber = this.batchnumber;
		if(this.status == null)
			clone.status = null;
		else
			clone.status = (ims.core.vo.lookups.PreActiveActiveInactiveStatus)this.status.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(VaccineManufacturerBatchVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A VaccineManufacturerBatchVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		VaccineManufacturerBatchVo compareObj = (VaccineManufacturerBatchVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getVaccine() == null && compareObj.getVaccine() != null)
				return -1;
			if(this.getVaccine() != null && compareObj.getVaccine() == null)
				return 1;
			if(this.getVaccine() != null && compareObj.getVaccine() != null)
				retVal = this.getVaccine().compareTo(compareObj.getVaccine());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.vaccine != null)
			count++;
		if(this.manufacturer != null)
			count++;
		if(this.expirydate != null)
			count++;
		if(this.batchnumber != null)
			count++;
		if(this.status != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 5;
	}
	protected ims.core.vo.VaccineLiteVo vaccine;
	protected ims.clinical.vo.lookups.VaccineManufacturer manufacturer;
	protected ims.framework.utils.Date expirydate;
	protected String batchnumber;
	protected ims.core.vo.lookups.PreActiveActiveInactiveStatus status;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
