//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.therapies.vo.beans;

public class TherapiesContactVoBean extends ims.vo.ValueObjectBean
{
	public TherapiesContactVoBean()
	{
	}
	public TherapiesContactVoBean(ims.therapies.vo.TherapiesContactVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.carecontext = vo.getCareContext() == null ? null : new ims.vo.RefVoBean(vo.getCareContext().getBoId(), vo.getCareContext().getBoVersion());
		this.contacthcp = vo.getContactHCP() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getContactHCP().getBean();
		this.hcpdiscipline = vo.getHCPDiscipline() == null ? null : (ims.vo.LookupInstanceBean)vo.getHCPDiscipline().getBean();
		this.contactdatetime = vo.getContactDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getContactDateTime().getBean();
		this.episodeofcare = vo.getEpisodeOfCare() == null ? null : new ims.vo.RefVoBean(vo.getEpisodeOfCare().getBoId(), vo.getEpisodeOfCare().getBoVersion());
		this.recordinginfo = vo.getRecordingInfo() == null ? null : (ims.core.vo.beans.AuthoringInformationVoBean)vo.getRecordingInfo().getBean();
		this.contacttype = vo.getContactType() == null ? null : (ims.vo.LookupInstanceBean)vo.getContactType().getBean();
		this.referringproblem = vo.getReferringProblem() == null ? null : (ims.vo.LookupInstanceBean)vo.getReferringProblem().getBean();
		this.consentreason = vo.getConsentReason() == null ? null : (ims.vo.LookupInstanceBean)vo.getConsentReason().getBean();
		this.isfirstcontact = vo.getIsFirstContact();
		if(vo.getActivities() != null)
		{
			this.activities = new ims.vo.RefVoBean[vo.getActivities().size()];
			for(int activities_i = 0; activities_i < vo.getActivities().size(); activities_i++)
			{
				this.activities[activities_i] = new ims.vo.RefVoBean(vo.getActivities().get(activities_i).getBoId(),vo.getActivities().get(activities_i).getBoVersion());
			}
		}
		this.patientconsenttotreatment = vo.getPatientConsentToTreatment();
		this.numofadditionalhcps = vo.getNumOfAdditionalHCPs();
		this.responsiblehcp = vo.getResponsibleHCP() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getResponsibleHCP().getBean();
		this.noactivityundertaken = vo.getNoActivityUndertaken();
		this.additionalhcps = vo.getAdditionalHCPs() == null ? null : vo.getAdditionalHCPs().getBeanCollection();
		this.caseload = vo.getCaseload() == null ? null : (ims.vo.LookupInstanceBean)vo.getCaseload().getBean();
		this.timerequired = vo.getTimeRequired();
		this.timespent = vo.getTimeSpent();
		this.systeminformation = vo.getSystemInformation() == null ? null : (ims.vo.SysInfoBean)vo.getSystemInformation().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.therapies.vo.TherapiesContactVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.carecontext = vo.getCareContext() == null ? null : new ims.vo.RefVoBean(vo.getCareContext().getBoId(), vo.getCareContext().getBoVersion());
		this.contacthcp = vo.getContactHCP() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getContactHCP().getBean(map);
		this.hcpdiscipline = vo.getHCPDiscipline() == null ? null : (ims.vo.LookupInstanceBean)vo.getHCPDiscipline().getBean();
		this.contactdatetime = vo.getContactDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getContactDateTime().getBean();
		this.episodeofcare = vo.getEpisodeOfCare() == null ? null : new ims.vo.RefVoBean(vo.getEpisodeOfCare().getBoId(), vo.getEpisodeOfCare().getBoVersion());
		this.recordinginfo = vo.getRecordingInfo() == null ? null : (ims.core.vo.beans.AuthoringInformationVoBean)vo.getRecordingInfo().getBean(map);
		this.contacttype = vo.getContactType() == null ? null : (ims.vo.LookupInstanceBean)vo.getContactType().getBean();
		this.referringproblem = vo.getReferringProblem() == null ? null : (ims.vo.LookupInstanceBean)vo.getReferringProblem().getBean();
		this.consentreason = vo.getConsentReason() == null ? null : (ims.vo.LookupInstanceBean)vo.getConsentReason().getBean();
		this.isfirstcontact = vo.getIsFirstContact();
		if(vo.getActivities() != null)
		{
			this.activities = new ims.vo.RefVoBean[vo.getActivities().size()];
			for(int activities_i = 0; activities_i < vo.getActivities().size(); activities_i++)
			{
				this.activities[activities_i] = new ims.vo.RefVoBean(vo.getActivities().get(activities_i).getBoId(),vo.getActivities().get(activities_i).getBoVersion());
			}
		}
		this.patientconsenttotreatment = vo.getPatientConsentToTreatment();
		this.numofadditionalhcps = vo.getNumOfAdditionalHCPs();
		this.responsiblehcp = vo.getResponsibleHCP() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getResponsibleHCP().getBean(map);
		this.noactivityundertaken = vo.getNoActivityUndertaken();
		this.additionalhcps = vo.getAdditionalHCPs() == null ? null : vo.getAdditionalHCPs().getBeanCollection();
		this.caseload = vo.getCaseload() == null ? null : (ims.vo.LookupInstanceBean)vo.getCaseload().getBean();
		this.timerequired = vo.getTimeRequired();
		this.timespent = vo.getTimeSpent();
		this.systeminformation = vo.getSystemInformation() == null ? null : (ims.vo.SysInfoBean)vo.getSystemInformation().getBean();
	}

	public ims.therapies.vo.TherapiesContactVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.therapies.vo.TherapiesContactVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.therapies.vo.TherapiesContactVo vo = null;
		if(map != null)
			vo = (ims.therapies.vo.TherapiesContactVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.therapies.vo.TherapiesContactVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.vo.RefVoBean getCareContext()
	{
		return this.carecontext;
	}
	public void setCareContext(ims.vo.RefVoBean value)
	{
		this.carecontext = value;
	}
	public ims.core.vo.beans.HcpLiteVoBean getContactHCP()
	{
		return this.contacthcp;
	}
	public void setContactHCP(ims.core.vo.beans.HcpLiteVoBean value)
	{
		this.contacthcp = value;
	}
	public ims.vo.LookupInstanceBean getHCPDiscipline()
	{
		return this.hcpdiscipline;
	}
	public void setHCPDiscipline(ims.vo.LookupInstanceBean value)
	{
		this.hcpdiscipline = value;
	}
	public ims.framework.utils.beans.DateTimeBean getContactDateTime()
	{
		return this.contactdatetime;
	}
	public void setContactDateTime(ims.framework.utils.beans.DateTimeBean value)
	{
		this.contactdatetime = value;
	}
	public ims.vo.RefVoBean getEpisodeOfCare()
	{
		return this.episodeofcare;
	}
	public void setEpisodeOfCare(ims.vo.RefVoBean value)
	{
		this.episodeofcare = value;
	}
	public ims.core.vo.beans.AuthoringInformationVoBean getRecordingInfo()
	{
		return this.recordinginfo;
	}
	public void setRecordingInfo(ims.core.vo.beans.AuthoringInformationVoBean value)
	{
		this.recordinginfo = value;
	}
	public ims.vo.LookupInstanceBean getContactType()
	{
		return this.contacttype;
	}
	public void setContactType(ims.vo.LookupInstanceBean value)
	{
		this.contacttype = value;
	}
	public ims.vo.LookupInstanceBean getReferringProblem()
	{
		return this.referringproblem;
	}
	public void setReferringProblem(ims.vo.LookupInstanceBean value)
	{
		this.referringproblem = value;
	}
	public ims.vo.LookupInstanceBean getConsentReason()
	{
		return this.consentreason;
	}
	public void setConsentReason(ims.vo.LookupInstanceBean value)
	{
		this.consentreason = value;
	}
	public Boolean getIsFirstContact()
	{
		return this.isfirstcontact;
	}
	public void setIsFirstContact(Boolean value)
	{
		this.isfirstcontact = value;
	}
	public ims.vo.RefVoBean[] getActivities()
	{
		return this.activities;
	}
	public void setActivities(ims.vo.RefVoBean[] value)
	{
		this.activities = value;
	}
	public Boolean getPatientConsentToTreatment()
	{
		return this.patientconsenttotreatment;
	}
	public void setPatientConsentToTreatment(Boolean value)
	{
		this.patientconsenttotreatment = value;
	}
	public Integer getNumOfAdditionalHCPs()
	{
		return this.numofadditionalhcps;
	}
	public void setNumOfAdditionalHCPs(Integer value)
	{
		this.numofadditionalhcps = value;
	}
	public ims.core.vo.beans.HcpLiteVoBean getResponsibleHCP()
	{
		return this.responsiblehcp;
	}
	public void setResponsibleHCP(ims.core.vo.beans.HcpLiteVoBean value)
	{
		this.responsiblehcp = value;
	}
	public Boolean getNoActivityUndertaken()
	{
		return this.noactivityundertaken;
	}
	public void setNoActivityUndertaken(Boolean value)
	{
		this.noactivityundertaken = value;
	}
	public ims.therapies.vo.beans.AdditionalHCPVoBean[] getAdditionalHCPs()
	{
		return this.additionalhcps;
	}
	public void setAdditionalHCPs(ims.therapies.vo.beans.AdditionalHCPVoBean[] value)
	{
		this.additionalhcps = value;
	}
	public ims.vo.LookupInstanceBean getCaseload()
	{
		return this.caseload;
	}
	public void setCaseload(ims.vo.LookupInstanceBean value)
	{
		this.caseload = value;
	}
	public Integer getTimeRequired()
	{
		return this.timerequired;
	}
	public void setTimeRequired(Integer value)
	{
		this.timerequired = value;
	}
	public Integer getTimeSpent()
	{
		return this.timespent;
	}
	public void setTimeSpent(Integer value)
	{
		this.timespent = value;
	}
	public ims.vo.SysInfoBean getSystemInformation()
	{
		return this.systeminformation;
	}
	public void setSystemInformation(ims.vo.SysInfoBean value)
	{
		this.systeminformation = value;
	}

	private Integer id;
	private int version;
	private ims.vo.RefVoBean carecontext;
	private ims.core.vo.beans.HcpLiteVoBean contacthcp;
	private ims.vo.LookupInstanceBean hcpdiscipline;
	private ims.framework.utils.beans.DateTimeBean contactdatetime;
	private ims.vo.RefVoBean episodeofcare;
	private ims.core.vo.beans.AuthoringInformationVoBean recordinginfo;
	private ims.vo.LookupInstanceBean contacttype;
	private ims.vo.LookupInstanceBean referringproblem;
	private ims.vo.LookupInstanceBean consentreason;
	private Boolean isfirstcontact;
	private ims.vo.RefVoBean[] activities;
	private Boolean patientconsenttotreatment;
	private Integer numofadditionalhcps;
	private ims.core.vo.beans.HcpLiteVoBean responsiblehcp;
	private Boolean noactivityundertaken;
	private ims.therapies.vo.beans.AdditionalHCPVoBean[] additionalhcps;
	private ims.vo.LookupInstanceBean caseload;
	private Integer timerequired;
	private Integer timespent;
	private ims.vo.SysInfoBean systeminformation;
}
