//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.dtomove.vo;

/**
 * Linked to dto_move.Session business object (ID: 1105100022).
 */
public class SessionVo extends ims.dto_move.vo.SessionRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public SessionVo()
	{
	}
	public SessionVo(Integer id, int version)
	{
		super(id, version);
	}
	public SessionVo(ims.dtomove.vo.beans.SessionVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.profile_id = bean.getProfile_id();
		this.group_id = bean.getGroup_id();
		this.activityid = bean.getActivityId();
		this.session_date = bean.getSession_date() == null ? null : bean.getSession_date().buildDate();
		this.start_time = bean.getStart_time();
		this.end_time = bean.getEnd_time();
		this.max_appts = bean.getMax_appts();
		this.lastapptinterval = bean.getLastApptInterval();
		this.remappts = bean.getRemAppts();
		this.internallocid = bean.getInternalLocId();
		this.tci_rounding = bean.getTci_rounding();
		this.timerem = bean.getTimeRem();
		this.active = bean.getActive();
		this.state = bean.getState();
		this.duration = bean.getDuration();
		this.reason = bean.getReason();
		this.modindicator = bean.getModIndicator();
		this.mininterval = bean.getMinInterval();
		this.description = bean.getDescription();
		this.ad_hoc = bean.getAd_hoc();
		if(bean.getBooking_rights() != null)
		{
			this.booking_rights = new ims.dto_move.vo.SessionUserRefVoCollection();
			for(int booking_rights_i = 0; booking_rights_i < bean.getBooking_rights().length; booking_rights_i++)
			{
				this.booking_rights.add(new ims.dto_move.vo.SessionUserRefVo(new Integer(bean.getBooking_rights()[booking_rights_i].getId()), bean.getBooking_rights()[booking_rights_i].getVersion()));
			}
		}
		if(bean.getExclTimes() != null)
		{
			this.excltimes = new ims.dto_move.vo.SessionExclusionTimeRefVoCollection();
			for(int excltimes_i = 0; excltimes_i < bean.getExclTimes().length; excltimes_i++)
			{
				this.excltimes.add(new ims.dto_move.vo.SessionExclusionTimeRefVo(new Integer(bean.getExclTimes()[excltimes_i].getId()), bean.getExclTimes()[excltimes_i].getVersion()));
			}
		}
		this.sessiondetail = ims.dtomove.vo.SessionDetailVoCollection.buildFromBeanCollection(bean.getSessionDetail());
		if(bean.getActions() != null)
		{
			this.actions = new ims.dto_move.vo.SessionActionRefVoCollection();
			for(int actions_i = 0; actions_i < bean.getActions().length; actions_i++)
			{
				this.actions.add(new ims.dto_move.vo.SessionActionRefVo(new Integer(bean.getActions()[actions_i].getId()), bean.getActions()[actions_i].getVersion()));
			}
		}
		if(bean.getListOwner() != null)
		{
			this.listowner = new ims.dto_move.vo.SessionListOwnerRefVoCollection();
			for(int listowner_i = 0; listowner_i < bean.getListOwner().length; listowner_i++)
			{
				this.listowner.add(new ims.dto_move.vo.SessionListOwnerRefVo(new Integer(bean.getListOwner()[listowner_i].getId()), bean.getListOwner()[listowner_i].getVersion()));
			}
		}
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.dtomove.vo.beans.SessionVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.profile_id = bean.getProfile_id();
		this.group_id = bean.getGroup_id();
		this.activityid = bean.getActivityId();
		this.session_date = bean.getSession_date() == null ? null : bean.getSession_date().buildDate();
		this.start_time = bean.getStart_time();
		this.end_time = bean.getEnd_time();
		this.max_appts = bean.getMax_appts();
		this.lastapptinterval = bean.getLastApptInterval();
		this.remappts = bean.getRemAppts();
		this.internallocid = bean.getInternalLocId();
		this.tci_rounding = bean.getTci_rounding();
		this.timerem = bean.getTimeRem();
		this.active = bean.getActive();
		this.state = bean.getState();
		this.duration = bean.getDuration();
		this.reason = bean.getReason();
		this.modindicator = bean.getModIndicator();
		this.mininterval = bean.getMinInterval();
		this.description = bean.getDescription();
		this.ad_hoc = bean.getAd_hoc();
		if(bean.getBooking_rights() != null)
		{
			this.booking_rights = new ims.dto_move.vo.SessionUserRefVoCollection();
			for(int booking_rights_i = 0; booking_rights_i < bean.getBooking_rights().length; booking_rights_i++)
			{
				this.booking_rights.add(new ims.dto_move.vo.SessionUserRefVo(new Integer(bean.getBooking_rights()[booking_rights_i].getId()), bean.getBooking_rights()[booking_rights_i].getVersion()));
			}
		}
		if(bean.getExclTimes() != null)
		{
			this.excltimes = new ims.dto_move.vo.SessionExclusionTimeRefVoCollection();
			for(int excltimes_i = 0; excltimes_i < bean.getExclTimes().length; excltimes_i++)
			{
				this.excltimes.add(new ims.dto_move.vo.SessionExclusionTimeRefVo(new Integer(bean.getExclTimes()[excltimes_i].getId()), bean.getExclTimes()[excltimes_i].getVersion()));
			}
		}
		this.sessiondetail = ims.dtomove.vo.SessionDetailVoCollection.buildFromBeanCollection(bean.getSessionDetail());
		if(bean.getActions() != null)
		{
			this.actions = new ims.dto_move.vo.SessionActionRefVoCollection();
			for(int actions_i = 0; actions_i < bean.getActions().length; actions_i++)
			{
				this.actions.add(new ims.dto_move.vo.SessionActionRefVo(new Integer(bean.getActions()[actions_i].getId()), bean.getActions()[actions_i].getVersion()));
			}
		}
		if(bean.getListOwner() != null)
		{
			this.listowner = new ims.dto_move.vo.SessionListOwnerRefVoCollection();
			for(int listowner_i = 0; listowner_i < bean.getListOwner().length; listowner_i++)
			{
				this.listowner.add(new ims.dto_move.vo.SessionListOwnerRefVo(new Integer(bean.getListOwner()[listowner_i].getId()), bean.getListOwner()[listowner_i].getVersion()));
			}
		}
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.dtomove.vo.beans.SessionVoBean bean = null;
		if(map != null)
			bean = (ims.dtomove.vo.beans.SessionVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.dtomove.vo.beans.SessionVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("PROFILE_ID"))
			return getProfile_id();
		if(fieldName.equals("GROUP_ID"))
			return getGroup_id();
		if(fieldName.equals("ACTIVITYID"))
			return getActivityId();
		if(fieldName.equals("SESSION_DATE"))
			return getSession_date();
		if(fieldName.equals("START_TIME"))
			return getStart_time();
		if(fieldName.equals("END_TIME"))
			return getEnd_time();
		if(fieldName.equals("MAX_APPTS"))
			return getMax_appts();
		if(fieldName.equals("LASTAPPTINTERVAL"))
			return getLastApptInterval();
		if(fieldName.equals("REMAPPTS"))
			return getRemAppts();
		if(fieldName.equals("INTERNALLOCID"))
			return getInternalLocId();
		if(fieldName.equals("TCI_ROUNDING"))
			return getTci_rounding();
		if(fieldName.equals("TIMEREM"))
			return getTimeRem();
		if(fieldName.equals("ACTIVE"))
			return getActive();
		if(fieldName.equals("STATE"))
			return getState();
		if(fieldName.equals("DURATION"))
			return getDuration();
		if(fieldName.equals("REASON"))
			return getReason();
		if(fieldName.equals("MODINDICATOR"))
			return getModIndicator();
		if(fieldName.equals("MININTERVAL"))
			return getMinInterval();
		if(fieldName.equals("DESCRIPTION"))
			return getDescription();
		if(fieldName.equals("AD_HOC"))
			return getAd_hoc();
		if(fieldName.equals("BOOKING_RIGHTS"))
			return getBooking_rights();
		if(fieldName.equals("EXCLTIMES"))
			return getExclTimes();
		if(fieldName.equals("SESSIONDETAIL"))
			return getSessionDetail();
		if(fieldName.equals("ACTIONS"))
			return getActions();
		if(fieldName.equals("LISTOWNER"))
			return getListOwner();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getProfile_idIsNotNull()
	{
		return this.profile_id != null;
	}
	public Integer getProfile_id()
	{
		return this.profile_id;
	}
	public void setProfile_id(Integer value)
	{
		this.isValidated = false;
		this.profile_id = value;
	}
	public boolean getGroup_idIsNotNull()
	{
		return this.group_id != null;
	}
	public Integer getGroup_id()
	{
		return this.group_id;
	}
	public void setGroup_id(Integer value)
	{
		this.isValidated = false;
		this.group_id = value;
	}
	public boolean getActivityIdIsNotNull()
	{
		return this.activityid != null;
	}
	public Integer getActivityId()
	{
		return this.activityid;
	}
	public void setActivityId(Integer value)
	{
		this.isValidated = false;
		this.activityid = value;
	}
	public boolean getSession_dateIsNotNull()
	{
		return this.session_date != null;
	}
	public ims.framework.utils.Date getSession_date()
	{
		return this.session_date;
	}
	public void setSession_date(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.session_date = value;
	}
	public boolean getStart_timeIsNotNull()
	{
		return this.start_time != null;
	}
	public Integer getStart_time()
	{
		return this.start_time;
	}
	public void setStart_time(Integer value)
	{
		this.isValidated = false;
		this.start_time = value;
	}
	public boolean getEnd_timeIsNotNull()
	{
		return this.end_time != null;
	}
	public Integer getEnd_time()
	{
		return this.end_time;
	}
	public void setEnd_time(Integer value)
	{
		this.isValidated = false;
		this.end_time = value;
	}
	public boolean getMax_apptsIsNotNull()
	{
		return this.max_appts != null;
	}
	public Integer getMax_appts()
	{
		return this.max_appts;
	}
	public void setMax_appts(Integer value)
	{
		this.isValidated = false;
		this.max_appts = value;
	}
	public boolean getLastApptIntervalIsNotNull()
	{
		return this.lastapptinterval != null;
	}
	public Integer getLastApptInterval()
	{
		return this.lastapptinterval;
	}
	public void setLastApptInterval(Integer value)
	{
		this.isValidated = false;
		this.lastapptinterval = value;
	}
	public boolean getRemApptsIsNotNull()
	{
		return this.remappts != null;
	}
	public Integer getRemAppts()
	{
		return this.remappts;
	}
	public void setRemAppts(Integer value)
	{
		this.isValidated = false;
		this.remappts = value;
	}
	public boolean getInternalLocIdIsNotNull()
	{
		return this.internallocid != null;
	}
	public Integer getInternalLocId()
	{
		return this.internallocid;
	}
	public void setInternalLocId(Integer value)
	{
		this.isValidated = false;
		this.internallocid = value;
	}
	public boolean getTci_roundingIsNotNull()
	{
		return this.tci_rounding != null;
	}
	public Integer getTci_rounding()
	{
		return this.tci_rounding;
	}
	public void setTci_rounding(Integer value)
	{
		this.isValidated = false;
		this.tci_rounding = value;
	}
	public boolean getTimeRemIsNotNull()
	{
		return this.timerem != null;
	}
	public Integer getTimeRem()
	{
		return this.timerem;
	}
	public void setTimeRem(Integer value)
	{
		this.isValidated = false;
		this.timerem = value;
	}
	public boolean getActiveIsNotNull()
	{
		return this.active != null;
	}
	public String getActive()
	{
		return this.active;
	}
	public static int getActiveMaxLength()
	{
		return 1;
	}
	public void setActive(String value)
	{
		this.isValidated = false;
		this.active = value;
	}
	public boolean getStateIsNotNull()
	{
		return this.state != null;
	}
	public Integer getState()
	{
		return this.state;
	}
	public void setState(Integer value)
	{
		this.isValidated = false;
		this.state = value;
	}
	public boolean getDurationIsNotNull()
	{
		return this.duration != null;
	}
	public Integer getDuration()
	{
		return this.duration;
	}
	public void setDuration(Integer value)
	{
		this.isValidated = false;
		this.duration = value;
	}
	public boolean getReasonIsNotNull()
	{
		return this.reason != null;
	}
	public Integer getReason()
	{
		return this.reason;
	}
	public void setReason(Integer value)
	{
		this.isValidated = false;
		this.reason = value;
	}
	public boolean getModIndicatorIsNotNull()
	{
		return this.modindicator != null;
	}
	public String getModIndicator()
	{
		return this.modindicator;
	}
	public static int getModIndicatorMaxLength()
	{
		return 1;
	}
	public void setModIndicator(String value)
	{
		this.isValidated = false;
		this.modindicator = value;
	}
	public boolean getMinIntervalIsNotNull()
	{
		return this.mininterval != null;
	}
	public Integer getMinInterval()
	{
		return this.mininterval;
	}
	public void setMinInterval(Integer value)
	{
		this.isValidated = false;
		this.mininterval = value;
	}
	public boolean getDescriptionIsNotNull()
	{
		return this.description != null;
	}
	public String getDescription()
	{
		return this.description;
	}
	public static int getDescriptionMaxLength()
	{
		return 255;
	}
	public void setDescription(String value)
	{
		this.isValidated = false;
		this.description = value;
	}
	public boolean getAd_hocIsNotNull()
	{
		return this.ad_hoc != null;
	}
	public String getAd_hoc()
	{
		return this.ad_hoc;
	}
	public static int getAd_hocMaxLength()
	{
		return 1;
	}
	public void setAd_hoc(String value)
	{
		this.isValidated = false;
		this.ad_hoc = value;
	}
	public boolean getBooking_rightsIsNotNull()
	{
		return this.booking_rights != null;
	}
	public ims.dto_move.vo.SessionUserRefVoCollection getBooking_rights()
	{
		return this.booking_rights;
	}
	public void setBooking_rights(ims.dto_move.vo.SessionUserRefVoCollection value)
	{
		this.isValidated = false;
		this.booking_rights = value;
	}
	public boolean getExclTimesIsNotNull()
	{
		return this.excltimes != null;
	}
	public ims.dto_move.vo.SessionExclusionTimeRefVoCollection getExclTimes()
	{
		return this.excltimes;
	}
	public void setExclTimes(ims.dto_move.vo.SessionExclusionTimeRefVoCollection value)
	{
		this.isValidated = false;
		this.excltimes = value;
	}
	public boolean getSessionDetailIsNotNull()
	{
		return this.sessiondetail != null;
	}
	public ims.dtomove.vo.SessionDetailVoCollection getSessionDetail()
	{
		return this.sessiondetail;
	}
	public void setSessionDetail(ims.dtomove.vo.SessionDetailVoCollection value)
	{
		this.isValidated = false;
		this.sessiondetail = value;
	}
	public boolean getActionsIsNotNull()
	{
		return this.actions != null;
	}
	public ims.dto_move.vo.SessionActionRefVoCollection getActions()
	{
		return this.actions;
	}
	public void setActions(ims.dto_move.vo.SessionActionRefVoCollection value)
	{
		this.isValidated = false;
		this.actions = value;
	}
	public boolean getListOwnerIsNotNull()
	{
		return this.listowner != null;
	}
	public ims.dto_move.vo.SessionListOwnerRefVoCollection getListOwner()
	{
		return this.listowner;
	}
	public void setListOwner(ims.dto_move.vo.SessionListOwnerRefVoCollection value)
	{
		this.isValidated = false;
		this.listowner = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.sessiondetail != null)
		{
			if(!this.sessiondetail.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.active != null)
			if(this.active.length() > 1)
				listOfErrors.add("The length of the field [active] in the value object [ims.dtomove.vo.SessionVo] is too big. It should be less or equal to 1");
		if(this.modindicator != null)
			if(this.modindicator.length() > 1)
				listOfErrors.add("The length of the field [modindicator] in the value object [ims.dtomove.vo.SessionVo] is too big. It should be less or equal to 1");
		if(this.description != null)
			if(this.description.length() > 255)
				listOfErrors.add("The length of the field [description] in the value object [ims.dtomove.vo.SessionVo] is too big. It should be less or equal to 255");
		if(this.ad_hoc != null)
			if(this.ad_hoc.length() > 1)
				listOfErrors.add("The length of the field [ad_hoc] in the value object [ims.dtomove.vo.SessionVo] is too big. It should be less or equal to 1");
		if(this.sessiondetail != null)
		{
			String[] listOfOtherErrors = this.sessiondetail.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		SessionVo clone = new SessionVo(this.id, this.version);
		
		clone.profile_id = this.profile_id;
		clone.group_id = this.group_id;
		clone.activityid = this.activityid;
		if(this.session_date == null)
			clone.session_date = null;
		else
			clone.session_date = (ims.framework.utils.Date)this.session_date.clone();
		clone.start_time = this.start_time;
		clone.end_time = this.end_time;
		clone.max_appts = this.max_appts;
		clone.lastapptinterval = this.lastapptinterval;
		clone.remappts = this.remappts;
		clone.internallocid = this.internallocid;
		clone.tci_rounding = this.tci_rounding;
		clone.timerem = this.timerem;
		clone.active = this.active;
		clone.state = this.state;
		clone.duration = this.duration;
		clone.reason = this.reason;
		clone.modindicator = this.modindicator;
		clone.mininterval = this.mininterval;
		clone.description = this.description;
		clone.ad_hoc = this.ad_hoc;
		clone.booking_rights = this.booking_rights;
		clone.excltimes = this.excltimes;
		if(this.sessiondetail == null)
			clone.sessiondetail = null;
		else
			clone.sessiondetail = (ims.dtomove.vo.SessionDetailVoCollection)this.sessiondetail.clone();
		clone.actions = this.actions;
		clone.listowner = this.listowner;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(SessionVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A SessionVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((SessionVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((SessionVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.profile_id != null)
			count++;
		if(this.group_id != null)
			count++;
		if(this.activityid != null)
			count++;
		if(this.session_date != null)
			count++;
		if(this.start_time != null)
			count++;
		if(this.end_time != null)
			count++;
		if(this.max_appts != null)
			count++;
		if(this.lastapptinterval != null)
			count++;
		if(this.remappts != null)
			count++;
		if(this.internallocid != null)
			count++;
		if(this.tci_rounding != null)
			count++;
		if(this.timerem != null)
			count++;
		if(this.active != null)
			count++;
		if(this.state != null)
			count++;
		if(this.duration != null)
			count++;
		if(this.reason != null)
			count++;
		if(this.modindicator != null)
			count++;
		if(this.mininterval != null)
			count++;
		if(this.description != null)
			count++;
		if(this.ad_hoc != null)
			count++;
		if(this.booking_rights != null)
			count++;
		if(this.excltimes != null)
			count++;
		if(this.sessiondetail != null)
			count++;
		if(this.actions != null)
			count++;
		if(this.listowner != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 25;
	}
	protected Integer profile_id;
	protected Integer group_id;
	protected Integer activityid;
	protected ims.framework.utils.Date session_date;
	protected Integer start_time;
	protected Integer end_time;
	protected Integer max_appts;
	protected Integer lastapptinterval;
	protected Integer remappts;
	protected Integer internallocid;
	protected Integer tci_rounding;
	protected Integer timerem;
	protected String active;
	protected Integer state;
	protected Integer duration;
	protected Integer reason;
	protected String modindicator;
	protected Integer mininterval;
	protected String description;
	protected String ad_hoc;
	protected ims.dto_move.vo.SessionUserRefVoCollection booking_rights;
	protected ims.dto_move.vo.SessionExclusionTimeRefVoCollection excltimes;
	protected ims.dtomove.vo.SessionDetailVoCollection sessiondetail;
	protected ims.dto_move.vo.SessionActionRefVoCollection actions;
	protected ims.dto_move.vo.SessionListOwnerRefVoCollection listowner;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
