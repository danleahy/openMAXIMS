//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo;

/**
 * Linked to RefMan.CatsReferral business object (ID: 1004100035).
 */
public class CatsReferralForOverviewVo extends ims.RefMan.vo.CatsReferralRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public CatsReferralForOverviewVo()
	{
	}
	public CatsReferralForOverviewVo(Integer id, int version)
	{
		super(id, version);
	}
	public CatsReferralForOverviewVo(ims.RefMan.vo.beans.CatsReferralForOverviewVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.patient = bean.getPatient() == null ? null : new ims.core.patient.vo.PatientRefVo(new Integer(bean.getPatient().getId()), bean.getPatient().getVersion());
		this.referraldetails = bean.getReferralDetails() == null ? null : bean.getReferralDetails().buildVo();
		this.currentstatus = bean.getCurrentStatus() == null ? null : new ims.RefMan.vo.CATSReferralStatusRefVo(new Integer(bean.getCurrentStatus().getId()), bean.getCurrentStatus().getVersion());
		this.statushistory = ims.RefMan.vo.CatsReferralStatusVoCollection.buildFromBeanCollection(bean.getStatusHistory());
		this.urgency = bean.getUrgency() == null ? null : ims.RefMan.vo.lookups.ReferralUrgency.buildLookup(bean.getUrgency());
		this.pathwayid = bean.getPathwayID();
		this.currentrttstatus = bean.getCurrentRTTStatus() == null ? null : bean.getCurrentRTTStatus().buildVo();
		this.numprovidercancelledappts = bean.getNumProviderCancelledAppts();
		this.numpatientcancelledappts = bean.getNumPatientCancelledAppts();
		this.consultationappt = bean.getConsultationAppt() == null ? null : bean.getConsultationAppt().buildVo();
		this.current31targetdate = bean.getCurrent31TargetDate() == null ? null : bean.getCurrent31TargetDate().buildDate();
		this.current62targetdate = bean.getCurrent62TargetDate() == null ? null : bean.getCurrent62TargetDate().buildDate();
		this.isemergencyreferral = bean.getIsEmergencyReferral();
		this.icabreferral = bean.getICABReferral() == null ? null : bean.getICABReferral().buildVo();
		this.contract = bean.getContract() == null ? null : new ims.core.configuration.vo.ContractConfigRefVo(new Integer(bean.getContract().getId()), bean.getContract().getVersion());
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.beans.CatsReferralForOverviewVoBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.patient = bean.getPatient() == null ? null : new ims.core.patient.vo.PatientRefVo(new Integer(bean.getPatient().getId()), bean.getPatient().getVersion());
		this.referraldetails = bean.getReferralDetails() == null ? null : bean.getReferralDetails().buildVo(map);
		this.currentstatus = bean.getCurrentStatus() == null ? null : new ims.RefMan.vo.CATSReferralStatusRefVo(new Integer(bean.getCurrentStatus().getId()), bean.getCurrentStatus().getVersion());
		this.statushistory = ims.RefMan.vo.CatsReferralStatusVoCollection.buildFromBeanCollection(bean.getStatusHistory());
		this.urgency = bean.getUrgency() == null ? null : ims.RefMan.vo.lookups.ReferralUrgency.buildLookup(bean.getUrgency());
		this.pathwayid = bean.getPathwayID();
		this.currentrttstatus = bean.getCurrentRTTStatus() == null ? null : bean.getCurrentRTTStatus().buildVo(map);
		this.numprovidercancelledappts = bean.getNumProviderCancelledAppts();
		this.numpatientcancelledappts = bean.getNumPatientCancelledAppts();
		this.consultationappt = bean.getConsultationAppt() == null ? null : bean.getConsultationAppt().buildVo(map);
		this.current31targetdate = bean.getCurrent31TargetDate() == null ? null : bean.getCurrent31TargetDate().buildDate();
		this.current62targetdate = bean.getCurrent62TargetDate() == null ? null : bean.getCurrent62TargetDate().buildDate();
		this.isemergencyreferral = bean.getIsEmergencyReferral();
		this.icabreferral = bean.getICABReferral() == null ? null : bean.getICABReferral().buildVo(map);
		this.contract = bean.getContract() == null ? null : new ims.core.configuration.vo.ContractConfigRefVo(new Integer(bean.getContract().getId()), bean.getContract().getVersion());
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.beans.CatsReferralForOverviewVoBean bean = null;
		if(map != null)
			bean = (ims.RefMan.vo.beans.CatsReferralForOverviewVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.RefMan.vo.beans.CatsReferralForOverviewVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("PATIENT"))
			return getPatient();
		if(fieldName.equals("REFERRALDETAILS"))
			return getReferralDetails();
		if(fieldName.equals("CURRENTSTATUS"))
			return getCurrentStatus();
		if(fieldName.equals("STATUSHISTORY"))
			return getStatusHistory();
		if(fieldName.equals("URGENCY"))
			return getUrgency();
		if(fieldName.equals("PATHWAYID"))
			return getPathwayID();
		if(fieldName.equals("CURRENTRTTSTATUS"))
			return getCurrentRTTStatus();
		if(fieldName.equals("NUMPROVIDERCANCELLEDAPPTS"))
			return getNumProviderCancelledAppts();
		if(fieldName.equals("NUMPATIENTCANCELLEDAPPTS"))
			return getNumPatientCancelledAppts();
		if(fieldName.equals("CONSULTATIONAPPT"))
			return getConsultationAppt();
		if(fieldName.equals("CURRENT31TARGETDATE"))
			return getCurrent31TargetDate();
		if(fieldName.equals("CURRENT62TARGETDATE"))
			return getCurrent62TargetDate();
		if(fieldName.equals("ISEMERGENCYREFERRAL"))
			return getIsEmergencyReferral();
		if(fieldName.equals("ICABREFERRAL"))
			return getICABReferral();
		if(fieldName.equals("CONTRACT"))
			return getContract();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getPatientIsNotNull()
	{
		return this.patient != null;
	}
	public ims.core.patient.vo.PatientRefVo getPatient()
	{
		return this.patient;
	}
	public void setPatient(ims.core.patient.vo.PatientRefVo value)
	{
		this.isValidated = false;
		this.patient = value;
	}
	public boolean getReferralDetailsIsNotNull()
	{
		return this.referraldetails != null;
	}
	public ims.RefMan.vo.ReferralLetterDetailsLiteVo getReferralDetails()
	{
		return this.referraldetails;
	}
	public void setReferralDetails(ims.RefMan.vo.ReferralLetterDetailsLiteVo value)
	{
		this.isValidated = false;
		this.referraldetails = value;
	}
	public boolean getCurrentStatusIsNotNull()
	{
		return this.currentstatus != null;
	}
	public ims.RefMan.vo.CATSReferralStatusRefVo getCurrentStatus()
	{
		return this.currentstatus;
	}
	public void setCurrentStatus(ims.RefMan.vo.CATSReferralStatusRefVo value)
	{
		this.isValidated = false;
		this.currentstatus = value;
	}
	public boolean getStatusHistoryIsNotNull()
	{
		return this.statushistory != null;
	}
	public ims.RefMan.vo.CatsReferralStatusVoCollection getStatusHistory()
	{
		return this.statushistory;
	}
	public void setStatusHistory(ims.RefMan.vo.CatsReferralStatusVoCollection value)
	{
		this.isValidated = false;
		this.statushistory = value;
	}
	public boolean getUrgencyIsNotNull()
	{
		return this.urgency != null;
	}
	public ims.RefMan.vo.lookups.ReferralUrgency getUrgency()
	{
		return this.urgency;
	}
	public void setUrgency(ims.RefMan.vo.lookups.ReferralUrgency value)
	{
		this.isValidated = false;
		this.urgency = value;
	}
	public boolean getPathwayIDIsNotNull()
	{
		return this.pathwayid != null;
	}
	public String getPathwayID()
	{
		return this.pathwayid;
	}
	public static int getPathwayIDMaxLength()
	{
		return 20;
	}
	public void setPathwayID(String value)
	{
		this.isValidated = false;
		this.pathwayid = value;
	}
	public boolean getCurrentRTTStatusIsNotNull()
	{
		return this.currentrttstatus != null;
	}
	public ims.pathways.vo.PathwayRTTStatusVo getCurrentRTTStatus()
	{
		return this.currentrttstatus;
	}
	public void setCurrentRTTStatus(ims.pathways.vo.PathwayRTTStatusVo value)
	{
		this.isValidated = false;
		this.currentrttstatus = value;
	}
	public boolean getNumProviderCancelledApptsIsNotNull()
	{
		return this.numprovidercancelledappts != null;
	}
	public Integer getNumProviderCancelledAppts()
	{
		return this.numprovidercancelledappts;
	}
	public void setNumProviderCancelledAppts(Integer value)
	{
		this.isValidated = false;
		this.numprovidercancelledappts = value;
	}
	public boolean getNumPatientCancelledApptsIsNotNull()
	{
		return this.numpatientcancelledappts != null;
	}
	public Integer getNumPatientCancelledAppts()
	{
		return this.numpatientcancelledappts;
	}
	public void setNumPatientCancelledAppts(Integer value)
	{
		this.isValidated = false;
		this.numpatientcancelledappts = value;
	}
	public boolean getConsultationApptIsNotNull()
	{
		return this.consultationappt != null;
	}
	public ims.scheduling.vo.BookAppointmentStartDateVo getConsultationAppt()
	{
		return this.consultationappt;
	}
	public void setConsultationAppt(ims.scheduling.vo.BookAppointmentStartDateVo value)
	{
		this.isValidated = false;
		this.consultationappt = value;
	}
	public boolean getCurrent31TargetDateIsNotNull()
	{
		return this.current31targetdate != null;
	}
	public ims.framework.utils.Date getCurrent31TargetDate()
	{
		return this.current31targetdate;
	}
	public void setCurrent31TargetDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.current31targetdate = value;
	}
	public boolean getCurrent62TargetDateIsNotNull()
	{
		return this.current62targetdate != null;
	}
	public ims.framework.utils.Date getCurrent62TargetDate()
	{
		return this.current62targetdate;
	}
	public void setCurrent62TargetDate(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.current62targetdate = value;
	}
	public boolean getIsEmergencyReferralIsNotNull()
	{
		return this.isemergencyreferral != null;
	}
	public Boolean getIsEmergencyReferral()
	{
		return this.isemergencyreferral;
	}
	public void setIsEmergencyReferral(Boolean value)
	{
		this.isValidated = false;
		this.isemergencyreferral = value;
	}
	public boolean getICABReferralIsNotNull()
	{
		return this.icabreferral != null;
	}
	public ims.admin.vo.ICABReferralLiteVo getICABReferral()
	{
		return this.icabreferral;
	}
	public void setICABReferral(ims.admin.vo.ICABReferralLiteVo value)
	{
		this.isValidated = false;
		this.icabreferral = value;
	}
	public boolean getContractIsNotNull()
	{
		return this.contract != null;
	}
	public ims.core.configuration.vo.ContractConfigRefVo getContract()
	{
		return this.contract;
	}
	public void setContract(ims.core.configuration.vo.ContractConfigRefVo value)
	{
		this.isValidated = false;
		this.contract = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.patient == null)
			listOfErrors.add("Patient is mandatory");
		if(this.pathwayid != null)
			if(this.pathwayid.length() > 20)
				listOfErrors.add("The length of the field [pathwayid] in the value object [ims.RefMan.vo.CatsReferralForOverviewVo] is too big. It should be less or equal to 20");
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		CatsReferralForOverviewVo clone = new CatsReferralForOverviewVo(this.id, this.version);
		
		clone.patient = this.patient;
		if(this.referraldetails == null)
			clone.referraldetails = null;
		else
			clone.referraldetails = (ims.RefMan.vo.ReferralLetterDetailsLiteVo)this.referraldetails.clone();
		clone.currentstatus = this.currentstatus;
		if(this.statushistory == null)
			clone.statushistory = null;
		else
			clone.statushistory = (ims.RefMan.vo.CatsReferralStatusVoCollection)this.statushistory.clone();
		if(this.urgency == null)
			clone.urgency = null;
		else
			clone.urgency = (ims.RefMan.vo.lookups.ReferralUrgency)this.urgency.clone();
		clone.pathwayid = this.pathwayid;
		if(this.currentrttstatus == null)
			clone.currentrttstatus = null;
		else
			clone.currentrttstatus = (ims.pathways.vo.PathwayRTTStatusVo)this.currentrttstatus.clone();
		clone.numprovidercancelledappts = this.numprovidercancelledappts;
		clone.numpatientcancelledappts = this.numpatientcancelledappts;
		if(this.consultationappt == null)
			clone.consultationappt = null;
		else
			clone.consultationappt = (ims.scheduling.vo.BookAppointmentStartDateVo)this.consultationappt.clone();
		if(this.current31targetdate == null)
			clone.current31targetdate = null;
		else
			clone.current31targetdate = (ims.framework.utils.Date)this.current31targetdate.clone();
		if(this.current62targetdate == null)
			clone.current62targetdate = null;
		else
			clone.current62targetdate = (ims.framework.utils.Date)this.current62targetdate.clone();
		clone.isemergencyreferral = this.isemergencyreferral;
		if(this.icabreferral == null)
			clone.icabreferral = null;
		else
			clone.icabreferral = (ims.admin.vo.ICABReferralLiteVo)this.icabreferral.clone();
		clone.contract = this.contract;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(CatsReferralForOverviewVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A CatsReferralForOverviewVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		if (this.id == null)
			return 1;
		if (((CatsReferralForOverviewVo)obj).getBoId() == null)
			return -1;
		return this.id.compareTo(((CatsReferralForOverviewVo)obj).getBoId());
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.patient != null)
			count++;
		if(this.referraldetails != null)
			count++;
		if(this.currentstatus != null)
			count++;
		if(this.statushistory != null)
			count++;
		if(this.urgency != null)
			count++;
		if(this.pathwayid != null)
			count++;
		if(this.currentrttstatus != null)
			count++;
		if(this.numprovidercancelledappts != null)
			count++;
		if(this.numpatientcancelledappts != null)
			count++;
		if(this.consultationappt != null)
			count++;
		if(this.current31targetdate != null)
			count++;
		if(this.current62targetdate != null)
			count++;
		if(this.isemergencyreferral != null)
			count++;
		if(this.icabreferral != null)
			count++;
		if(this.contract != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 15;
	}
	protected ims.core.patient.vo.PatientRefVo patient;
	protected ims.RefMan.vo.ReferralLetterDetailsLiteVo referraldetails;
	protected ims.RefMan.vo.CATSReferralStatusRefVo currentstatus;
	protected ims.RefMan.vo.CatsReferralStatusVoCollection statushistory;
	protected ims.RefMan.vo.lookups.ReferralUrgency urgency;
	protected String pathwayid;
	protected ims.pathways.vo.PathwayRTTStatusVo currentrttstatus;
	protected Integer numprovidercancelledappts;
	protected Integer numpatientcancelledappts;
	protected ims.scheduling.vo.BookAppointmentStartDateVo consultationappt;
	protected ims.framework.utils.Date current31targetdate;
	protected ims.framework.utils.Date current62targetdate;
	protected Boolean isemergencyreferral;
	protected ims.admin.vo.ICABReferralLiteVo icabreferral;
	protected ims.core.configuration.vo.ContractConfigRefVo contract;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
