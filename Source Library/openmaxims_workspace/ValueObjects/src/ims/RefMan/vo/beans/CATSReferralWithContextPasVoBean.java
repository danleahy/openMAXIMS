//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo.beans;

public class CATSReferralWithContextPasVoBean extends ims.vo.ValueObjectBean
{
	public CATSReferralWithContextPasVoBean()
	{
	}
	public CATSReferralWithContextPasVoBean(ims.RefMan.vo.CATSReferralWithContextPasVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.carecontext = vo.getCareContext() == null ? null : (ims.core.vo.beans.CareContextWithPasAdmitVoBean)vo.getCareContext().getBean();
		if(vo.getAdmissions() != null)
		{
			this.admissions = new ims.vo.RefVoBean[vo.getAdmissions().size()];
			for(int admissions_i = 0; admissions_i < vo.getAdmissions().size(); admissions_i++)
			{
				this.admissions[admissions_i] = new ims.vo.RefVoBean(vo.getAdmissions().get(admissions_i).getBoId(),vo.getAdmissions().get(admissions_i).getBoVersion());
			}
		}
		this.referraldetails = vo.getReferralDetails() == null ? null : (ims.RefMan.vo.beans.CATSReferralDetailsWithReferrarTypeVoBean)vo.getReferralDetails().getBean();
		this.patientcategory = vo.getPatientCategory() == null ? null : (ims.vo.LookupInstanceBean)vo.getPatientCategory().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.CATSReferralWithContextPasVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.carecontext = vo.getCareContext() == null ? null : (ims.core.vo.beans.CareContextWithPasAdmitVoBean)vo.getCareContext().getBean(map);
		if(vo.getAdmissions() != null)
		{
			this.admissions = new ims.vo.RefVoBean[vo.getAdmissions().size()];
			for(int admissions_i = 0; admissions_i < vo.getAdmissions().size(); admissions_i++)
			{
				this.admissions[admissions_i] = new ims.vo.RefVoBean(vo.getAdmissions().get(admissions_i).getBoId(),vo.getAdmissions().get(admissions_i).getBoVersion());
			}
		}
		this.referraldetails = vo.getReferralDetails() == null ? null : (ims.RefMan.vo.beans.CATSReferralDetailsWithReferrarTypeVoBean)vo.getReferralDetails().getBean(map);
		this.patientcategory = vo.getPatientCategory() == null ? null : (ims.vo.LookupInstanceBean)vo.getPatientCategory().getBean();
	}

	public ims.RefMan.vo.CATSReferralWithContextPasVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.RefMan.vo.CATSReferralWithContextPasVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.CATSReferralWithContextPasVo vo = null;
		if(map != null)
			vo = (ims.RefMan.vo.CATSReferralWithContextPasVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.RefMan.vo.CATSReferralWithContextPasVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.core.vo.beans.CareContextWithPasAdmitVoBean getCareContext()
	{
		return this.carecontext;
	}
	public void setCareContext(ims.core.vo.beans.CareContextWithPasAdmitVoBean value)
	{
		this.carecontext = value;
	}
	public ims.vo.RefVoBean[] getAdmissions()
	{
		return this.admissions;
	}
	public void setAdmissions(ims.vo.RefVoBean[] value)
	{
		this.admissions = value;
	}
	public ims.RefMan.vo.beans.CATSReferralDetailsWithReferrarTypeVoBean getReferralDetails()
	{
		return this.referraldetails;
	}
	public void setReferralDetails(ims.RefMan.vo.beans.CATSReferralDetailsWithReferrarTypeVoBean value)
	{
		this.referraldetails = value;
	}
	public ims.vo.LookupInstanceBean getPatientCategory()
	{
		return this.patientcategory;
	}
	public void setPatientCategory(ims.vo.LookupInstanceBean value)
	{
		this.patientcategory = value;
	}

	private Integer id;
	private int version;
	private ims.core.vo.beans.CareContextWithPasAdmitVoBean carecontext;
	private ims.vo.RefVoBean[] admissions;
	private ims.RefMan.vo.beans.CATSReferralDetailsWithReferrarTypeVoBean referraldetails;
	private ims.vo.LookupInstanceBean patientcategory;
}
