//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo.beans;

public class EndoscopyVettingWorklistSearchCritVoBean extends ims.vo.ValueObjectBean
{
	public EndoscopyVettingWorklistSearchCritVoBean()
	{
	}
	public EndoscopyVettingWorklistSearchCritVoBean(ims.RefMan.vo.EndoscopyVettingWorklistSearchCritVo vo)
	{
		this.electiveadmissiontype = vo.getElectiveAdmissionType() == null ? null : (ims.vo.LookupInstanceBean)vo.getElectiveAdmissionType().getBean();
		this.urgency = vo.getUrgency() == null ? null : (ims.vo.LookupInstanceBean)vo.getUrgency().getBean();
		this.proceduretype = vo.getProcedureType() == null ? null : (ims.vo.LookupInstanceBean)vo.getProcedureType().getBean();
		this.generalanaesthetic = vo.getGeneralAnaesthetic() == null ? null : (ims.vo.LookupInstanceBean)vo.getGeneralAnaesthetic().getBean();
		this.rttbreachdatein = vo.getRTTBreachDateIn();
		this.rttbreachdateunits = vo.getRTTBReachDateUnits() == null ? null : (ims.vo.LookupInstanceBean)vo.getRTTBReachDateUnits().getBean();
		this.includepatientsbreached = vo.getIncludePatientsBreached();
		this.planneddateint = vo.getPlannedDateInt();
		this.planedateunits = vo.getPlaneDateUnits() == null ? null : (ims.vo.LookupInstanceBean)vo.getPlaneDateUnits().getBean();
		this.includepastplanneddates = vo.getIncludePastPlannedDates();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.EndoscopyVettingWorklistSearchCritVo vo)
	{
		this.electiveadmissiontype = vo.getElectiveAdmissionType() == null ? null : (ims.vo.LookupInstanceBean)vo.getElectiveAdmissionType().getBean();
		this.urgency = vo.getUrgency() == null ? null : (ims.vo.LookupInstanceBean)vo.getUrgency().getBean();
		this.proceduretype = vo.getProcedureType() == null ? null : (ims.vo.LookupInstanceBean)vo.getProcedureType().getBean();
		this.generalanaesthetic = vo.getGeneralAnaesthetic() == null ? null : (ims.vo.LookupInstanceBean)vo.getGeneralAnaesthetic().getBean();
		this.rttbreachdatein = vo.getRTTBreachDateIn();
		this.rttbreachdateunits = vo.getRTTBReachDateUnits() == null ? null : (ims.vo.LookupInstanceBean)vo.getRTTBReachDateUnits().getBean();
		this.includepatientsbreached = vo.getIncludePatientsBreached();
		this.planneddateint = vo.getPlannedDateInt();
		this.planedateunits = vo.getPlaneDateUnits() == null ? null : (ims.vo.LookupInstanceBean)vo.getPlaneDateUnits().getBean();
		this.includepastplanneddates = vo.getIncludePastPlannedDates();
	}

	public ims.RefMan.vo.EndoscopyVettingWorklistSearchCritVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.RefMan.vo.EndoscopyVettingWorklistSearchCritVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.EndoscopyVettingWorklistSearchCritVo vo = null;
		if(map != null)
			vo = (ims.RefMan.vo.EndoscopyVettingWorklistSearchCritVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.RefMan.vo.EndoscopyVettingWorklistSearchCritVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public ims.vo.LookupInstanceBean getElectiveAdmissionType()
	{
		return this.electiveadmissiontype;
	}
	public void setElectiveAdmissionType(ims.vo.LookupInstanceBean value)
	{
		this.electiveadmissiontype = value;
	}
	public ims.vo.LookupInstanceBean getUrgency()
	{
		return this.urgency;
	}
	public void setUrgency(ims.vo.LookupInstanceBean value)
	{
		this.urgency = value;
	}
	public ims.vo.LookupInstanceBean getProcedureType()
	{
		return this.proceduretype;
	}
	public void setProcedureType(ims.vo.LookupInstanceBean value)
	{
		this.proceduretype = value;
	}
	public ims.vo.LookupInstanceBean getGeneralAnaesthetic()
	{
		return this.generalanaesthetic;
	}
	public void setGeneralAnaesthetic(ims.vo.LookupInstanceBean value)
	{
		this.generalanaesthetic = value;
	}
	public Integer getRTTBreachDateIn()
	{
		return this.rttbreachdatein;
	}
	public void setRTTBreachDateIn(Integer value)
	{
		this.rttbreachdatein = value;
	}
	public ims.vo.LookupInstanceBean getRTTBReachDateUnits()
	{
		return this.rttbreachdateunits;
	}
	public void setRTTBReachDateUnits(ims.vo.LookupInstanceBean value)
	{
		this.rttbreachdateunits = value;
	}
	public Boolean getIncludePatientsBreached()
	{
		return this.includepatientsbreached;
	}
	public void setIncludePatientsBreached(Boolean value)
	{
		this.includepatientsbreached = value;
	}
	public Integer getPlannedDateInt()
	{
		return this.planneddateint;
	}
	public void setPlannedDateInt(Integer value)
	{
		this.planneddateint = value;
	}
	public ims.vo.LookupInstanceBean getPlaneDateUnits()
	{
		return this.planedateunits;
	}
	public void setPlaneDateUnits(ims.vo.LookupInstanceBean value)
	{
		this.planedateunits = value;
	}
	public Boolean getIncludePastPlannedDates()
	{
		return this.includepastplanneddates;
	}
	public void setIncludePastPlannedDates(Boolean value)
	{
		this.includepastplanneddates = value;
	}

	private ims.vo.LookupInstanceBean electiveadmissiontype;
	private ims.vo.LookupInstanceBean urgency;
	private ims.vo.LookupInstanceBean proceduretype;
	private ims.vo.LookupInstanceBean generalanaesthetic;
	private Integer rttbreachdatein;
	private ims.vo.LookupInstanceBean rttbreachdateunits;
	private Boolean includepatientsbreached;
	private Integer planneddateint;
	private ims.vo.LookupInstanceBean planedateunits;
	private Boolean includepastplanneddates;
}
