//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo.beans;

public class PreAssessmentWorklistSearchCriteriaVoBean extends ims.vo.ValueObjectBean
{
	public PreAssessmentWorklistSearchCriteriaVoBean()
	{
	}
	public PreAssessmentWorklistSearchCriteriaVoBean(ims.RefMan.vo.PreAssessmentWorklistSearchCriteriaVo vo)
	{
		this.service = vo.getService() == null ? null : (ims.core.vo.beans.ServiceShortVoBean)vo.getService().getBean();
		this.procedure = vo.getProcedure() == null ? null : (ims.core.vo.beans.ProcedureLiteVoBean)vo.getProcedure().getBean();
		this.urgency = vo.getUrgency() == null ? null : (ims.vo.LookupInstanceBean)vo.getUrgency().getBean();
		this.anaesthetictype = vo.getAnaestheticType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAnaestheticType().getBean();
		this.breachdatefrom = vo.getBreachDateFrom() == null ? null : (ims.framework.utils.beans.DateBean)vo.getBreachDateFrom().getBean();
		this.breachdateto = vo.getBreachDateTo() == null ? null : (ims.framework.utils.beans.DateBean)vo.getBreachDateTo().getBean();
		this.preassessmentrequired = vo.getPreAssessmentRequired();
		this.notfitforsurgery = vo.getNotFitForSurgery();
		this.fitforsurgery = vo.getFitForSurgery();
		this.preassessmentoutcomepending = vo.getPreAssessmentOutcomePending();
		this.waitingfor = vo.getWaitingFor() == null ? null : vo.getWaitingFor().getBeanCollection();
		this.services = vo.getServices() == null ? null : vo.getServices().getBeanCollection();
		this.theatretype = vo.getTheatreType() == null ? null : (ims.vo.LookupInstanceBean)vo.getTheatreType().getBean();
		this.addedtoday = vo.getAddedToday();
		this.waitinglist = vo.getWaitingList();
		this.surveillanceplannedlist = vo.getSurveillancePlannedList();
		this.plannedfrom = vo.getPlannedFrom() == null ? null : (ims.framework.utils.beans.DateBean)vo.getPlannedFrom().getBean();
		this.plannedto = vo.getPlannedTo() == null ? null : (ims.framework.utils.beans.DateBean)vo.getPlannedTo().getBean();
		this.pastappointment = vo.getPastAppointment();
		this.futureappointment = vo.getFutureAppointment();
		this.patientidentifier = vo.getPatientIdentifier();
		this.patidtype = vo.getPatIdType() == null ? null : (ims.vo.LookupInstanceBean)vo.getPatIdType().getBean();
		this.includeendoscopy = vo.getIncludeEndoscopy();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.PreAssessmentWorklistSearchCriteriaVo vo)
	{
		this.service = vo.getService() == null ? null : (ims.core.vo.beans.ServiceShortVoBean)vo.getService().getBean(map);
		this.procedure = vo.getProcedure() == null ? null : (ims.core.vo.beans.ProcedureLiteVoBean)vo.getProcedure().getBean(map);
		this.urgency = vo.getUrgency() == null ? null : (ims.vo.LookupInstanceBean)vo.getUrgency().getBean();
		this.anaesthetictype = vo.getAnaestheticType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAnaestheticType().getBean();
		this.breachdatefrom = vo.getBreachDateFrom() == null ? null : (ims.framework.utils.beans.DateBean)vo.getBreachDateFrom().getBean();
		this.breachdateto = vo.getBreachDateTo() == null ? null : (ims.framework.utils.beans.DateBean)vo.getBreachDateTo().getBean();
		this.preassessmentrequired = vo.getPreAssessmentRequired();
		this.notfitforsurgery = vo.getNotFitForSurgery();
		this.fitforsurgery = vo.getFitForSurgery();
		this.preassessmentoutcomepending = vo.getPreAssessmentOutcomePending();
		this.waitingfor = vo.getWaitingFor() == null ? null : vo.getWaitingFor().getBeanCollection();
		this.services = vo.getServices() == null ? null : vo.getServices().getBeanCollection();
		this.theatretype = vo.getTheatreType() == null ? null : (ims.vo.LookupInstanceBean)vo.getTheatreType().getBean();
		this.addedtoday = vo.getAddedToday();
		this.waitinglist = vo.getWaitingList();
		this.surveillanceplannedlist = vo.getSurveillancePlannedList();
		this.plannedfrom = vo.getPlannedFrom() == null ? null : (ims.framework.utils.beans.DateBean)vo.getPlannedFrom().getBean();
		this.plannedto = vo.getPlannedTo() == null ? null : (ims.framework.utils.beans.DateBean)vo.getPlannedTo().getBean();
		this.pastappointment = vo.getPastAppointment();
		this.futureappointment = vo.getFutureAppointment();
		this.patientidentifier = vo.getPatientIdentifier();
		this.patidtype = vo.getPatIdType() == null ? null : (ims.vo.LookupInstanceBean)vo.getPatIdType().getBean();
		this.includeendoscopy = vo.getIncludeEndoscopy();
	}

	public ims.RefMan.vo.PreAssessmentWorklistSearchCriteriaVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.RefMan.vo.PreAssessmentWorklistSearchCriteriaVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.PreAssessmentWorklistSearchCriteriaVo vo = null;
		if(map != null)
			vo = (ims.RefMan.vo.PreAssessmentWorklistSearchCriteriaVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.RefMan.vo.PreAssessmentWorklistSearchCriteriaVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public ims.core.vo.beans.ServiceShortVoBean getService()
	{
		return this.service;
	}
	public void setService(ims.core.vo.beans.ServiceShortVoBean value)
	{
		this.service = value;
	}
	public ims.core.vo.beans.ProcedureLiteVoBean getProcedure()
	{
		return this.procedure;
	}
	public void setProcedure(ims.core.vo.beans.ProcedureLiteVoBean value)
	{
		this.procedure = value;
	}
	public ims.vo.LookupInstanceBean getUrgency()
	{
		return this.urgency;
	}
	public void setUrgency(ims.vo.LookupInstanceBean value)
	{
		this.urgency = value;
	}
	public ims.vo.LookupInstanceBean getAnaestheticType()
	{
		return this.anaesthetictype;
	}
	public void setAnaestheticType(ims.vo.LookupInstanceBean value)
	{
		this.anaesthetictype = value;
	}
	public ims.framework.utils.beans.DateBean getBreachDateFrom()
	{
		return this.breachdatefrom;
	}
	public void setBreachDateFrom(ims.framework.utils.beans.DateBean value)
	{
		this.breachdatefrom = value;
	}
	public ims.framework.utils.beans.DateBean getBreachDateTo()
	{
		return this.breachdateto;
	}
	public void setBreachDateTo(ims.framework.utils.beans.DateBean value)
	{
		this.breachdateto = value;
	}
	public Boolean getPreAssessmentRequired()
	{
		return this.preassessmentrequired;
	}
	public void setPreAssessmentRequired(Boolean value)
	{
		this.preassessmentrequired = value;
	}
	public Boolean getNotFitForSurgery()
	{
		return this.notfitforsurgery;
	}
	public void setNotFitForSurgery(Boolean value)
	{
		this.notfitforsurgery = value;
	}
	public Boolean getFitForSurgery()
	{
		return this.fitforsurgery;
	}
	public void setFitForSurgery(Boolean value)
	{
		this.fitforsurgery = value;
	}
	public Boolean getPreAssessmentOutcomePending()
	{
		return this.preassessmentoutcomepending;
	}
	public void setPreAssessmentOutcomePending(Boolean value)
	{
		this.preassessmentoutcomepending = value;
	}
	public java.util.Collection getWaitingFor()
	{
		return this.waitingfor;
	}
	public void setWaitingFor(java.util.Collection value)
	{
		this.waitingfor = value;
	}
	public void addWaitingFor(java.util.Collection value)
	{
		if(this.waitingfor == null)
			this.waitingfor = new java.util.ArrayList();
		this.waitingfor.add(value);
	}
	public ims.core.vo.beans.ServiceShortVoBean[] getServices()
	{
		return this.services;
	}
	public void setServices(ims.core.vo.beans.ServiceShortVoBean[] value)
	{
		this.services = value;
	}
	public ims.vo.LookupInstanceBean getTheatreType()
	{
		return this.theatretype;
	}
	public void setTheatreType(ims.vo.LookupInstanceBean value)
	{
		this.theatretype = value;
	}
	public Boolean getAddedToday()
	{
		return this.addedtoday;
	}
	public void setAddedToday(Boolean value)
	{
		this.addedtoday = value;
	}
	public Boolean getWaitingList()
	{
		return this.waitinglist;
	}
	public void setWaitingList(Boolean value)
	{
		this.waitinglist = value;
	}
	public Boolean getSurveillancePlannedList()
	{
		return this.surveillanceplannedlist;
	}
	public void setSurveillancePlannedList(Boolean value)
	{
		this.surveillanceplannedlist = value;
	}
	public ims.framework.utils.beans.DateBean getPlannedFrom()
	{
		return this.plannedfrom;
	}
	public void setPlannedFrom(ims.framework.utils.beans.DateBean value)
	{
		this.plannedfrom = value;
	}
	public ims.framework.utils.beans.DateBean getPlannedTo()
	{
		return this.plannedto;
	}
	public void setPlannedTo(ims.framework.utils.beans.DateBean value)
	{
		this.plannedto = value;
	}
	public Boolean getPastAppointment()
	{
		return this.pastappointment;
	}
	public void setPastAppointment(Boolean value)
	{
		this.pastappointment = value;
	}
	public Boolean getFutureAppointment()
	{
		return this.futureappointment;
	}
	public void setFutureAppointment(Boolean value)
	{
		this.futureappointment = value;
	}
	public String getPatientIdentifier()
	{
		return this.patientidentifier;
	}
	public void setPatientIdentifier(String value)
	{
		this.patientidentifier = value;
	}
	public ims.vo.LookupInstanceBean getPatIdType()
	{
		return this.patidtype;
	}
	public void setPatIdType(ims.vo.LookupInstanceBean value)
	{
		this.patidtype = value;
	}
	public Boolean getIncludeEndoscopy()
	{
		return this.includeendoscopy;
	}
	public void setIncludeEndoscopy(Boolean value)
	{
		this.includeendoscopy = value;
	}

	private ims.core.vo.beans.ServiceShortVoBean service;
	private ims.core.vo.beans.ProcedureLiteVoBean procedure;
	private ims.vo.LookupInstanceBean urgency;
	private ims.vo.LookupInstanceBean anaesthetictype;
	private ims.framework.utils.beans.DateBean breachdatefrom;
	private ims.framework.utils.beans.DateBean breachdateto;
	private Boolean preassessmentrequired;
	private Boolean notfitforsurgery;
	private Boolean fitforsurgery;
	private Boolean preassessmentoutcomepending;
	private java.util.Collection waitingfor;
	private ims.core.vo.beans.ServiceShortVoBean[] services;
	private ims.vo.LookupInstanceBean theatretype;
	private Boolean addedtoday;
	private Boolean waitinglist;
	private Boolean surveillanceplannedlist;
	private ims.framework.utils.beans.DateBean plannedfrom;
	private ims.framework.utils.beans.DateBean plannedto;
	private Boolean pastappointment;
	private Boolean futureappointment;
	private String patientidentifier;
	private ims.vo.LookupInstanceBean patidtype;
	private Boolean includeendoscopy;
}
