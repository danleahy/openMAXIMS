//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo.beans;

public class PatientElectiveListForEndoscWorklistVoBean extends ims.vo.ValueObjectBean
{
	public PatientElectiveListForEndoscWorklistVoBean()
	{
	}
	public PatientElectiveListForEndoscWorklistVoBean(ims.RefMan.vo.PatientElectiveListForEndoscWorklistVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.electiveadmissiontype = vo.getElectiveAdmissionType() == null ? null : (ims.vo.LookupInstanceBean)vo.getElectiveAdmissionType().getBean();
		this.patient = vo.getPatient() == null ? null : (ims.core.vo.beans.PatientShortListVoBean)vo.getPatient().getBean();
		this.referral = vo.getReferral() == null ? null : (ims.RefMan.vo.beans.ReferralLiteForEndoscWorklistVoBean)vo.getReferral().getBean();
		this.dateonlist = vo.getDateOnList() == null ? null : (ims.framework.utils.beans.DateBean)vo.getDateOnList().getBean();
		this.primaryprocedure = vo.getPrimaryProcedure() == null ? null : (ims.core.vo.beans.ProcedureVoBean)vo.getPrimaryProcedure().getBean();
		this.priority = vo.getPriority() == null ? null : (ims.vo.LookupInstanceBean)vo.getPriority().getBean();
		this.requiresvetting = vo.getRequiresVetting();
		this.comments = vo.getComments();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.PatientElectiveListForEndoscWorklistVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.electiveadmissiontype = vo.getElectiveAdmissionType() == null ? null : (ims.vo.LookupInstanceBean)vo.getElectiveAdmissionType().getBean();
		this.patient = vo.getPatient() == null ? null : (ims.core.vo.beans.PatientShortListVoBean)vo.getPatient().getBean(map);
		this.referral = vo.getReferral() == null ? null : (ims.RefMan.vo.beans.ReferralLiteForEndoscWorklistVoBean)vo.getReferral().getBean(map);
		this.dateonlist = vo.getDateOnList() == null ? null : (ims.framework.utils.beans.DateBean)vo.getDateOnList().getBean();
		this.primaryprocedure = vo.getPrimaryProcedure() == null ? null : (ims.core.vo.beans.ProcedureVoBean)vo.getPrimaryProcedure().getBean(map);
		this.priority = vo.getPriority() == null ? null : (ims.vo.LookupInstanceBean)vo.getPriority().getBean();
		this.requiresvetting = vo.getRequiresVetting();
		this.comments = vo.getComments();
	}

	public ims.RefMan.vo.PatientElectiveListForEndoscWorklistVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.RefMan.vo.PatientElectiveListForEndoscWorklistVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.PatientElectiveListForEndoscWorklistVo vo = null;
		if(map != null)
			vo = (ims.RefMan.vo.PatientElectiveListForEndoscWorklistVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.RefMan.vo.PatientElectiveListForEndoscWorklistVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.vo.LookupInstanceBean getElectiveAdmissionType()
	{
		return this.electiveadmissiontype;
	}
	public void setElectiveAdmissionType(ims.vo.LookupInstanceBean value)
	{
		this.electiveadmissiontype = value;
	}
	public ims.core.vo.beans.PatientShortListVoBean getPatient()
	{
		return this.patient;
	}
	public void setPatient(ims.core.vo.beans.PatientShortListVoBean value)
	{
		this.patient = value;
	}
	public ims.RefMan.vo.beans.ReferralLiteForEndoscWorklistVoBean getReferral()
	{
		return this.referral;
	}
	public void setReferral(ims.RefMan.vo.beans.ReferralLiteForEndoscWorklistVoBean value)
	{
		this.referral = value;
	}
	public ims.framework.utils.beans.DateBean getDateOnList()
	{
		return this.dateonlist;
	}
	public void setDateOnList(ims.framework.utils.beans.DateBean value)
	{
		this.dateonlist = value;
	}
	public ims.core.vo.beans.ProcedureVoBean getPrimaryProcedure()
	{
		return this.primaryprocedure;
	}
	public void setPrimaryProcedure(ims.core.vo.beans.ProcedureVoBean value)
	{
		this.primaryprocedure = value;
	}
	public ims.vo.LookupInstanceBean getPriority()
	{
		return this.priority;
	}
	public void setPriority(ims.vo.LookupInstanceBean value)
	{
		this.priority = value;
	}
	public Boolean getRequiresVetting()
	{
		return this.requiresvetting;
	}
	public void setRequiresVetting(Boolean value)
	{
		this.requiresvetting = value;
	}
	public String getComments()
	{
		return this.comments;
	}
	public void setComments(String value)
	{
		this.comments = value;
	}

	private Integer id;
	private int version;
	private ims.vo.LookupInstanceBean electiveadmissiontype;
	private ims.core.vo.beans.PatientShortListVoBean patient;
	private ims.RefMan.vo.beans.ReferralLiteForEndoscWorklistVoBean referral;
	private ims.framework.utils.beans.DateBean dateonlist;
	private ims.core.vo.beans.ProcedureVoBean primaryprocedure;
	private ims.vo.LookupInstanceBean priority;
	private Boolean requiresvetting;
	private String comments;
}
