//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo.beans;

public class PathwayClockForTransferOfCareVoBean extends ims.vo.ValueObjectBean
{
	public PathwayClockForTransferOfCareVoBean()
	{
	}
	public PathwayClockForTransferOfCareVoBean(ims.RefMan.vo.PathwayClockForTransferOfCareVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.extclockid = vo.getExtClockId();
		this.extclockname = vo.getExtClockName();
		this.startdate = vo.getStartDate() == null ? null : (ims.framework.utils.beans.DateBean)vo.getStartDate().getBean();
		this.stopdate = vo.getStopDate() == null ? null : (ims.framework.utils.beans.DateBean)vo.getStopDate().getBean();
		this.pausedetails = vo.getPauseDetails() == null ? null : vo.getPauseDetails().getBeanCollection();
		this.currentpause = vo.getCurrentPause() == null ? null : (ims.pathways.vo.beans.PauseDetailsVoBean)vo.getCurrentPause().getBean();
		this.currentrttstatus = vo.getCurrentRTTStatus() == null ? null : (ims.pathways.vo.beans.PathwayRTTStatusVoBean)vo.getCurrentRTTStatus().getBean();
		this.rttstatushistory = vo.getRTTStatusHistory() == null ? null : vo.getRTTStatusHistory().getBeanCollection();
		this.targetclockend = vo.getTargetClockEnd() == null ? null : (ims.framework.utils.beans.DateBean)vo.getTargetClockEnd().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.PathwayClockForTransferOfCareVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.extclockid = vo.getExtClockId();
		this.extclockname = vo.getExtClockName();
		this.startdate = vo.getStartDate() == null ? null : (ims.framework.utils.beans.DateBean)vo.getStartDate().getBean();
		this.stopdate = vo.getStopDate() == null ? null : (ims.framework.utils.beans.DateBean)vo.getStopDate().getBean();
		this.pausedetails = vo.getPauseDetails() == null ? null : vo.getPauseDetails().getBeanCollection();
		this.currentpause = vo.getCurrentPause() == null ? null : (ims.pathways.vo.beans.PauseDetailsVoBean)vo.getCurrentPause().getBean(map);
		this.currentrttstatus = vo.getCurrentRTTStatus() == null ? null : (ims.pathways.vo.beans.PathwayRTTStatusVoBean)vo.getCurrentRTTStatus().getBean(map);
		this.rttstatushistory = vo.getRTTStatusHistory() == null ? null : vo.getRTTStatusHistory().getBeanCollection();
		this.targetclockend = vo.getTargetClockEnd() == null ? null : (ims.framework.utils.beans.DateBean)vo.getTargetClockEnd().getBean();
	}

	public ims.RefMan.vo.PathwayClockForTransferOfCareVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.RefMan.vo.PathwayClockForTransferOfCareVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.PathwayClockForTransferOfCareVo vo = null;
		if(map != null)
			vo = (ims.RefMan.vo.PathwayClockForTransferOfCareVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.RefMan.vo.PathwayClockForTransferOfCareVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public String getExtClockId()
	{
		return this.extclockid;
	}
	public void setExtClockId(String value)
	{
		this.extclockid = value;
	}
	public String getExtClockName()
	{
		return this.extclockname;
	}
	public void setExtClockName(String value)
	{
		this.extclockname = value;
	}
	public ims.framework.utils.beans.DateBean getStartDate()
	{
		return this.startdate;
	}
	public void setStartDate(ims.framework.utils.beans.DateBean value)
	{
		this.startdate = value;
	}
	public ims.framework.utils.beans.DateBean getStopDate()
	{
		return this.stopdate;
	}
	public void setStopDate(ims.framework.utils.beans.DateBean value)
	{
		this.stopdate = value;
	}
	public ims.pathways.vo.beans.PauseDetailsVoBean[] getPauseDetails()
	{
		return this.pausedetails;
	}
	public void setPauseDetails(ims.pathways.vo.beans.PauseDetailsVoBean[] value)
	{
		this.pausedetails = value;
	}
	public ims.pathways.vo.beans.PauseDetailsVoBean getCurrentPause()
	{
		return this.currentpause;
	}
	public void setCurrentPause(ims.pathways.vo.beans.PauseDetailsVoBean value)
	{
		this.currentpause = value;
	}
	public ims.pathways.vo.beans.PathwayRTTStatusVoBean getCurrentRTTStatus()
	{
		return this.currentrttstatus;
	}
	public void setCurrentRTTStatus(ims.pathways.vo.beans.PathwayRTTStatusVoBean value)
	{
		this.currentrttstatus = value;
	}
	public ims.pathways.vo.beans.PathwayRTTStatusVoBean[] getRTTStatusHistory()
	{
		return this.rttstatushistory;
	}
	public void setRTTStatusHistory(ims.pathways.vo.beans.PathwayRTTStatusVoBean[] value)
	{
		this.rttstatushistory = value;
	}
	public ims.framework.utils.beans.DateBean getTargetClockEnd()
	{
		return this.targetclockend;
	}
	public void setTargetClockEnd(ims.framework.utils.beans.DateBean value)
	{
		this.targetclockend = value;
	}

	private Integer id;
	private int version;
	private String extclockid;
	private String extclockname;
	private ims.framework.utils.beans.DateBean startdate;
	private ims.framework.utils.beans.DateBean stopdate;
	private ims.pathways.vo.beans.PauseDetailsVoBean[] pausedetails;
	private ims.pathways.vo.beans.PauseDetailsVoBean currentpause;
	private ims.pathways.vo.beans.PathwayRTTStatusVoBean currentrttstatus;
	private ims.pathways.vo.beans.PathwayRTTStatusVoBean[] rttstatushistory;
	private ims.framework.utils.beans.DateBean targetclockend;
}
