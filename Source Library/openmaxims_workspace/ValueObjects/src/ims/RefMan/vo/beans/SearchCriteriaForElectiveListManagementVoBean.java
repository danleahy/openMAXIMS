//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.RefMan.vo.beans;

public class SearchCriteriaForElectiveListManagementVoBean extends ims.vo.ValueObjectBean
{
	public SearchCriteriaForElectiveListManagementVoBean()
	{
	}
	public SearchCriteriaForElectiveListManagementVoBean(ims.RefMan.vo.SearchCriteriaForElectiveListManagementVo vo)
	{
		this.type = vo.getType() == null ? null : vo.getType().getBeanCollection();
		this.admissiontype = vo.getAdmissionType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAdmissionType().getBean();
		this.urgency = vo.getUrgency() == null ? null : (ims.vo.LookupInstanceBean)vo.getUrgency().getBean();
		this.onlycancerreferrals = vo.getOnlyCancerReferrals();
		this.service = vo.getService() == null ? null : (ims.admin.vo.beans.ServiceForElectiveListConfigVoBean)vo.getService().getBean();
		this.consultant = vo.getConsultant() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getConsultant().getBean();
		this.procedure = vo.getProcedure() == null ? null : (ims.core.vo.beans.ProcedureLiteVoBean)vo.getProcedure().getBean();
		this.electivelistname = vo.getElectiveListName() == null ? null : (ims.admin.vo.beans.ElectiveListConfigLiteVoBean)vo.getElectiveListName().getBean();
		this.theatretype = vo.getTheatreType() == null ? null : (ims.vo.LookupInstanceBean)vo.getTheatreType().getBean();
		this.anaesthetictype = vo.getAnaestheticType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAnaestheticType().getBean();
		this.electiveliststatus = vo.getElectiveListStatus();
		this.electiveliststatusrequirestcisuboption = vo.getElectiveListStatusRequiresTCISubOption();
		this.shortnotice = vo.getShortNotice();
		this.daysnoticerequired = vo.getDaysNoticeRequired();
		this.rttbreachin = vo.getRTTBreachIn();
		this.rttbreachinperiod = vo.getRTTBreachInPeriod() == null ? null : (ims.vo.LookupInstanceBean)vo.getRTTBreachInPeriod().getBean();
		this.includepatientsrttbreached = vo.getIncludePatientsRTTBreached();
		this.planneddatein = vo.getPlannedDateIn();
		this.planneddateinperiod = vo.getPlannedDateInPeriod() == null ? null : (ims.vo.LookupInstanceBean)vo.getPlannedDateInPeriod().getBean();
		this.includepatientspastplanneddates = vo.getIncludePatientsPastPlannedDates();
		this.hospital = vo.getHospital() == null ? null : (ims.core.vo.beans.LocationLiteVoBean)vo.getHospital().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.RefMan.vo.SearchCriteriaForElectiveListManagementVo vo)
	{
		this.type = vo.getType() == null ? null : vo.getType().getBeanCollection();
		this.admissiontype = vo.getAdmissionType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAdmissionType().getBean();
		this.urgency = vo.getUrgency() == null ? null : (ims.vo.LookupInstanceBean)vo.getUrgency().getBean();
		this.onlycancerreferrals = vo.getOnlyCancerReferrals();
		this.service = vo.getService() == null ? null : (ims.admin.vo.beans.ServiceForElectiveListConfigVoBean)vo.getService().getBean(map);
		this.consultant = vo.getConsultant() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getConsultant().getBean(map);
		this.procedure = vo.getProcedure() == null ? null : (ims.core.vo.beans.ProcedureLiteVoBean)vo.getProcedure().getBean(map);
		this.electivelistname = vo.getElectiveListName() == null ? null : (ims.admin.vo.beans.ElectiveListConfigLiteVoBean)vo.getElectiveListName().getBean(map);
		this.theatretype = vo.getTheatreType() == null ? null : (ims.vo.LookupInstanceBean)vo.getTheatreType().getBean();
		this.anaesthetictype = vo.getAnaestheticType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAnaestheticType().getBean();
		this.electiveliststatus = vo.getElectiveListStatus();
		this.electiveliststatusrequirestcisuboption = vo.getElectiveListStatusRequiresTCISubOption();
		this.shortnotice = vo.getShortNotice();
		this.daysnoticerequired = vo.getDaysNoticeRequired();
		this.rttbreachin = vo.getRTTBreachIn();
		this.rttbreachinperiod = vo.getRTTBreachInPeriod() == null ? null : (ims.vo.LookupInstanceBean)vo.getRTTBreachInPeriod().getBean();
		this.includepatientsrttbreached = vo.getIncludePatientsRTTBreached();
		this.planneddatein = vo.getPlannedDateIn();
		this.planneddateinperiod = vo.getPlannedDateInPeriod() == null ? null : (ims.vo.LookupInstanceBean)vo.getPlannedDateInPeriod().getBean();
		this.includepatientspastplanneddates = vo.getIncludePatientsPastPlannedDates();
		this.hospital = vo.getHospital() == null ? null : (ims.core.vo.beans.LocationLiteVoBean)vo.getHospital().getBean(map);
	}

	public ims.RefMan.vo.SearchCriteriaForElectiveListManagementVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.RefMan.vo.SearchCriteriaForElectiveListManagementVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.RefMan.vo.SearchCriteriaForElectiveListManagementVo vo = null;
		if(map != null)
			vo = (ims.RefMan.vo.SearchCriteriaForElectiveListManagementVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.RefMan.vo.SearchCriteriaForElectiveListManagementVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public java.util.Collection getType()
	{
		return this.type;
	}
	public void setType(java.util.Collection value)
	{
		this.type = value;
	}
	public void addType(java.util.Collection value)
	{
		if(this.type == null)
			this.type = new java.util.ArrayList();
		this.type.add(value);
	}
	public ims.vo.LookupInstanceBean getAdmissionType()
	{
		return this.admissiontype;
	}
	public void setAdmissionType(ims.vo.LookupInstanceBean value)
	{
		this.admissiontype = value;
	}
	public ims.vo.LookupInstanceBean getUrgency()
	{
		return this.urgency;
	}
	public void setUrgency(ims.vo.LookupInstanceBean value)
	{
		this.urgency = value;
	}
	public Boolean getOnlyCancerReferrals()
	{
		return this.onlycancerreferrals;
	}
	public void setOnlyCancerReferrals(Boolean value)
	{
		this.onlycancerreferrals = value;
	}
	public ims.admin.vo.beans.ServiceForElectiveListConfigVoBean getService()
	{
		return this.service;
	}
	public void setService(ims.admin.vo.beans.ServiceForElectiveListConfigVoBean value)
	{
		this.service = value;
	}
	public ims.core.vo.beans.HcpLiteVoBean getConsultant()
	{
		return this.consultant;
	}
	public void setConsultant(ims.core.vo.beans.HcpLiteVoBean value)
	{
		this.consultant = value;
	}
	public ims.core.vo.beans.ProcedureLiteVoBean getProcedure()
	{
		return this.procedure;
	}
	public void setProcedure(ims.core.vo.beans.ProcedureLiteVoBean value)
	{
		this.procedure = value;
	}
	public ims.admin.vo.beans.ElectiveListConfigLiteVoBean getElectiveListName()
	{
		return this.electivelistname;
	}
	public void setElectiveListName(ims.admin.vo.beans.ElectiveListConfigLiteVoBean value)
	{
		this.electivelistname = value;
	}
	public ims.vo.LookupInstanceBean getTheatreType()
	{
		return this.theatretype;
	}
	public void setTheatreType(ims.vo.LookupInstanceBean value)
	{
		this.theatretype = value;
	}
	public ims.vo.LookupInstanceBean getAnaestheticType()
	{
		return this.anaesthetictype;
	}
	public void setAnaestheticType(ims.vo.LookupInstanceBean value)
	{
		this.anaesthetictype = value;
	}
	public Integer getElectiveListStatus()
	{
		return this.electiveliststatus;
	}
	public void setElectiveListStatus(Integer value)
	{
		this.electiveliststatus = value;
	}
	public Integer getElectiveListStatusRequiresTCISubOption()
	{
		return this.electiveliststatusrequirestcisuboption;
	}
	public void setElectiveListStatusRequiresTCISubOption(Integer value)
	{
		this.electiveliststatusrequirestcisuboption = value;
	}
	public Boolean getShortNotice()
	{
		return this.shortnotice;
	}
	public void setShortNotice(Boolean value)
	{
		this.shortnotice = value;
	}
	public Integer getDaysNoticeRequired()
	{
		return this.daysnoticerequired;
	}
	public void setDaysNoticeRequired(Integer value)
	{
		this.daysnoticerequired = value;
	}
	public Integer getRTTBreachIn()
	{
		return this.rttbreachin;
	}
	public void setRTTBreachIn(Integer value)
	{
		this.rttbreachin = value;
	}
	public ims.vo.LookupInstanceBean getRTTBreachInPeriod()
	{
		return this.rttbreachinperiod;
	}
	public void setRTTBreachInPeriod(ims.vo.LookupInstanceBean value)
	{
		this.rttbreachinperiod = value;
	}
	public Boolean getIncludePatientsRTTBreached()
	{
		return this.includepatientsrttbreached;
	}
	public void setIncludePatientsRTTBreached(Boolean value)
	{
		this.includepatientsrttbreached = value;
	}
	public Integer getPlannedDateIn()
	{
		return this.planneddatein;
	}
	public void setPlannedDateIn(Integer value)
	{
		this.planneddatein = value;
	}
	public ims.vo.LookupInstanceBean getPlannedDateInPeriod()
	{
		return this.planneddateinperiod;
	}
	public void setPlannedDateInPeriod(ims.vo.LookupInstanceBean value)
	{
		this.planneddateinperiod = value;
	}
	public Boolean getIncludePatientsPastPlannedDates()
	{
		return this.includepatientspastplanneddates;
	}
	public void setIncludePatientsPastPlannedDates(Boolean value)
	{
		this.includepatientspastplanneddates = value;
	}
	public ims.core.vo.beans.LocationLiteVoBean getHospital()
	{
		return this.hospital;
	}
	public void setHospital(ims.core.vo.beans.LocationLiteVoBean value)
	{
		this.hospital = value;
	}

	private java.util.Collection type;
	private ims.vo.LookupInstanceBean admissiontype;
	private ims.vo.LookupInstanceBean urgency;
	private Boolean onlycancerreferrals;
	private ims.admin.vo.beans.ServiceForElectiveListConfigVoBean service;
	private ims.core.vo.beans.HcpLiteVoBean consultant;
	private ims.core.vo.beans.ProcedureLiteVoBean procedure;
	private ims.admin.vo.beans.ElectiveListConfigLiteVoBean electivelistname;
	private ims.vo.LookupInstanceBean theatretype;
	private ims.vo.LookupInstanceBean anaesthetictype;
	private Integer electiveliststatus;
	private Integer electiveliststatusrequirestcisuboption;
	private Boolean shortnotice;
	private Integer daysnoticerequired;
	private Integer rttbreachin;
	private ims.vo.LookupInstanceBean rttbreachinperiod;
	private Boolean includepatientsrttbreached;
	private Integer planneddatein;
	private ims.vo.LookupInstanceBean planneddateinperiod;
	private Boolean includepatientspastplanneddates;
	private ims.core.vo.beans.LocationLiteVoBean hospital;
}
