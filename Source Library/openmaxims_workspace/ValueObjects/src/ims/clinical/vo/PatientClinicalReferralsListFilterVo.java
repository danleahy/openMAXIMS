//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.vo;


public class PatientClinicalReferralsListFilterVo extends ims.vo.ValueObject implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public PatientClinicalReferralsListFilterVo()
	{
	}
	public PatientClinicalReferralsListFilterVo(ims.clinical.vo.beans.PatientClinicalReferralsListFilterVoBean bean)
	{
		this.service = bean.getService() == null ? null : bean.getService().buildVo();
		this.referralstatus = bean.getReferralStatus() == null ? null : ims.core.vo.lookups.InternalReferralStatus.buildLookup(bean.getReferralStatus());
		this.referraldatefrom = bean.getReferralDateFrom() == null ? null : bean.getReferralDateFrom().buildDate();
		this.referraldateto = bean.getReferralDateTo() == null ? null : bean.getReferralDateTo().buildDate();
		this.patient = bean.getPatient() == null ? null : new ims.core.patient.vo.PatientRefVo(new Integer(bean.getPatient().getId()), bean.getPatient().getVersion());
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.clinical.vo.beans.PatientClinicalReferralsListFilterVoBean bean)
	{
		this.service = bean.getService() == null ? null : bean.getService().buildVo(map);
		this.referralstatus = bean.getReferralStatus() == null ? null : ims.core.vo.lookups.InternalReferralStatus.buildLookup(bean.getReferralStatus());
		this.referraldatefrom = bean.getReferralDateFrom() == null ? null : bean.getReferralDateFrom().buildDate();
		this.referraldateto = bean.getReferralDateTo() == null ? null : bean.getReferralDateTo().buildDate();
		this.patient = bean.getPatient() == null ? null : new ims.core.patient.vo.PatientRefVo(new Integer(bean.getPatient().getId()), bean.getPatient().getVersion());
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.clinical.vo.beans.PatientClinicalReferralsListFilterVoBean bean = null;
		if(map != null)
			bean = (ims.clinical.vo.beans.PatientClinicalReferralsListFilterVoBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.clinical.vo.beans.PatientClinicalReferralsListFilterVoBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public boolean getServiceIsNotNull()
	{
		return this.service != null;
	}
	public ims.clinical.vo.ServiceConfigIntReferralForIncomingListVo getService()
	{
		return this.service;
	}
	public void setService(ims.clinical.vo.ServiceConfigIntReferralForIncomingListVo value)
	{
		this.isValidated = false;
		this.service = value;
	}
	public boolean getReferralStatusIsNotNull()
	{
		return this.referralstatus != null;
	}
	public ims.core.vo.lookups.InternalReferralStatus getReferralStatus()
	{
		return this.referralstatus;
	}
	public void setReferralStatus(ims.core.vo.lookups.InternalReferralStatus value)
	{
		this.isValidated = false;
		this.referralstatus = value;
	}
	public boolean getReferralDateFromIsNotNull()
	{
		return this.referraldatefrom != null;
	}
	public ims.framework.utils.Date getReferralDateFrom()
	{
		return this.referraldatefrom;
	}
	public void setReferralDateFrom(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.referraldatefrom = value;
	}
	public boolean getReferralDateToIsNotNull()
	{
		return this.referraldateto != null;
	}
	public ims.framework.utils.Date getReferralDateTo()
	{
		return this.referraldateto;
	}
	public void setReferralDateTo(ims.framework.utils.Date value)
	{
		this.isValidated = false;
		this.referraldateto = value;
	}
	public boolean getPatientIsNotNull()
	{
		return this.patient != null;
	}
	public ims.core.patient.vo.PatientRefVo getPatient()
	{
		return this.patient;
	}
	public void setPatient(ims.core.patient.vo.PatientRefVo value)
	{
		this.isValidated = false;
		this.patient = value;
	}
	public final String getIItemText()
	{
		return toString();
	}
	public final Integer getBoId() 
	{
		return null;
	}
	public final String getBoClassName()
	{
		return null;
	}
	public boolean equals(Object obj)
	{
		if(obj == null)
			return false;
		if(!(obj instanceof PatientClinicalReferralsListFilterVo))
			return false;
		PatientClinicalReferralsListFilterVo compareObj = (PatientClinicalReferralsListFilterVo)obj;
		if(this.getService() == null && compareObj.getService() != null)
			return false;
		if(this.getService() != null && compareObj.getService() == null)
			return false;
		if(this.getService() != null && compareObj.getService() != null)
			return this.getService().equals(compareObj.getService());
		return super.equals(obj);
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		PatientClinicalReferralsListFilterVo clone = new PatientClinicalReferralsListFilterVo();
		
		if(this.service == null)
			clone.service = null;
		else
			clone.service = (ims.clinical.vo.ServiceConfigIntReferralForIncomingListVo)this.service.clone();
		if(this.referralstatus == null)
			clone.referralstatus = null;
		else
			clone.referralstatus = (ims.core.vo.lookups.InternalReferralStatus)this.referralstatus.clone();
		if(this.referraldatefrom == null)
			clone.referraldatefrom = null;
		else
			clone.referraldatefrom = (ims.framework.utils.Date)this.referraldatefrom.clone();
		if(this.referraldateto == null)
			clone.referraldateto = null;
		else
			clone.referraldateto = (ims.framework.utils.Date)this.referraldateto.clone();
		clone.patient = this.patient;
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(PatientClinicalReferralsListFilterVo.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A PatientClinicalReferralsListFilterVo object cannot be compared an Object of type " + obj.getClass().getName());
		}
		PatientClinicalReferralsListFilterVo compareObj = (PatientClinicalReferralsListFilterVo)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getPatient() == null && compareObj.getPatient() != null)
				return -1;
			if(this.getPatient() != null && compareObj.getPatient() == null)
				return 1;
			if(this.getPatient() != null && compareObj.getPatient() != null)
				retVal = this.getPatient().compareTo(compareObj.getPatient());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.service != null)
			count++;
		if(this.referralstatus != null)
			count++;
		if(this.referraldatefrom != null)
			count++;
		if(this.referraldateto != null)
			count++;
		if(this.patient != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 5;
	}
	protected ims.clinical.vo.ServiceConfigIntReferralForIncomingListVo service;
	protected ims.core.vo.lookups.InternalReferralStatus referralstatus;
	protected ims.framework.utils.Date referraldatefrom;
	protected ims.framework.utils.Date referraldateto;
	protected ims.core.patient.vo.PatientRefVo patient;
	private boolean isValidated = false;
	private boolean isBusy = false;
}
