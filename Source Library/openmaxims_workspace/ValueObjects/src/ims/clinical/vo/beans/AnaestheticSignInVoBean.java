//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.vo.beans;

public class AnaestheticSignInVoBean extends ims.vo.ValueObjectBean
{
	public AnaestheticSignInVoBean()
	{
	}
	public AnaestheticSignInVoBean(ims.clinical.vo.AnaestheticSignInVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.theatreappointment = vo.getTheatreAppointment() == null ? null : new ims.vo.RefVoBean(vo.getTheatreAppointment().getBoId(), vo.getTheatreAppointment().getBoVersion());
		this.patientconfirmedidentity = vo.getPatientConfirmedIdentity();
		this.idbraceletchecked = vo.getIdBraceletChecked();
		this.allergieschecked = vo.getAllergiesChecked();
		this.allergybraceletpresen = vo.getAllergyBraceletPresen();
		this.ispatientdiabetic = vo.getIsPatientDiabetic() == null ? null : (ims.vo.LookupInstanceBean)vo.getIsPatientDiabetic().getBean();
		this.procedureandsiteconfirmedbypatient = vo.getProcedureAndSiteConfirmedByPatient() == null ? null : (ims.vo.LookupInstanceBean)vo.getProcedureAndSiteConfirmedByPatient().getBean();
		this.procedureandsiteconfirmedbypractitioner = vo.getProcedureAndSiteConfirmedByPractitioner() == null ? null : (ims.vo.LookupInstanceBean)vo.getProcedureAndSiteConfirmedByPractitioner().getBean();
		this.operationsitemarked = vo.getOperationSiteMarked() == null ? null : (ims.vo.LookupInstanceBean)vo.getOperationSiteMarked().getBean();
		this.patientstarved = vo.getPatientStarved() == null ? null : (ims.vo.LookupInstanceBean)vo.getPatientStarved().getBean();
		this.anaesthetictype = vo.getAnaestheticType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAnaestheticType().getBean();
		this.regionalblockrequired = vo.getRegionalBlockRequired();
		this.anticoagulantstatusconfirmed = vo.getAnticoagulantStatusConfirmed();
		this.asaclass = vo.getASAClass();
		this.anaesthesiamachineandmedicationcheckcomplete = vo.getAnaesthesiaMachineAndMedicationCheckComplete();
		this.knowndifficultairway = vo.getKnownDifficultAirway() == null ? null : (ims.vo.LookupInstanceBean)vo.getKnownDifficultAirway().getBean();
		this.riskorgreaterthan500mlbloodloss = vo.getRiskOrGreaterThan500mlBloodLoss() == null ? null : (ims.vo.LookupInstanceBean)vo.getRiskOrGreaterThan500mlBloodLoss().getBean();
		this.gandselectronicissues = vo.getGandSElectronicIssues();
		this.intraoperativefluidsrequired = vo.getIntraoperativeFluidsRequired() == null ? null : (ims.vo.LookupInstanceBean)vo.getIntraoperativeFluidsRequired().getBean();
		this.antibioticsrequired = vo.getAntibioticsRequired();
		this.antibioticsgivendatetime = vo.getAntibioticsGivenDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getAntibioticsGivenDateTime().getBean();
		this.patientpreinductiontemperature = vo.getPatientPreinductionTemperature();
		this.preopbloodglucoseresult = vo.getPreopBloodGlucoseResult();
		// Interface field type not supported.
		this.laanaestheticblocktype = vo.getLAAnaestheticBlockType() == null ? null : vo.getLAAnaestheticBlockType().getBeanCollection();
		this.interscalene = vo.getInterscalene();
		this.axillary = vo.getAxillary();
		this.leftandrightsidecheckedandsorrectsidemarked = vo.getLeftAndRightSideCheckedAndSorrectSideMarked() == null ? null : (ims.vo.LookupInstanceBean)vo.getLeftAndRightSideCheckedAndSorrectSideMarked().getBean();
		// Interface field type not supported.
		this.denturesimplantslooseteeth = vo.getDenturesImplantsLooseTeeth();
		this.relevantchartsnotespresent = vo.getRelevantChartsNotesPresent();
		this.allergiesconfirmedbypatient = vo.getAllergiesConfirmedByPatient() == null ? null : (ims.vo.LookupInstanceBean)vo.getAllergiesConfirmedByPatient().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.clinical.vo.AnaestheticSignInVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.theatreappointment = vo.getTheatreAppointment() == null ? null : new ims.vo.RefVoBean(vo.getTheatreAppointment().getBoId(), vo.getTheatreAppointment().getBoVersion());
		this.patientconfirmedidentity = vo.getPatientConfirmedIdentity();
		this.idbraceletchecked = vo.getIdBraceletChecked();
		this.allergieschecked = vo.getAllergiesChecked();
		this.allergybraceletpresen = vo.getAllergyBraceletPresen();
		this.ispatientdiabetic = vo.getIsPatientDiabetic() == null ? null : (ims.vo.LookupInstanceBean)vo.getIsPatientDiabetic().getBean();
		this.procedureandsiteconfirmedbypatient = vo.getProcedureAndSiteConfirmedByPatient() == null ? null : (ims.vo.LookupInstanceBean)vo.getProcedureAndSiteConfirmedByPatient().getBean();
		this.procedureandsiteconfirmedbypractitioner = vo.getProcedureAndSiteConfirmedByPractitioner() == null ? null : (ims.vo.LookupInstanceBean)vo.getProcedureAndSiteConfirmedByPractitioner().getBean();
		this.operationsitemarked = vo.getOperationSiteMarked() == null ? null : (ims.vo.LookupInstanceBean)vo.getOperationSiteMarked().getBean();
		this.patientstarved = vo.getPatientStarved() == null ? null : (ims.vo.LookupInstanceBean)vo.getPatientStarved().getBean();
		this.anaesthetictype = vo.getAnaestheticType() == null ? null : (ims.vo.LookupInstanceBean)vo.getAnaestheticType().getBean();
		this.regionalblockrequired = vo.getRegionalBlockRequired();
		this.anticoagulantstatusconfirmed = vo.getAnticoagulantStatusConfirmed();
		this.asaclass = vo.getASAClass();
		this.anaesthesiamachineandmedicationcheckcomplete = vo.getAnaesthesiaMachineAndMedicationCheckComplete();
		this.knowndifficultairway = vo.getKnownDifficultAirway() == null ? null : (ims.vo.LookupInstanceBean)vo.getKnownDifficultAirway().getBean();
		this.riskorgreaterthan500mlbloodloss = vo.getRiskOrGreaterThan500mlBloodLoss() == null ? null : (ims.vo.LookupInstanceBean)vo.getRiskOrGreaterThan500mlBloodLoss().getBean();
		this.gandselectronicissues = vo.getGandSElectronicIssues();
		this.intraoperativefluidsrequired = vo.getIntraoperativeFluidsRequired() == null ? null : (ims.vo.LookupInstanceBean)vo.getIntraoperativeFluidsRequired().getBean();
		this.antibioticsrequired = vo.getAntibioticsRequired();
		this.antibioticsgivendatetime = vo.getAntibioticsGivenDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getAntibioticsGivenDateTime().getBean();
		this.patientpreinductiontemperature = vo.getPatientPreinductionTemperature();
		this.preopbloodglucoseresult = vo.getPreopBloodGlucoseResult();
		// Interface field type not supported.
		this.laanaestheticblocktype = vo.getLAAnaestheticBlockType() == null ? null : vo.getLAAnaestheticBlockType().getBeanCollection();
		this.interscalene = vo.getInterscalene();
		this.axillary = vo.getAxillary();
		this.leftandrightsidecheckedandsorrectsidemarked = vo.getLeftAndRightSideCheckedAndSorrectSideMarked() == null ? null : (ims.vo.LookupInstanceBean)vo.getLeftAndRightSideCheckedAndSorrectSideMarked().getBean();
		// Interface field type not supported.
		this.denturesimplantslooseteeth = vo.getDenturesImplantsLooseTeeth();
		this.relevantchartsnotespresent = vo.getRelevantChartsNotesPresent();
		this.allergiesconfirmedbypatient = vo.getAllergiesConfirmedByPatient() == null ? null : (ims.vo.LookupInstanceBean)vo.getAllergiesConfirmedByPatient().getBean();
	}

	public ims.clinical.vo.AnaestheticSignInVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.clinical.vo.AnaestheticSignInVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.clinical.vo.AnaestheticSignInVo vo = null;
		if(map != null)
			vo = (ims.clinical.vo.AnaestheticSignInVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.clinical.vo.AnaestheticSignInVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.vo.RefVoBean getTheatreAppointment()
	{
		return this.theatreappointment;
	}
	public void setTheatreAppointment(ims.vo.RefVoBean value)
	{
		this.theatreappointment = value;
	}
	public Boolean getPatientConfirmedIdentity()
	{
		return this.patientconfirmedidentity;
	}
	public void setPatientConfirmedIdentity(Boolean value)
	{
		this.patientconfirmedidentity = value;
	}
	public Boolean getIdBraceletChecked()
	{
		return this.idbraceletchecked;
	}
	public void setIdBraceletChecked(Boolean value)
	{
		this.idbraceletchecked = value;
	}
	public Boolean getAllergiesChecked()
	{
		return this.allergieschecked;
	}
	public void setAllergiesChecked(Boolean value)
	{
		this.allergieschecked = value;
	}
	public Boolean getAllergyBraceletPresen()
	{
		return this.allergybraceletpresen;
	}
	public void setAllergyBraceletPresen(Boolean value)
	{
		this.allergybraceletpresen = value;
	}
	public ims.vo.LookupInstanceBean getIsPatientDiabetic()
	{
		return this.ispatientdiabetic;
	}
	public void setIsPatientDiabetic(ims.vo.LookupInstanceBean value)
	{
		this.ispatientdiabetic = value;
	}
	public ims.vo.LookupInstanceBean getProcedureAndSiteConfirmedByPatient()
	{
		return this.procedureandsiteconfirmedbypatient;
	}
	public void setProcedureAndSiteConfirmedByPatient(ims.vo.LookupInstanceBean value)
	{
		this.procedureandsiteconfirmedbypatient = value;
	}
	public ims.vo.LookupInstanceBean getProcedureAndSiteConfirmedByPractitioner()
	{
		return this.procedureandsiteconfirmedbypractitioner;
	}
	public void setProcedureAndSiteConfirmedByPractitioner(ims.vo.LookupInstanceBean value)
	{
		this.procedureandsiteconfirmedbypractitioner = value;
	}
	public ims.vo.LookupInstanceBean getOperationSiteMarked()
	{
		return this.operationsitemarked;
	}
	public void setOperationSiteMarked(ims.vo.LookupInstanceBean value)
	{
		this.operationsitemarked = value;
	}
	public ims.vo.LookupInstanceBean getPatientStarved()
	{
		return this.patientstarved;
	}
	public void setPatientStarved(ims.vo.LookupInstanceBean value)
	{
		this.patientstarved = value;
	}
	public ims.vo.LookupInstanceBean getAnaestheticType()
	{
		return this.anaesthetictype;
	}
	public void setAnaestheticType(ims.vo.LookupInstanceBean value)
	{
		this.anaesthetictype = value;
	}
	public Boolean getRegionalBlockRequired()
	{
		return this.regionalblockrequired;
	}
	public void setRegionalBlockRequired(Boolean value)
	{
		this.regionalblockrequired = value;
	}
	public Boolean getAnticoagulantStatusConfirmed()
	{
		return this.anticoagulantstatusconfirmed;
	}
	public void setAnticoagulantStatusConfirmed(Boolean value)
	{
		this.anticoagulantstatusconfirmed = value;
	}
	public Integer getASAClass()
	{
		return this.asaclass;
	}
	public void setASAClass(Integer value)
	{
		this.asaclass = value;
	}
	public Boolean getAnaesthesiaMachineAndMedicationCheckComplete()
	{
		return this.anaesthesiamachineandmedicationcheckcomplete;
	}
	public void setAnaesthesiaMachineAndMedicationCheckComplete(Boolean value)
	{
		this.anaesthesiamachineandmedicationcheckcomplete = value;
	}
	public ims.vo.LookupInstanceBean getKnownDifficultAirway()
	{
		return this.knowndifficultairway;
	}
	public void setKnownDifficultAirway(ims.vo.LookupInstanceBean value)
	{
		this.knowndifficultairway = value;
	}
	public ims.vo.LookupInstanceBean getRiskOrGreaterThan500mlBloodLoss()
	{
		return this.riskorgreaterthan500mlbloodloss;
	}
	public void setRiskOrGreaterThan500mlBloodLoss(ims.vo.LookupInstanceBean value)
	{
		this.riskorgreaterthan500mlbloodloss = value;
	}
	public Boolean getGandSElectronicIssues()
	{
		return this.gandselectronicissues;
	}
	public void setGandSElectronicIssues(Boolean value)
	{
		this.gandselectronicissues = value;
	}
	public ims.vo.LookupInstanceBean getIntraoperativeFluidsRequired()
	{
		return this.intraoperativefluidsrequired;
	}
	public void setIntraoperativeFluidsRequired(ims.vo.LookupInstanceBean value)
	{
		this.intraoperativefluidsrequired = value;
	}
	public Boolean getAntibioticsRequired()
	{
		return this.antibioticsrequired;
	}
	public void setAntibioticsRequired(Boolean value)
	{
		this.antibioticsrequired = value;
	}
	public ims.framework.utils.beans.DateTimeBean getAntibioticsGivenDateTime()
	{
		return this.antibioticsgivendatetime;
	}
	public void setAntibioticsGivenDateTime(ims.framework.utils.beans.DateTimeBean value)
	{
		this.antibioticsgivendatetime = value;
	}
	public Float getPatientPreinductionTemperature()
	{
		return this.patientpreinductiontemperature;
	}
	public void setPatientPreinductionTemperature(Float value)
	{
		this.patientpreinductiontemperature = value;
	}
	public Float getPreopBloodGlucoseResult()
	{
		return this.preopbloodglucoseresult;
	}
	public void setPreopBloodGlucoseResult(Float value)
	{
		this.preopbloodglucoseresult = value;
	}
	public java.util.Collection getLAAnaestheticBlockType()
	{
		return this.laanaestheticblocktype;
	}
	public void setLAAnaestheticBlockType(java.util.Collection value)
	{
		this.laanaestheticblocktype = value;
	}
	public void addLAAnaestheticBlockType(java.util.Collection value)
	{
		if(this.laanaestheticblocktype == null)
			this.laanaestheticblocktype = new java.util.ArrayList();
		this.laanaestheticblocktype.add(value);
	}
	public Boolean getInterscalene()
	{
		return this.interscalene;
	}
	public void setInterscalene(Boolean value)
	{
		this.interscalene = value;
	}
	public Boolean getAxillary()
	{
		return this.axillary;
	}
	public void setAxillary(Boolean value)
	{
		this.axillary = value;
	}
	public ims.vo.LookupInstanceBean getLeftAndRightSideCheckedAndSorrectSideMarked()
	{
		return this.leftandrightsidecheckedandsorrectsidemarked;
	}
	public void setLeftAndRightSideCheckedAndSorrectSideMarked(ims.vo.LookupInstanceBean value)
	{
		this.leftandrightsidecheckedandsorrectsidemarked = value;
	}
	public Boolean getDenturesImplantsLooseTeeth()
	{
		return this.denturesimplantslooseteeth;
	}
	public void setDenturesImplantsLooseTeeth(Boolean value)
	{
		this.denturesimplantslooseteeth = value;
	}
	public Boolean getRelevantChartsNotesPresent()
	{
		return this.relevantchartsnotespresent;
	}
	public void setRelevantChartsNotesPresent(Boolean value)
	{
		this.relevantchartsnotespresent = value;
	}
	public ims.vo.LookupInstanceBean getAllergiesConfirmedByPatient()
	{
		return this.allergiesconfirmedbypatient;
	}
	public void setAllergiesConfirmedByPatient(ims.vo.LookupInstanceBean value)
	{
		this.allergiesconfirmedbypatient = value;
	}

	private Integer id;
	private int version;
	private ims.vo.RefVoBean theatreappointment;
	private Boolean patientconfirmedidentity;
	private Boolean idbraceletchecked;
	private Boolean allergieschecked;
	private Boolean allergybraceletpresen;
	private ims.vo.LookupInstanceBean ispatientdiabetic;
	private ims.vo.LookupInstanceBean procedureandsiteconfirmedbypatient;
	private ims.vo.LookupInstanceBean procedureandsiteconfirmedbypractitioner;
	private ims.vo.LookupInstanceBean operationsitemarked;
	private ims.vo.LookupInstanceBean patientstarved;
	private ims.vo.LookupInstanceBean anaesthetictype;
	private Boolean regionalblockrequired;
	private Boolean anticoagulantstatusconfirmed;
	private Integer asaclass;
	private Boolean anaesthesiamachineandmedicationcheckcomplete;
	private ims.vo.LookupInstanceBean knowndifficultairway;
	private ims.vo.LookupInstanceBean riskorgreaterthan500mlbloodloss;
	private Boolean gandselectronicissues;
	private ims.vo.LookupInstanceBean intraoperativefluidsrequired;
	private Boolean antibioticsrequired;
	private ims.framework.utils.beans.DateTimeBean antibioticsgivendatetime;
	private Float patientpreinductiontemperature;
	private Float preopbloodglucoseresult;
	private java.util.Collection laanaestheticblocktype;
	private Boolean interscalene;
	private Boolean axillary;
	private ims.vo.LookupInstanceBean leftandrightsidecheckedandsorrectsidemarked;
	private Boolean denturesimplantslooseteeth;
	private Boolean relevantchartsnotespresent;
	private ims.vo.LookupInstanceBean allergiesconfirmedbypatient;
}
