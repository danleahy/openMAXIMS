//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.vo.beans;

public class LaserDetailIntraOpVoBean extends ims.vo.ValueObjectBean
{
	public LaserDetailIntraOpVoBean()
	{
	}
	public LaserDetailIntraOpVoBean(ims.clinical.vo.LaserDetailIntraOpVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.theatreappointment = vo.getTheatreAppointment() == null ? null : new ims.vo.RefVoBean(vo.getTheatreAppointment().getBoId(), vo.getTheatreAppointment().getBoVersion());
		this.devicename = vo.getDeviceName() == null ? null : (ims.vo.LookupInstanceBean)vo.getDeviceName().getBean();
		this.deviceserialnumber = vo.getDeviceSerialNumber() == null ? null : (ims.vo.LookupInstanceBean)vo.getDeviceSerialNumber().getBean();
		this.laserfibrelotnumber = vo.getLaserFibreLotNumber();
		this.lasermode = vo.getLaserMode() == null ? null : (ims.vo.LookupInstanceBean)vo.getLaserMode().getBean();
		this.power = vo.getPower();
		this.totaldurationseconds = vo.getTotalDurationSeconds();
		this.numberofburns = vo.getNumberOfBurns();
		this.laseroperator = vo.getLaserOperator() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getLaserOperator().getBean();
		this.patientsafetymeasures = vo.getPatientSafetyMeasures() == null ? null : vo.getPatientSafetyMeasures().getBeanCollection();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.clinical.vo.LaserDetailIntraOpVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.theatreappointment = vo.getTheatreAppointment() == null ? null : new ims.vo.RefVoBean(vo.getTheatreAppointment().getBoId(), vo.getTheatreAppointment().getBoVersion());
		this.devicename = vo.getDeviceName() == null ? null : (ims.vo.LookupInstanceBean)vo.getDeviceName().getBean();
		this.deviceserialnumber = vo.getDeviceSerialNumber() == null ? null : (ims.vo.LookupInstanceBean)vo.getDeviceSerialNumber().getBean();
		this.laserfibrelotnumber = vo.getLaserFibreLotNumber();
		this.lasermode = vo.getLaserMode() == null ? null : (ims.vo.LookupInstanceBean)vo.getLaserMode().getBean();
		this.power = vo.getPower();
		this.totaldurationseconds = vo.getTotalDurationSeconds();
		this.numberofburns = vo.getNumberOfBurns();
		this.laseroperator = vo.getLaserOperator() == null ? null : (ims.core.vo.beans.HcpLiteVoBean)vo.getLaserOperator().getBean(map);
		this.patientsafetymeasures = vo.getPatientSafetyMeasures() == null ? null : vo.getPatientSafetyMeasures().getBeanCollection();
	}

	public ims.clinical.vo.LaserDetailIntraOpVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.clinical.vo.LaserDetailIntraOpVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.clinical.vo.LaserDetailIntraOpVo vo = null;
		if(map != null)
			vo = (ims.clinical.vo.LaserDetailIntraOpVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.clinical.vo.LaserDetailIntraOpVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.vo.RefVoBean getTheatreAppointment()
	{
		return this.theatreappointment;
	}
	public void setTheatreAppointment(ims.vo.RefVoBean value)
	{
		this.theatreappointment = value;
	}
	public ims.vo.LookupInstanceBean getDeviceName()
	{
		return this.devicename;
	}
	public void setDeviceName(ims.vo.LookupInstanceBean value)
	{
		this.devicename = value;
	}
	public ims.vo.LookupInstanceBean getDeviceSerialNumber()
	{
		return this.deviceserialnumber;
	}
	public void setDeviceSerialNumber(ims.vo.LookupInstanceBean value)
	{
		this.deviceserialnumber = value;
	}
	public String getLaserFibreLotNumber()
	{
		return this.laserfibrelotnumber;
	}
	public void setLaserFibreLotNumber(String value)
	{
		this.laserfibrelotnumber = value;
	}
	public ims.vo.LookupInstanceBean getLaserMode()
	{
		return this.lasermode;
	}
	public void setLaserMode(ims.vo.LookupInstanceBean value)
	{
		this.lasermode = value;
	}
	public Float getPower()
	{
		return this.power;
	}
	public void setPower(Float value)
	{
		this.power = value;
	}
	public Integer getTotalDurationSeconds()
	{
		return this.totaldurationseconds;
	}
	public void setTotalDurationSeconds(Integer value)
	{
		this.totaldurationseconds = value;
	}
	public Integer getNumberOfBurns()
	{
		return this.numberofburns;
	}
	public void setNumberOfBurns(Integer value)
	{
		this.numberofburns = value;
	}
	public ims.core.vo.beans.HcpLiteVoBean getLaserOperator()
	{
		return this.laseroperator;
	}
	public void setLaserOperator(ims.core.vo.beans.HcpLiteVoBean value)
	{
		this.laseroperator = value;
	}
	public java.util.Collection getPatientSafetyMeasures()
	{
		return this.patientsafetymeasures;
	}
	public void setPatientSafetyMeasures(java.util.Collection value)
	{
		this.patientsafetymeasures = value;
	}
	public void addPatientSafetyMeasures(java.util.Collection value)
	{
		if(this.patientsafetymeasures == null)
			this.patientsafetymeasures = new java.util.ArrayList();
		this.patientsafetymeasures.add(value);
	}

	private Integer id;
	private int version;
	private ims.vo.RefVoBean theatreappointment;
	private ims.vo.LookupInstanceBean devicename;
	private ims.vo.LookupInstanceBean deviceserialnumber;
	private String laserfibrelotnumber;
	private ims.vo.LookupInstanceBean lasermode;
	private Float power;
	private Integer totaldurationseconds;
	private Integer numberofburns;
	private ims.core.vo.beans.HcpLiteVoBean laseroperator;
	private java.util.Collection patientsafetymeasures;
}
