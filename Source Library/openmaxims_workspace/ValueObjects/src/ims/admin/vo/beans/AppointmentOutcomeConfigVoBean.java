//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.vo.beans;

public class AppointmentOutcomeConfigVoBean extends ims.vo.ValueObjectBean
{
	public AppointmentOutcomeConfigVoBean()
	{
	}
	public AppointmentOutcomeConfigVoBean(ims.admin.vo.AppointmentOutcomeConfigVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.appointmentoutcomereasons = vo.getAppointmentOutcomeReasons() == null ? null : vo.getAppointmentOutcomeReasons().getBeanCollection();
		this.showfirstdefinitivetreatment = vo.getShowFirstDefinitiveTreatment();
		this.canaddtowaitinglist = vo.getCanAddtoWaitingList();
		this.canaddtoplannedlist = vo.getCanAddtoPlannedList();
		this.canmakeappointment = vo.getCanMakeAppointment();
		this.cantransfer = vo.getCanTransfer();
		this.appointmentoutcome = vo.getAppointmentOutcome() == null ? null : (ims.vo.LookupInstanceBean)vo.getAppointmentOutcome().getBean();
		this.firstdefinitivetreatmentevent = vo.getFirstDefinitiveTreatmentEvent() == null ? null : (ims.pathways.vo.beans.EventLiteVoBean)vo.getFirstDefinitiveTreatmentEvent().getBean();
		this.usedforseen = vo.getUsedForSeen();
		this.usedfornotseen = vo.getUsedForNotSeen();
		this.usedfordna = vo.getUsedForDNA();
		this.canaddrequestforservice = vo.getCanAddRequestForService();
		this.cantransferofcare = vo.getCanTransferOfCare();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.admin.vo.AppointmentOutcomeConfigVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.appointmentoutcomereasons = vo.getAppointmentOutcomeReasons() == null ? null : vo.getAppointmentOutcomeReasons().getBeanCollection();
		this.showfirstdefinitivetreatment = vo.getShowFirstDefinitiveTreatment();
		this.canaddtowaitinglist = vo.getCanAddtoWaitingList();
		this.canaddtoplannedlist = vo.getCanAddtoPlannedList();
		this.canmakeappointment = vo.getCanMakeAppointment();
		this.cantransfer = vo.getCanTransfer();
		this.appointmentoutcome = vo.getAppointmentOutcome() == null ? null : (ims.vo.LookupInstanceBean)vo.getAppointmentOutcome().getBean();
		this.firstdefinitivetreatmentevent = vo.getFirstDefinitiveTreatmentEvent() == null ? null : (ims.pathways.vo.beans.EventLiteVoBean)vo.getFirstDefinitiveTreatmentEvent().getBean(map);
		this.usedforseen = vo.getUsedForSeen();
		this.usedfornotseen = vo.getUsedForNotSeen();
		this.usedfordna = vo.getUsedForDNA();
		this.canaddrequestforservice = vo.getCanAddRequestForService();
		this.cantransferofcare = vo.getCanTransferOfCare();
	}

	public ims.admin.vo.AppointmentOutcomeConfigVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.admin.vo.AppointmentOutcomeConfigVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.admin.vo.AppointmentOutcomeConfigVo vo = null;
		if(map != null)
			vo = (ims.admin.vo.AppointmentOutcomeConfigVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.admin.vo.AppointmentOutcomeConfigVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.admin.vo.beans.AppointmentOutcomeReasonVoBean[] getAppointmentOutcomeReasons()
	{
		return this.appointmentoutcomereasons;
	}
	public void setAppointmentOutcomeReasons(ims.admin.vo.beans.AppointmentOutcomeReasonVoBean[] value)
	{
		this.appointmentoutcomereasons = value;
	}
	public Boolean getShowFirstDefinitiveTreatment()
	{
		return this.showfirstdefinitivetreatment;
	}
	public void setShowFirstDefinitiveTreatment(Boolean value)
	{
		this.showfirstdefinitivetreatment = value;
	}
	public Boolean getCanAddtoWaitingList()
	{
		return this.canaddtowaitinglist;
	}
	public void setCanAddtoWaitingList(Boolean value)
	{
		this.canaddtowaitinglist = value;
	}
	public Boolean getCanAddtoPlannedList()
	{
		return this.canaddtoplannedlist;
	}
	public void setCanAddtoPlannedList(Boolean value)
	{
		this.canaddtoplannedlist = value;
	}
	public Boolean getCanMakeAppointment()
	{
		return this.canmakeappointment;
	}
	public void setCanMakeAppointment(Boolean value)
	{
		this.canmakeappointment = value;
	}
	public Boolean getCanTransfer()
	{
		return this.cantransfer;
	}
	public void setCanTransfer(Boolean value)
	{
		this.cantransfer = value;
	}
	public ims.vo.LookupInstanceBean getAppointmentOutcome()
	{
		return this.appointmentoutcome;
	}
	public void setAppointmentOutcome(ims.vo.LookupInstanceBean value)
	{
		this.appointmentoutcome = value;
	}
	public ims.pathways.vo.beans.EventLiteVoBean getFirstDefinitiveTreatmentEvent()
	{
		return this.firstdefinitivetreatmentevent;
	}
	public void setFirstDefinitiveTreatmentEvent(ims.pathways.vo.beans.EventLiteVoBean value)
	{
		this.firstdefinitivetreatmentevent = value;
	}
	public Boolean getUsedForSeen()
	{
		return this.usedforseen;
	}
	public void setUsedForSeen(Boolean value)
	{
		this.usedforseen = value;
	}
	public Boolean getUsedForNotSeen()
	{
		return this.usedfornotseen;
	}
	public void setUsedForNotSeen(Boolean value)
	{
		this.usedfornotseen = value;
	}
	public Boolean getUsedForDNA()
	{
		return this.usedfordna;
	}
	public void setUsedForDNA(Boolean value)
	{
		this.usedfordna = value;
	}
	public Boolean getCanAddRequestForService()
	{
		return this.canaddrequestforservice;
	}
	public void setCanAddRequestForService(Boolean value)
	{
		this.canaddrequestforservice = value;
	}
	public Boolean getCanTransferOfCare()
	{
		return this.cantransferofcare;
	}
	public void setCanTransferOfCare(Boolean value)
	{
		this.cantransferofcare = value;
	}

	private Integer id;
	private int version;
	private ims.admin.vo.beans.AppointmentOutcomeReasonVoBean[] appointmentoutcomereasons;
	private Boolean showfirstdefinitivetreatment;
	private Boolean canaddtowaitinglist;
	private Boolean canaddtoplannedlist;
	private Boolean canmakeappointment;
	private Boolean cantransfer;
	private ims.vo.LookupInstanceBean appointmentoutcome;
	private ims.pathways.vo.beans.EventLiteVoBean firstdefinitivetreatmentevent;
	private Boolean usedforseen;
	private Boolean usedfornotseen;
	private Boolean usedfordna;
	private Boolean canaddrequestforservice;
	private Boolean cantransferofcare;
}
