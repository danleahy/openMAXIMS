//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Florin Blindu using IMS Development Environment (version 1.80 build 5360.17707)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.emergency.domain.impl;

import ims.core.admin.domain.objects.EmergencyAttendance;
import ims.domain.DomainFactory;
import ims.emergency.domain.base.impl.BaseEDAttendanceCommentsDialogImpl;
import ims.emergency.vo.domain.EmergencyAttendanceForTrackingVoAssembler;
import ims.framework.exceptions.CodingRuntimeException;

import java.util.List;

public class EDAttendanceCommentsDialogImpl extends BaseEDAttendanceCommentsDialogImpl
{

	private static final long serialVersionUID = 1L;

	public ims.emergency.vo.EmergencyAttendanceForTrackingVo save(ims.emergency.vo.EmergencyAttendanceForTrackingVo emergencyAttendance) throws ims.domain.exceptions.StaleObjectException
	{
		if (emergencyAttendance == null )
			throw new CodingRuntimeException("Cannot save null EmergencyAttendanceForTrackingVo ");

		DomainFactory factory = getDomainFactory();

		
		EmergencyAttendance domainEmergAttendance = EmergencyAttendanceForTrackingVoAssembler.extractEmergencyAttendance(factory, emergencyAttendance);
		factory.save(domainEmergAttendance);
		
		return EmergencyAttendanceForTrackingVoAssembler.create(domainEmergAttendance);
		
	}

	public ims.emergency.vo.EmergencyAttendanceForTrackingVo getEmergencyAttendance(ims.emergency.vo.TrackingRefVo trackingRef)
	{
		if (trackingRef == null || trackingRef.getID_Tracking() == null)
		{
			throw new CodingRuntimeException("Cannot get EmergencyAttendanceForTrackingVo on null Id for Tracking ");
		}

		DomainFactory factory = getDomainFactory();

		StringBuffer hql = new StringBuffer();
		hql.append("select tracking.attendance from Tracking as tracking where tracking.id = :trackingID ");

		List<?> list = factory.find(hql.toString(), new String[] { "trackingID" }, new Object[] { trackingRef.getID_Tracking() });
	
		if (list!=null && list.size()>0)
		{
			return EmergencyAttendanceForTrackingVoAssembler.create((EmergencyAttendance) list.get(0));
		}

		return null;
	}
}
