//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Bogdan Tofei using IMS Development Environment (version 1.80 build 4342.23748)
// Copyright (C) 1995-2012 IMS MAXIMS. All rights reserved.

package ims.emergency.domain.impl;

import java.util.ArrayList;
import java.util.List;

import ims.admin.helper.Keywords;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainInterfaceException;
import ims.emergency.domain.base.impl.BaseDiscriminatorSelectDialogImpl;
import ims.emergency.vo.DiscriminatorConfigVoCollection;
import ims.emergency.vo.domain.DiscriminatorConfigVoAssembler;

public class DiscriminatorSelectDialogImpl extends BaseDiscriminatorSelectDialogImpl
{

	private static final long serialVersionUID = 1L;

	public DiscriminatorConfigVoCollection listDiscriminators(String filter)
	{
		List<?> resultsList;

		try
		{
			resultsList = listItemInfo(filter);
		}
		catch (DomainInterfaceException e)
		{
			return null;
		}

		if (resultsList.size() > 0)
		{
			return DiscriminatorConfigVoAssembler.createDiscriminatorConfigVoCollectionFromDiscriminatorConfig(resultsList);
		}

		return null;
	}

	private List<?> listItemInfo(String filter) throws DomainInterfaceException
	{
		DomainFactory factory = getDomainFactory();

		StringBuffer hql = new StringBuffer(" from DiscriminatorConfig x");

		String ret = "";
		if (filter != null)
			ret = filter.replaceAll("%", "");
		if (ret.length() != 0)
			hql.append(" join x.keywords as kw");

		ArrayList<String> names = new ArrayList<String>();
		ArrayList<Object> values = new ArrayList<Object>();

		hql.append(" where x.isActive = :isActive");
		names.add("isActive");
		values.add(Boolean.TRUE);

		return Keywords.searchByKeywords(factory, filter, hql.toString(), names, values);
	}

}
