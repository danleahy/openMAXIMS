//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.emergency.forms.attendancenotescc;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Emergency = new EmergencyContext(context);
		Core = new CoreContext(context);
	}
	public final class EmergencyContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private EmergencyContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getInterventionsTreatmentsForAttendenceIsNotNull()
		{
			return !cx_EmergencyInterventionsTreatmentsForAttendence.getValueIsNull(context);
		}
		public ims.emergency.vo.InterventionsTreatmentsForAttendenceVo getInterventionsTreatmentsForAttendence()
		{
			return (ims.emergency.vo.InterventionsTreatmentsForAttendenceVo)cx_EmergencyInterventionsTreatmentsForAttendence.getValue(context);
		}
		public void setInterventionsTreatmentsForAttendence(ims.emergency.vo.InterventionsTreatmentsForAttendenceVo value)
		{
			cx_EmergencyInterventionsTreatmentsForAttendence.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_EmergencyInterventionsTreatmentsForAttendence = new ims.framework.ContextVariable("Emergency.InterventionsTreatmentsForAttendence", "_cv_Emergency.InterventionsTreatmentsForAttendence");
		public boolean getAttendanceClinicalNotesIsNotNull()
		{
			return !cx_EmergencyAttendanceClinicalNotes.getValueIsNull(context);
		}
		public ims.emergency.vo.AttendanceClinicalNotesVo getAttendanceClinicalNotes()
		{
			return (ims.emergency.vo.AttendanceClinicalNotesVo)cx_EmergencyAttendanceClinicalNotes.getValue(context);
		}
		public void setAttendanceClinicalNotes(ims.emergency.vo.AttendanceClinicalNotesVo value)
		{
			cx_EmergencyAttendanceClinicalNotes.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_EmergencyAttendanceClinicalNotes = new ims.framework.ContextVariable("Emergency.AttendanceClinicalNotes", "_cv_Emergency.AttendanceClinicalNotes");
		public boolean getInvestigationsForAttendIsNotNull()
		{
			return !cx_EmergencyInvestigationsForAttend.getValueIsNull(context);
		}
		public ims.emergency.vo.InvestigationsForAttendVo getInvestigationsForAttend()
		{
			return (ims.emergency.vo.InvestigationsForAttendVo)cx_EmergencyInvestigationsForAttend.getValue(context);
		}
		public void setInvestigationsForAttend(ims.emergency.vo.InvestigationsForAttendVo value)
		{
			cx_EmergencyInvestigationsForAttend.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_EmergencyInvestigationsForAttend = new ims.framework.ContextVariable("Emergency.InvestigationsForAttend", "_cv_Emergency.InvestigationsForAttend");
		public boolean getAttendanceNotesSearchCriteriaIsNotNull()
		{
			return !cx_EmergencyAttendanceNotesSearchCriteria.getValueIsNull(context);
		}
		public ims.emergency.vo.AttendanceNotesSearchCriteriaVo getAttendanceNotesSearchCriteria()
		{
			return (ims.emergency.vo.AttendanceNotesSearchCriteriaVo)cx_EmergencyAttendanceNotesSearchCriteria.getValue(context);
		}
		public void setAttendanceNotesSearchCriteria(ims.emergency.vo.AttendanceNotesSearchCriteriaVo value)
		{
			cx_EmergencyAttendanceNotesSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_EmergencyAttendanceNotesSearchCriteria = new ims.framework.ContextVariable("Emergency.AttendanceNotesSearchCriteria", "_cvp_Emergency.AttendanceNotesSearchCriteria");

		private ims.framework.Context context;
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getRieMessageIsNotNull()
		{
			return !cx_CoreRieMessage.getValueIsNull(context);
		}
		public String getRieMessage()
		{
			return (String)cx_CoreRieMessage.getValue(context);
		}
		public void setRieMessage(String value)
		{
			cx_CoreRieMessage.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreRieMessage = new ims.framework.ContextVariable("Core.RieMessage", "_cv_Core.RieMessage");
		public boolean getPatientDiagnosisAtConsultationListIsNotNull()
		{
			return !cx_CorePatientDiagnosisAtConsultationList.getValueIsNull(context);
		}
		public ims.core.vo.PatientDiagnosisAtConsultationVoCollection getPatientDiagnosisAtConsultationList()
		{
			return (ims.core.vo.PatientDiagnosisAtConsultationVoCollection)cx_CorePatientDiagnosisAtConsultationList.getValue(context);
		}
		public void setPatientDiagnosisAtConsultationList(ims.core.vo.PatientDiagnosisAtConsultationVoCollection value)
		{
			cx_CorePatientDiagnosisAtConsultationList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientDiagnosisAtConsultationList = new ims.framework.ContextVariable("Core.PatientDiagnosisAtConsultationList", "_cv_Core.PatientDiagnosisAtConsultationList");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getPatientDiagnosisAtConsultationIsNotNull()
		{
			return !cx_CorePatientDiagnosisAtConsultation.getValueIsNull(context);
		}
		public ims.core.vo.PatientDiagnosisAtConsultationVo getPatientDiagnosisAtConsultation()
		{
			return (ims.core.vo.PatientDiagnosisAtConsultationVo)cx_CorePatientDiagnosisAtConsultation.getValue(context);
		}
		public void setPatientDiagnosisAtConsultation(ims.core.vo.PatientDiagnosisAtConsultationVo value)
		{
			cx_CorePatientDiagnosisAtConsultation.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientDiagnosisAtConsultation = new ims.framework.ContextVariable("Core.PatientDiagnosisAtConsultation", "_cv_Core.PatientDiagnosisAtConsultation");

		private ims.framework.Context context;
	}

	public EmergencyContext Emergency;
	public CoreContext Core;
}
