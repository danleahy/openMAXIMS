//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Aidan Mc Donnell using IMS Development Environment (version 1.70 build 3300.22643)
// Copyright (C) 1995-2009 IMS MAXIMS plc. All rights reserved.

package ims.naes.domain.impl;

import ims.admin.domain.MosSearch;
import ims.admin.domain.impl.MosSearchImpl;
import ims.core.vo.MemberOfStaffLiteVoCollection;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.ForeignKeyViolationException;
import ims.domain.exceptions.StaleObjectException;
import ims.domain.exceptions.UniqueKeyViolationException;
import ims.framework.exceptions.CodingRuntimeException;
import ims.naes.domain.base.impl.BaseNAESReferralNotesDialogImpl;
import ims.naes.domain.objects.NAESReferralNote;
import ims.naes.vo.NAESReferralNoteVo;
import ims.naes.vo.domain.NAESReferralNoteVoAssembler;

public class NAESReferralNotesDialogImpl extends BaseNAESReferralNotesDialogImpl
{

	private static final long	serialVersionUID	= 1L;

	public ims.core.vo.MemberOfStaffLiteVoCollection getMos(String name)
	{
		MosSearch mosSearch = (MosSearch) getDomainImpl(MosSearchImpl.class);
		return  mosSearch.listActiveMosByName(name);
	}

	public void save(NAESReferralNoteVo note) throws DomainInterfaceException, StaleObjectException, ForeignKeyViolationException, UniqueKeyViolationException
	{
		if (!note.isValidated())
			throw new CodingRuntimeException("Referral Note has not been validated");
		DomainFactory factory = getDomainFactory();
		NAESReferralNote domNote = NAESReferralNoteVoAssembler.extractNAESReferralNote(factory, note);
		factory.save(domNote);

	}
}
