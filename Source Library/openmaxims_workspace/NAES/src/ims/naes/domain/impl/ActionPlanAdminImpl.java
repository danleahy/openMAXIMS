//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Aidan Mc Donnell using IMS Development Environment (version 1.65 build 3225.30788)
// Copyright (C) 1995-2008 IMS MAXIMS plc. All rights reserved.

package ims.naes.domain.impl;

import java.util.List;

import ims.core.vo.ActionPlanTemplateVo;
import ims.core.vo.ActionPlanTemplateVoCollection;
import ims.core.vo.domain.ActionPlanTemplateVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.exceptions.ForeignKeyViolationException;
import ims.domain.exceptions.StaleObjectException;
import ims.naes.domain.base.impl.BaseActionPlanAdminImpl;
import ims.naes.domain.objects.ActionPlanTemplate;

public class ActionPlanAdminImpl extends BaseActionPlanAdminImpl
{

	private static final long	serialVersionUID	= 1L;

	public ActionPlanTemplateVoCollection getActionPlanTemplateVoColl(ims.core.vo.lookups.PreActiveActiveInactiveStatus status)
	{
		DomainFactory factory = getDomainFactory();
		StringBuffer hql = new StringBuffer("from ActionPlanTemplate as apt");
		
		if(status != null)
		{
			hql.append(" where apt.activeStatus.id = "+status.getId());
			
		}
		List list = factory.find(hql.toString());
		return ActionPlanTemplateVoAssembler.createActionPlanTemplateVoCollectionFromActionPlanTemplate(list);
		
	}

	public void save(ActionPlanTemplateVoCollection value) throws ForeignKeyViolationException, StaleObjectException
	{
		if (!value.isValidated())
		{
			throw new DomainRuntimeException("Action Plan Templates Data has not been validated");
		}
		DomainFactory factory = getDomainFactory();
		for (int i = 0; i < value.size(); i++)
		{
			ActionPlanTemplateVo actionPlanTemplatevo = value.get(i);
			ActionPlanTemplate domActionPlan = ActionPlanTemplateVoAssembler.extractActionPlanTemplate(factory, actionPlanTemplatevo);
			factory.save(domActionPlan);
		}
	}


	public void removeActionPlanTemplate(ActionPlanTemplateVo template) throws ForeignKeyViolationException
	{
		DomainFactory factory = getDomainFactory();
		
		ActionPlanTemplate domPlanTemplate = ActionPlanTemplateVoAssembler.extractActionPlanTemplate(factory, template);
		
		factory.delete(domPlanTemplate);
		
	}

}
