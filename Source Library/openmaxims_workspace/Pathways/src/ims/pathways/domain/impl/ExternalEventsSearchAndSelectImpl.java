//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Rory Fitzpatrick using IMS Development Environment (version 1.60 build 2838.16667)
// Copyright (C) 1995-2007 IMS MAXIMS plc. All rights reserved.

package ims.pathways.domain.impl;

import ims.admin.domain.HcpAdmin;
import ims.admin.domain.impl.HcpAdminImpl;
import ims.core.admin.domain.objects.ProviderSystem;
import ims.domain.DomainFactory;
import ims.ocrr.vo.domain.ProviderSystemVoAssembler;
import ims.pathways.domain.ExternalEventMappingsConfiguration;
import ims.pathways.domain.base.impl.BaseExternalEventsSearchAndSelectImpl;

public class ExternalEventsSearchAndSelectImpl extends BaseExternalEventsSearchAndSelectImpl
{

	private static final long serialVersionUID = 1L;

	public ims.core.vo.MedicLiteVoCollection listMedics(String name)
	{
		HcpAdmin hcpAdmin = (HcpAdmin)getDomainImpl(HcpAdminImpl.class);
		return hcpAdmin.listActiveMedics(name);
	}

	/**
	* listProviderSystems
	*/
	public ims.ocrr.vo.ProviderSystemVoCollection listProviderSystems()
	{
		DomainFactory factory = getDomainFactory();
		return ProviderSystemVoAssembler.createProviderSystemVoCollectionFromProviderSystem(factory.listDomainObjects(ProviderSystem.class)).sort();		
	}

	/**
	* listByCriteria
	*/
	public ims.pathways.vo.ExternalEventMappingVoCollection listByCriteria(ims.pathways.vo.ExternalEventMappingVo filter)
	{
		ExternalEventMappingsConfiguration impl = (ExternalEventMappingsConfiguration)getDomainImpl(ExternalEventMappingsConfigurationImpl.class);
		return impl.listByCriteria(filter);
	}
}
