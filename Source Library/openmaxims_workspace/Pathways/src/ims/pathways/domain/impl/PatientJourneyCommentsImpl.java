//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Catalin Tomozei using IMS Development Environment (version 1.70 build 3341.28572)
// Copyright (C) 1995-2009 IMS MAXIMS plc. All rights reserved.

package ims.pathways.domain.impl;

import java.util.List;

import ims.domain.DomainFactory;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.exceptions.CodingRuntimeException;
import ims.pathways.domain.base.impl.BasePatientJourneyCommentsImpl;
import ims.pathways.domain.objects.PatientPathwayJourney;
import ims.pathways.vo.PatientJourneyCommentLiteVoCollection;
import ims.pathways.vo.PatientPathwayJourneyRefVo;
import ims.pathways.vo.domain.PatientJourneyCommentLiteVoAssembler;
import ims.pathways.vo.domain.PatientJourneyCommentsVoAssembler;

public class PatientJourneyCommentsImpl extends BasePatientJourneyCommentsImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* save
	 * @throws StaleObjectException 
	*/
	public ims.pathways.vo.PatientJourneyCommentsVo save(ims.pathways.vo.PatientJourneyCommentsVo record) throws StaleObjectException
	{
		DomainFactory factory = getDomainFactory();
		PatientPathwayJourney domainRecord = PatientJourneyCommentsVoAssembler.extractPatientPathwayJourney(factory, record);		
		factory.save(domainRecord);
		
		return record;
	}
	//WDEV-19603
	public PatientJourneyCommentLiteVoCollection listComments(PatientPathwayJourneyRefVo journeyRef)
	{
		if (journeyRef == null || journeyRef.getID_PatientPathwayJourney() == null)
			throw new CodingRuntimeException("The PatientPathwayJourneyRefVo cannot be null");
		
		String hql = "select comments from PatientPathwayJourney as journey left join journey.linkedComments as comments where journey.id = :JOURNEY_ID order by comments.recordingInfo.recordingDateTime desc";
		
		DomainFactory factory = getDomainFactory();
				
		List<?> commentsList = factory.find(hql, "JOURNEY_ID", journeyRef.getID_PatientPathwayJourney());
		
		if (commentsList == null || commentsList.isEmpty())
			return null;
		
		return PatientJourneyCommentLiteVoAssembler.createPatientJourneyCommentLiteVoCollectionFromPatientJourneyComment(commentsList);
	}
}
