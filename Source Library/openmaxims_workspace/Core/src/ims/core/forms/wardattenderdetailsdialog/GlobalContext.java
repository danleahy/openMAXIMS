//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.wardattenderdetailsdialog;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		RefMan = new RefManContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getBookingAppointmentRefIsNotNull()
		{
			return !cx_SchedulingBookingAppointmentRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentRefVo getBookingAppointmentRef()
		{
			return (ims.scheduling.vo.Booking_AppointmentRefVo)cx_SchedulingBookingAppointmentRef.getValue(context);
		}
		public void setBookingAppointmentRef(ims.scheduling.vo.Booking_AppointmentRefVo value)
		{
			cx_SchedulingBookingAppointmentRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingAppointmentRef = new ims.framework.ContextVariable("Scheduling.BookingAppointmentRef", "_cv_Scheduling.BookingAppointmentRef");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getSelectedProceduresApptOutcomeListIsNotNull()
		{
			return !cx_RefManSelectedProceduresApptOutcomeList.getValueIsNull(context);
		}
		public ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVoCollection getSelectedProceduresApptOutcomeList()
		{
			return (ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVoCollection)cx_RefManSelectedProceduresApptOutcomeList.getValue(context);
		}
		public void setSelectedProceduresApptOutcomeList(ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVoCollection value)
		{
			cx_RefManSelectedProceduresApptOutcomeList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManSelectedProceduresApptOutcomeList = new ims.framework.ContextVariable("RefMan.SelectedProceduresApptOutcomeList", "_cv_RefMan.SelectedProceduresApptOutcomeList");
		public boolean getPatientProcedureForAppointmentOutcomeIsNotNull()
		{
			return !cx_RefManPatientProcedureForAppointmentOutcome.getValueIsNull(context);
		}
		public ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVo getPatientProcedureForAppointmentOutcome()
		{
			return (ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVo)cx_RefManPatientProcedureForAppointmentOutcome.getValue(context);
		}
		public void setPatientProcedureForAppointmentOutcome(ims.RefMan.vo.PatientProcedureForAppointmentOutcomeVo value)
		{
			cx_RefManPatientProcedureForAppointmentOutcome.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManPatientProcedureForAppointmentOutcome = new ims.framework.ContextVariable("RefMan.PatientProcedureForAppointmentOutcome", "_cv_RefMan.PatientProcedureForAppointmentOutcome");

		private ims.framework.Context context;
	}

	public SchedulingContext Scheduling;
	public RefManContext RefMan;
}
