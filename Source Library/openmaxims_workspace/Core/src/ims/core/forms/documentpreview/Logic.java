//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Calin Perebiceanu using IMS Development Environment (version 1.80 build 4091.21781)
// Copyright (C) 1995-2011 IMS MAXIMS. All rights reserved.

package ims.core.forms.documentpreview;

import ims.clinical.vo.LinkPatientDocumentVo;
import ims.configuration.AppRight;
import ims.configuration.gen.ConfigFlag;
import ims.core.vo.PatientDocumentVo;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.FormName;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		if (args == null || args.length ==0)
			throw new PresentationLogicException("No valid document found in open arguments");
		String fileName = null;
		Boolean isIframeText = null;
		if (args[0] instanceof PatientDocumentVo)
		{
			fileName = ((PatientDocumentVo)args[0]).getServerDocument().getFileName();
			form.getGlobalContext().Core.setPatientDocumentToPrint((PatientDocumentVo)args[0]);
		}
		else if (args[0] instanceof LinkPatientDocumentVo) //WDEV-19422
		{
			fileName = ((LinkPatientDocumentVo)args[0]).getServerDocument().getFileName();
			form.getGlobalContext().Core.setPatientDocumentToPrint(null);
		}
		else if (args[0] instanceof String&& args[0]!=null&&args[1] instanceof Boolean &&Boolean.TRUE.equals(args[1]))
		{
			fileName= (String)args[0];
			form.getGlobalContext().Core.setPatientDocumentToPrint(null);
			isIframeText=Boolean.TRUE;
		}
		
		showDocument(fileName,isIframeText);
		updateControlsState();
	}
	
	private void updateControlsState()
	{
		form.btnPrint().setVisible(form.getGlobalContext().Core.getPatientDocumentToPrint() != null);
		form.btnRIE().setVisible(engine.hasRight(AppRight.CAN_RIE_PATIENT_DOCUMENTS) && form.getGlobalContext().Core.getPatientDocumentToPrint() != null);
	}
	
	private void showDocument(String fileName,Boolean isIframeText) throws ims.framework.exceptions.PresentationLogicException
	{
		if (fileName == null)
			throw new PresentationLogicException("No valid document found in open arguments");
		if(isIframeText!=null&&Boolean.TRUE.equals(isIframeText))
		{
			form.getLocalContext().setHTMLPreview("<p align='center'>" +fileName);
		}
		else
		{
			String fullPath = getFullPath(fileName);
			form.getLocalContext().setHTMLPreview("<IFRAME id=\"PostFrame\" name=\"PostFrame\" width=\"100%\" height=\"100%\" frameborder=0 src='" + fullPath +  "'></IFRAME>");
		}
		form.htmPreview().setHTML(form.getLocalContext().getHTMLPreview());
	}
	
	private String getFullPath(String fileName)
	{
		return getFileServerURL() + fileName;
	}
	
	private String getFileServerURL()
	{ 
		return ConfigFlag.GEN.FILE_SERVER_URL.getValue();
	}	
	
	@Override
	protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.ABORT);
	}
	
	@Override
	protected void onBtnPrintClick() throws PresentationLogicException
	{
		form.htmPreview().setHTML("");
		engine.open(form.getForms().Core.PrintPatientDocument);
	}

	@Override
	protected void onFormDialogClosed(FormName formName, DialogResult result) throws PresentationLogicException
	{
		if(form.getForms().Core.PrintPatientDocument.equals(formName))
		{
			form.htmPreview().setHTML(form.getLocalContext().getHTMLPreview());
		}
		else if(form.getForms().Core.RieConfirmationDialog.equals(formName))
		{
			form.htmPreview().setHTML(form.getLocalContext().getHTMLPreview());
			
			if(DialogResult.OK.equals(result))
			{
				try
				{
					domain.markAsRie(form.getGlobalContext().Core.getPatientDocumentToPrint(), engine.getFormName(), (form.getGlobalContext().Core.getPatientShort() != null ? form.getGlobalContext().Core.getPatientShort().getID_Patient() : null), null, null, form.getGlobalContext().Core.getRieMessage());
				}
				catch (StaleObjectException e)
				{
					e.printStackTrace();
					engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
				}
				
				engine.close(DialogResult.ABORT);
				return;
			}
		}
	}

	@Override
	protected void onBtnRIEClick() throws PresentationLogicException
	{
		if(form.getGlobalContext().Core.getPatientDocumentToPrint() != null)
		{
			form.htmPreview().setHTML("");
			engine.open(form.getForms().Core.RieConfirmationDialog);
		}
	}
}
