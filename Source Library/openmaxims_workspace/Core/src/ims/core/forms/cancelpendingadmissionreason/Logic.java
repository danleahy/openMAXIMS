//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by George Cristian Josan using IMS Development Environment (version 1.80 build 5443.18271)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.core.forms.cancelpendingadmissionreason;

import ims.RefMan.vo.CatsReferralRefVo;
import ims.configuration.gen.ConfigFlag;
import ims.core.resource.people.vo.MemberOfStaffRefVo;
import ims.core.vo.CatsReferralPendingEmergencyNonEDAdmissionListVo;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		if (args == null || !(args[0] instanceof CatsReferralPendingEmergencyNonEDAdmissionListVo))
			throw new PresentationLogicException("Form not properly initialized. Check paramter requirements.");
		
		form.getLocalContext().setSelectedPendingAdmission((CatsReferralRefVo) args[0]);
	}
	
	
	@Override
	protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	
	
	@Override
	protected void onBtnOKClick() throws ims.framework.exceptions.PresentationLogicException
	{
		try
		{
			String[] errors = validateUIRules();
			
			if (errors != null && errors.length > 0)
			{
				engine.showErrors(errors);
				return;
			}
			
			//WDEV-21348
			MemberOfStaffRefVo mos = null;
			Object hcpUser = domain.getHcpUser();
			if(hcpUser instanceof MemberOfStaffRefVo)
				mos=(MemberOfStaffRefVo)hcpUser;
			// end WDEV-21348
			
			if (domain.cancelPendingAdmissionRequest(form.getLocalContext().getSelectedPendingAdmission(), form.cmbCancelReason().getValue(), form.txtCancelComments().getValue(),mos))
				engine.close(DialogResult.OK);
		}
		catch (StaleObjectException e)
		{
			engine.showMessage(ConfigFlag.UI.STALE_OBJECT_MESSAGE.getValue());
			engine.close(DialogResult.CANCEL);
		}
	}


	private String[] validateUIRules()
	{
		if (form.cmbCancelReason().getValue() == null && form.txtCancelComments().getValue() == null)
		{
			return new String[] {"Either Cancel Reason or Cancel Comment is mandatory."};
		}
		
		return null;
	}
}
