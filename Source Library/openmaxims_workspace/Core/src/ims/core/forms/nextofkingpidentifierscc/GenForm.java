//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.nextofkingpidentifierscc;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	protected void fireCustomControlValueChanged()
	{
		super.fireValueChanged();
	}
	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class cmbPreferredContactMethodComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.ContactMethod value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.ContactMethod value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.ContactMethod value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.ContactMethod value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.ContactMethod value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.ContactMethod getValue()
		{
			return (ims.core.vo.lookups.ContactMethod)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.ContactMethod value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbPreferredContactTimesComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.PreferredContactTime value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.PreferredContactTime value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.PreferredContactTime value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.PreferredContactTime value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.PreferredContactTime value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.PreferredContactTime getValue()
		{
			return (ims.core.vo.lookups.PreferredContactTime)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.PreferredContactTime value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbPreferedLanguageComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.PDSPreferredCommunicationLanguage getValue()
		{
			return (ims.core.vo.lookups.PDSPreferredCommunicationLanguage)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value)
		{
			super.control.setValue(value);
		}
	}
	public static class grdCommChannelsRow extends GridRowBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected grdCommChannelsRow(GridRow row)
		{
			super(row);
		}
		public void showOpened(int column)
		{
			super.row.showOpened(column);
		}
		public void setcolTypeReadOnly(boolean value)
		{
			super.row.setReadOnly(0, value);
		}
		public boolean iscolTypeReadOnly()
		{
			return super.row.isReadOnly(0);
		}
		public void showcolTypeOpened()
		{
			super.row.showOpened(0);
		}
		public ims.core.vo.lookups.ChannelType getcolType()
		{
			return (ims.core.vo.lookups.ChannelType)super.row.get(0);
		}
		public void setcolType(ims.core.vo.lookups.ChannelType value)
		{
			super.row.set(0, value, true);
		}
		public void setCellcolTypeTooltip(String value)
		{
			super.row.setTooltip(0, value);
		}
		public void setcolContactValueReadOnly(boolean value)
		{
			super.row.setReadOnly(1, value);
		}
		public boolean iscolContactValueReadOnly()
		{
			return super.row.isReadOnly(1);
		}
		public void showcolContactValueOpened()
		{
			super.row.showOpened(1);
		}
		public String getcolContactValue()
		{
			return (String)super.row.get(1);
		}
		public void setcolContactValue(String value)
		{
			super.row.set(1, value);
		}
		public void setCellcolContactValueTooltip(String value)
		{
			super.row.setTooltip(1, value);
		}
		public ims.core.vo.CommChannelVo getValue()
		{
			return (ims.core.vo.CommChannelVo)super.row.getValue();
		}
		public void setValue(ims.core.vo.CommChannelVo value)
		{
			super.row.setValue(value);
		}
	}
	public static class grdCommChannelsRowCollection extends GridRowCollectionBridge
	{
		private static final long serialVersionUID = 1L;
		
		private grdCommChannelsRowCollection(GridRowCollection collection)
		{
			super(collection);
		}
		public grdCommChannelsRow get(int index)
		{
			return new grdCommChannelsRow(super.collection.get(index));
		}
		public grdCommChannelsRow newRow()
		{
			return new grdCommChannelsRow(super.collection.newRow());
		}
		public grdCommChannelsRow newRow(boolean autoSelect)
		{
			return new grdCommChannelsRow(super.collection.newRow(autoSelect));
		}
		public grdCommChannelsRow newRowAt(int index)
		{
			return new grdCommChannelsRow(super.collection.newRowAt(index));
		}
		public grdCommChannelsRow newRowAt(int index, boolean autoSelect)
		{
			return new grdCommChannelsRow(super.collection.newRowAt(index, autoSelect));
		}
	}
	public static class grdCommChannelsGrid extends GridBridge
	{
		private static final long serialVersionUID = 1L;
		
		private void addComboBoxColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean canBeEmpty, boolean autoPostBack, boolean bold, boolean canGrow, int maxDropDownItems)
		{
			super.grid.addComboBoxColumn(caption, captionAlignment, alignment, width, readOnly, canBeEmpty, autoPostBack, bold, canGrow, maxDropDownItems);
		}
		private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
		{
			super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
		}
		public ims.core.vo.CommChannelVoCollection getValues()
		{
			ims.core.vo.CommChannelVoCollection listOfValues = new ims.core.vo.CommChannelVoCollection();
			for(int x = 0; x < this.getRows().size(); x++)
			{
				listOfValues.add(this.getRows().get(x).getValue());
			}
			return listOfValues;
		}
		public ims.core.vo.CommChannelVo getValue()
		{
			return (ims.core.vo.CommChannelVo)super.grid.getValue();
		}
		public void setValue(ims.core.vo.CommChannelVo value)
		{
			super.grid.setValue(value);
		}
		public grdCommChannelsRow getSelectedRow()
		{
			return super.grid.getSelectedRow() == null ? null : new grdCommChannelsRow(super.grid.getSelectedRow());
		}
		public int getSelectedRowIndex()
		{
			return super.grid.getSelectedRowIndex();
		}
		public grdCommChannelsRowCollection getRows()
		{
			return new grdCommChannelsRowCollection(super.grid.getRows());
		}
		public grdCommChannelsRow getRowByValue(ims.core.vo.CommChannelVo value)
		{
			GridRow row = super.grid.getRowByValue(value);
			return row == null?null:new grdCommChannelsRow(row);
		}
		public void setcolTypeHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(0, value);
		}
		public String getcolTypeHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(0);
		}
		public GridComboBox colTypeComboBox()
		{
			return new GridComboBox(super.grid, 0);
		}
		public void setcolContactValueHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(1, value);
		}
		public String getcolContactValueHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(1);
		}
	}

	public static class Group1RadioButton extends RadioButtonBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected void setContext(Integer startTabIndex, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize)
		{
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex ");
			RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 248, 318, 48, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			control.addButton(0, anchoringHelper1.getX(), anchoringHelper1.getY(), anchoringHelper1.getWidth(), "No", startTabIndex.intValue() + 11);
			RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 200, 318, 48, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			control.addButton(1, anchoringHelper2.getX(), anchoringHelper2.getY(), anchoringHelper2.getWidth(), "Yes", startTabIndex.intValue() + 10);
		}
		public void setText(Group1Enumeration option, String value)
		{
			if(option != null && option.id >= 0 && value != null)
				control.setText(option.id, value);
		}
		public Group1Enumeration getValue()
		{
			switch (super.control.getValue())
			{
				case -1: return Group1Enumeration.None;
				case 0: return Group1Enumeration.rdoNo;
				case 1: return Group1Enumeration.rdoYes;
			}
			return null;
		}
		public void setValue(Group1Enumeration value)
		{
			if(value != null)
				super.control.setValue(value.id);
			else
				super.control.setValue(Group1Enumeration.None.id);
		}
		public boolean isEnabled(Group1Enumeration option)
		{
			return super.control.isEnabled(option.id);
		}
		public void setEnabled(Group1Enumeration option, boolean value)
		{
			super.control.setEnabled(option.id, value);
		}
		public boolean isVisible(Group1Enumeration option)
		{
			return super.control.isVisible(option.id);
		}
		public void setVisible(Group1Enumeration option, boolean value)
		{
			super.control.setVisible(option.id, value);
		}
		public void setVisible(boolean value)
		{
			super.control.setVisible(value);
		}
		public void setEnabled(boolean value)
		{
			super.control.setEnabled(value);
		}
	}
	public static class Group1Enumeration implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public static Group1Enumeration None = new Group1Enumeration(-1);
		public static Group1Enumeration rdoNo = new Group1Enumeration(0);
		public static Group1Enumeration rdoYes = new Group1Enumeration(1);
		private Group1Enumeration(int id)
		{
			this.id = id;
		}
		public boolean equals(Object o)
		{
			return this.id == ((Group1Enumeration)o).id;
		}
		private int id;
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(420, 384);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.Core.contextMenuIdentifierGrid = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.Core.contextMenuIdentifierGridAddItem = factory.createMenuItem(startControlID.intValue() + 1, "New", true, false, new Integer(102179), true, false);
		contextMenus.Core.contextMenuIdentifierGrid.add(contextMenus.Core.contextMenuIdentifierGridAddItem);
		contextMenus.Core.contextMenuIdentifierGridRemoveItem = factory.createMenuItem(startControlID.intValue() + 2, "Remove", true, false, new Integer(102148), true, false);
		contextMenus.Core.contextMenuIdentifierGrid.add(contextMenus.Core.contextMenuIdentifierGridRemoveItem);
		contextMenus.Core.contextMenuIdentifierGridCOPYItem = factory.createMenuItem(startControlID.intValue() + 3, "Copy", true, false, new Integer(102222), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3490001)))
			contextMenus.Core.contextMenuIdentifierGrid.add(contextMenus.Core.contextMenuIdentifierGridCOPYItem);
		form.registerMenu(contextMenus.Core.contextMenuIdentifierGrid);


		// Label Controls
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 10, 146, 78, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Work Phone:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 8, 269, 156, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Preferred Contact Method:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 8, 249, 195, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Patient Call-back Consent Status:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 8, 227, 146, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Preferred Contact Times:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 8, 204, 124, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Alternative Contacts:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 8, 176, 149, 22, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Additional Details:", new Integer(1), null, new Integer(1)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 8, 318, 139, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Copy Letters to Patient:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 8, 337, 119, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Effective from Date:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 8, 299, 121, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Preferred Language:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 8, 96, 100, 22, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Next Of Kin:", new Integer(1), null, new Integer(1)}));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 8, 3, 244, 22, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Contact details for the patient:", new Integer(1), null, new Integer(1)}));
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 10, 122, 41, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Name:", new Integer(1), null, new Integer(0)}));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 288, 316, 0, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), new Integer(-1), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 88, 144, 296, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(30), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 200, 202, 184, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(100), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 88, 120, 296, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Controls
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 200, 335, 96, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 200, 267, 184, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbPreferredContactMethodTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbPreferredContactMethodTemp);
		cmbPreferredContactMethodComboBox cmbPreferredContactMethod = (cmbPreferredContactMethodComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPreferredContactMethodComboBox.class, m_cmbPreferredContactMethodTemp);
		super.addComboBox(cmbPreferredContactMethod);
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 200, 225, 184, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbPreferredContactTimesTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbPreferredContactTimesTemp);
		cmbPreferredContactTimesComboBox cmbPreferredContactTimes = (cmbPreferredContactTimesComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPreferredContactTimesComboBox.class, m_cmbPreferredContactTimesTemp);
		super.addComboBox(cmbPreferredContactTimes);
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 200, 297, 184, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbPreferedLanguageTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbPreferedLanguageTemp);
		cmbPreferedLanguageComboBox cmbPreferedLanguage = (cmbPreferedLanguageComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPreferedLanguageComboBox.class, m_cmbPreferedLanguageTemp);
		super.addComboBox(cmbPreferedLanguage);

		// CheckBox Controls
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 200, 249, 16, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), new Integer(startTabIndex.intValue() + 7), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"", Boolean.FALSE, null}));

		// Grid Controls
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 8, 24, 408, 64, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		Grid m_grdCommChannelsTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.READONLY, ControlState.EDITABLE, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, Boolean.FALSE, new Integer(24), Boolean.TRUE, contextMenus.Core.contextMenuIdentifierGrid, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.TRUE});
		addControl(m_grdCommChannelsTemp);
		grdCommChannelsGrid grdCommChannels = (grdCommChannelsGrid)GridFlyweightFactory.getInstance().createGridBridge(grdCommChannelsGrid.class, m_grdCommChannelsTemp);
		grdCommChannels.addComboBoxColumn("Contact Type", 0, 0, 150, false, true, false, false, true, -1);
		grdCommChannels.addStringColumn("Contact Value", 0, 0, -1, false, false, 0, 50, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		super.addGrid(grdCommChannels);

		// Image Buttons Controls
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 388, 116, 28, 28, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.NOKEnabled24, this.getImages().Core.NOKDisabled24, "NOK Details", Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));

		// RadioButton Controls
		RadioButton tmpGroup1 = (RadioButton)factory.getControl(RadioButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(0), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE});
		super.addControl(tmpGroup1);
		Group1RadioButton Group1 = (Group1RadioButton)RadioButtonBridgeFlyweightFactory.getInstance().createRadioButtonBridge(Group1RadioButton.class, tmpGroup1);
		Group1.setContext(startTabIndex, designSize, runtimeSize);
		super.addRadioButton(Group1);

		// Horizontal Line Controls
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 8, 288, 400, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 8, 168, 400, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,new Integer(0)}));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 8, 90, 400, 8, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(HorizontalLine.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,new Integer(0)}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public Label lbl9()
	{
		return (Label)super.getControl(5);
	}
	public Label lblCopyLettersToPatient()
	{
		return (Label)super.getControl(6);
	}
	public Label lblEffectiveFromDate()
	{
		return (Label)super.getControl(7);
	}
	public Label lblPreferredLanguage()
	{
		return (Label)super.getControl(8);
	}
	public TextBox txtCopyLettersToPatient()
	{
		return (TextBox)super.getControl(12);
	}
	public TextBox txtWorkPhone()
	{
		return (TextBox)super.getControl(13);
	}
	public TextBox txtAlternativecontacts()
	{
		return (TextBox)super.getControl(14);
	}
	public TextBox txtNOK()
	{
		return (TextBox)super.getControl(15);
	}
	public DateControl dteEffectiveFromDate()
	{
		return (DateControl)super.getControl(16);
	}
	public cmbPreferredContactMethodComboBox cmbPreferredContactMethod()
	{
		return (cmbPreferredContactMethodComboBox)super.getComboBox(0);
	}
	public cmbPreferredContactTimesComboBox cmbPreferredContactTimes()
	{
		return (cmbPreferredContactTimesComboBox)super.getComboBox(1);
	}
	public cmbPreferedLanguageComboBox cmbPreferedLanguage()
	{
		return (cmbPreferedLanguageComboBox)super.getComboBox(2);
	}
	public CheckBox chkPatientcallbackconsentstatus()
	{
		return (CheckBox)super.getControl(20);
	}
	public grdCommChannelsGrid grdCommChannels()
	{
		return (grdCommChannelsGrid)super.getGrid(0);
	}
	public ImageButton imbNOK()
	{
		return (ImageButton)super.getControl(22);
	}
	public Group1RadioButton Group1()
	{
		return (Group1RadioButton)super.getRadioButton(0);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				NOKDetails = new LocalFormName(102126);
				GPSelection = new LocalFormName(102137);
				CommentDialog = new LocalFormName(102319);
				GPDetails = new LocalFormName(102127);
			}
			public final FormName NOKDetails;
			public final FormName GPSelection;
			public final FormName CommentDialog;
			public final FormName GPDetails;
		}

		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				NOKDisabled24 = new ImageHelper(102508, "Images/Core/parent_coordinator_disabled_24.png", new Integer(24), new Integer(24));
				NOKEnabled24 = new ImageHelper(102507, "Images/Core/parent_coordinator_enabled_24.png", new Integer(24), new Integer(24));
				GPDisabled24 = new ImageHelper(102510, "Images/Core/gp_disabled_24.png", new Integer(24), new Integer(24));
				GPEnabled24 = new ImageHelper(102509, "Images/Core/gp_enabled_24.png", new Integer(24), new Integer(24));
				ClearDisabled24 = new ImageHelper(102173, "Images/Core/ClearDisabled_24.png", new Integer(24), new Integer(24));
				ClearEnabled24 = new ImageHelper(102174, "Images/Core/ClearEnabled_24.png", new Integer(24), new Integer(24));
			}
			public final ims.framework.utils.Image NOKDisabled24;
			public final ims.framework.utils.Image NOKEnabled24;
			public final ims.framework.utils.Image GPDisabled24;
			public final ims.framework.utils.Image GPEnabled24;
			public final ims.framework.utils.Image ClearDisabled24;
			public final ims.framework.utils.Image ClearEnabled24;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_Patient = new ims.framework.ContextVariable("Patient", prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier + "");
			cxl_NextOfKin = new ims.framework.ContextVariable("NextOfKin", prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier + "");
			cxl_PKeyWhenTypeIsInactive = new ims.framework.ContextVariable("PKeyWhenTypeIsInactive", prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier + "");
			cxl_PatientDetailsTabAction = new ims.framework.ContextVariable("PatientDetailsTabAction", prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PatientDetailsTabAction_" + componentIdentifier + "");
			cxl_IsGridCommChannelsMandatory = new ims.framework.ContextVariable("IsGridCommChannelsMandatory", prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__IsGridCommChannelsMandatory_" + componentIdentifier + "");
			cxl_DemographicControlsConfig = new ims.framework.ContextVariable("DemographicControlsConfig", prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__DemographicControlsConfig_" + componentIdentifier + "");
		}
		
		public boolean getPatientIsNotNull()
		{
			return !cxl_Patient.getValueIsNull(context);
		}
		public ims.core.vo.Patient getPatient()
		{
			return (ims.core.vo.Patient)cxl_Patient.getValue(context);
		}
		public void setPatient(ims.core.vo.Patient value)
		{
			cxl_Patient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Patient = null;
		public boolean getNextOfKinIsNotNull()
		{
			return !cxl_NextOfKin.getValueIsNull(context);
		}
		public ims.core.vo.NextOfKin getNextOfKin()
		{
			return (ims.core.vo.NextOfKin)cxl_NextOfKin.getValue(context);
		}
		public void setNextOfKin(ims.core.vo.NextOfKin value)
		{
			cxl_NextOfKin.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_NextOfKin = null;
		public boolean getPKeyWhenTypeIsInactiveIsNotNull()
		{
			return !cxl_PKeyWhenTypeIsInactive.getValueIsNull(context);
		}
		public ims.core.vo.PatientId getPKeyWhenTypeIsInactive()
		{
			return (ims.core.vo.PatientId)cxl_PKeyWhenTypeIsInactive.getValue(context);
		}
		public void setPKeyWhenTypeIsInactive(ims.core.vo.PatientId value)
		{
			cxl_PKeyWhenTypeIsInactive.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PKeyWhenTypeIsInactive = null;
		public boolean getPatientDetailsTabActionIsNotNull()
		{
			return !cxl_PatientDetailsTabAction.getValueIsNull(context);
		}
		public ims.core.vo.enums.PatientDetailsTab getPatientDetailsTabAction()
		{
			return (ims.core.vo.enums.PatientDetailsTab)cxl_PatientDetailsTabAction.getValue(context);
		}
		public void setPatientDetailsTabAction(ims.core.vo.enums.PatientDetailsTab value)
		{
			cxl_PatientDetailsTabAction.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PatientDetailsTabAction = null;
		public boolean getIsGridCommChannelsMandatoryIsNotNull()
		{
			return !cxl_IsGridCommChannelsMandatory.getValueIsNull(context);
		}
		public Boolean getIsGridCommChannelsMandatory()
		{
			return (Boolean)cxl_IsGridCommChannelsMandatory.getValue(context);
		}
		public void setIsGridCommChannelsMandatory(Boolean value)
		{
			cxl_IsGridCommChannelsMandatory.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsGridCommChannelsMandatory = null;
		public boolean getDemographicControlsConfigIsNotNull()
		{
			return !cxl_DemographicControlsConfig.getValueIsNull(context);
		}
		public ims.core.vo.DemographicControlsConfigVo getDemographicControlsConfig()
		{
			return (ims.core.vo.DemographicControlsConfigVo)cxl_DemographicControlsConfig.getValue(context);
		}
		public void setDemographicControlsConfig(ims.core.vo.DemographicControlsConfigVo value)
		{
			cxl_DemographicControlsConfig.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DemographicControlsConfig = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public CoreNamespace Core = new CoreNamespace();
		public final class CoreNamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class IdentifierGrid implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int Add = 1;
				public static final int Remove = 2;
				public static final int COPY = 3;
			}
			public void disableAllIdentifierGridMenuItems()
			{
				this.contextMenuIdentifierGridAddItem.setEnabled(false);
				this.contextMenuIdentifierGridRemoveItem.setEnabled(false);
				this.contextMenuIdentifierGridCOPYItem.setEnabled(false);
			}
			public void hideAllIdentifierGridMenuItems()
			{
				this.contextMenuIdentifierGridAddItem.setVisible(false);
				this.contextMenuIdentifierGridRemoveItem.setVisible(false);
				this.contextMenuIdentifierGridCOPYItem.setVisible(false);
			}
			private Menu contextMenuIdentifierGrid;
			public MenuItem getIdentifierGridAddItem()
			{
				return this.contextMenuIdentifierGridAddItem;
			}
			private MenuItem contextMenuIdentifierGridAddItem;
			public MenuItem getIdentifierGridRemoveItem()
			{
				return this.contextMenuIdentifierGridRemoveItem;
			}
			private MenuItem contextMenuIdentifierGridRemoveItem;
			public ReadOnlyMenuItem getIdentifierGridCOPYItem()
			{
				return this.contextMenuIdentifierGridCOPYItem;
			}
			private MenuItem contextMenuIdentifierGridCOPYItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[291];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-ID", "ID_Relative");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-RELATIONSHIP", "Relationship");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-PDSUPDATEMODE", "PdsUpdateMode");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-OBJECTIDENTIFIER", "Objectidentifier");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-ROLE", "Role");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-NHSNUM", "NhsNum");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-CONTACTRANK", "ContactRank");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-NOKIND", "NokInd");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-CPYCORRESP", "CpyCorresp");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-CALLBCKCONS", "CallbckCons");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-BEFFDATECNF", "Beffdatecnf");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-BETDATECNF", "Betdatecnf");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-BEFFDATE", "Beffdate");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-BETDATE", "Betdate");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-DOB", "Dob");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-ACTIVE", "Active");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-PDSLANGUAGE", "PDSlanguage");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-PENDING", "Pending");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-ISCONFIDENTIAL", "IsConfidential");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100001-TEMPFIELD", "TempField");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_Core.GPPractice", "BO-1007100003-ID", "ID_Organisation");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_Core.GPPractice", "BO-1007100003-NAME", "Name");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_Core.GPPractice", "BO-1007100003-TYPE", "Type");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_Core.GPPractice", "BO-1007100003-ISACTIVE", "IsActive");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_Core.GPPracticeWithComm", "BO-1007100003-ID", "ID_Organisation");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_Core.GPPracticeWithComm", "BO-1007100003-NAME", "Name");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_Core.GPPracticeWithComm", "BO-1007100003-TYPE", "Type");
			fields[172] = new ims.framework.ReportField(this.context, "_cv_Core.GPPracticeWithComm", "BO-1007100003-ISACTIVE", "IsActive");
			fields[173] = new ims.framework.ReportField(this.context, "_cv_Core.GPPracticeWithComm", "BO-1007100003-COMMENT", "Comment");
			fields[174] = new ims.framework.ReportField(this.context, "_cv_Core.GPPracticeWithComm", "BO-1007100003-PCTCODE", "PctCode");
			fields[175] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-ID", "ID_Gp");
			fields[176] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-STATUS", "Status");
			fields[177] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-ID", "ID_Address");
			fields[178] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE1", "Line1");
			fields[179] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE2", "Line2");
			fields[180] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE3", "Line3");
			fields[181] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE4", "Line4");
			fields[182] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE5", "Line5");
			fields[183] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-POSTCODE", "PostCode");
			fields[184] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-PHONE", "Phone");
			fields[185] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-COUNTY", "County");
			fields[186] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-FAX", "Fax");
			fields[187] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-UPDATEDATE", "UpdateDate");
			fields[188] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-NOTIFICATIONDATE", "NotificationDate");
			fields[189] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-ADDRESSTYPE", "AddressType");
			fields[190] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-PCT", "PCT");
			fields[191] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-OTHERPHONE", "Otherphone");
			fields[192] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-AREAOFRESIDENCE", "AreaOfResidence");
			fields[193] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-PAFKEY", "Pafkey");
			fields[194] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-DESCRIPTION", "Description");
			fields[195] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-OBJECTIDENTIFIER", "Objectidentifier");
			fields[196] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-BEFFDATE", "Beffdate");
			fields[197] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-BEFFDATECNF", "Beffdatecnf");
			fields[198] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-BETDATE", "Betdate");
			fields[199] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-BETDATECNF", "Betdatecnf");
			fields[200] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-PDSUPDATEMODE", "PdsUpdateMode");
			fields[201] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-COUNTRY", "Country");
			fields[202] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-NOFIXEDABODE", "NoFixedAbode");
			fields[203] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-CAREHOME", "CareHome");
			fields[204] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-ID", "ID_Location");
			fields[205] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-NAME", "Name");
			fields[206] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-ISACTIVE", "IsActive");
			fields[207] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-ISVIRTUAL", "IsVirtual");
			fields[208] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-TYPE", "Type");
			fields[209] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-DISPLAYINEDTRACKING", "DisplayInEDTracking");
			fields[210] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-CASENOTEFOLDERLOCATION", "CaseNoteFolderLocation");
			fields[211] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-SECUREACCOMMODATION", "SecureAccommodation");
			fields[212] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-TREATINGHOSP", "TreatingHosp");
			fields[213] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-REFERRINGHOSPITAL", "ReferringHospital");
			fields[214] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100002-ALLSECUREACCOMMODATION", "AllSecureAccommodation");
			fields[215] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[216] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[217] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[218] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[219] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[220] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[221] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[222] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[223] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[224] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[225] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[226] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[227] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[228] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[229] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[230] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[231] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[232] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[233] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[234] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[235] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-OCCUPATION", "Occupation");
			fields[236] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-LANGUAGE", "Language");
			fields[237] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[238] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-HOMEFOLDERLOCATION", "HomeFolderLocation");
			fields[239] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PREFCOMMLANGUAGE", "PrefCommLanguage");
			fields[240] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-COPYPATIENTONCORRESPONDENCE", "CopyPatientOnCorrespondence");
			fields[241] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-COPYPATIENTONCORRESPONDENCEDATE", "CopyPatientOnCorrespondenceDate");
			fields[242] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-HEALTHBOARD", "HealthBoard");
			fields[243] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PDSDEATHNOTIFICATIONSTATUS", "PDSDeathNotificationStatus");
			fields[244] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[245] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SCHOOL", "School");
			fields[246] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-OVERSEASVISITOR", "OverseasVisitor");
			fields[247] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-OVERSEASCLASSIFICATION", "OverseasClassification");
			fields[248] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-HASLIVEDUK", "HasLivedUK");
			fields[249] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DECOUPLED", "Decoupled");
			fields[250] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PDSDATELASTCHECKED", "PDSDateLastChecked");
			fields[251] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SCHOOLORCOLLEGE", "SchoolOrCollege");
			fields[252] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISCHILDINPUBLICCARE", "IsChildInPublicCare");
			fields[253] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PUBLICCARENEED", "PublicCareNeed");
			fields[254] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-TXTOCCUPATION", "TxtOccupation");
			fields[255] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-ID", "ID_Relative");
			fields[256] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-RELATIONSHIP", "Relationship");
			fields[257] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-PDSUPDATEMODE", "PdsUpdateMode");
			fields[258] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-OBJECTIDENTIFIER", "Objectidentifier");
			fields[259] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-ROLE", "Role");
			fields[260] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-NHSNUM", "NhsNum");
			fields[261] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-CONTACTRANK", "ContactRank");
			fields[262] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-NOKIND", "NokInd");
			fields[263] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-CPYCORRESP", "CpyCorresp");
			fields[264] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-CALLBCKCONS", "CallbckCons");
			fields[265] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-BEFFDATECNF", "Beffdatecnf");
			fields[266] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-BETDATECNF", "Betdatecnf");
			fields[267] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-BEFFDATE", "Beffdate");
			fields[268] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-BETDATE", "Betdate");
			fields[269] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-DOB", "Dob");
			fields[270] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-ACTIVE", "Active");
			fields[271] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-PDSLANGUAGE", "PDSlanguage");
			fields[272] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[273] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-PENDING", "Pending");
			fields[274] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100002-ISCONFIDENTIAL", "IsConfidential");
			fields[275] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__NextOfKin_" + componentIdentifier, "BO-1001100001-TEMPFIELD", "TempField");
			fields[276] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-ID", "ID_PatientId");
			fields[277] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-TYPE", "Type");
			fields[278] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-VALUE", "IdValue");
			fields[279] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-VERIFIED", "Verified");
			fields[280] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-MERGED", "Merged");
			fields[281] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-DUPLICATENHSNUM", "DuplicateNHSNum");
			fields[282] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-BEFFDATE", "Beffdate");
			fields[283] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-BEFFDATECNF", "Beffdatecnf");
			fields[284] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-BETDATE", "Betdate");
			fields[285] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-BETDATECNF", "Betdatecnf");
			fields[286] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__DemographicControlsConfig_" + componentIdentifier, "BO-1004100067-ID", "ID_DemographicControlsConfig");
			fields[287] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__DemographicControlsConfig_" + componentIdentifier, "BO-1004100067-CONTROLIMSID", "ControlIMSID");
			fields[288] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__DemographicControlsConfig_" + componentIdentifier, "BO-1004100067-CONTROLDESCRIPTIONONFORM", "ControlDescriptionOnForm");
			fields[289] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__DemographicControlsConfig_" + componentIdentifier, "BO-1004100067-ISMANDATORY", "IsMandatory");
			fields[290] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.NextOfKinGpIdentifiersCC.__internal_x_context__DemographicControlsConfig_" + componentIdentifier, "BO-1004100067-CHANNELTYPE", "ChannelType");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return formInfo.getLocalVariablesPrefix() + formInfo.getNamespaceName() + formInfo.getFormName() + formInfo.getFormId() + "_" + this.componentIdentifier;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
