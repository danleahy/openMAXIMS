//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.bedadmissioncomponent;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbSourceOfEmergencyReferralLookup();
	abstract protected void defaultcmbSourceOfEmergencyReferralLookupValue();
	abstract protected void bindcmbWardTypeLookup();
	abstract protected void defaultcmbWardTypeLookupValue();
	abstract protected void bindcmbSourceLookup();
	abstract protected void defaultcmbSourceLookupValue();
	abstract protected void bindcmbMethodLookup();
	abstract protected void defaultcmbMethodLookupValue();
	abstract protected void bindcmbPatientStatusLookup();
	abstract protected void defaultcmbPatientStatusLookupValue();
	abstract protected void bindcmbIdTypeLookup();
	abstract protected void defaultcmbIdTypeLookupValue();
	abstract protected void bindcmbSourceOfReferralLookup();
	abstract protected void defaultcmbSourceOfReferralLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbServiceTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbHealthyLodgerClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkHealthyLodgerValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSourceOfEmergencyReferralValueSet(Object value);
	abstract protected void onCmbSourceOfEmergencyReferralValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbConsultantValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbConsultantTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbWardTypeValueSet(Object value);
	abstract protected void oncmbSourceValueSet(Object value);
	abstract protected void oncmbMethodValueSet(Object value);
	abstract protected void oncmbPatientStatusValueSet(Object value);
	abstract protected void onRadioButtonCaseFolderYesNoValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIntAntStayValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrAdmissionTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onGrdElectiveSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTodayOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdTCISelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdEmergencyGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdEmergencySelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClear_PEAClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearch_PEAClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPEATodayOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDtePEAToValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDtePEAFromValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtonGroupPendingEmergenciesValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPendingEmergencyAdmissionGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPendingEmergencyAdmissionSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtonGroupTCIValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbTCI_ClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbTCI_SearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTCI_TodayValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteTCITo_ValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteTCIFrom_ValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdTCI_ElectiveGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdTCI_ElectiveSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdInWaitingGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdInWaitingSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdWardAttendersGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdWardAttendersSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearWardClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchWardClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbIdTypeValueSet(Object value);
	abstract protected void onImbClearWaitClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchWaitClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPatientsGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPatientsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdHomeLeaveGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdHomeLeaveSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClear_PETClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearch_PETClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPETTodayOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDtePETToValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDtePETFromValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPETGridHeaderClicked(int column) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdPETSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onRadioButtonGroupPETWardValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbSpecialtyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSourceOfReferralValueSet(Object value);
	abstract protected void onCmbSourceOfReferralValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIComponentEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.qmbService().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbServiceValueChanged();
			}
		});
		this.form.qmbService().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbServiceTextSubmited(value);
			}
		});
		this.form.imbHealthyLodger().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbHealthyLodgerClick();
			}
		});
		this.form.chkHealthyLodger().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkHealthyLodgerValueChanged();
			}
		});
		this.form.cmbSourceOfEmergencyReferral().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceOfEmergencyReferralValueSet(value);
			}
		});
		this.form.cmbSourceOfEmergencyReferral().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSourceOfEmergencyReferralValueChanged();
			}
		});
		this.form.qmbConsultant().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbConsultantValueChanged();
			}
		});
		this.form.qmbConsultant().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbConsultantTextSubmited(value);
			}
		});
		this.form.cmbWardType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbWardTypeValueSet(value);
			}
		});
		this.form.cmbSource().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceValueSet(value);
			}
		});
		this.form.cmbMethod().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbMethodValueSet(value);
			}
		});
		this.form.cmbPatientStatus().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPatientStatusValueSet(value);
			}
		});
		this.form.CaseFolderYesNo().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonCaseFolderYesNoValueChanged();
			}
		});
		this.form.intAntStay().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIntAntStayValueChanged();
			}
		});
		this.form.lyrAdmission().tabBooked().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabBookedActivated();
			}
		});
		this.form.lyrAdmission().tabPlanned().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabPlannedActivated();
			}
		});
		this.form.lyrAdmission().tabEDEmergency().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabEDEmergencyActivated();
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabPendingEmergencyActivated();
			}
		});
		this.form.lyrAdmission().tabTCI().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabTCIActivated();
			}
		});
		this.form.lyrAdmission().tabInWaiting().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabInWaitingActivated();
			}
		});
		this.form.lyrAdmission().tabWardAttenders().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabWardAttendersActivated();
			}
		});
		this.form.lyrAdmission().tabWaiting().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabWaitingActivated();
			}
		});
		this.form.lyrAdmission().tabHomeLeave().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabHomeLeaveActivated();
			}
		});
		this.form.lyrAdmission().tabPET().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrAdmissiontabPETActivated();
			}
		});
		this.form.lyrAdmission().tabBooked().grdElective().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdElectiveSelectionChanged();
			}
		});
		this.form.lyrAdmission().tabPlanned().chkTodayOnly().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTodayOnlyValueChanged();
			}
		});
		this.form.lyrAdmission().tabPlanned().imbClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearClick();
			}
		});
		this.form.lyrAdmission().tabPlanned().imbSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchClick();
			}
		});
		this.form.lyrAdmission().tabPlanned().grdTCI().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdTCISelectionChanged();
			}
		});
		this.form.lyrAdmission().tabEDEmergency().grdEmergency().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdEmergencyGridHeaderClicked(column);
			}
		});
		this.form.lyrAdmission().tabEDEmergency().grdEmergency().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdEmergencySelectionChanged();
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().imbClear_PEA().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClear_PEAClick();
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().imbSearch_PEA().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearch_PEAClick();
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().chkPEATodayOnly().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPEATodayOnlyValueChanged();
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().dtePEATo().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDtePEAToValueChanged();
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().dtePEAFrom().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDtePEAFromValueChanged();
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().GroupPendingEmergencies().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroupPendingEmergenciesValueChanged();
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().grdPendingEmergencyAdmission().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPendingEmergencyAdmissionGridHeaderClicked(column);
			}
		});
		this.form.lyrAdmission().tabPendingEmergency().grdPendingEmergencyAdmission().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPendingEmergencyAdmissionSelectionChanged();
			}
		});
		this.form.lyrAdmission().tabTCI().GroupTCI().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroupTCIValueChanged();
			}
		});
		this.form.lyrAdmission().tabTCI().imbTCI_Clear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbTCI_ClearClick();
			}
		});
		this.form.lyrAdmission().tabTCI().imbTCI_Search().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbTCI_SearchClick();
			}
		});
		this.form.lyrAdmission().tabTCI().chkTCI_Today().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTCI_TodayValueChanged();
			}
		});
		this.form.lyrAdmission().tabTCI().dteTCI_To().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteTCITo_ValueChanged();
			}
		});
		this.form.lyrAdmission().tabTCI().dteTCI_From().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteTCIFrom_ValueChanged();
			}
		});
		this.form.lyrAdmission().tabTCI().grdTCI_Elective().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdTCI_ElectiveGridHeaderClicked(column);
			}
		});
		this.form.lyrAdmission().tabTCI().grdTCI_Elective().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdTCI_ElectiveSelectionChanged();
			}
		});
		this.form.lyrAdmission().tabInWaiting().grdInWaiting().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdInWaitingGridHeaderClicked(column);
			}
		});
		this.form.lyrAdmission().tabInWaiting().grdInWaiting().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdInWaitingSelectionChanged();
			}
		});
		this.form.lyrAdmission().tabWardAttenders().grdWardAttenders().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdWardAttendersGridHeaderClicked(column);
			}
		});
		this.form.lyrAdmission().tabWardAttenders().grdWardAttenders().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdWardAttendersSelectionChanged();
			}
		});
		this.form.lyrAdmission().tabWardAttenders().imbClearWard().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearWardClick();
			}
		});
		this.form.lyrAdmission().tabWardAttenders().imbSearchWard().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchWardClick();
			}
		});
		this.form.lyrAdmission().tabWaiting().cmbIdType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbIdTypeValueSet(value);
			}
		});
		this.form.lyrAdmission().tabWaiting().imbClearWait().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearWaitClick();
			}
		});
		this.form.lyrAdmission().tabWaiting().imbSearchWait().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchWaitClick();
			}
		});
		this.form.lyrAdmission().tabWaiting().grdPatients().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPatientsGridHeaderClicked(column);
			}
		});
		this.form.lyrAdmission().tabWaiting().grdPatients().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPatientsSelectionChanged();
			}
		});
		this.form.lyrAdmission().tabHomeLeave().grdHomeLeave().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdHomeLeaveGridHeaderClicked(column);
			}
		});
		this.form.lyrAdmission().tabHomeLeave().grdHomeLeave().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdHomeLeaveSelectionChanged();
			}
		});
		this.form.lyrAdmission().tabPET().imbClear_PET().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClear_PETClick();
			}
		});
		this.form.lyrAdmission().tabPET().imbSearch_PET().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearch_PETClick();
			}
		});
		this.form.lyrAdmission().tabPET().chkPETTodayOnly().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPETTodayOnlyValueChanged();
			}
		});
		this.form.lyrAdmission().tabPET().dtePETTo().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDtePETToValueChanged();
			}
		});
		this.form.lyrAdmission().tabPET().dtePETFrom().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDtePETFromValueChanged();
			}
		});
		this.form.lyrAdmission().tabPET().grdPET().setGridHeaderClickedEvent(new GridHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int column) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPETGridHeaderClicked(column);
			}
		});
		this.form.lyrAdmission().tabPET().grdPET().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdPETSelectionChanged();
			}
		});
		this.form.lyrAdmission().tabPET().GroupPETWard().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroupPETWardValueChanged();
			}
		});
		this.form.cmbSpecialty().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSpecialtyValueChanged();
			}
		});
		this.form.cmbSourceOfReferral().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceOfReferralValueSet(value);
			}
		});
		this.form.cmbSourceOfReferral().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSourceOfReferralValueChanged();
			}
		});
		this.form.getContextMenus().Core.getPendingEmergencyAdmissionCMVIEW_DTAItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.PendingEmergencyAdmissionCM.VIEW_DTA, sender);
			}
		});
		this.form.getContextMenus().Core.getElectiveListTCIAdmissionVIEWItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.ElectiveListTCIAdmission.VIEW, sender);
			}
		});
		this.form.getContextMenus().Core.getBedManagementHomeLeaveCANCEL_HOME_LEAVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.BedManagementHomeLeave.CANCEL_HOME_LEAVE, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbSourceOfEmergencyReferralLookup();
		bindcmbWardTypeLookup();
		bindcmbSourceLookup();
		bindcmbMethodLookup();
		bindcmbPatientStatusLookup();
		bindcmbIdTypeLookup();
		bindcmbSourceOfReferralLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbSourceOfEmergencyReferralLookup();
		bindcmbWardTypeLookup();
		bindcmbSourceLookup();
		bindcmbMethodLookup();
		bindcmbPatientStatusLookup();
		bindcmbIdTypeLookup();
		bindcmbSourceOfReferralLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbSourceOfEmergencyReferralLookupValue();
		defaultcmbWardTypeLookupValue();
		defaultcmbSourceLookupValue();
		defaultcmbMethodLookupValue();
		defaultcmbPatientStatusLookupValue();
		defaultcmbIdTypeLookupValue();
		defaultcmbSourceOfReferralLookupValue();
	}
	private void onlyrAdmissiontabBookedActivated()
	{
		this.form.lyrAdmission().showtabBooked();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabBooked());
	}
	private void onlyrAdmissiontabPlannedActivated()
	{
		this.form.lyrAdmission().showtabPlanned();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabPlanned());
	}
	private void onlyrAdmissiontabEDEmergencyActivated()
	{
		this.form.lyrAdmission().showtabEDEmergency();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabEDEmergency());
	}
	private void onlyrAdmissiontabPendingEmergencyActivated()
	{
		this.form.lyrAdmission().showtabPendingEmergency();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabPendingEmergency());
	}
	private void onlyrAdmissiontabTCIActivated()
	{
		this.form.lyrAdmission().showtabTCI();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabTCI());
	}
	private void onlyrAdmissiontabInWaitingActivated()
	{
		this.form.lyrAdmission().showtabInWaiting();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabInWaiting());
	}
	private void onlyrAdmissiontabWardAttendersActivated()
	{
		this.form.lyrAdmission().showtabWardAttenders();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabWardAttenders());
	}
	private void onlyrAdmissiontabWaitingActivated()
	{
		this.form.lyrAdmission().showtabWaiting();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabWaiting());
	}
	private void onlyrAdmissiontabHomeLeaveActivated()
	{
		this.form.lyrAdmission().showtabHomeLeave();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabHomeLeave());
	}
	private void onlyrAdmissiontabPETActivated()
	{
		this.form.lyrAdmission().showtabPET();
		onlyrAdmissionTabChanged(this.form.lyrAdmission().tabPET());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIComponentEngine engine;
	protected GenForm form;
}
