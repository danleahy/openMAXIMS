//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.closeblockreopenbayorwarddlg;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode, ims.framework.interfaces.IClearInfo
{
	abstract protected String[] getLookupUsageErrors();
	abstract protected void bindcmbClosureReasonWardCloseLookup();
	abstract protected void defaultcmbClosureReasonWardCloseLookupValue();
	abstract protected void bindcmbBlockingReasonWardLookup();
	abstract protected void defaultcmbBlockingReasonWardLookupValue();
	abstract protected void bindcmbReopenReasonWardLookup();
	abstract protected void defaultcmbReopenReasonWardLookupValue();
	abstract protected void bindcmbReasonforClosureBayCloseLookup();
	abstract protected void defaultcmbReasonforClosureBayCloseLookupValue();
	abstract protected void bindcmbReasonBlockingBayLookup();
	abstract protected void defaultcmbReasonBlockingBayLookupValue();
	abstract protected void bindcmbReasonReopenBayLookup();
	abstract protected void defaultcmbReasonReopenBayLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbClosureReasonWardCloseValueSet(Object value);
	abstract protected void oncmbBlockingReasonWardValueSet(Object value);
	abstract protected void oncmbReopenReasonWardValueSet(Object value);
	abstract protected void oncmbReasonforClosureBayCloseValueSet(Object value);
	abstract protected void oncmbReasonBlockingBayValueSet(Object value);
	abstract protected void oncmbReasonReopenBayValueSet(Object value);
	abstract protected void onBtnReopenBaysClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnBlockBaysClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCloseBaysClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnReOpenClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				// Checking lookups usage
				if(getLookupUsageErrors() != null && getLookupUsageErrors().length > 0)
					throw new ims.framework.exceptions.FormMandatoryLookupMissingException(ims.framework.exceptions.FormMandatoryLookupMissingException.getError(getLookupUsageErrors()));
				onFormOpen(args);
			}
		});
		this.form.lyrDetails().tabCloseW().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabCloseWActivated();
			}
		});
		this.form.lyrDetails().tabBlockW().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabBlockWActivated();
			}
		});
		this.form.lyrDetails().tabReopenW().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabReopenWActivated();
			}
		});
		this.form.lyrDetails().tabCloseB().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabCloseBActivated();
			}
		});
		this.form.lyrDetails().tabBlockB().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabBlockBActivated();
			}
		});
		this.form.lyrDetails().tabReopenB().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabReopenBActivated();
			}
		});
		this.form.lyrDetails().tabCloseW().cmbClosureReasonWardClose().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbClosureReasonWardCloseValueSet(value);
			}
		});
		this.form.lyrDetails().tabBlockW().cmbBlockingReasonWard().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbBlockingReasonWardValueSet(value);
			}
		});
		this.form.lyrDetails().tabReopenW().cmbReopenReasonWard().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReopenReasonWardValueSet(value);
			}
		});
		this.form.lyrDetails().tabCloseB().cmbReasonforClosureBayClose().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReasonforClosureBayCloseValueSet(value);
			}
		});
		this.form.lyrDetails().tabBlockB().cmbReasonBlockingBay().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReasonBlockingBayValueSet(value);
			}
		});
		this.form.lyrDetails().tabReopenB().cmbReasonReopenBay().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbReasonReopenBayValueSet(value);
			}
		});
		this.form.btnReopenBays().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnReopenBaysClick();
			}
		});
		this.form.btnBlockBays().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnBlockBaysClick();
			}
		});
		this.form.btnCloseBays().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCloseBaysClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnClose().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCloseClick();
			}
		});
		this.form.btnReOpen().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnReOpenClick();
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbClosureReasonWardCloseLookup();
		bindcmbBlockingReasonWardLookup();
		bindcmbReopenReasonWardLookup();
		bindcmbReasonforClosureBayCloseLookup();
		bindcmbReasonBlockingBayLookup();
		bindcmbReasonReopenBayLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbClosureReasonWardCloseLookup();
		bindcmbBlockingReasonWardLookup();
		bindcmbReopenReasonWardLookup();
		bindcmbReasonforClosureBayCloseLookup();
		bindcmbReasonBlockingBayLookup();
		bindcmbReasonReopenBayLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbClosureReasonWardCloseLookupValue();
		defaultcmbBlockingReasonWardLookupValue();
		defaultcmbReopenReasonWardLookupValue();
		defaultcmbReasonforClosureBayCloseLookupValue();
		defaultcmbReasonBlockingBayLookupValue();
		defaultcmbReasonReopenBayLookupValue();
	}
	private void onlyrDetailstabCloseWActivated()
	{
		this.form.lyrDetails().showtabCloseW();
	}
	private void onlyrDetailstabBlockWActivated()
	{
		this.form.lyrDetails().showtabBlockW();
	}
	private void onlyrDetailstabReopenWActivated()
	{
		this.form.lyrDetails().showtabReopenW();
	}
	private void onlyrDetailstabCloseBActivated()
	{
		this.form.lyrDetails().showtabCloseB();
	}
	private void onlyrDetailstabBlockBActivated()
	{
		this.form.lyrDetails().showtabBlockB();
	}
	private void onlyrDetailstabReopenBActivated()
	{
		this.form.lyrDetails().showtabReopenB();
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	public abstract void clearContextInformation();
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
