//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.assignbedtohomeleaveinpatient;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class grdAvailableBedsRow extends GridRowBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected grdAvailableBedsRow(GridRow row)
		{
			super(row);
		}
		public void showOpened(int column)
		{
			super.row.showOpened(column);
		}
		public void setColBedNoReadOnly(boolean value)
		{
			super.row.setReadOnly(0, value);
		}
		public boolean isColBedNoReadOnly()
		{
			return super.row.isReadOnly(0);
		}
		public void showColBedNoOpened()
		{
			super.row.showOpened(0);
		}
		public void setTooltipForColBedNo(String value)
		{
			super.row.setTooltip(0, value);
		}
		public String getColBedNo()
		{
			return (String)super.row.get(0);
		}
		public void setColBedNo(String value)
		{
			super.row.set(0, value);
		}
		public void setCellColBedNoTooltip(String value)
		{
			super.row.setTooltip(0, value);
		}
		public void setColTypeReadOnly(boolean value)
		{
			super.row.setReadOnly(1, value);
		}
		public boolean isColTypeReadOnly()
		{
			return super.row.isReadOnly(1);
		}
		public void showColTypeOpened()
		{
			super.row.showOpened(1);
		}
		public void setTooltipForColType(String value)
		{
			super.row.setTooltip(1, value);
		}
		public String getColType()
		{
			return (String)super.row.get(1);
		}
		public void setColType(String value)
		{
			super.row.set(1, value);
		}
		public void setCellColTypeTooltip(String value)
		{
			super.row.setTooltip(1, value);
		}
		public void setColBayReadOnly(boolean value)
		{
			super.row.setReadOnly(2, value);
		}
		public boolean isColBayReadOnly()
		{
			return super.row.isReadOnly(2);
		}
		public void showColBayOpened()
		{
			super.row.showOpened(2);
		}
		public void setTooltipForColBay(String value)
		{
			super.row.setTooltip(2, value);
		}
		public String getColBay()
		{
			return (String)super.row.get(2);
		}
		public void setColBay(String value)
		{
			super.row.set(2, value);
		}
		public void setCellColBayTooltip(String value)
		{
			super.row.setTooltip(2, value);
		}
		public ims.core.vo.BedSpaceStateLiteVo getValue()
		{
			return (ims.core.vo.BedSpaceStateLiteVo)super.row.getValue();
		}
		public void setValue(ims.core.vo.BedSpaceStateLiteVo value)
		{
			super.row.setValue(value);
		}
	}
	public static class grdAvailableBedsRowCollection extends GridRowCollectionBridge
	{
		private static final long serialVersionUID = 1L;
		
		private grdAvailableBedsRowCollection(GridRowCollection collection)
		{
			super(collection);
		}
		public grdAvailableBedsRow get(int index)
		{
			return new grdAvailableBedsRow(super.collection.get(index));
		}
		public grdAvailableBedsRow newRow()
		{
			return new grdAvailableBedsRow(super.collection.newRow());
		}
		public grdAvailableBedsRow newRow(boolean autoSelect)
		{
			return new grdAvailableBedsRow(super.collection.newRow(autoSelect));
		}
		public grdAvailableBedsRow newRowAt(int index)
		{
			return new grdAvailableBedsRow(super.collection.newRowAt(index));
		}
		public grdAvailableBedsRow newRowAt(int index, boolean autoSelect)
		{
			return new grdAvailableBedsRow(super.collection.newRowAt(index, autoSelect));
		}
	}
	public static class grdAvailableBedsGrid extends GridBridge
	{
		private static final long serialVersionUID = 1L;
		
		private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
		{
			super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
		}
		public ims.core.vo.BedSpaceStateLiteVoCollection getValues()
		{
			ims.core.vo.BedSpaceStateLiteVoCollection listOfValues = new ims.core.vo.BedSpaceStateLiteVoCollection();
			for(int x = 0; x < this.getRows().size(); x++)
			{
				listOfValues.add(this.getRows().get(x).getValue());
			}
			return listOfValues;
		}
		public ims.core.vo.BedSpaceStateLiteVo getValue()
		{
			return (ims.core.vo.BedSpaceStateLiteVo)super.grid.getValue();
		}
		public void setValue(ims.core.vo.BedSpaceStateLiteVo value)
		{
			super.grid.setValue(value);
		}
		public grdAvailableBedsRow getSelectedRow()
		{
			return super.grid.getSelectedRow() == null ? null : new grdAvailableBedsRow(super.grid.getSelectedRow());
		}
		public int getSelectedRowIndex()
		{
			return super.grid.getSelectedRowIndex();
		}
		public grdAvailableBedsRowCollection getRows()
		{
			return new grdAvailableBedsRowCollection(super.grid.getRows());
		}
		public grdAvailableBedsRow getRowByValue(ims.core.vo.BedSpaceStateLiteVo value)
		{
			GridRow row = super.grid.getRowByValue(value);
			return row == null?null:new grdAvailableBedsRow(row);
		}
		public void setColBedNoHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(0, value);
		}
		public String getColBedNoHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(0);
		}
		public void setColTypeHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(1, value);
		}
		public String getColTypeHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(1);
		}
		public void setColBayHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(2, value);
		}
		public String getColBayHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(2);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
	}
	private void validateMandatoryContext(Context context)
	{
		if(new ims.framework.ContextVariable("Core.SelectedWaitingAreaPatient", "_cv_Core.SelectedWaitingAreaPatient").getValueIsNull(context))
			throw new ims.framework.exceptions.FormMandatoryContextMissingException("The required context data 'Core.SelectedWaitingAreaPatient' is not available.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
			validateMandatoryContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(648, 344);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Label Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 8, 7, 133, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Available Beds/Chairs:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 320, 256, 83, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Time of Return:", new Integer(0), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 8, 258, 82, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Date of Return:", new Integer(0), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 512, 293, 128, 48, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, " Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 376, 293, 128, 48, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, " Return from Leave", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// Date Controls
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 112, 256, 144, 20, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.TRUE, null}));

		// Grid Controls
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 8, 23, 632, 216, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		Grid m_grdAvailableBedsTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, Boolean.FALSE, new Integer(24), Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.FALSE});
		addControl(m_grdAvailableBedsTemp);
		grdAvailableBedsGrid grdAvailableBeds = (grdAvailableBedsGrid)GridFlyweightFactory.getInstance().createGridBridge(grdAvailableBedsGrid.class, m_grdAvailableBedsTemp);
		grdAvailableBeds.addStringColumn("Bed/Chair Number", 0, 0, 130, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdAvailableBeds.addStringColumn("Type", 0, 0, 100, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdAvailableBeds.addStringColumn("Bay", 0, 0, -1, true, false, 1, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		super.addGrid(grdAvailableBeds);

		// Time Controls
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 416, 256, 40, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(TimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT,Boolean.TRUE, Boolean.FALSE, null, Boolean.TRUE, ""}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public Label lblTimeReturn()
	{
		return (Label)super.getControl(1);
	}
	public Label lblDateReturn()
	{
		return (Label)super.getControl(2);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(3);
	}
	public Button btnReturnFromLeave()
	{
		return (Button)super.getControl(4);
	}
	public DateControl dteReturn()
	{
		return (DateControl)super.getControl(5);
	}
	public grdAvailableBedsGrid grdAvailableBeds()
	{
		return (grdAvailableBedsGrid)super.getGrid(0);
	}
	public TimeControl timReturn()
	{
		return (TimeControl)super.getControl(7);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				AdmissionGenderWarningDialog = new LocalFormName(102429);
				AdmissionReason = new LocalFormName(102481);
			}
			public final FormName AdmissionGenderWarningDialog;
			public final FormName AdmissionReason;
		}

		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				ReturnFromHome = new ImageHelper(102325, "Images/Core/returnhome.png", new Integer(23), new Integer(23));
				Delete = new ImageHelper(102148, "Images/Core/delete.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image ReturnFromHome;
			public final ims.framework.utils.Image Delete;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_MessageBoxBayGenderMismatch = new ims.framework.ContextVariable("MessageBoxBayGenderMismatch", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__MessageBoxBayGenderMismatch_" + componentIdentifier + "");
			cxl_MessageBoxBayMixedGender = new ims.framework.ContextVariable("MessageBoxBayMixedGender", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__MessageBoxBayMixedGender_" + componentIdentifier + "");
			cxl_SelectedWardConfig = new ims.framework.ContextVariable("SelectedWardConfig", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedWardConfig_" + componentIdentifier + "");
			cxl_MessageBoxDeceasedReturnFromLeaveAdmit = new ims.framework.ContextVariable("MessageBoxDeceasedReturnFromLeaveAdmit", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__MessageBoxDeceasedReturnFromLeaveAdmit_" + componentIdentifier + "");
			cxl_SelectedAdmissionDetail = new ims.framework.ContextVariable("SelectedAdmissionDetail", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier + "");
			cxl_MessageBoxWardBayAvailability = new ims.framework.ContextVariable("MessageBoxWardBayAvailability", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__MessageBoxWardBayAvailability_" + componentIdentifier + "");
			cxl_LCMaleCount = new ims.framework.ContextVariable("LCMaleCount", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__LCMaleCount_" + componentIdentifier + "");
			cxl_LCFemaleCount = new ims.framework.ContextVariable("LCFemaleCount", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__LCFemaleCount_" + componentIdentifier + "");
			cxl_SortOrderBedNumber = new ims.framework.ContextVariable("SortOrderBedNumber", prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SortOrderBedNumber_" + componentIdentifier + "");
		}
		
		public boolean getMessageBoxBayGenderMismatchIsNotNull()
		{
			return !cxl_MessageBoxBayGenderMismatch.getValueIsNull(context);
		}
		public Integer getMessageBoxBayGenderMismatch()
		{
			return (Integer)cxl_MessageBoxBayGenderMismatch.getValue(context);
		}
		public void setMessageBoxBayGenderMismatch(Integer value)
		{
			cxl_MessageBoxBayGenderMismatch.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxBayGenderMismatch = null;
		public boolean getMessageBoxBayMixedGenderIsNotNull()
		{
			return !cxl_MessageBoxBayMixedGender.getValueIsNull(context);
		}
		public Integer getMessageBoxBayMixedGender()
		{
			return (Integer)cxl_MessageBoxBayMixedGender.getValue(context);
		}
		public void setMessageBoxBayMixedGender(Integer value)
		{
			cxl_MessageBoxBayMixedGender.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxBayMixedGender = null;
		public boolean getSelectedWardConfigIsNotNull()
		{
			return !cxl_SelectedWardConfig.getValueIsNull(context);
		}
		public ims.core.vo.WardConfigLiteVo getSelectedWardConfig()
		{
			return (ims.core.vo.WardConfigLiteVo)cxl_SelectedWardConfig.getValue(context);
		}
		public void setSelectedWardConfig(ims.core.vo.WardConfigLiteVo value)
		{
			cxl_SelectedWardConfig.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedWardConfig = null;
		public boolean getMessageBoxDeceasedReturnFromLeaveAdmitIsNotNull()
		{
			return !cxl_MessageBoxDeceasedReturnFromLeaveAdmit.getValueIsNull(context);
		}
		public Integer getMessageBoxDeceasedReturnFromLeaveAdmit()
		{
			return (Integer)cxl_MessageBoxDeceasedReturnFromLeaveAdmit.getValue(context);
		}
		public void setMessageBoxDeceasedReturnFromLeaveAdmit(Integer value)
		{
			cxl_MessageBoxDeceasedReturnFromLeaveAdmit.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxDeceasedReturnFromLeaveAdmit = null;
		public boolean getSelectedAdmissionDetailIsNotNull()
		{
			return !cxl_SelectedAdmissionDetail.getValueIsNull(context);
		}
		public ims.core.vo.AdmissionDetailVo getSelectedAdmissionDetail()
		{
			return (ims.core.vo.AdmissionDetailVo)cxl_SelectedAdmissionDetail.getValue(context);
		}
		public void setSelectedAdmissionDetail(ims.core.vo.AdmissionDetailVo value)
		{
			cxl_SelectedAdmissionDetail.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedAdmissionDetail = null;
		public boolean getMessageBoxWardBayAvailabilityIsNotNull()
		{
			return !cxl_MessageBoxWardBayAvailability.getValueIsNull(context);
		}
		public Integer getMessageBoxWardBayAvailability()
		{
			return (Integer)cxl_MessageBoxWardBayAvailability.getValue(context);
		}
		public void setMessageBoxWardBayAvailability(Integer value)
		{
			cxl_MessageBoxWardBayAvailability.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxWardBayAvailability = null;
		public boolean getLCMaleCountIsNotNull()
		{
			return !cxl_LCMaleCount.getValueIsNull(context);
		}
		public Integer getLCMaleCount()
		{
			return (Integer)cxl_LCMaleCount.getValue(context);
		}
		public void setLCMaleCount(Integer value)
		{
			cxl_LCMaleCount.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_LCMaleCount = null;
		public boolean getLCFemaleCountIsNotNull()
		{
			return !cxl_LCFemaleCount.getValueIsNull(context);
		}
		public Integer getLCFemaleCount()
		{
			return (Integer)cxl_LCFemaleCount.getValue(context);
		}
		public void setLCFemaleCount(Integer value)
		{
			cxl_LCFemaleCount.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_LCFemaleCount = null;
		public boolean getSortOrderBedNumberIsNotNull()
		{
			return !cxl_SortOrderBedNumber.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderBedNumber()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderBedNumber.getValue(context);
		}
		public void setSortOrderBedNumber(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderBedNumber.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderBedNumber = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[190];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ISCONFIRMEDDISCHARGE", "IsConfirmedDischarge");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-CONFIRMEDDISCHARGEDATETIME", "ConfirmedDischargeDateTime");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ISMATERNITYINPATIENT", "IsMaternityInpatient");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-DISCHARGEREADYDATE", "DischargeReadyDate");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ISONHOMELEAVE", "IsOnHomeLeave");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-EXPECTEDDATEOFRETURN", "ExpectedDateOfReturn");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-EXPECTEDTIMEOFRETURN", "ExpectedTimeOfReturn");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-VACATEDBEDNUMBER", "VacatedBedNumber");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-DATEONHOMELEAVE", "DateOnHomeLeave");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-VTEASSESSMENTSTATUS", "VTEAssessmentStatus");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-VTERISKASSESSMENT", "VTERiskAssessment");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-VTEASSESSMENTSTATUSREASON", "VTEAssessmentStatusReason");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ADMISSIONDATETIME", "AdmissionDateTime");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-TIMEONHOMELEAVE", "TimeOnHomeLeave");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ISREADYTOLEAVE", "IsReadyToLeave");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-READYTOLEAVEDECISIONDATETIME", "ReadyToLeaveDecisionDateTime");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_Core.WardViewPatientListWard", "BO-1007100007-ID", "ID_Location");
			fields[163] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedWardConfig_" + componentIdentifier, "BO-1014100014-ID", "ID_WardBayConfig");
			fields[164] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedWardConfig_" + componentIdentifier, "BO-1014100014-MAINSPECIALTY", "MainSpecialty");
			fields[165] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedWardConfig_" + componentIdentifier, "BO-1014100014-ISWAITINGAREA", "IsWaitingArea");
			fields[166] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedWardConfig_" + componentIdentifier, "BO-1014100014-NUMOFBEDS", "NumOfBeds");
			fields[167] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedWardConfig_" + componentIdentifier, "BO-1014100014-NUMOFOCCUPIEDBEDS", "NumOfOccupiedBeds");
			fields[168] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedWardConfig_" + componentIdentifier, "BO-1014100014-WARDSTATUS", "WardAvailabilityStatus");
			fields[169] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-ID", "ID_AdmissionDetail");
			fields[170] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-ADMISSIONDATETIME", "AdmissionDateTime");
			fields[171] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-BED", "Bed");
			fields[172] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-SPECIALTY", "Specialty");
			fields[173] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-WARDTYPE", "WardType");
			fields[174] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-METHODOFADMISSION", "MethodOfAdmission");
			fields[175] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-SOURCEOFADMISSION", "SourceOfAdmission");
			fields[176] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-REASONFORADMISSION", "ReasonForAdmission");
			fields[177] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[178] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-ISCHAPLAINREQUIRED", "IsChaplainRequired");
			fields[179] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-PATIENTSTATUS", "PatientStatus");
			fields[180] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-UPDATECFL", "UpdateCFL");
			fields[181] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-ANTICIPATEDSTAY", "AnticipatedStay");
			fields[182] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-CASEFOLDERCOMMENTS", "CaseFolderComments");
			fields[183] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-EXTENDEDLENGTHOFSTAYREASON", "ExtendedLengthOfStayReason");
			fields[184] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-MEDICALLYFITFORDISCHARGE", "MedicallyFitForDischarge");
			fields[185] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-PATIENTREQUIRESTRANSPORT", "PatientRequiresTransport");
			fields[186] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-ABLETOGODISCHARGELOUNGE", "AbleToGoDischargeLounge");
			fields[187] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-REASONCANNOTGODISCHARGELOUNGE", "ReasonCannotGoDischargeLounge");
			fields[188] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-SELFADMITPATIENT", "SelfAdmitPatient");
			fields[189] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.AssignBedToHomeLeaveInpatient.__internal_x_context__SelectedAdmissionDetail_" + componentIdentifier, "BO-1014100008-SOURCEOFEMERGENCYREFERRAL", "SourceOfEmergencyReferral");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
