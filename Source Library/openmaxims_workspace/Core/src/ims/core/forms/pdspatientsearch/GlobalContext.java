//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.pdspatientsearch;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		Clinical = new ClinicalContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getGPPracticeIsNotNull()
		{
			return !cx_CoreGPPractice.getValueIsNull(context);
		}
		public ims.core.vo.OrgLiteVo getGPPractice()
		{
			return (ims.core.vo.OrgLiteVo)cx_CoreGPPractice.getValue(context);
		}
		public void setGPPractice(ims.core.vo.OrgLiteVo value)
		{
			cx_CoreGPPractice.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreGPPractice = new ims.framework.ContextVariable("Core.GPPractice", "_cv_Core.GPPractice");
		public boolean getPatientFilterIsNotNull()
		{
			return !cx_CorePatientFilter.getValueIsNull(context);
		}
		public ims.core.vo.PatientFilter getPatientFilter()
		{
			return (ims.core.vo.PatientFilter)cx_CorePatientFilter.getValue(context);
		}
		public void setPatientFilter(ims.core.vo.PatientFilter value)
		{
			cx_CorePatientFilter.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientFilter = new ims.framework.ContextVariable("Core.PatientFilter", "_cvp_Core.PatientFilter");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getLocalPatientFilterSearchCriteriaIsNotNull()
		{
			return !cx_CoreLocalPatientFilterSearchCriteria.getValueIsNull(context);
		}
		public ims.core.vo.PDSPatientFilterSearchCriteriaVo getLocalPatientFilterSearchCriteria()
		{
			return (ims.core.vo.PDSPatientFilterSearchCriteriaVo)cx_CoreLocalPatientFilterSearchCriteria.getValue(context);
		}
		public void setLocalPatientFilterSearchCriteria(ims.core.vo.PDSPatientFilterSearchCriteriaVo value)
		{
			cx_CoreLocalPatientFilterSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreLocalPatientFilterSearchCriteria = new ims.framework.ContextVariable("Core.LocalPatientFilterSearchCriteria", "_cvp_Core.LocalPatientFilterSearchCriteria");
		public boolean getSamlXmlIsNotNull()
		{
			return !cx_CoreSamlXml.getValueIsNull(context);
		}
		public String getSamlXml()
		{
			return (String)cx_CoreSamlXml.getValue(context);
		}
		public void setSamlXml(String value)
		{
			cx_CoreSamlXml.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreSamlXml = new ims.framework.ContextVariable("Core.SamlXml", "_cv_Core.SamlXml");
		public boolean getPdsSuccesfullSearchIsNotNull()
		{
			return !cx_CorePdsSuccesfullSearch.getValueIsNull(context);
		}
		public Boolean getPdsSuccesfullSearch()
		{
			return (Boolean)cx_CorePdsSuccesfullSearch.getValue(context);
		}
		public void setPdsSuccesfullSearch(Boolean value)
		{
			cx_CorePdsSuccesfullSearch.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePdsSuccesfullSearch = new ims.framework.ContextVariable("Core.PdsSuccesfullSearch", "_cv_Core.PdsSuccesfullSearch");
		public boolean getCheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearchIsNotNull()
		{
			return !cx_CoreCheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearch.getValueIsNull(context);
		}
		public Boolean getCheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearch()
		{
			return (Boolean)cx_CoreCheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearch.getValue(context);
		}
		public void setCheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearch(Boolean value)
		{
			cx_CoreCheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearch.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearch = new ims.framework.ContextVariable("Core.CheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearch", "_cv_Core.CheckKeyFieldsOnPDSDemographicsOnOpenFromPdsSearch");
		public boolean getPDSPatientFilterSearchCriteriaIsNotNull()
		{
			return !cx_CorePDSPatientFilterSearchCriteria.getValueIsNull(context);
		}
		public ims.core.vo.PDSPatientFilterSearchCriteriaVo getPDSPatientFilterSearchCriteria()
		{
			return (ims.core.vo.PDSPatientFilterSearchCriteriaVo)cx_CorePDSPatientFilterSearchCriteria.getValue(context);
		}
		public void setPDSPatientFilterSearchCriteria(ims.core.vo.PDSPatientFilterSearchCriteriaVo value)
		{
			cx_CorePDSPatientFilterSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePDSPatientFilterSearchCriteria = new ims.framework.ContextVariable("Core.PDSPatientFilterSearchCriteria", "_cvp_Core.PDSPatientFilterSearchCriteria");
		public boolean getAddressSearchTextIsNotNull()
		{
			return !cx_CoreAddressSearchText.getValueIsNull(context);
		}
		public String getAddressSearchText()
		{
			return (String)cx_CoreAddressSearchText.getValue(context);
		}
		public void setAddressSearchText(String value)
		{
			cx_CoreAddressSearchText.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreAddressSearchText = new ims.framework.ContextVariable("Core.AddressSearchText", "_cv_Core.AddressSearchText");
		public boolean getAddressSearchTypeIsNotNull()
		{
			return !cx_CoreAddressSearchType.getValueIsNull(context);
		}
		public String getAddressSearchType()
		{
			return (String)cx_CoreAddressSearchType.getValue(context);
		}
		public void setAddressSearchType(String value)
		{
			cx_CoreAddressSearchType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreAddressSearchType = new ims.framework.ContextVariable("Core.AddressSearchType", "_cv_Core.AddressSearchType");
		public boolean getPersonAddressIsNotNull()
		{
			return !cx_CorePersonAddress.getValueIsNull(context);
		}
		public ims.core.vo.PersonAddress getPersonAddress()
		{
			return (ims.core.vo.PersonAddress)cx_CorePersonAddress.getValue(context);
		}
		public void setPersonAddress(ims.core.vo.PersonAddress value)
		{
			cx_CorePersonAddress.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePersonAddress = new ims.framework.ContextVariable("Core.PersonAddress", "_cv_Core.PersonAddress");
		public boolean getPatientToBeDisplayedIsNotNull()
		{
			return !cx_CorePatientToBeDisplayed.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientToBeDisplayed()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientToBeDisplayed.getValue(context);
		}
		public void setPatientToBeDisplayed(ims.core.vo.PatientShort value)
		{
			cx_CorePatientToBeDisplayed.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientToBeDisplayed = new ims.framework.ContextVariable("Core.PatientToBeDisplayed", "_cv_Core.PatientToBeDisplayed");
		public boolean getGPDetailsIsNotNull()
		{
			return !cx_CoreGPDetails.getValueIsNull(context);
		}
		public ims.core.vo.GpShortVo getGPDetails()
		{
			return (ims.core.vo.GpShortVo)cx_CoreGPDetails.getValue(context);
		}
		public void setGPDetails(ims.core.vo.GpShortVo value)
		{
			cx_CoreGPDetails.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreGPDetails = new ims.framework.ContextVariable("Core.GPDetails", "_cv_Core.GPDetails");
		public boolean getDuplicatedPatientsIsNotNull()
		{
			return !cx_CoreDuplicatedPatients.getValueIsNull(context);
		}
		public ims.core.vo.PatientLiteVoCollection getDuplicatedPatients()
		{
			return (ims.core.vo.PatientLiteVoCollection)cx_CoreDuplicatedPatients.getValue(context);
		}
		public void setDuplicatedPatients(ims.core.vo.PatientLiteVoCollection value)
		{
			cx_CoreDuplicatedPatients.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreDuplicatedPatients = new ims.framework.ContextVariable("Core.DuplicatedPatients", "_cv_Core.DuplicatedPatients");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getCurrentClinicalContactIsNotNull()
		{
			return !cx_CoreCurrentClinicalContact.getValueIsNull(context);
		}
		public ims.core.vo.ClinicalContactShortVo getCurrentClinicalContact()
		{
			return (ims.core.vo.ClinicalContactShortVo)cx_CoreCurrentClinicalContact.getValue(context);
		}
		public void setCurrentClinicalContact(ims.core.vo.ClinicalContactShortVo value)
		{
			cx_CoreCurrentClinicalContact.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentClinicalContact = new ims.framework.ContextVariable("Core.CurrentClinicalContact", "_cvp_Core.CurrentClinicalContact");
		public boolean getEpisodeofCareShortIsNotNull()
		{
			return !cx_CoreEpisodeofCareShort.getValueIsNull(context);
		}
		public ims.core.vo.EpisodeofCareShortVo getEpisodeofCareShort()
		{
			return (ims.core.vo.EpisodeofCareShortVo)cx_CoreEpisodeofCareShort.getValue(context);
		}
		public void setEpisodeofCareShort(ims.core.vo.EpisodeofCareShortVo value)
		{
			cx_CoreEpisodeofCareShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreEpisodeofCareShort = new ims.framework.ContextVariable("Core.EpisodeofCareShort", "_cvp_Core.EpisodeofCareShort");

		private ims.framework.Context context;
	}
	public final class ClinicalContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ClinicalContext(ims.framework.Context context)
		{
			this.context = context;

			PatientSummary = new PatientSummaryContext(context);
		}
		public final class PatientSummaryContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private PatientSummaryContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public void clearCareSpell()
			{
				cx_ClinicalPatientSummaryCareSpell.setValue(context, null);
			}

			private ims.framework.ContextVariable cx_ClinicalPatientSummaryCareSpell = new ims.framework.ContextVariable("Clinical.PatientSummary.CareSpell", "_cv_Clinical.PatientSummary.CareSpell");
			private ims.framework.Context context;
		}


		public PatientSummaryContext PatientSummary;
		private ims.framework.Context context;
	}

	public CoreContext Core;
	public ClinicalContext Clinical;
}
