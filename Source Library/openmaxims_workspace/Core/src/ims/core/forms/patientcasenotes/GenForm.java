//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.patientcasenotes;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class cmbFolderComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.FolderCaseNote value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.FolderCaseNote value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.FolderCaseNote value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.FolderCaseNote value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.FolderCaseNote value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.FolderCaseNote getValue()
		{
			return (ims.core.vo.lookups.FolderCaseNote)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.FolderCaseNote value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbTypeReqComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.CaseNoteType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.CaseNoteType value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.CaseNoteType getValue()
		{
			return (ims.core.vo.lookups.CaseNoteType)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.CaseNoteType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbReasonReqComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.CaseNoteReasonForRequest value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteReasonForRequest value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteReasonForRequest value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteReasonForRequest value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.CaseNoteReasonForRequest value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.CaseNoteReasonForRequest getValue()
		{
			return (ims.core.vo.lookups.CaseNoteReasonForRequest)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.CaseNoteReasonForRequest value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbVolTypeComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.CaseNoteType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.CaseNoteType value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.CaseNoteType getValue()
		{
			return (ims.core.vo.lookups.CaseNoteType)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.CaseNoteType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbVolStatusComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.CaseNoteStatus value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteStatus value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteStatus value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.CaseNoteStatus value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.CaseNoteStatus value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.CaseNoteStatus getValue()
		{
			return (ims.core.vo.lookups.CaseNoteStatus)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.CaseNoteStatus value)
		{
			super.control.setValue(value);
		}
	}
	public static class qmbReqLocComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.LocationLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.LocationLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.LocationLiteVo getValue()
		{
			return (ims.core.vo.LocationLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.LocationLiteVo value)
		{
			super.control.setValue(value);
		}
		public void setEditedText(String text)
		{
			super.control.setEditedText(text);
		}
		public String getEditedText()
		{
			return super.control.getEditedText();
		}
	}
	public static class qmbVolCurrentLocationComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.LocationLiteVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.LocationLiteVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.LocationLiteVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.LocationLiteVo getValue()
		{
			return (ims.core.vo.LocationLiteVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.LocationLiteVo value)
		{
			super.control.setValue(value);
		}
		public void setEditedText(String text)
		{
			super.control.setEditedText(text);
		}
		public String getEditedText()
		{
			return super.control.getEditedText();
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
	}
	private void validateMandatoryContext(Context context)
	{
		if(new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort").getValueIsNull(context))
			throw new ims.framework.exceptions.FormMandatoryContextMissingException("The required context data 'Core.PatientShort' is not available.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
			validateMandatoryContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Custom Controls
		ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 538, 440, 233, 20, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		ims.framework.FormUiLogic m_ccRequestedByForm = loader.loadComponent(102256, appForm, startControlID * 10 + 1000, anchoringHelper1.getSize(), instance1, startTabIndex.intValue() + 33, skipContextValidation);
		//ims.framework.Control m_ccRequestedByControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(538), new Integer(440), new Integer(233), new Integer(20), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT, new Integer(startTabIndex.intValue() + 33), m_ccRequestedByForm, instance1 } );
		ims.framework.Control m_ccRequestedByControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1001),  new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT, new Integer(startTabIndex.intValue() + 33), m_ccRequestedByForm, instance1, Boolean.FALSE } );
		super.addControl(m_ccRequestedByControl);
		Menu[] menus1 = m_ccRequestedByForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus1.length; x++)
		{
			form.registerMenu(menus1[x]);
		}
		ims.framework.CustomComponent instance2 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 0, 24, 424, 192, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMLEFT);
		ims.framework.FormUiLogic m_ccCaseNoteFolderForm = loader.loadComponent(102463, appForm, startControlID * 10 + 2000, anchoringHelper2.getSize(), instance2, startTabIndex.intValue() + 2, skipContextValidation);
		//ims.framework.Control m_ccCaseNoteFolderControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(0), new Integer(24), new Integer(424), new Integer(192), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMLEFT, new Integer(startTabIndex.intValue() + 2), m_ccCaseNoteFolderForm, instance2 } );
		ims.framework.Control m_ccCaseNoteFolderControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1003),  new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMLEFT, new Integer(startTabIndex.intValue() + 2), m_ccCaseNoteFolderForm, instance2, Boolean.FALSE } );
		super.addControl(m_ccCaseNoteFolderControl);
		Menu[] menus2 = m_ccCaseNoteFolderForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus2.length; x++)
		{
			form.registerMenu(menus2[x]);
		}
		ims.framework.CustomComponent instance3 = factory.getEmptyCustomComponent();
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 424, 24, 424, 312, ims.framework.enumerations.ControlAnchoring.ALL);
		ims.framework.FormUiLogic m_ccCaseNoteRequestForm = loader.loadComponent(102462, appForm, startControlID * 10 + 3000, anchoringHelper3.getSize(), instance3, startTabIndex.intValue() + 27, skipContextValidation);
		//ims.framework.Control m_ccCaseNoteRequestControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(424), new Integer(24), new Integer(424), new Integer(312), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, new Integer(startTabIndex.intValue() + 27), m_ccCaseNoteRequestForm, instance3 } );
		ims.framework.Control m_ccCaseNoteRequestControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1005),  new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, new Integer(startTabIndex.intValue() + 27), m_ccCaseNoteRequestForm, instance3, Boolean.FALSE } );
		super.addControl(m_ccCaseNoteRequestControl);
		Menu[] menus3 = m_ccCaseNoteRequestForm.getForm().getRegisteredMenus();
		for(int x = 0; x < menus3.length; x++)
		{
			form.registerMenu(menus3[x]);
		}

		// Label Controls
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 430, 368, 96, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Recording Date:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 8, 258, 44, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Folder:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 430, 424, 57, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Location:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 433, 8, 90, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Open Requests", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 8, 330, 70, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Tracking ID:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 430, 496, 69, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Comments:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 430, 464, 50, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Reason:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 430, 440, 86, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Requested By:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 430, 408, 72, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Requesting", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 430, 390, 102, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Required By Date:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 430, 346, 36, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Type:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 8, 352, 69, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Comments:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 8, 234, 36, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Type:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 8, 306, 45, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Status:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 8, 288, 57, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Location:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 8, 277, 47, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Current", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 336, 288, 80, 60, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), new Integer(startTabIndex.intValue() + 43), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " View All Case Note Requests", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 336, 416, 80, 60, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Add Comment", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 87, 489, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), new Integer(startTabIndex.intValue() + 15), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Create Case Note Folder", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 595, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), new Integer(startTabIndex.intValue() + 39), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Cancel Request", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 253, 489, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), new Integer(startTabIndex.intValue() + 18), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Requires Merging", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 170, 489, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), new Integer(startTabIndex.intValue() + 16), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Mark As Missing", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 170, 489, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), new Integer(startTabIndex.intValue() + 17), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Mark As Found", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 87, 489, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), new Integer(startTabIndex.intValue() + 14), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " New Temporary", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 253, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), new Integer(startTabIndex.intValue() + 23), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Scan Folder", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 420, 344, 1, 282, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), new Integer(-1), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " ", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 336, 352, 80, 60, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), new Integer(startTabIndex.intValue() + 11), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " View All Comments", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 678, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), new Integer(startTabIndex.intValue() + 40), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Request Complete", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 420, 4, 1, 622, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), new Integer(-1), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, " ", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 87, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), new Integer(startTabIndex.intValue() + 21), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Transfer", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 512, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), new Integer(startTabIndex.intValue() + 38), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Edit Request", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 430, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), new Integer(startTabIndex.intValue() + 37), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " New Request", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 760, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), new Integer(startTabIndex.intValue() + 42), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 678, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), new Integer(startTabIndex.intValue() + 41), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 170, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1040), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), new Integer(startTabIndex.intValue() + 22), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Destroy Folder", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 336, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1041), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), new Integer(startTabIndex.intValue() + 24), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Archive Folder", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 4, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1042), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), new Integer(startTabIndex.intValue() + 20), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Merge", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper41 = new RuntimeAnchoring(designSize, runtimeSize, 336, 224, 80, 60, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1043), new Integer(anchoringHelper41.getX()), new Integer(anchoringHelper41.getY()), new Integer(anchoringHelper41.getWidth()), new Integer(anchoringHelper41.getHeight()), new Integer(startTabIndex.intValue() + 10), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " View Transfers", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper42 = new RuntimeAnchoring(designSize, runtimeSize, 336, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1044), new Integer(anchoringHelper42.getX()), new Integer(anchoringHelper42.getY()), new Integer(anchoringHelper42.getWidth()), new Integer(anchoringHelper42.getHeight()), new Integer(startTabIndex.intValue() + 26), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper43 = new RuntimeAnchoring(designSize, runtimeSize, 252, 562, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1045), new Integer(anchoringHelper43.getX()), new Integer(anchoringHelper43.getY()), new Integer(anchoringHelper43.getWidth()), new Integer(anchoringHelper43.getHeight()), new Integer(startTabIndex.intValue() + 25), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper44 = new RuntimeAnchoring(designSize, runtimeSize, 336, 481, 80, 72, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1046), new Integer(anchoringHelper44.getX()), new Integer(anchoringHelper44.getY()), new Integer(anchoringHelper44.getWidth()), new Integer(anchoringHelper44.getHeight()), new Integer(startTabIndex.intValue() + 19), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " Change from Temporary to Permanent", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper45 = new RuntimeAnchoring(designSize, runtimeSize, 4, 489, 80, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1047), new Integer(anchoringHelper45.getX()), new Integer(anchoringHelper45.getY()), new Integer(anchoringHelper45.getWidth()), new Integer(anchoringHelper45.getHeight()), new Integer(startTabIndex.intValue() + 13), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, " New Permanent", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper46 = new RuntimeAnchoring(designSize, runtimeSize, 79, 328, 248, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1048), new Integer(anchoringHelper46.getX()), new Integer(anchoringHelper46.getY()), new Integer(anchoringHelper46.getWidth()), new Integer(anchoringHelper46.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper47 = new RuntimeAnchoring(designSize, runtimeSize, 538, 488, 217, 64, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1049), new Integer(anchoringHelper47.getX()), new Integer(anchoringHelper47.getY()), new Integer(anchoringHelper47.getWidth()), new Integer(anchoringHelper47.getHeight()), new Integer(startTabIndex.intValue() + 36), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		RuntimeAnchoring anchoringHelper48 = new RuntimeAnchoring(designSize, runtimeSize, 79, 352, 248, 128, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1050), new Integer(anchoringHelper48.getX()), new Integer(anchoringHelper48.getY()), new Integer(anchoringHelper48.getWidth()), new Integer(anchoringHelper48.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT,Boolean.TRUE, new Integer(2500), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Time Controls
		RuntimeAnchoring anchoringHelper49 = new RuntimeAnchoring(designSize, runtimeSize, 538, 368, 217, 20, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1051), new Integer(anchoringHelper49.getX()), new Integer(anchoringHelper49.getY()), new Integer(anchoringHelper49.getWidth()), new Integer(anchoringHelper49.getHeight()), new Integer(startTabIndex.intValue() + 30), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper50 = new RuntimeAnchoring(designSize, runtimeSize, 538, 392, 217, 20, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1052), new Integer(anchoringHelper50.getX()), new Integer(anchoringHelper50.getY()), new Integer(anchoringHelper50.getWidth()), new Integer(anchoringHelper50.getHeight()), new Integer(startTabIndex.intValue() + 31), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper51 = new RuntimeAnchoring(designSize, runtimeSize, 79, 256, 248, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		ComboBox m_cmbFolderTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1053), new Integer(anchoringHelper51.getX()), new Integer(anchoringHelper51.getY()), new Integer(anchoringHelper51.getWidth()), new Integer(anchoringHelper51.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbFolderTemp);
		cmbFolderComboBox cmbFolder = (cmbFolderComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbFolderComboBox.class, m_cmbFolderTemp);
		super.addComboBox(cmbFolder);
		RuntimeAnchoring anchoringHelper52 = new RuntimeAnchoring(designSize, runtimeSize, 538, 344, 217, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		ComboBox m_cmbTypeReqTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1054), new Integer(anchoringHelper52.getX()), new Integer(anchoringHelper52.getY()), new Integer(anchoringHelper52.getWidth()), new Integer(anchoringHelper52.getHeight()), new Integer(startTabIndex.intValue() + 29), ControlState.DISABLED, ControlState.DISABLED,ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbTypeReqTemp);
		cmbTypeReqComboBox cmbTypeReq = (cmbTypeReqComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbTypeReqComboBox.class, m_cmbTypeReqTemp);
		super.addComboBox(cmbTypeReq);
		RuntimeAnchoring anchoringHelper53 = new RuntimeAnchoring(designSize, runtimeSize, 538, 464, 217, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		ComboBox m_cmbReasonReqTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1055), new Integer(anchoringHelper53.getX()), new Integer(anchoringHelper53.getY()), new Integer(anchoringHelper53.getWidth()), new Integer(anchoringHelper53.getHeight()), new Integer(startTabIndex.intValue() + 35), ControlState.DISABLED, ControlState.DISABLED,ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbReasonReqTemp);
		cmbReasonReqComboBox cmbReasonReq = (cmbReasonReqComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbReasonReqComboBox.class, m_cmbReasonReqTemp);
		super.addComboBox(cmbReasonReq);
		RuntimeAnchoring anchoringHelper54 = new RuntimeAnchoring(designSize, runtimeSize, 79, 232, 248, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		ComboBox m_cmbVolTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1056), new Integer(anchoringHelper54.getX()), new Integer(anchoringHelper54.getY()), new Integer(anchoringHelper54.getWidth()), new Integer(anchoringHelper54.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.DISABLED, ControlState.DISABLED,ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbVolTypeTemp);
		cmbVolTypeComboBox cmbVolType = (cmbVolTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbVolTypeComboBox.class, m_cmbVolTypeTemp);
		super.addComboBox(cmbVolType);
		RuntimeAnchoring anchoringHelper55 = new RuntimeAnchoring(designSize, runtimeSize, 79, 304, 248, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		ComboBox m_cmbVolStatusTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1057), new Integer(anchoringHelper55.getX()), new Integer(anchoringHelper55.getY()), new Integer(anchoringHelper55.getWidth()), new Integer(anchoringHelper55.getHeight()), new Integer(startTabIndex.intValue() + 7), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.TRUE, new Integer(-1)});
		addControl(m_cmbVolStatusTemp);
		cmbVolStatusComboBox cmbVolStatus = (cmbVolStatusComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbVolStatusComboBox.class, m_cmbVolStatusTemp);
		super.addComboBox(cmbVolStatus);

		// Query ComboBox Controls
		RuntimeAnchoring anchoringHelper56 = new RuntimeAnchoring(designSize, runtimeSize, 538, 416, 217, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		ComboBox m_qmbReqLocTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1058), new Integer(anchoringHelper56.getX()), new Integer(anchoringHelper56.getY()), new Integer(anchoringHelper56.getWidth()), new Integer(anchoringHelper56.getHeight()), new Integer(startTabIndex.intValue() + 32), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.TRUE, new Integer(1), null, Boolean.FALSE, new Integer(-1), Boolean.FALSE});
		addControl(m_qmbReqLocTemp);
		qmbReqLocComboBox qmbReqLoc = (qmbReqLocComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(qmbReqLocComboBox.class, m_qmbReqLocTemp);
		super.addComboBox(qmbReqLoc);
		RuntimeAnchoring anchoringHelper57 = new RuntimeAnchoring(designSize, runtimeSize, 79, 280, 248, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		ComboBox m_qmbVolCurrentLocationTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1059), new Integer(anchoringHelper57.getX()), new Integer(anchoringHelper57.getY()), new Integer(anchoringHelper57.getWidth()), new Integer(anchoringHelper57.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.TRUE, new Integer(1), null, Boolean.TRUE, new Integer(-1), Boolean.FALSE});
		addControl(m_qmbVolCurrentLocationTemp);
		qmbVolCurrentLocationComboBox qmbVolCurrentLocation = (qmbVolCurrentLocationComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(qmbVolCurrentLocationComboBox.class, m_qmbVolCurrentLocationTemp);
		super.addComboBox(qmbVolCurrentLocation);

		// CheckBox Controls
		RuntimeAnchoring anchoringHelper58 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 88, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1060), new Integer(anchoringHelper58.getX()), new Integer(anchoringHelper58.getY()), new Integer(anchoringHelper58.getWidth()), new Integer(anchoringHelper58.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Current Only", Boolean.TRUE, null}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public ims.core.forms.mosquery.IComponent ccRequestedBy()
	{
		return (ims.core.forms.mosquery.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
	}
	public void setccRequestedByValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
	}
	public void setccRequestedByVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(0)).setVisible(value);
	}
	public boolean isccRequestedByVisible()
	{
		return ((ims.framework.Control)super.getControl(0)).isVisible();
	}
	public void setccRequestedByEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(0)).setEnabled(value);
	}
	public boolean isccRequestedByEnabled()
	{
		return ((ims.framework.Control)super.getControl(0)).isEnabled();
	}
	public ims.core.forms.casenotefoldercc.IComponent ccCaseNoteFolder()
	{
		return (ims.core.forms.casenotefoldercc.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(1)).getLogic();
	}
	public void setccCaseNoteFolderValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(1)).setValueChangedEvent(delegate);
	}
	public void setccCaseNoteFolderVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(1)).setVisible(value);
	}
	public boolean isccCaseNoteFolderVisible()
	{
		return ((ims.framework.Control)super.getControl(1)).isVisible();
	}
	public void setccCaseNoteFolderEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(1)).setEnabled(value);
	}
	public boolean isccCaseNoteFolderEnabled()
	{
		return ((ims.framework.Control)super.getControl(1)).isEnabled();
	}
	public ims.core.forms.casenoteopentrequestsgridcc.IComponent ccCaseNoteRequest()
	{
		return (ims.core.forms.casenoteopentrequestsgridcc.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(2)).getLogic();
	}
	public void setccCaseNoteRequestValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
	{
		((CustomComponent)super.getControl(2)).setValueChangedEvent(delegate);
	}
	public void setccCaseNoteRequestVisible(boolean value)
	{
		((ims.framework.Control)super.getControl(2)).setVisible(value);
	}
	public boolean isccCaseNoteRequestVisible()
	{
		return ((ims.framework.Control)super.getControl(2)).isVisible();
	}
	public void setccCaseNoteRequestEnabled(boolean value)
	{
		((ims.framework.Control)super.getControl(2)).setEnabled(value);
	}
	public boolean isccCaseNoteRequestEnabled()
	{
		return ((ims.framework.Control)super.getControl(2)).isEnabled();
	}
	public Button btnViewAllRequests()
	{
		return (Button)super.getControl(19);
	}
	public Button btnAddComment()
	{
		return (Button)super.getControl(20);
	}
	public Button btnCreateCaseNoteFolder()
	{
		return (Button)super.getControl(21);
	}
	public Button btnCancelRequest()
	{
		return (Button)super.getControl(22);
	}
	public Button btnRequiresMerging()
	{
		return (Button)super.getControl(23);
	}
	public Button btnMarkAsMissing()
	{
		return (Button)super.getControl(24);
	}
	public Button btnMarkAsFound()
	{
		return (Button)super.getControl(25);
	}
	public Button btnVolumeNewTemporary()
	{
		return (Button)super.getControl(26);
	}
	public Button btnScanVolume()
	{
		return (Button)super.getControl(27);
	}
	public Button btn1()
	{
		return (Button)super.getControl(28);
	}
	public Button btnViewComments()
	{
		return (Button)super.getControl(29);
	}
	public Button btnCompleteRequest()
	{
		return (Button)super.getControl(30);
	}
	public Button btn6()
	{
		return (Button)super.getControl(31);
	}
	public Button btnTransfer()
	{
		return (Button)super.getControl(32);
	}
	public Button btnEditRequest()
	{
		return (Button)super.getControl(33);
	}
	public Button btnNewRequest()
	{
		return (Button)super.getControl(34);
	}
	public Button btnCancelReq()
	{
		return (Button)super.getControl(35);
	}
	public Button btnSaveReq()
	{
		return (Button)super.getControl(36);
	}
	public Button btnVolumeDestroy()
	{
		return (Button)super.getControl(37);
	}
	public Button btnVolumeArchive()
	{
		return (Button)super.getControl(38);
	}
	public Button btnVolumeMerge()
	{
		return (Button)super.getControl(39);
	}
	public Button btnViewTransfers()
	{
		return (Button)super.getControl(40);
	}
	public Button btnVolumeCancel()
	{
		return (Button)super.getControl(41);
	}
	public Button btnVolumeSave()
	{
		return (Button)super.getControl(42);
	}
	public Button btnVolumeEdit()
	{
		return (Button)super.getControl(43);
	}
	public Button btnVolumeNewPermanent()
	{
		return (Button)super.getControl(44);
	}
	public TextBox txtTRackingId()
	{
		return (TextBox)super.getControl(45);
	}
	public TextBox txtCommentsReq()
	{
		return (TextBox)super.getControl(46);
	}
	public TextBox txtVolComments()
	{
		return (TextBox)super.getControl(47);
	}
	public DateTimeControl dtimRecordingDate()
	{
		return (DateTimeControl)super.getControl(48);
	}
	public DateTimeControl dtimReq()
	{
		return (DateTimeControl)super.getControl(49);
	}
	public cmbFolderComboBox cmbFolder()
	{
		return (cmbFolderComboBox)super.getComboBox(0);
	}
	public cmbTypeReqComboBox cmbTypeReq()
	{
		return (cmbTypeReqComboBox)super.getComboBox(1);
	}
	public cmbReasonReqComboBox cmbReasonReq()
	{
		return (cmbReasonReqComboBox)super.getComboBox(2);
	}
	public cmbVolTypeComboBox cmbVolType()
	{
		return (cmbVolTypeComboBox)super.getComboBox(3);
	}
	public cmbVolStatusComboBox cmbVolStatus()
	{
		return (cmbVolStatusComboBox)super.getComboBox(4);
	}
	public qmbReqLocComboBox qmbReqLoc()
	{
		return (qmbReqLocComboBox)super.getComboBox(5);
	}
	public qmbVolCurrentLocationComboBox qmbVolCurrentLocation()
	{
		return (qmbVolCurrentLocationComboBox)super.getComboBox(6);
	}
	public CheckBox chkCurrentOnly()
	{
		return (CheckBox)super.getControl(57);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				CaseNoteArchiveOrDestroy = new LocalFormName(102458);
				CaseNoteMerge = new LocalFormName(102457);
				CaseNoteRequest = new LocalFormName(102453);
				CaseNoteTransfer = new LocalFormName(102454);
				CaseNoteTransferHistory = new LocalFormName(102455);
				CaseNoteComments = new LocalFormName(102459);
				PrintReport = new LocalFormName(102180);
				PatientAllCaseNoteRequests = new LocalFormName(102479);
			}
			public final FormName CaseNoteArchiveOrDestroy;
			public final FormName CaseNoteMerge;
			public final FormName CaseNoteRequest;
			public final FormName CaseNoteTransfer;
			public final FormName CaseNoteTransferHistory;
			public final FormName CaseNoteComments;
			public final FormName PrintReport;
			public final FormName PatientAllCaseNoteRequests;
		}

		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Admin = new AdminImages();
			Core = new CoreImages();
			Emergency = new EmergencyImages();
		}
		public final class AdminImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private AdminImages()
			{
				CloseEnabled24 = new ImageHelper(103374, "Images/Admin/close_a_enabled_24.png", new Integer(24), new Integer(24));
				ValidateEnabled24 = new ImageHelper(103368, "Images/Admin/validate_enabled_24.png", new Integer(24), new Integer(24));
				SaveEnabled24 = new ImageHelper(103370, "Images/Admin/diskette_enabled_24.png", new Integer(24), new Integer(24));
			}
			public final ims.framework.utils.Image CloseEnabled24;
			public final ims.framework.utils.Image ValidateEnabled24;
			public final ims.framework.utils.Image SaveEnabled24;
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				scanner24x24 = new ImageHelper(102593, "Images/Core/scanner24x24.png", new Integer(24), new Integer(24));
				Archive_24 = new ImageHelper(102590, "Images/Core/archive-7_24.png", new Integer(24), new Integer(24));
				DestroyCaseNote_24x24 = new ImageHelper(102591, "Images/Core/Cabinet-icon_redx.png", new Integer(24), new Integer(24));
				NewRecordEnabled24 = new ImageHelper(102523, "Images/Core/field_add_enabled_24.png", new Integer(24), new Integer(24));
				EditRecordEnabled24 = new ImageHelper(102529, "Images/Core/field_write_enabled_24.png", new Integer(24), new Integer(24));
				OK24 = new ImageHelper(102574, "Images/Core/ok24.png", new Integer(24), new Integer(24));
				transfer_up_down22x22 = new ImageHelper(102603, "Images/Core/transfer_up_down22.png", new Integer(22), new Integer(22));
				data_transfer22x22 = new ImageHelper(102599, "Images/Core/data_transfer22.png", new Integer(22), new Integer(22));
				Comments24x24 = new ImageHelper(102597, "Images/Core/Comments24.png", new Integer(24), new Integer(24));
				New_Folder24 = new ImageHelper(102606, "Images/Core/folder_add_24.png", new Integer(24), new Integer(24));
				New_Request24 = new ImageHelper(102607, "Images/Core/insert_row_next_24.png", new Integer(24), new Integer(24));
				Edit_Folder24 = new ImageHelper(102608, "Images/Core/folder_write_24.png", new Integer(24), new Integer(24));
				Folder_Found24 = new ImageHelper(102611, "Images/Core/folder_ok_24.png", new Integer(24), new Integer(24));
				Folder_Missing24 = new ImageHelper(102610, "Images/Core/folder_remove_24.png", new Integer(24), new Integer(24));
				New_Temporary24 = new ImageHelper(102609, "Images/Core/folder_clock_24.png", new Integer(24), new Integer(24));
				Destroy24 = new ImageHelper(102623, "Images/Core/folder_close_24.png", new Integer(24), new Integer(24));
				Merge24 = new ImageHelper(102620, "Images/Core/copy_24.png", new Integer(24), new Integer(24));
				Requires_Merging24 = new ImageHelper(102616, "Images/Core/folder_refresh_24.png", new Integer(24), new Integer(24));
				Cancel_Request24 = new ImageHelper(102630, "Images/Core/insert_row_remove_24.png", new Integer(24), new Integer(24));
				Complete_Request24 = new ImageHelper(102632, "Images/Core/insert_row_ok_24.png", new Integer(24), new Integer(24));
				Edit_Request24 = new ImageHelper(102628, "Images/Core/insert_row_write_24.png", new Integer(24), new Integer(24));
				Comment24x24 = new ImageHelper(102596, "Images/Core/Comment24.png", new Integer(24), new Integer(24));
				Requests24 = new ImageHelper(102645, "Images/Core/filed_24.png", new Integer(24), new Integer(24));
			}
			public final ims.framework.utils.Image scanner24x24;
			public final ims.framework.utils.Image Archive_24;
			public final ims.framework.utils.Image DestroyCaseNote_24x24;
			public final ims.framework.utils.Image NewRecordEnabled24;
			public final ims.framework.utils.Image EditRecordEnabled24;
			public final ims.framework.utils.Image OK24;
			public final ims.framework.utils.Image transfer_up_down22x22;
			public final ims.framework.utils.Image data_transfer22x22;
			public final ims.framework.utils.Image Comments24x24;
			public final ims.framework.utils.Image New_Folder24;
			public final ims.framework.utils.Image New_Request24;
			public final ims.framework.utils.Image Edit_Folder24;
			public final ims.framework.utils.Image Folder_Found24;
			public final ims.framework.utils.Image Folder_Missing24;
			public final ims.framework.utils.Image New_Temporary24;
			public final ims.framework.utils.Image Destroy24;
			public final ims.framework.utils.Image Merge24;
			public final ims.framework.utils.Image Requires_Merging24;
			public final ims.framework.utils.Image Cancel_Request24;
			public final ims.framework.utils.Image Complete_Request24;
			public final ims.framework.utils.Image Edit_Request24;
			public final ims.framework.utils.Image Comment24x24;
			public final ims.framework.utils.Image Requests24;
		}
		public final class EmergencyImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private EmergencyImages()
			{
				CORECTNOTE16 = new ImageHelper(129146, "Images/Emergency/CorrectNote.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image CORECTNOTE16;
		}
		public final AdminImages Admin;
		public final CoreImages Core;
		public final EmergencyImages Emergency;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_SelectedCaseNoteFolder = new ims.framework.ContextVariable("SelectedCaseNoteFolder", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier + "");
			cxl_CurrentMOS = new ims.framework.ContextVariable("CurrentMOS", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentMOS_" + componentIdentifier + "");
			cxl_CaseNoteFolderMode = new ims.framework.ContextVariable("CaseNoteFolderMode", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CaseNoteFolderMode_" + componentIdentifier + "");
			cxl_SelectedCaseNoteRequest = new ims.framework.ContextVariable("SelectedCaseNoteRequest", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier + "");
			cxl_ExistingRequests = new ims.framework.ContextVariable("ExistingRequests", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__ExistingRequests_" + componentIdentifier + "");
			cxl_DeniedActions = new ims.framework.ContextVariable("DeniedActions", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__DeniedActions_" + componentIdentifier + "");
			cxl_IsAddCommentMode = new ims.framework.ContextVariable("IsAddCommentMode", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__IsAddCommentMode_" + componentIdentifier + "");
			cxl_CurrentLocation = new ims.framework.ContextVariable("CurrentLocation", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentLocation_" + componentIdentifier + "");
			cxl_Config = new ims.framework.ContextVariable("Config", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__Config_" + componentIdentifier + "");
			cxl_IsACaseNoteFolderCreated = new ims.framework.ContextVariable("IsACaseNoteFolderCreated", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__IsACaseNoteFolderCreated_" + componentIdentifier + "");
			cxl_MissingMessageBoxId = new ims.framework.ContextVariable("MissingMessageBoxId", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__MissingMessageBoxId_" + componentIdentifier + "");
			cxl_ChangeFromTemporaryToPermanentMessageBoxId = new ims.framework.ContextVariable("ChangeFromTemporaryToPermanentMessageBoxId", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__ChangeFromTemporaryToPermanentMessageBoxId_" + componentIdentifier + "");
			cxl_CancelRequestMessageBoxId = new ims.framework.ContextVariable("CancelRequestMessageBoxId", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CancelRequestMessageBoxId_" + componentIdentifier + "");
			cxl_CaseNoteRequestMode = new ims.framework.ContextVariable("CaseNoteRequestMode", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CaseNoteRequestMode_" + componentIdentifier + "");
			cxl_SelectedAction = new ims.framework.ContextVariable("SelectedAction", prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedAction_" + componentIdentifier + "");
		}
		
		public boolean getSelectedCaseNoteFolderIsNotNull()
		{
			return !cxl_SelectedCaseNoteFolder.getValueIsNull(context);
		}
		public ims.core.vo.PatientCaseNoteVo getSelectedCaseNoteFolder()
		{
			return (ims.core.vo.PatientCaseNoteVo)cxl_SelectedCaseNoteFolder.getValue(context);
		}
		public void setSelectedCaseNoteFolder(ims.core.vo.PatientCaseNoteVo value)
		{
			cxl_SelectedCaseNoteFolder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedCaseNoteFolder = null;
		public boolean getCurrentMOSIsNotNull()
		{
			return !cxl_CurrentMOS.getValueIsNull(context);
		}
		public ims.core.vo.MemberOfStaffLiteVo getCurrentMOS()
		{
			return (ims.core.vo.MemberOfStaffLiteVo)cxl_CurrentMOS.getValue(context);
		}
		public void setCurrentMOS(ims.core.vo.MemberOfStaffLiteVo value)
		{
			cxl_CurrentMOS.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentMOS = null;
		public boolean getCaseNoteFolderModeIsNotNull()
		{
			return !cxl_CaseNoteFolderMode.getValueIsNull(context);
		}
		public ims.framework.enumerations.FormMode getCaseNoteFolderMode()
		{
			return (ims.framework.enumerations.FormMode)cxl_CaseNoteFolderMode.getValue(context);
		}
		public void setCaseNoteFolderMode(ims.framework.enumerations.FormMode value)
		{
			cxl_CaseNoteFolderMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CaseNoteFolderMode = null;
		public boolean getSelectedCaseNoteRequestIsNotNull()
		{
			return !cxl_SelectedCaseNoteRequest.getValueIsNull(context);
		}
		public ims.core.vo.PatientCaseNoteRequestVo getSelectedCaseNoteRequest()
		{
			return (ims.core.vo.PatientCaseNoteRequestVo)cxl_SelectedCaseNoteRequest.getValue(context);
		}
		public void setSelectedCaseNoteRequest(ims.core.vo.PatientCaseNoteRequestVo value)
		{
			cxl_SelectedCaseNoteRequest.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedCaseNoteRequest = null;
		public boolean getExistingRequestsIsNotNull()
		{
			return !cxl_ExistingRequests.getValueIsNull(context);
		}
		public ims.core.vo.PatientCaseNoteRequestForCheckingVoCollection getExistingRequests()
		{
			return (ims.core.vo.PatientCaseNoteRequestForCheckingVoCollection)cxl_ExistingRequests.getValue(context);
		}
		public void setExistingRequests(ims.core.vo.PatientCaseNoteRequestForCheckingVoCollection value)
		{
			cxl_ExistingRequests.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ExistingRequests = null;
		public boolean getDeniedActionsIsNotNull()
		{
			return !cxl_DeniedActions.getValueIsNull(context);
		}
		public java.util.List<ims.core.vo.enums.PatientCaseNoteFolderActions> getDeniedActions()
		{
			return (java.util.List<ims.core.vo.enums.PatientCaseNoteFolderActions>)cxl_DeniedActions.getValue(context);
		}
		public void setDeniedActions(java.util.List<ims.core.vo.enums.PatientCaseNoteFolderActions> value)
		{
			cxl_DeniedActions.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DeniedActions = null;
		public boolean getIsAddCommentModeIsNotNull()
		{
			return !cxl_IsAddCommentMode.getValueIsNull(context);
		}
		public Boolean getIsAddCommentMode()
		{
			return (Boolean)cxl_IsAddCommentMode.getValue(context);
		}
		public void setIsAddCommentMode(Boolean value)
		{
			cxl_IsAddCommentMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsAddCommentMode = null;
		public boolean getCurrentLocationIsNotNull()
		{
			return !cxl_CurrentLocation.getValueIsNull(context);
		}
		public ims.core.vo.LocationLiteVo getCurrentLocation()
		{
			return (ims.core.vo.LocationLiteVo)cxl_CurrentLocation.getValue(context);
		}
		public void setCurrentLocation(ims.core.vo.LocationLiteVo value)
		{
			cxl_CurrentLocation.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentLocation = null;
		public boolean getConfigIsNotNull()
		{
			return !cxl_Config.getValueIsNull(context);
		}
		public ims.admin.vo.CaseNoteTrackingConfigVo getConfig()
		{
			return (ims.admin.vo.CaseNoteTrackingConfigVo)cxl_Config.getValue(context);
		}
		public void setConfig(ims.admin.vo.CaseNoteTrackingConfigVo value)
		{
			cxl_Config.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Config = null;
		public boolean getIsACaseNoteFolderCreatedIsNotNull()
		{
			return !cxl_IsACaseNoteFolderCreated.getValueIsNull(context);
		}
		public Boolean getIsACaseNoteFolderCreated()
		{
			return (Boolean)cxl_IsACaseNoteFolderCreated.getValue(context);
		}
		public void setIsACaseNoteFolderCreated(Boolean value)
		{
			cxl_IsACaseNoteFolderCreated.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsACaseNoteFolderCreated = null;
		public boolean getMissingMessageBoxIdIsNotNull()
		{
			return !cxl_MissingMessageBoxId.getValueIsNull(context);
		}
		public Integer getMissingMessageBoxId()
		{
			return (Integer)cxl_MissingMessageBoxId.getValue(context);
		}
		public void setMissingMessageBoxId(Integer value)
		{
			cxl_MissingMessageBoxId.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MissingMessageBoxId = null;
		public boolean getChangeFromTemporaryToPermanentMessageBoxIdIsNotNull()
		{
			return !cxl_ChangeFromTemporaryToPermanentMessageBoxId.getValueIsNull(context);
		}
		public Integer getChangeFromTemporaryToPermanentMessageBoxId()
		{
			return (Integer)cxl_ChangeFromTemporaryToPermanentMessageBoxId.getValue(context);
		}
		public void setChangeFromTemporaryToPermanentMessageBoxId(Integer value)
		{
			cxl_ChangeFromTemporaryToPermanentMessageBoxId.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ChangeFromTemporaryToPermanentMessageBoxId = null;
		public boolean getCancelRequestMessageBoxIdIsNotNull()
		{
			return !cxl_CancelRequestMessageBoxId.getValueIsNull(context);
		}
		public Integer getCancelRequestMessageBoxId()
		{
			return (Integer)cxl_CancelRequestMessageBoxId.getValue(context);
		}
		public void setCancelRequestMessageBoxId(Integer value)
		{
			cxl_CancelRequestMessageBoxId.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CancelRequestMessageBoxId = null;
		public boolean getCaseNoteRequestModeIsNotNull()
		{
			return !cxl_CaseNoteRequestMode.getValueIsNull(context);
		}
		public ims.framework.enumerations.FormMode getCaseNoteRequestMode()
		{
			return (ims.framework.enumerations.FormMode)cxl_CaseNoteRequestMode.getValue(context);
		}
		public void setCaseNoteRequestMode(ims.framework.enumerations.FormMode value)
		{
			cxl_CaseNoteRequestMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CaseNoteRequestMode = null;
		public boolean getSelectedActionIsNotNull()
		{
			return !cxl_SelectedAction.getValueIsNull(context);
		}
		public ims.core.vo.enums.PatientCaseNoteFolderActions getSelectedAction()
		{
			return (ims.core.vo.enums.PatientCaseNoteFolderActions)cxl_SelectedAction.getValue(context);
		}
		public void setSelectedAction(ims.core.vo.enums.PatientCaseNoteFolderActions value)
		{
			cxl_SelectedAction.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedAction = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[192];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Core.PatientCaseNoteFolderRef", "BO-1003100130-ID", "ID_PatientCaseNote");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Core.PatientCaseNoteFolderRef", "BO-1003100130-TYPE", "Type");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Core.PatientCaseNoteFolderRef", "BO-1003100130-FOLDER", "Folder");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Core.PatientCaseNoteFolderRef", "BO-1003100130-TRACKINGID", "TrackingID");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Core.CaseNoteRequestRef", "BO-1003100131-ID", "ID_PatientCaseNoteRequest");
			fields[149] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-ID", "ID_PatientCaseNote");
			fields[150] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-TYPE", "Type");
			fields[151] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-FOLDER", "Folder");
			fields[152] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-TRACKINGID", "TrackingID");
			fields[153] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-PATIENT", "Patient");
			fields[154] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-STATUS", "Status");
			fields[155] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-CREATEDBY", "CreatedBy");
			fields[156] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-CREATIONDATE", "CreationDate");
			fields[157] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-ARCHIVEDDATE", "ArchivedDate");
			fields[158] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-ARCHIVEDCOMMENT", "ArchivedComment");
			fields[159] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-DESTROYEDDATE", "DestroyedDate");
			fields[160] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-DESTROYEDCOMMENT", "DestroyedComment");
			fields[161] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-MERGEDDATE", "MergedDate");
			fields[162] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-MERGEDFROM", "MergedFrom");
			fields[163] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-SCANNEDDATE", "ScannedDate");
			fields[164] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-SCANNEDCOMMENT", "ScannedComment");
			fields[165] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteFolder_" + componentIdentifier, "BO-1003100130-LASTTRANSFERDATE", "LastTransferDate");
			fields[166] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentMOS_" + componentIdentifier, "BO-1006100006-ID", "ID_MemberOfStaff");
			fields[167] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentMOS_" + componentIdentifier, "BO-1006100006-INITIALS", "Initials");
			fields[168] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentMOS_" + componentIdentifier, "BO-1006100006-SIGNATUREBLOCK", "SignatureBlock");
			fields[169] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-ID", "ID_PatientCaseNoteRequest");
			fields[170] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-CREATIONDATE", "CreationDate");
			fields[171] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-REQUESTSTATUS", "RequestStatus");
			fields[172] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-REQUIREDBYDATE", "RequiredByDate");
			fields[173] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-REASONFORREQUEST", "ReasonForRequest");
			fields[174] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-CANCELLEDDATE", "CancelledDate");
			fields[175] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-CANCELLATIONREASON", "CancellationReason");
			fields[176] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-CANCELLEDBY", "CancelledBy");
			fields[177] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-TRANSFERTHATCOMPLETEDREQUEST", "TransferThatCompletedRequest");
			fields[178] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-APPOINTMENT", "Appointment");
			fields[179] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__SelectedCaseNoteRequest_" + componentIdentifier, "BO-1003100131-TCIDETAIL", "TCIDetail");
			fields[180] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentLocation_" + componentIdentifier, "BO-1007100007-ID", "ID_Location");
			fields[181] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentLocation_" + componentIdentifier, "BO-1007100007-NAME", "Name");
			fields[182] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentLocation_" + componentIdentifier, "BO-1007100007-ISACTIVE", "IsActive");
			fields[183] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentLocation_" + componentIdentifier, "BO-1007100007-ISVIRTUAL", "IsVirtual");
			fields[184] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentLocation_" + componentIdentifier, "BO-1007100007-TYPE", "Type");
			fields[185] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentLocation_" + componentIdentifier, "BO-1007100007-DISPLAYINEDTRACKING", "DisplayInEDTracking");
			fields[186] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__CurrentLocation_" + componentIdentifier, "BO-1007100007-CASENOTEFOLDERLOCATION", "CaseNoteFolderLocation");
			fields[187] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__Config_" + componentIdentifier, "BO-1028100083-ID", "ID_CaseNoteTrackingConfig");
			fields[188] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__Config_" + componentIdentifier, "BO-1028100083-REQUESTSOLDERTHAN", "RequestsOlderThan");
			fields[189] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__Config_" + componentIdentifier, "BO-1028100083-CASENOTEREQUESTOFFSET", "CaseNoteRequestOffset");
			fields[190] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__Config_" + componentIdentifier, "BO-1028100083-TRACKINGIDNOOFDIGITS", "TrackingIdNoOfDigits");
			fields[191] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PatientCaseNotes.__internal_x_context__Config_" + componentIdentifier, "BO-1028100083-DEFAULTFOLDERFORAUTOMATICCASENOTE", "DefaultFolderForAutomaticCaseNote");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
