//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.wardviewpatientlist;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.CareContextShortVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.CareContextShortVo' of the global context variable 'Core.CurrentCareContext' is not supported.");
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
		if(!context.isValidContextType(ims.RefMan.vo.CatsReferralRefVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.RefMan.vo.CatsReferralRefVo' of the global context variable 'RefMan.CatsReferral' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(800, 568);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.Core.contextMenuWardView = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.Core.contextMenuWardViewTRANSFERItem = factory.createMenuItem(startControlID.intValue() + 1, "Transfer", true, false, new Integer(102323), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070001)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewTRANSFERItem);
		contextMenus.Core.contextMenuWardViewACCEPT_TRANSFERItem = factory.createMenuItem(startControlID.intValue() + 2, "Accept Transfer to Ward", true, false, new Integer(102323), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070003)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewACCEPT_TRANSFERItem);
		contextMenus.Core.contextMenuWardViewCANCEL_TRANSFERItem = factory.createMenuItem(startControlID.intValue() + 3, "Cancel Transfer", true, false, new Integer(102148), true, false);
		contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewCANCEL_TRANSFERItem);
		contextMenus.Core.contextMenuWardViewDISCHARGEItem = factory.createMenuItem(startControlID.intValue() + 4, "Discharge", true, false, new Integer(102324), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070002)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewDISCHARGEItem);
		contextMenus.Core.contextMenuWardViewASSIGNWARDItem = factory.createMenuItem(startControlID.intValue() + 5, "Assign Ward", true, false, new Integer(103108), true, false);
		contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewASSIGNWARDItem);
		contextMenus.Core.contextMenuWardViewVIEW_DTAItem = factory.createMenuItem(startControlID.intValue() + 6, "View DTA Details", true, false, new Integer(102179), true, true);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070004)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewVIEW_DTAItem);
		contextMenus.Core.contextMenuWardViewVIEW_ELECTIVE_LISTItem = factory.createMenuItem(startControlID.intValue() + 7, "View Patient Elective List", true, false, new Integer(102223), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070005)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewVIEW_ELECTIVE_LISTItem);
		contextMenus.Core.contextMenuWardViewBED_READYItem = factory.createMenuItem(startControlID.intValue() + 8, "Bed Ready Details", true, false, new Integer(129141), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070009)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewBED_READYItem);
		contextMenus.Core.contextMenuWardViewRETURN_FROM_HOMELEAVEItem = factory.createMenuItem(startControlID.intValue() + 9, "Return from Home Leave", true, false, new Integer(102646), true, true);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070006)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewRETURN_FROM_HOMELEAVEItem);
		contextMenus.Core.contextMenuWardViewRETURN_FROM_LEAVE_TO_BEDItem = factory.createMenuItem(startControlID.intValue() + 10, "Return from Home Leave - Assign Bed", true, false, new Integer(102646), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070013)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewRETURN_FROM_LEAVE_TO_BEDItem);
		contextMenus.Core.contextMenuWardViewRETURN_FROM_LEAVE_WARDItem = factory.createMenuItem(startControlID.intValue() + 11, "Return from Home Leave - Ward Waiting Area", true, false, new Integer(102646), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070014)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewRETURN_FROM_LEAVE_WARDItem);
		contextMenus.Core.contextMenuWardViewCANCEL_HOME_LEAVEItem = factory.createMenuItem(startControlID.intValue() + 12, "Cancel Home Leave", true, false, new Integer(102652), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070007)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewCANCEL_HOME_LEAVEItem);
		contextMenus.Core.contextMenuWardViewCANCEL_HOMELEAVE_RETURNItem = factory.createMenuItem(startControlID.intValue() + 13, "Cancel Return from Home Leave", true, false, new Integer(102652), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070008)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewCANCEL_HOMELEAVE_RETURNItem);
		contextMenus.Core.contextMenuWardViewEDITHOMELEAVEItem = factory.createMenuItem(startControlID.intValue() + 14, "Edit Home Leave", true, false, new Integer(102657), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070010)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewEDITHOMELEAVEItem);
		contextMenus.Core.contextMenuWardViewVACATEBEDItem = factory.createMenuItem(startControlID.intValue() + 15, "Vacate Bed", true, false, new Integer(116109), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070011)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewVACATEBEDItem);
		contextMenus.Core.contextMenuWardViewUNDO_READY_TO_LEAVEItem = factory.createMenuItem(startControlID.intValue() + 16, "Undo Ready to Leave", true, false, new Integer(102187), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3070012)))
			contextMenus.Core.contextMenuWardView.add(contextMenus.Core.contextMenuWardViewUNDO_READY_TO_LEAVEItem);
		form.registerMenu(contextMenus.Core.contextMenuWardView);


		// Button Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 8, 536, 264, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Return from Home Leave - Assign Bed/Chair", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 8, 536, 150, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Accept Transfer to Ward", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 556, 536, 150, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "View Patient Elective List", Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 8, 536, 150, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Admit to Ward", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 712, 536, 80, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Close", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// Dynamic Grid Controls
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 784, 520, ims.framework.enumerations.ControlAnchoring.ALL);
		super.addControl(factory.getControl(DynamicGrid.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, contextMenus.Core.contextMenuWardView, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public Button btnReturnFromHomeLeave()
	{
		return (Button)super.getControl(0);
	}
	public Button btnAcceptTransfer()
	{
		return (Button)super.getControl(1);
	}
	public Button btnViewEle()
	{
		return (Button)super.getControl(2);
	}
	public Button btnAdmitToWard()
	{
		return (Button)super.getControl(3);
	}
	public Button btnClose()
	{
		return (Button)super.getControl(4);
	}
	public DynamicGrid dyngrdPatients()
	{
		return (DynamicGrid)super.getControl(5);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
			Emergency = new EmergencyForms();
			RefMan = new RefManForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				AdmitToWard = new LocalFormName(102483);
				BedInfoDialog = new LocalFormName(102263);
				TransferCancellation = new LocalFormName(102475);
				AcceptTransferToWardDlg = new LocalFormName(102485);
				BedReadyDetailsDialog = new LocalFormName(102502);
				AssignBedToHomeLeaveInpatient = new LocalFormName(102514);
			}
			public final FormName AdmitToWard;
			public final FormName BedInfoDialog;
			public final FormName TransferCancellation;
			public final FormName AcceptTransferToWardDlg;
			public final FormName BedReadyDetailsDialog;
			public final FormName AssignBedToHomeLeaveInpatient;
		}
		public final class EmergencyForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private EmergencyForms()
			{
				EDDecisionToAdmitDialog = new LocalFormName(129193);
			}
			public final FormName EDDecisionToAdmitDialog;
		}
		public final class RefManForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private RefManForms()
			{
				NewElectiveListTCIErodDialog = new LocalFormName(134224);
				ElectiveListDetails = new LocalFormName(134283);
			}
			public final FormName NewElectiveListTCIErodDialog;
			public final FormName ElectiveListDetails;
		}

		public CoreForms Core;
		public EmergencyForms Emergency;
		public RefManForms RefMan;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
			Emergency = new EmergencyImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				Comment16 = new ImageHelper(102625, "Images/Core/Comment16.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Comment16;
		}
		public final class EmergencyImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private EmergencyImages()
			{
				Bed_Available = new ImageHelper(129141, "Images/Emergency/bed_available.png", new Integer(16), new Integer(16));
				Bed_Awaiting = new ImageHelper(129142, "Images/Emergency/bed_awaiting.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Bed_Available;
			public final ims.framework.utils.Image Bed_Awaiting;
		}
		public final CoreImages Core;
		public final EmergencyImages Emergency;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_SelectedVIEW = new ims.framework.ContextVariable("SelectedVIEW", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__SelectedVIEW_" + componentIdentifier + "");
			cxl_SortOrderCommentsImage = new ims.framework.ContextVariable("SortOrderCommentsImage", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__SortOrderCommentsImage_" + componentIdentifier + "");
			cxl_Config = new ims.framework.ContextVariable("Config", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__Config_" + componentIdentifier + "");
			cxl_SortOrderBedReadyTime = new ims.framework.ContextVariable("SortOrderBedReadyTime", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__SortOrderBedReadyTime_" + componentIdentifier + "");
			cxl_MessageBoxUndoReadyToLeave = new ims.framework.ContextVariable("MessageBoxUndoReadyToLeave", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__MessageBoxUndoReadyToLeave_" + componentIdentifier + "");
			cxl_SortOrderLOS = new ims.framework.ContextVariable("SortOrderLOS", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__SortOrderLOS_" + componentIdentifier + "");
			cxl_SortOrderDOB = new ims.framework.ContextVariable("SortOrderDOB", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__SortOrderDOB_" + componentIdentifier + "");
			cxl_SortOrderAge = new ims.framework.ContextVariable("SortOrderAge", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__SortOrderAge_" + componentIdentifier + "");
			cxl_MessageBoxReturnFromHomeLeaveToWard = new ims.framework.ContextVariable("MessageBoxReturnFromHomeLeaveToWard", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__MessageBoxReturnFromHomeLeaveToWard_" + componentIdentifier + "");
			cxl_SortOrderBedStatus = new ims.framework.ContextVariable("SortOrderBedStatus", prefix + "_lv_Core.WardViewPatientList.__internal_x_context__SortOrderBedStatus_" + componentIdentifier + "");
		}
		
		public boolean getSelectedVIEWIsNotNull()
		{
			return !cxl_SelectedVIEW.getValueIsNull(context);
		}
		public Object getSelectedVIEW()
		{
			return cxl_SelectedVIEW.getValue(context);
		}
		public void setSelectedVIEW(Object value)
		{
			cxl_SelectedVIEW.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SelectedVIEW = null;
		public boolean getSortOrderCommentsImageIsNotNull()
		{
			return !cxl_SortOrderCommentsImage.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderCommentsImage()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderCommentsImage.getValue(context);
		}
		public void setSortOrderCommentsImage(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderCommentsImage.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderCommentsImage = null;
		public boolean getConfigIsNotNull()
		{
			return !cxl_Config.getValueIsNull(context);
		}
		public ims.core.vo.WardConfigLiteVo getConfig()
		{
			return (ims.core.vo.WardConfigLiteVo)cxl_Config.getValue(context);
		}
		public void setConfig(ims.core.vo.WardConfigLiteVo value)
		{
			cxl_Config.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Config = null;
		public boolean getSortOrderBedReadyTimeIsNotNull()
		{
			return !cxl_SortOrderBedReadyTime.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderBedReadyTime()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderBedReadyTime.getValue(context);
		}
		public void setSortOrderBedReadyTime(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderBedReadyTime.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderBedReadyTime = null;
		public boolean getMessageBoxUndoReadyToLeaveIsNotNull()
		{
			return !cxl_MessageBoxUndoReadyToLeave.getValueIsNull(context);
		}
		public Integer getMessageBoxUndoReadyToLeave()
		{
			return (Integer)cxl_MessageBoxUndoReadyToLeave.getValue(context);
		}
		public void setMessageBoxUndoReadyToLeave(Integer value)
		{
			cxl_MessageBoxUndoReadyToLeave.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxUndoReadyToLeave = null;
		public boolean getSortOrderLOSIsNotNull()
		{
			return !cxl_SortOrderLOS.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderLOS()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderLOS.getValue(context);
		}
		public void setSortOrderLOS(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderLOS.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderLOS = null;
		public boolean getSortOrderDOBIsNotNull()
		{
			return !cxl_SortOrderDOB.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderDOB()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderDOB.getValue(context);
		}
		public void setSortOrderDOB(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderDOB.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderDOB = null;
		public boolean getSortOrderAgeIsNotNull()
		{
			return !cxl_SortOrderAge.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderAge()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderAge.getValue(context);
		}
		public void setSortOrderAge(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderAge.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderAge = null;
		public boolean getMessageBoxReturnFromHomeLeaveToWardIsNotNull()
		{
			return !cxl_MessageBoxReturnFromHomeLeaveToWard.getValueIsNull(context);
		}
		public Integer getMessageBoxReturnFromHomeLeaveToWard()
		{
			return (Integer)cxl_MessageBoxReturnFromHomeLeaveToWard.getValue(context);
		}
		public void setMessageBoxReturnFromHomeLeaveToWard(Integer value)
		{
			cxl_MessageBoxReturnFromHomeLeaveToWard.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxReturnFromHomeLeaveToWard = null;
		public boolean getSortOrderBedStatusIsNotNull()
		{
			return !cxl_SortOrderBedStatus.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderBedStatus()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderBedStatus.getValue(context);
		}
		public void setSortOrderBedStatus(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderBedStatus.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderBedStatus = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public CoreNamespace Core = new CoreNamespace();
		public final class CoreNamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class WardView implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int TRANSFER = 1;
				public static final int ACCEPT_TRANSFER = 2;
				public static final int CANCEL_TRANSFER = 3;
				public static final int DISCHARGE = 4;
				public static final int ASSIGNWARD = 5;
				public static final int VIEW_DTA = 6;
				public static final int VIEW_ELECTIVE_LIST = 7;
				public static final int BED_READY = 8;
				public static final int RETURN_FROM_HOMELEAVE = 9;
				public static final int RETURN_FROM_LEAVE_TO_BED = 10;
				public static final int RETURN_FROM_LEAVE_WARD = 11;
				public static final int CANCEL_HOME_LEAVE = 12;
				public static final int CANCEL_HOMELEAVE_RETURN = 13;
				public static final int EDITHOMELEAVE = 14;
				public static final int VACATEBED = 15;
				public static final int UNDO_READY_TO_LEAVE = 16;
			}
			public void disableAllWardViewMenuItems()
			{
				this.contextMenuWardViewTRANSFERItem.setEnabled(false);
				this.contextMenuWardViewACCEPT_TRANSFERItem.setEnabled(false);
				this.contextMenuWardViewCANCEL_TRANSFERItem.setEnabled(false);
				this.contextMenuWardViewDISCHARGEItem.setEnabled(false);
				this.contextMenuWardViewASSIGNWARDItem.setEnabled(false);
				this.contextMenuWardViewVIEW_DTAItem.setEnabled(false);
				this.contextMenuWardViewVIEW_ELECTIVE_LISTItem.setEnabled(false);
				this.contextMenuWardViewBED_READYItem.setEnabled(false);
				this.contextMenuWardViewRETURN_FROM_HOMELEAVEItem.setEnabled(false);
				this.contextMenuWardViewRETURN_FROM_LEAVE_TO_BEDItem.setEnabled(false);
				this.contextMenuWardViewRETURN_FROM_LEAVE_WARDItem.setEnabled(false);
				this.contextMenuWardViewCANCEL_HOME_LEAVEItem.setEnabled(false);
				this.contextMenuWardViewCANCEL_HOMELEAVE_RETURNItem.setEnabled(false);
				this.contextMenuWardViewEDITHOMELEAVEItem.setEnabled(false);
				this.contextMenuWardViewVACATEBEDItem.setEnabled(false);
				this.contextMenuWardViewUNDO_READY_TO_LEAVEItem.setEnabled(false);
			}
			public void hideAllWardViewMenuItems()
			{
				this.contextMenuWardViewTRANSFERItem.setVisible(false);
				this.contextMenuWardViewACCEPT_TRANSFERItem.setVisible(false);
				this.contextMenuWardViewCANCEL_TRANSFERItem.setVisible(false);
				this.contextMenuWardViewDISCHARGEItem.setVisible(false);
				this.contextMenuWardViewASSIGNWARDItem.setVisible(false);
				this.contextMenuWardViewVIEW_DTAItem.setVisible(false);
				this.contextMenuWardViewVIEW_ELECTIVE_LISTItem.setVisible(false);
				this.contextMenuWardViewBED_READYItem.setVisible(false);
				this.contextMenuWardViewRETURN_FROM_HOMELEAVEItem.setVisible(false);
				this.contextMenuWardViewRETURN_FROM_LEAVE_TO_BEDItem.setVisible(false);
				this.contextMenuWardViewRETURN_FROM_LEAVE_WARDItem.setVisible(false);
				this.contextMenuWardViewCANCEL_HOME_LEAVEItem.setVisible(false);
				this.contextMenuWardViewCANCEL_HOMELEAVE_RETURNItem.setVisible(false);
				this.contextMenuWardViewEDITHOMELEAVEItem.setVisible(false);
				this.contextMenuWardViewVACATEBEDItem.setVisible(false);
				this.contextMenuWardViewUNDO_READY_TO_LEAVEItem.setVisible(false);
			}
			private Menu contextMenuWardView;
			public ReadOnlyMenuItem getWardViewTRANSFERItem()
			{
				return this.contextMenuWardViewTRANSFERItem;
			}
			private MenuItem contextMenuWardViewTRANSFERItem;
			public ReadOnlyMenuItem getWardViewACCEPT_TRANSFERItem()
			{
				return this.contextMenuWardViewACCEPT_TRANSFERItem;
			}
			private MenuItem contextMenuWardViewACCEPT_TRANSFERItem;
			public ReadOnlyMenuItem getWardViewCANCEL_TRANSFERItem()
			{
				return this.contextMenuWardViewCANCEL_TRANSFERItem;
			}
			private MenuItem contextMenuWardViewCANCEL_TRANSFERItem;
			public ReadOnlyMenuItem getWardViewDISCHARGEItem()
			{
				return this.contextMenuWardViewDISCHARGEItem;
			}
			private MenuItem contextMenuWardViewDISCHARGEItem;
			public ReadOnlyMenuItem getWardViewASSIGNWARDItem()
			{
				return this.contextMenuWardViewASSIGNWARDItem;
			}
			private MenuItem contextMenuWardViewASSIGNWARDItem;
			public ReadOnlyMenuItem getWardViewVIEW_DTAItem()
			{
				return this.contextMenuWardViewVIEW_DTAItem;
			}
			private MenuItem contextMenuWardViewVIEW_DTAItem;
			public ReadOnlyMenuItem getWardViewVIEW_ELECTIVE_LISTItem()
			{
				return this.contextMenuWardViewVIEW_ELECTIVE_LISTItem;
			}
			private MenuItem contextMenuWardViewVIEW_ELECTIVE_LISTItem;
			public ReadOnlyMenuItem getWardViewBED_READYItem()
			{
				return this.contextMenuWardViewBED_READYItem;
			}
			private MenuItem contextMenuWardViewBED_READYItem;
			public ReadOnlyMenuItem getWardViewRETURN_FROM_HOMELEAVEItem()
			{
				return this.contextMenuWardViewRETURN_FROM_HOMELEAVEItem;
			}
			private MenuItem contextMenuWardViewRETURN_FROM_HOMELEAVEItem;
			public ReadOnlyMenuItem getWardViewRETURN_FROM_LEAVE_TO_BEDItem()
			{
				return this.contextMenuWardViewRETURN_FROM_LEAVE_TO_BEDItem;
			}
			private MenuItem contextMenuWardViewRETURN_FROM_LEAVE_TO_BEDItem;
			public ReadOnlyMenuItem getWardViewRETURN_FROM_LEAVE_WARDItem()
			{
				return this.contextMenuWardViewRETURN_FROM_LEAVE_WARDItem;
			}
			private MenuItem contextMenuWardViewRETURN_FROM_LEAVE_WARDItem;
			public ReadOnlyMenuItem getWardViewCANCEL_HOME_LEAVEItem()
			{
				return this.contextMenuWardViewCANCEL_HOME_LEAVEItem;
			}
			private MenuItem contextMenuWardViewCANCEL_HOME_LEAVEItem;
			public ReadOnlyMenuItem getWardViewCANCEL_HOMELEAVE_RETURNItem()
			{
				return this.contextMenuWardViewCANCEL_HOMELEAVE_RETURNItem;
			}
			private MenuItem contextMenuWardViewCANCEL_HOMELEAVE_RETURNItem;
			public ReadOnlyMenuItem getWardViewEDITHOMELEAVEItem()
			{
				return this.contextMenuWardViewEDITHOMELEAVEItem;
			}
			private MenuItem contextMenuWardViewEDITHOMELEAVEItem;
			public ReadOnlyMenuItem getWardViewVACATEBEDItem()
			{
				return this.contextMenuWardViewVACATEBEDItem;
			}
			private MenuItem contextMenuWardViewVACATEBEDItem;
			public ReadOnlyMenuItem getWardViewUNDO_READY_TO_LEAVEItem()
			{
				return this.contextMenuWardViewUNDO_READY_TO_LEAVEItem;
			}
			private MenuItem contextMenuWardViewUNDO_READY_TO_LEAVEItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[192];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedBedSpaceState", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedBedSpaceState", "BO-1014100009-ISMATERNITY", "IsMaternity");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedBedSpaceState", "BO-1014100009-NOOFINFANTS", "NoOfInfants");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedBedSpaceState", "BO-1014100009-COMMENT", "Comment");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ISCONFIRMEDDISCHARGE", "IsConfirmedDischarge");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-CONFIRMEDDISCHARGEDATETIME", "ConfirmedDischargeDateTime");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ISMATERNITYINPATIENT", "IsMaternityInpatient");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-DISCHARGEREADYDATE", "DischargeReadyDate");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ISONHOMELEAVE", "IsOnHomeLeave");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-EXPECTEDDATEOFRETURN", "ExpectedDateOfReturn");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-EXPECTEDTIMEOFRETURN", "ExpectedTimeOfReturn");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-VACATEDBEDNUMBER", "VacatedBedNumber");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-DATEONHOMELEAVE", "DateOnHomeLeave");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-VTEASSESSMENTSTATUS", "VTEAssessmentStatus");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-VTERISKASSESSMENT", "VTERiskAssessment");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-VTEASSESSMENTSTATUSREASON", "VTEAssessmentStatusReason");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ADMISSIONDATETIME", "AdmissionDateTime");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-TIMEONHOMELEAVE", "TimeOnHomeLeave");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-ISREADYTOLEAVE", "IsReadyToLeave");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_Core.SelectedWaitingAreaPatient", "BO-1014100000-READYTOLEAVEDECISIONDATETIME", "ReadyToLeaveDecisionDateTime");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-ID", "ID_PendingTransfers");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-TRANSFERREQUESTDATETIME", "TransferRequestDateTime");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-CURRENTSTATUS", "CurrentStatus");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-WARDTYPE", "WardType");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-CONSULTANT", "Consultant");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-SPECIALTY", "Specialty");
			fields[172] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-PASSPECIALTY", "PASSpecialty");
			fields[173] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-TRANSFERREASON", "TransferReason");
			fields[174] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-TRANSFERCOMMENT", "TransferComment");
			fields[175] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-PATIENTSTATUS", "PatientStatus");
			fields[176] = new ims.framework.ReportField(this.context, "_cv_Core.ADTPendingTransfer", "BO-1014100013-BEDAVAILABLEDATETIME", "BedAvailableDateTime");
			fields[177] = new ims.framework.ReportField(this.context, "_cv_Core.WardViewPendingEmergencyAdmission", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[178] = new ims.framework.ReportField(this.context, "_cv_Core.WardViewPendingEmergencyAdmission", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[179] = new ims.framework.ReportField(this.context, "_cv_Core.WardViewPendingEmergencyAdmission", "BO-1014100011-SPECIALTY", "Specialty");
			fields[180] = new ims.framework.ReportField(this.context, "_cv_Core.WardViewPendingEmergencyAdmission", "BO-1014100011-DTADATETIME", "DTADateTime");
			fields[181] = new ims.framework.ReportField(this.context, "_cv_Core.WardViewPendingEmergencyAdmission", "BO-1014100011-BEDTYPEREQUESTED", "BedTypeRequested");
			fields[182] = new ims.framework.ReportField(this.context, "_cv_Emergency.Tracking", "BO-1086100005-ID", "ID_Tracking");
			fields[183] = new ims.framework.ReportField(this.context, "_cv_Core.WardViewPatientListWard", "BO-1007100007-ID", "ID_Location");
			fields[184] = new ims.framework.ReportField(this.context, "_cv_Core.WardViewPatientListBay", "BO-1007100007-ID", "ID_Location");
			fields[185] = new ims.framework.ReportField(this.context, "_cv_RefMan.PatientElectiveListRef", "BO-1014100020-ID", "ID_PatientElectiveList");
			fields[186] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.WardViewPatientList.__internal_x_context__Config_" + componentIdentifier, "BO-1014100014-ID", "ID_WardBayConfig");
			fields[187] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.WardViewPatientList.__internal_x_context__Config_" + componentIdentifier, "BO-1014100014-MAINSPECIALTY", "MainSpecialty");
			fields[188] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.WardViewPatientList.__internal_x_context__Config_" + componentIdentifier, "BO-1014100014-ISWAITINGAREA", "IsWaitingArea");
			fields[189] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.WardViewPatientList.__internal_x_context__Config_" + componentIdentifier, "BO-1014100014-NUMOFBEDS", "NumOfBeds");
			fields[190] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.WardViewPatientList.__internal_x_context__Config_" + componentIdentifier, "BO-1014100014-NUMOFOCCUPIEDBEDS", "NumOfOccupiedBeds");
			fields[191] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.WardViewPatientList.__internal_x_context__Config_" + componentIdentifier, "BO-1014100014-WARDSTATUS", "WardAvailabilityStatus");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
