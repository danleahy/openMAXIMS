//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.pdsbackofficeworklist;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class ctnDetailsContainer extends ContainerBridge
	{
		private static final long serialVersionUID = 1L;
		public static class cmbDetailsAuthorityTypeComboBox extends ComboBoxBridge
		{
			private static final long serialVersionUID = 1L;
			
			public void newRow(ims.core.vo.lookups.PDSRegisteringAuthorityType value, String text)
			{
				super.control.newRow(value, text);
			}
			public void newRow(ims.core.vo.lookups.PDSRegisteringAuthorityType value, String text, ims.framework.utils.Image image)
			{
				super.control.newRow(value, text, image);
			}
			public void newRow(ims.core.vo.lookups.PDSRegisteringAuthorityType value, String text, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, textColor);
			}
			public void newRow(ims.core.vo.lookups.PDSRegisteringAuthorityType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, image, textColor);
			}
			public boolean removeRow(ims.core.vo.lookups.PDSRegisteringAuthorityType value)
			{
				return super.control.removeRow(value);
			}
			public ims.core.vo.lookups.PDSRegisteringAuthorityType getValue()
			{
				return (ims.core.vo.lookups.PDSRegisteringAuthorityType)super.control.getValue();
			}
			public void setValue(ims.core.vo.lookups.PDSRegisteringAuthorityType value)
			{
				super.control.setValue(value);
			}
		}
		public static class cmbDetailsUpdateTypeComboBox extends ComboBoxBridge
		{
			private static final long serialVersionUID = 1L;
			
			public void newRow(ims.core.vo.lookups.PDSUpdateType value, String text)
			{
				super.control.newRow(value, text);
			}
			public void newRow(ims.core.vo.lookups.PDSUpdateType value, String text, ims.framework.utils.Image image)
			{
				super.control.newRow(value, text, image);
			}
			public void newRow(ims.core.vo.lookups.PDSUpdateType value, String text, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, textColor);
			}
			public void newRow(ims.core.vo.lookups.PDSUpdateType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, image, textColor);
			}
			public boolean removeRow(ims.core.vo.lookups.PDSUpdateType value)
			{
				return super.control.removeRow(value);
			}
			public ims.core.vo.lookups.PDSUpdateType getValue()
			{
				return (ims.core.vo.lookups.PDSUpdateType)super.control.getValue();
			}
			public void setValue(ims.core.vo.lookups.PDSUpdateType value)
			{
				super.control.setValue(value);
			}
		}
		public static class cmbDetailsOutcomeComboBox extends ComboBoxBridge
		{
			private static final long serialVersionUID = 1L;
			
			public void newRow(ims.core.vo.lookups.PDSBackOfficeOutcome value, String text)
			{
				super.control.newRow(value, text);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeOutcome value, String text, ims.framework.utils.Image image)
			{
				super.control.newRow(value, text, image);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeOutcome value, String text, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, textColor);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeOutcome value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, image, textColor);
			}
			public boolean removeRow(ims.core.vo.lookups.PDSBackOfficeOutcome value)
			{
				return super.control.removeRow(value);
			}
			public ims.core.vo.lookups.PDSBackOfficeOutcome getValue()
			{
				return (ims.core.vo.lookups.PDSBackOfficeOutcome)super.control.getValue();
			}
			public void setValue(ims.core.vo.lookups.PDSBackOfficeOutcome value)
			{
				super.control.setValue(value);
			}
		}
		public static class cmbDetailsStatusComboBox extends ComboBoxBridge
		{
			private static final long serialVersionUID = 1L;
			
			public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value, String text)
			{
				super.control.newRow(value, text);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value, String text, ims.framework.utils.Image image)
			{
				super.control.newRow(value, text, image);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value, String text, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, textColor);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, image, textColor);
			}
			public boolean removeRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value)
			{
				return super.control.removeRow(value);
			}
			public ims.core.vo.lookups.PDSBackOfficeWorkStatus getValue()
			{
				return (ims.core.vo.lookups.PDSBackOfficeWorkStatus)super.control.getValue();
			}
			public void setValue(ims.core.vo.lookups.PDSBackOfficeWorkStatus value)
			{
				super.control.setValue(value);
			}
		}
		public static class cmbDetailsPriorityComboBox extends ComboBoxBridge
		{
			private static final long serialVersionUID = 1L;
			
			public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value, String text)
			{
				super.control.newRow(value, text);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value, String text, ims.framework.utils.Image image)
			{
				super.control.newRow(value, text, image);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value, String text, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, textColor);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, image, textColor);
			}
			public boolean removeRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value)
			{
				return super.control.removeRow(value);
			}
			public ims.core.vo.lookups.PDSBackOfficeWorkPriority getValue()
			{
				return (ims.core.vo.lookups.PDSBackOfficeWorkPriority)super.control.getValue();
			}
			public void setValue(ims.core.vo.lookups.PDSBackOfficeWorkPriority value)
			{
				super.control.setValue(value);
			}
		}
		public static class cmbDetailsTypeComboBox extends ComboBoxBridge
		{
			private static final long serialVersionUID = 1L;
			
			public void newRow(ims.core.vo.lookups.PDSBackOfficeType value, String text)
			{
				super.control.newRow(value, text);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeType value, String text, ims.framework.utils.Image image)
			{
				super.control.newRow(value, text, image);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeType value, String text, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, textColor);
			}
			public void newRow(ims.core.vo.lookups.PDSBackOfficeType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
			{
				super.control.newRow(value, text, image, textColor);
			}
			public boolean removeRow(ims.core.vo.lookups.PDSBackOfficeType value)
			{
				return super.control.removeRow(value);
			}
			public ims.core.vo.lookups.PDSBackOfficeType getValue()
			{
				return (ims.core.vo.lookups.PDSBackOfficeType)super.control.getValue();
			}
			public void setValue(ims.core.vo.lookups.PDSBackOfficeType value)
			{
				super.control.setValue(value);
			}
		}
		protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
		{
			if(form == null)
				throw new RuntimeException("Invalid form");
			if(appForm == null)
				throw new RuntimeException("Invalid application form");
			if(control == null); // this is to avoid eclipse warning only.
			if(loader == null); // this is to avoid eclipse warning only.
			if(form_images_local == null); // this is to avoid eclipse warning only.
			if(startControlID == null)
				throw new RuntimeException("Invalid startControlID");
			if(designSize == null); // this is to avoid eclipse warning only.
			if(runtimeSize == null); // this is to avoid eclipse warning only.
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex");
	
	
			// Label Controls
			RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 304, 154, 35, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Date:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 304, 128, 125, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "NHS No. Superseded:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 304, 102, 55, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "NHS No.:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 304, 76, 47, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Source:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 304, 24, 73, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Description:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 32, 154, 92, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Authority Type:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 32, 128, 80, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Update Type:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 32, 102, 59, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Outcome:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 32, 76, 45, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Status:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 32, 50, 51, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1009), new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Priority:", new Integer(1), null, new Integer(0)}));
			RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 32, 24, 36, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Type:", new Integer(1), null, new Integer(0)}));
	
			// TextBox Controls
			RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 440, 126, 352, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
			super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1011), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), new Integer(startTabIndex.intValue() + 24), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
			RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 440, 100, 352, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
			super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), new Integer(startTabIndex.intValue() + 23), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
			RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 440, 74, 352, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
			super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1013), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), new Integer(startTabIndex.intValue() + 22), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
			RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 440, 22, 352, 42, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
			super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), new Integer(startTabIndex.intValue() + 21), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
	
			// Date Time Controls
			RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 440, 152, 200, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), new Integer(startTabIndex.intValue() + 25), ControlState.DISABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
	
			// ComboBox Controls
			RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 136, 152, 144, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			ComboBox m_cmbDetailsAuthorityTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), new Integer(startTabIndex.intValue() + 20), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
			addControl(m_cmbDetailsAuthorityTypeTemp);
			cmbDetailsAuthorityTypeComboBox cmbDetailsAuthorityType = (cmbDetailsAuthorityTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbDetailsAuthorityTypeComboBox.class, m_cmbDetailsAuthorityTypeTemp);
			super.addComboBox(cmbDetailsAuthorityType);
			RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 136, 126, 144, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			ComboBox m_cmbDetailsUpdateTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), new Integer(startTabIndex.intValue() + 19), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
			addControl(m_cmbDetailsUpdateTypeTemp);
			cmbDetailsUpdateTypeComboBox cmbDetailsUpdateType = (cmbDetailsUpdateTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbDetailsUpdateTypeComboBox.class, m_cmbDetailsUpdateTypeTemp);
			super.addComboBox(cmbDetailsUpdateType);
			RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 136, 100, 144, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			ComboBox m_cmbDetailsOutcomeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), new Integer(startTabIndex.intValue() + 18), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
			addControl(m_cmbDetailsOutcomeTemp);
			cmbDetailsOutcomeComboBox cmbDetailsOutcome = (cmbDetailsOutcomeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbDetailsOutcomeComboBox.class, m_cmbDetailsOutcomeTemp);
			super.addComboBox(cmbDetailsOutcome);
			RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 136, 74, 144, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			ComboBox m_cmbDetailsStatusTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), new Integer(startTabIndex.intValue() + 17), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
			addControl(m_cmbDetailsStatusTemp);
			cmbDetailsStatusComboBox cmbDetailsStatus = (cmbDetailsStatusComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbDetailsStatusComboBox.class, m_cmbDetailsStatusTemp);
			super.addComboBox(cmbDetailsStatus);
			RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 136, 48, 144, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			ComboBox m_cmbDetailsPriorityTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), new Integer(startTabIndex.intValue() + 16), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
			addControl(m_cmbDetailsPriorityTemp);
			cmbDetailsPriorityComboBox cmbDetailsPriority = (cmbDetailsPriorityComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbDetailsPriorityComboBox.class, m_cmbDetailsPriorityTemp);
			super.addComboBox(cmbDetailsPriority);
			RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 136, 22, 144, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
			ComboBox m_cmbDetailsTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), new Integer(startTabIndex.intValue() + 15), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
			addControl(m_cmbDetailsTypeTemp);
			cmbDetailsTypeComboBox cmbDetailsType = (cmbDetailsTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbDetailsTypeComboBox.class, m_cmbDetailsTypeTemp);
			super.addComboBox(cmbDetailsType);
		}
		protected void setCollapsed(boolean value)
		{
			super.container.setCollapsed(value);
		}
		//protected boolean isCollapsed()
		//{
			//return super.container.isCollapsed();
		//}
		protected void setCaption(String value)
		{
			super.container.setCaption(value);
		}
		public TextBox txtDetailsNHSNoSuperseded()
		{
			return (TextBox)super.getControl(11);
		}
		public TextBox txtDetailsNHSNo()
		{
			return (TextBox)super.getControl(12);
		}
		public TextBox txtDetailsSource()
		{
			return (TextBox)super.getControl(13);
		}
		public TextBox txtDetailsDescription()
		{
			return (TextBox)super.getControl(14);
		}
		public DateTimeControl dtimDate()
		{
			return (DateTimeControl)super.getControl(15);
		}
		public cmbDetailsAuthorityTypeComboBox cmbDetailsAuthorityType()
		{
			return (cmbDetailsAuthorityTypeComboBox)super.getComboBox(0);
		}
		public cmbDetailsUpdateTypeComboBox cmbDetailsUpdateType()
		{
			return (cmbDetailsUpdateTypeComboBox)super.getComboBox(1);
		}
		public cmbDetailsOutcomeComboBox cmbDetailsOutcome()
		{
			return (cmbDetailsOutcomeComboBox)super.getComboBox(2);
		}
		public cmbDetailsStatusComboBox cmbDetailsStatus()
		{
			return (cmbDetailsStatusComboBox)super.getComboBox(3);
		}
		public cmbDetailsPriorityComboBox cmbDetailsPriority()
		{
			return (cmbDetailsPriorityComboBox)super.getComboBox(4);
		}
		public cmbDetailsTypeComboBox cmbDetailsType()
		{
			return (cmbDetailsTypeComboBox)super.getComboBox(5);
		}
	}
	public static class cmbCurrentStatusComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.PDSBackOfficeWorkStatus value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.PDSBackOfficeWorkStatus getValue()
		{
			return (ims.core.vo.lookups.PDSBackOfficeWorkStatus)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.PDSBackOfficeWorkStatus value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbNotificationPriorityComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(Integer value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(Integer value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(Integer value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(Integer value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(Integer value)
		{
			return super.control.removeRow(value);
		}
		public Integer getValue()
		{
			return (Integer)super.control.getValue();
		}
		public void setValue(Integer value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbTypeComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.PDSBackOfficeType value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeType value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeType value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.PDSBackOfficeType value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.PDSBackOfficeType getValue()
		{
			return (ims.core.vo.lookups.PDSBackOfficeType)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.PDSBackOfficeType value)
		{
			super.control.setValue(value);
		}
	}
	public static class cmbPriorityComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.lookups.PDSBackOfficeWorkPriority value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.lookups.PDSBackOfficeWorkPriority getValue()
		{
			return (ims.core.vo.lookups.PDSBackOfficeWorkPriority)super.control.getValue();
		}
		public void setValue(ims.core.vo.lookups.PDSBackOfficeWorkPriority value)
		{
			super.control.setValue(value);
		}
	}
	public static class qmbUserComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.admin.vo.AppUserShortVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.admin.vo.AppUserShortVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.admin.vo.AppUserShortVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.admin.vo.AppUserShortVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.admin.vo.AppUserShortVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.admin.vo.AppUserShortVo getValue()
		{
			return (ims.admin.vo.AppUserShortVo)super.control.getValue();
		}
		public void setValue(ims.admin.vo.AppUserShortVo value)
		{
			super.control.setValue(value);
		}
		public void setEditedText(String text)
		{
			super.control.setEditedText(text);
		}
		public String getEditedText()
		{
			return super.control.getEditedText();
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		form.setDarkHeight(180);
		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));


		// Container Clasess
		RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 8, 400, 832, 192, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		Container m_ctnDetails = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT, "Details", new Boolean(true)});
		addControl(m_ctnDetails);
		ctnDetailsContainer ctnDetails = (ctnDetailsContainer)ContainerBridgeFlyweightFactory.getInstance().createContainerBridge(ctnDetailsContainer.class, m_ctnDetails, factory);
		ims.framework.utils.SizeInfo m_ctnDetailsDesignSize = new ims.framework.utils.SizeInfo(832, 192);
		ims.framework.utils.SizeInfo m_ctnDetailsRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper23.getWidth(), anchoringHelper23.getHeight());
		ctnDetails.setContext(form, appForm, m_ctnDetails, loader, this.getImages(), startControlID, m_ctnDetailsDesignSize, m_ctnDetailsRuntimeSize, startTabIndex, skipContextValidation);
		super.addContainer(ctnDetails);

		// Label Controls
		RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 8, 152, 82, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "NHS Number:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 8, 70, 91, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Current Status:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 632, 18, 34, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "User:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 464, 18, 51, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Priority:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 384, 44, 149, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, "Your Active Notifications:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 8, 120, 52, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Date To:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 8, 96, 68, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Date From:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 8, 18, 36, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Type:", new Integer(1), null, new Integer(0)}));
		RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 8, 44, 51, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Priority:", new Integer(1), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 744, 600, 96, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), new Integer(startTabIndex.intValue() + 30), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "View Patient", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 456, 600, 88, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), new Integer(startTabIndex.intValue() + 27), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 552, 600, 88, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), new Integer(startTabIndex.intValue() + 28), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 8, 600, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), new Integer(startTabIndex.intValue() + 26), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 648, 600, 88, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), new Integer(startTabIndex.intValue() + 29), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Synchronise", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// TextBox Controls
		RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 104, 152, 176, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), new Integer(startTabIndex.intValue() + 6), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(0), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));

		// Date Time Controls
		RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 104, 120, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.ENABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 104, 96, 176, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(DateTimeControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.ENABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper41 = new RuntimeAnchoring(designSize, runtimeSize, 104, 68, 272, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ComboBox m_cmbCurrentStatusTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1040), new Integer(anchoringHelper41.getX()), new Integer(anchoringHelper41.getY()), new Integer(anchoringHelper41.getWidth()), new Integer(anchoringHelper41.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.ENABLED, ControlState.DISABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbCurrentStatusTemp);
		cmbCurrentStatusComboBox cmbCurrentStatus = (cmbCurrentStatusComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbCurrentStatusComboBox.class, m_cmbCurrentStatusTemp);
		super.addComboBox(cmbCurrentStatus);
		RuntimeAnchoring anchoringHelper42 = new RuntimeAnchoring(designSize, runtimeSize, 521, 16, 96, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ComboBox m_cmbNotificationPriorityTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1041), new Integer(anchoringHelper42.getX()), new Integer(anchoringHelper42.getY()), new Integer(anchoringHelper42.getWidth()), new Integer(anchoringHelper42.getHeight()), new Integer(startTabIndex.intValue() + 9), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbNotificationPriorityTemp);
		cmbNotificationPriorityComboBox cmbNotificationPriority = (cmbNotificationPriorityComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbNotificationPriorityComboBox.class, m_cmbNotificationPriorityTemp);
		super.addComboBox(cmbNotificationPriority);
		RuntimeAnchoring anchoringHelper43 = new RuntimeAnchoring(designSize, runtimeSize, 104, 16, 272, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ComboBox m_cmbTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1042), new Integer(anchoringHelper43.getX()), new Integer(anchoringHelper43.getY()), new Integer(anchoringHelper43.getWidth()), new Integer(anchoringHelper43.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.ENABLED, ControlState.DISABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbTypeTemp);
		cmbTypeComboBox cmbType = (cmbTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbTypeComboBox.class, m_cmbTypeTemp);
		super.addComboBox(cmbType);
		RuntimeAnchoring anchoringHelper44 = new RuntimeAnchoring(designSize, runtimeSize, 104, 42, 272, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		ComboBox m_cmbPriorityTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1043), new Integer(anchoringHelper44.getX()), new Integer(anchoringHelper44.getY()), new Integer(anchoringHelper44.getWidth()), new Integer(anchoringHelper44.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.ENABLED, ControlState.DISABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbPriorityTemp);
		cmbPriorityComboBox cmbPriority = (cmbPriorityComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPriorityComboBox.class, m_cmbPriorityTemp);
		super.addComboBox(cmbPriority);

		// Query ComboBox Controls
		RuntimeAnchoring anchoringHelper45 = new RuntimeAnchoring(designSize, runtimeSize, 672, 16, 168, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_qmbUserTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1044), new Integer(anchoringHelper45.getX()), new Integer(anchoringHelper45.getY()), new Integer(anchoringHelper45.getWidth()), new Integer(anchoringHelper45.getHeight()), new Integer(startTabIndex.intValue() + 10), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.TRUE, new Integer(1), null, Boolean.FALSE, new Integer(-1), Boolean.FALSE});
		addControl(m_qmbUserTemp);
		qmbUserComboBox qmbUser = (qmbUserComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(qmbUserComboBox.class, m_qmbUserTemp);
		super.addComboBox(qmbUser);

		// CheckBox Controls
		RuntimeAnchoring anchoringHelper46 = new RuntimeAnchoring(designSize, runtimeSize, 296, 152, 88, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1045), new Integer(anchoringHelper46.getX()), new Integer(anchoringHelper46.getY()), new Integer(anchoringHelper46.getWidth()), new Integer(anchoringHelper46.getHeight()), new Integer(startTabIndex.intValue() + 7), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Superseded", Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper47 = new RuntimeAnchoring(designSize, runtimeSize, 384, 18, 56, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1046), new Integer(anchoringHelper47.getX()), new Integer(anchoringHelper47.getY()), new Integer(anchoringHelper47.getWidth()), new Integer(anchoringHelper47.getHeight()), new Integer(startTabIndex.intValue() + 8), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Seen", Boolean.FALSE, null}));

		// Dynamic Grid Controls
		RuntimeAnchoring anchoringHelper48 = new RuntimeAnchoring(designSize, runtimeSize, 8, 184, 832, 208, ims.framework.enumerations.ControlAnchoring.ALL);
		super.addControl(factory.getControl(DynamicGrid.class, new Object[] { control, new Integer(startControlID.intValue() + 1047), new Integer(anchoringHelper48.getX()), new Integer(anchoringHelper48.getY()), new Integer(anchoringHelper48.getWidth()), new Integer(anchoringHelper48.getHeight()), new Integer(startTabIndex.intValue() + 14), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, null, Boolean.FALSE, Boolean.TRUE, Boolean.TRUE}));
		RuntimeAnchoring anchoringHelper49 = new RuntimeAnchoring(designSize, runtimeSize, 384, 68, 456, 72, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		super.addControl(factory.getControl(DynamicGrid.class, new Object[] { control, new Integer(startControlID.intValue() + 1048), new Integer(anchoringHelper49.getX()), new Integer(anchoringHelper49.getY()), new Integer(anchoringHelper49.getWidth()), new Integer(anchoringHelper49.getHeight()), new Integer(startTabIndex.intValue() + 13), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, null, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE}));

		// Image Buttons Controls
		RuntimeAnchoring anchoringHelper50 = new RuntimeAnchoring(designSize, runtimeSize, 328, 96, 30, 30, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1049), new Integer(anchoringHelper50.getX()), new Integer(anchoringHelper50.getY()), new Integer(anchoringHelper50.getWidth()), new Integer(anchoringHelper50.getHeight()), new Integer(startTabIndex.intValue() + 12), ControlState.ENABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, this.getImages().Core.ClearEnabled24, this.getImages().Core.ClearDisabled24, "Clear", Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper51 = new RuntimeAnchoring(designSize, runtimeSize, 296, 96, 30, 30, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1050), new Integer(anchoringHelper51.getX()), new Integer(anchoringHelper51.getY()), new Integer(anchoringHelper51.getWidth()), new Integer(anchoringHelper51.getHeight()), new Integer(startTabIndex.intValue() + 11), ControlState.ENABLED, ControlState.DISABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, this.getImages().Core.FindEnabled24, this.getImages().Core.FindDisabled24, "Search", Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public ctnDetailsContainer ctnDetails()
	{
		return (ctnDetailsContainer)super.getContainer(0);
	}
	public Label lblNotificationUser()
	{
		return (Label)super.getControl(3);
	}
	public Label lblNotificationPriority()
	{
		return (Label)super.getControl(4);
	}
	public Label lblActiveNotifications()
	{
		return (Label)super.getControl(5);
	}
	public Button btnViewPatient()
	{
		return (Button)super.getControl(10);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(11);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(12);
	}
	public Button btnEdit()
	{
		return (Button)super.getControl(13);
	}
	public Button btnSybchronise()
	{
		return (Button)super.getControl(14);
	}
	public TextBox txtNhsNumber()
	{
		return (TextBox)super.getControl(15);
	}
	public DateTimeControl dtimTo()
	{
		return (DateTimeControl)super.getControl(16);
	}
	public DateTimeControl dtimFrom()
	{
		return (DateTimeControl)super.getControl(17);
	}
	public cmbCurrentStatusComboBox cmbCurrentStatus()
	{
		return (cmbCurrentStatusComboBox)super.getComboBox(0);
	}
	public cmbNotificationPriorityComboBox cmbNotificationPriority()
	{
		return (cmbNotificationPriorityComboBox)super.getComboBox(1);
	}
	public cmbTypeComboBox cmbType()
	{
		return (cmbTypeComboBox)super.getComboBox(2);
	}
	public cmbPriorityComboBox cmbPriority()
	{
		return (cmbPriorityComboBox)super.getComboBox(3);
	}
	public qmbUserComboBox qmbUser()
	{
		return (qmbUserComboBox)super.getComboBox(4);
	}
	public CheckBox chkSuper()
	{
		return (CheckBox)super.getControl(23);
	}
	public CheckBox chkSeen()
	{
		return (CheckBox)super.getControl(24);
	}
	public DynamicGrid dyngrdResults()
	{
		return (DynamicGrid)super.getControl(25);
	}
	public DynamicGrid dyngrdNotifications()
	{
		return (DynamicGrid)super.getControl(26);
	}
	public ImageButton imbClear()
	{
		return (ImageButton)super.getControl(27);
	}
	public ImageButton imbSearch()
	{
		return (ImageButton)super.getControl(28);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				PDSPatientSynchronisation = new LocalFormName(102449);
				PDSDemographicsDialog = new LocalFormName(102494);
			}
			public final FormName PDSPatientSynchronisation;
			public final FormName PDSDemographicsDialog;
		}

		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				FindDisabled24 = new ImageHelper(102172, "Images/Core/FindDisabled_24.png", new Integer(24), new Integer(24));
				FindEnabled24 = new ImageHelper(102175, "Images/Core/Find_24.png", new Integer(24), new Integer(24));
				ClearDisabled24 = new ImageHelper(102173, "Images/Core/ClearDisabled_24.png", new Integer(24), new Integer(24));
				ClearEnabled24 = new ImageHelper(102174, "Images/Core/ClearEnabled_24.png", new Integer(24), new Integer(24));
			}
			public final ims.framework.utils.Image FindDisabled24;
			public final ims.framework.utils.Image FindEnabled24;
			public final ims.framework.utils.Image ClearDisabled24;
			public final ims.framework.utils.Image ClearEnabled24;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_BackOfficeItemDetails = new ims.framework.ContextVariable("BackOfficeItemDetails", prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier + "");
			cxl_RequiresPDS = new ims.framework.ContextVariable("RequiresPDS", prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__RequiresPDS_" + componentIdentifier + "");
			cxl_PDSRightsColl = new ims.framework.ContextVariable("PDSRightsColl", prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSRightsColl_" + componentIdentifier + "");
			cxl_IsNotificationAreaVisible = new ims.framework.ContextVariable("IsNotificationAreaVisible", prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__IsNotificationAreaVisible_" + componentIdentifier + "");
			cxl_PDSConfiguration = new ims.framework.ContextVariable("PDSConfiguration", prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier + "");
			cxl_PDSGeneralUpdateDetails = new ims.framework.ContextVariable("PDSGeneralUpdateDetails", prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier + "");
		}
		
		public boolean getBackOfficeItemDetailsIsNotNull()
		{
			return !cxl_BackOfficeItemDetails.getValueIsNull(context);
		}
		public ims.core.vo.PDSBackOfficeItemVo getBackOfficeItemDetails()
		{
			return (ims.core.vo.PDSBackOfficeItemVo)cxl_BackOfficeItemDetails.getValue(context);
		}
		public void setBackOfficeItemDetails(ims.core.vo.PDSBackOfficeItemVo value)
		{
			cxl_BackOfficeItemDetails.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_BackOfficeItemDetails = null;
		public boolean getRequiresPDSIsNotNull()
		{
			return !cxl_RequiresPDS.getValueIsNull(context);
		}
		public Boolean getRequiresPDS()
		{
			return (Boolean)cxl_RequiresPDS.getValue(context);
		}
		public void setRequiresPDS(Boolean value)
		{
			cxl_RequiresPDS.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_RequiresPDS = null;
		public boolean getPDSRightsCollIsNotNull()
		{
			return !cxl_PDSRightsColl.getValueIsNull(context);
		}
		public ims.admin.vo.AppRightVoCollection getPDSRightsColl()
		{
			return (ims.admin.vo.AppRightVoCollection)cxl_PDSRightsColl.getValue(context);
		}
		public void setPDSRightsColl(ims.admin.vo.AppRightVoCollection value)
		{
			cxl_PDSRightsColl.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PDSRightsColl = null;
		public boolean getIsNotificationAreaVisibleIsNotNull()
		{
			return !cxl_IsNotificationAreaVisible.getValueIsNull(context);
		}
		public Boolean getIsNotificationAreaVisible()
		{
			return (Boolean)cxl_IsNotificationAreaVisible.getValue(context);
		}
		public void setIsNotificationAreaVisible(Boolean value)
		{
			cxl_IsNotificationAreaVisible.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsNotificationAreaVisible = null;
		public boolean getPDSConfigurationIsNotNull()
		{
			return !cxl_PDSConfiguration.getValueIsNull(context);
		}
		public ims.admin.vo.PDSConfigurationVo getPDSConfiguration()
		{
			return (ims.admin.vo.PDSConfigurationVo)cxl_PDSConfiguration.getValue(context);
		}
		public void setPDSConfiguration(ims.admin.vo.PDSConfigurationVo value)
		{
			cxl_PDSConfiguration.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PDSConfiguration = null;
		public boolean getPDSGeneralUpdateDetailsIsNotNull()
		{
			return !cxl_PDSGeneralUpdateDetails.getValueIsNull(context);
		}
		public ims.core.vo.PDSGeneralUpdateRequestVo getPDSGeneralUpdateDetails()
		{
			return (ims.core.vo.PDSGeneralUpdateRequestVo)cxl_PDSGeneralUpdateDetails.getValue(context);
		}
		public void setPDSGeneralUpdateDetails(ims.core.vo.PDSGeneralUpdateRequestVo value)
		{
			cxl_PDSGeneralUpdateDetails.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PDSGeneralUpdateDetails = null;
	}
	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[322];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ID", "ID_Patient");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SEX", "Sex");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DOB", "Dob");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DOD", "Dod");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-RELIGION", "Religion");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ISACTIVE", "IsActive");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SCN", "SCN");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-OCCUPATION", "Occupation");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-LANGUAGE", "Language");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-HOMEFOLDERLOCATION", "HomeFolderLocation");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PREFCOMMLANGUAGE", "PrefCommLanguage");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-COPYPATIENTONCORRESPONDENCE", "CopyPatientOnCorrespondence");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-COPYPATIENTONCORRESPONDENCEDATE", "CopyPatientOnCorrespondenceDate");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-HEALTHBOARD", "HealthBoard");
			fields[172] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PDSDEATHNOTIFICATIONSTATUS", "PDSDeathNotificationStatus");
			fields[173] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[174] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SCHOOL", "School");
			fields[175] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-OVERSEASVISITOR", "OverseasVisitor");
			fields[176] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-OVERSEASCLASSIFICATION", "OverseasClassification");
			fields[177] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-HASLIVEDUK", "HasLivedUK");
			fields[178] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DECOUPLED", "Decoupled");
			fields[179] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PDSDATELASTCHECKED", "PDSDateLastChecked");
			fields[180] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SCHOOLORCOLLEGE", "SchoolOrCollege");
			fields[181] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ISCHILDINPUBLICCARE", "IsChildInPublicCare");
			fields[182] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PUBLICCARENEED", "PublicCareNeed");
			fields[183] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-TXTOCCUPATION", "TxtOccupation");
			fields[184] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ID", "ID_Patient");
			fields[185] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SEX", "Sex");
			fields[186] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOB", "Dob");
			fields[187] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOD", "Dod");
			fields[188] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-RELIGION", "Religion");
			fields[189] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISACTIVE", "IsActive");
			fields[190] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[191] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[192] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SCN", "SCN");
			fields[193] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[194] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[195] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[196] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[197] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[198] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[199] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[200] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[201] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[202] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[203] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[204] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ID", "ID_Patient");
			fields[205] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SEX", "Sex");
			fields[206] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DOB", "Dob");
			fields[207] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DOD", "Dod");
			fields[208] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-RELIGION", "Religion");
			fields[209] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ISACTIVE", "IsActive");
			fields[210] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[211] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[212] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SCN", "SCN");
			fields[213] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[214] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[215] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[216] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[217] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[218] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[219] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[220] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[221] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[222] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[223] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[224] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-OCCUPATION", "Occupation");
			fields[225] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-LANGUAGE", "Language");
			fields[226] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[227] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-HOMEFOLDERLOCATION", "HomeFolderLocation");
			fields[228] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PREFCOMMLANGUAGE", "PrefCommLanguage");
			fields[229] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-COPYPATIENTONCORRESPONDENCE", "CopyPatientOnCorrespondence");
			fields[230] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-COPYPATIENTONCORRESPONDENCEDATE", "CopyPatientOnCorrespondenceDate");
			fields[231] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-HEALTHBOARD", "HealthBoard");
			fields[232] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PDSDEATHNOTIFICATIONSTATUS", "PDSDeathNotificationStatus");
			fields[233] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[234] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SCHOOL", "School");
			fields[235] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-OVERSEASVISITOR", "OverseasVisitor");
			fields[236] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-OVERSEASCLASSIFICATION", "OverseasClassification");
			fields[237] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-HASLIVEDUK", "HasLivedUK");
			fields[238] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DECOUPLED", "Decoupled");
			fields[239] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PDSDATELASTCHECKED", "PDSDateLastChecked");
			fields[240] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SCHOOLORCOLLEGE", "SchoolOrCollege");
			fields[241] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ISCHILDINPUBLICCARE", "IsChildInPublicCare");
			fields[242] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PUBLICCARENEED", "PublicCareNeed");
			fields[243] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-TXTOCCUPATION", "TxtOccupation");
			fields[244] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-ID", "ID_PDSBackOfficeItem");
			fields[245] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-TYPE", "Type");
			fields[246] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-DESCRIPTION", "Description");
			fields[247] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-SOURCE", "Source");
			fields[248] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-PRIORITY", "Priority");
			fields[249] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-CURRENTSTATUS", "CurrentStatus");
			fields[250] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-NHSNUMBER", "NHSNumber");
			fields[251] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-NHSNUMBERSUPERSEDED", "NHSNumberSuperseded");
			fields[252] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-OUTCOME", "Outcome");
			fields[253] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-UPDATETYPE", "UpdateType");
			fields[254] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-REGISTERYAUTHORITYTYPE", "RegisteryAuthorityType");
			fields[255] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__BackOfficeItemDetails_" + componentIdentifier, "BO-1004100073-PATIENT", "Patient");
			fields[256] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-ID", "ID_PDSConfiguration");
			fields[257] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DOB_DATE_RANGE", "DOB_DATE_RANGE");
			fields[258] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DOD_DATE_RANGE", "DOD_DATE_RANGE");
			fields[259] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TRACE_ADVANCED_IGNORE_HISTORY", "TRACE_ADVANCED_IGNORE_HISTORY");
			fields[260] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TRACE_HISTORY_DATA_INDICATOR", "TRACE_HISTORY_DATA_INDICATOR");
			fields[261] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-USE_LPI_CROSSCHECK", "USE_LPI_CROSSCHECK");
			fields[262] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NO_FIXED_ABODE_POSTCODE", "NO_FIXED_ABODE_POSTCODE");
			fields[263] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-ADVANCED_SEARCH_TIMER_INTERVAL", "ADVANCED_SEARCH_TIMER_INTERVAL");
			fields[264] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_BACKOFFICE_NOTIFICATI", "PDS_BACKOFFICE_NOTIFICATI");
			fields[265] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NUMOFDAYSAPPOINTBATCHTRACE", "NumOfDaysAppointBatchTrace");
			fields[266] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NUMOFDAYSTCIBATCHTRACE", "NumOfDaysTCIBatchTrace");
			fields[267] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NUMOFDAYSFORNEXTPDSCHECK", "NumOfDaysForNextPDSCheck");
			fields[268] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-SYNCHRONISE_WITH_BACKOFFICE", "SYNCHRONISE_WITH_BACKOFFICE");
			fields[269] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-FROMPDSACCREDITEDSYSTEMID", "FromPDSAccreditedSystemId");
			fields[270] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TOPDSACCREDITEDSYSTEMID", "ToPDSAccreditedSystemId");
			fields[271] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_CONFIG_FILE", "PDS_CONFIG_FILE");
			fields[272] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_STORE_MESSAGE_LOC", "PDS_STORE_MESSAGE_LOC");
			fields[273] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_STORE_MESSAGE", "PDS_STORE_MESSAGE");
			fields[274] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-START_PDS_GATEWAY", "START_PDS_GATEWAY");
			fields[275] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_MSH_REPOSITORY", "PDS_MSH_REPOSITORY");
			fields[276] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_MSH_URL", "PDS_MSH_URL");
			fields[277] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-CREATE_BO_NOTIFICATIONS", "CREATE_BO_NOTIFICATIONS");
			fields[278] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-SDSHOST", "SDSHost");
			fields[279] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-SDSPORT", "SDSPort");
			fields[280] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_URL", "PDS_URL");
			fields[281] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_HOST", "PDS_HOST");
			fields[282] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_STORE_SYNC_MESSAGE", "PDS_STORE_SYNC_MESSAGE");
			fields[283] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_STORE_SYNC_MESSAGE_LOC", "PDS_STORE_SYNC_MESSAGE_LOC");
			fields[284] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-CONSENTCHANGEMESSAGE", "ConsentChangeMessage");
			fields[285] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-INACTIVEPATIENTRECORDBGCOLOUR", "InactivePatientRecordBgColour");
			fields[286] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DECOUPLE_ON_DECEASE", "DECOUPLE_ON_DECEASE");
			fields[287] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NOTIFY_ON_DECEASE", "NOTIFY_ON_DECEASE");
			fields[288] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DECOUPLE_ON_SYNC_REQUIRED", "DECOUPLE_ON_SYNC_REQUIRED");
			fields[289] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_AUTHENTICATION", "PDS_AUTHENTICATION");
			fields[290] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_PDSSEARCHFORPATIENT", "RBAC_PdsSearchForPatient");
			fields[291] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_PDSSEARCHPATIENTADVANCED", "RBAC_PdsSearchPatientAdvanced");
			fields[292] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_PDSRETRIEVAL", "RBAC_PdsRetrieval");
			fields[293] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_ACCESSSENSITIVEDATA", "RBAC_AccessSensitiveData");
			fields[294] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_AMENDPATIENT", "RBAC_AmendPatient");
			fields[295] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_CONTROLCONSENT", "RBAC_ControlConsent");
			fields[296] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_AMENDPATIENTDECEASE", "RBAC_AmendPatientDecease");
			fields[297] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_POSTCODESEARCH", "RBAC_PostcodeSearch");
			fields[298] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_DISPLAY_CONSENT", "PDS_DISPLAY_CONSENT");
			fields[299] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DOB_DATE_RANGE_TYPE", "DOB_DATE_RANGE_TYPE");
			fields[300] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DOD_DATE_RANGE_TYPE", "DOD_DATE_RANGE_TYPE");
			fields[301] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_BOOKOUTPATIENTAPPT", "TP_BookOutpatientAppt");
			fields[302] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_BOOKWARDATTENDERAPPT", "TP_BookWardAttenderAppt");
			fields[303] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_CREATETCIANDTHEATREBOOKING", "TP_CreateTCIAndTheatreBooking");
			fields[304] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_ANYADMISSION", "TP_AnyAdmission");
			fields[305] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_ANYAPPTARRIVAL", "TP_AnyApptArrival");
			fields[306] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-ID", "ID_PDSGeneralUpdateRequest");
			fields[307] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-SDSROLEPROFILEID", "SDSRoleProfileId");
			fields[308] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-SDSUSERID", "SDSUserId");
			fields[309] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-PDSACK", "PDSAck");
			fields[310] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-PDSACKDETAILTYPE", "PDSAckDetailType");
			fields[311] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-ACTIVE", "Active");
			fields[312] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-COMMENT", "Comment");
			fields[313] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-REQUESTTYPE", "RequestType");
			fields[314] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-REQUESTDATE", "RequestDate");
			fields[315] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-PATIENT", "Patient");
			fields[316] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-PDSACKEXCEPTION", "PDSAckException");
			fields[317] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-RETRYCOUNT", "RetryCount");
			fields[318] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-STATUS", "Status");
			fields[319] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-UPDATETYPE", "UpdateType");
			fields[320] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-CONVID", "ConvId");
			fields[321] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSBackOfficeWorklist.__internal_x_context__PDSGeneralUpdateDetails_" + componentIdentifier, "BO-1001100019-SDSJOBROLECODE", "SDSJobRoleCode");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
