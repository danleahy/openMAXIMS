//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.casenotesworklist;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindchklistReasonForReqLookup();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelRequestClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCompleteRequestClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnBatchTransferClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrdCaseNotesRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrdCaseNotesColumnHeaderClicked(ims.framework.controls.DynamicGridColumn column);
	abstract protected void onlyrSearchTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onBtnCaseNotesDashboardClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbClinicNameValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbClinicNameTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbHospitalValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbReqLocationTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbListOwnerValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbListOwnerTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteToRequestsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteFromRequestsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIntRequestTimespanValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIntRequestOverdueValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbAutoRefreshClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCaseNotesDashboardSecClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCmbHospitalByLocationValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbSearchByLocClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbAutoRefreshByLocClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearByLocClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIntLastDaysOffsetValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteToByLocationValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteFromByLocationValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbLocByLocValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbLocByLocTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnTransferCaseNotesClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnPullCaseNotesClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnViewCaseNotesClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onTimer(ims.framework.controls.Timer timer) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btnCancelRequest().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelRequestClick();
			}
		});
		this.form.btnCompleteRequest().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCompleteRequestClick();
			}
		});
		this.form.btnBatchTransfer().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnBatchTransferClick();
			}
		});
		this.form.dyngrdCaseNotes().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrdCaseNotesRowSelectionChanged(row);
			}
		});
		this.form.dyngrdCaseNotes().setDynamicGridColumnHeaderClickedEvent(new DynamicGridColumnHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridColumn column) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrdCaseNotesColumnHeaderClicked(column);
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSearchtabCaseNoteRequestActivated();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrSearchtabCaseNoteByLocationActivated();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().btnCaseNotesDashboard().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCaseNotesDashboardClick();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().qmbClinicName().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbClinicNameValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().qmbClinicName().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbClinicNameTextSubmited(value);
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().cmbHospital().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbHospitalValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().qmbReqLocation().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbReqLocationTextSubmited(value);
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().qmbListOwner().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbListOwnerValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().qmbListOwner().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbListOwnerTextSubmited(value);
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().dteToRequests().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteToRequestsValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().dteFromRequests().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteFromRequestsValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().intRequestTimespan().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIntRequestTimespanValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().intRequestOverdue().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIntRequestOverdueValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().imbClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearClick();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().imbAutoRefresh().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbAutoRefreshClick();
			}
		});
		this.form.lyrSearch().tabCaseNoteRequest().imbSearch().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchClick();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().btnCaseNotesDashboardSec().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCaseNotesDashboardSecClick();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().cmbHospitalByLocation().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbHospitalByLocationValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().imbSearchByLoc().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbSearchByLocClick();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().imbAutoRefreshByLoc().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbAutoRefreshByLocClick();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().imbClearByLoc().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearByLocClick();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().intLastDaysOffset().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIntLastDaysOffsetValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().dteToByLocation().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteToByLocationValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().dteFromByLocation().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteFromByLocationValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().qmbLocByLoc().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbLocByLocValueChanged();
			}
		});
		this.form.lyrSearch().tabCaseNoteByLocation().qmbLocByLoc().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbLocByLocTextSubmited(value);
			}
		});
		this.form.btnTransferCaseNotes().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnTransferCaseNotesClick();
			}
		});
		this.form.btnPullCaseNotes().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnPullCaseNotesClick();
			}
		});
		this.form.btnViewCaseNotes().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnViewCaseNotesClick();
			}
		});
		this.form.setTimerElapsedEvent(new ims.framework.delegates.TimerElapsed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.Timer timer) throws ims.framework.exceptions.PresentationLogicException
			{
				onTimer(timer);
			}
		});
		this.form.getContextMenus().Core.getCaseNotesWorklistMenuVIEW_CASE_NOTE_DETAILSItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.CaseNotesWorklistMenu.VIEW_CASE_NOTE_DETAILS, sender);
			}
		});
		this.form.getContextMenus().Core.getCaseNotesWorklistMenuPULL_CASE_NOTESItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.CaseNotesWorklistMenu.PULL_CASE_NOTES, sender);
			}
		});
		this.form.getContextMenus().Core.getCaseNotesWorklistMenuTRANSFER_CASE_NOTESItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.CaseNotesWorklistMenu.TRANSFER_CASE_NOTES, sender);
			}
		});
		this.form.getContextMenus().Core.getCaseNotesWorklistMenuCOMPLETE_REQUESTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.CaseNotesWorklistMenu.COMPLETE_REQUEST, sender);
			}
		});
		this.form.getContextMenus().Core.getCaseNotesWorklistMenuCANCEL_REQUESTItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.CaseNotesWorklistMenu.CANCEL_REQUEST, sender);
			}
		});
		this.form.getContextMenus().Core.getCaseNotesWorklistMenuBATCH_TRANSFERItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.CaseNotesWorklistMenu.BATCH_TRANSFER, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindchklistReasonForReqLookup();
	}
	protected void rebindAllLookups()
	{
		bindchklistReasonForReqLookup();
	}
	protected void defaultAllLookupValues()
	{
	}
	private void onlyrSearchtabCaseNoteRequestActivated()
	{
		this.form.lyrSearch().showtabCaseNoteRequest();
		onlyrSearchTabChanged(this.form.lyrSearch().tabCaseNoteRequest());
	}
	private void onlyrSearchtabCaseNoteByLocationActivated()
	{
		this.form.lyrSearch().showtabCaseNoteByLocation();
		onlyrSearchTabChanged(this.form.lyrSearch().tabCaseNoteByLocation());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
