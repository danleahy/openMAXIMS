//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.pdsgpdetailsindemographicscc;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		Admin = new AdminContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getGPPracticeWithCommIsNotNull()
		{
			return !cx_CoreGPPracticeWithComm.getValueIsNull(context);
		}
		public ims.core.vo.OrganisationWithSitesVo getGPPracticeWithComm()
		{
			return (ims.core.vo.OrganisationWithSitesVo)cx_CoreGPPracticeWithComm.getValue(context);
		}
		public void setGPPracticeWithComm(ims.core.vo.OrganisationWithSitesVo value)
		{
			cx_CoreGPPracticeWithComm.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreGPPracticeWithComm = new ims.framework.ContextVariable("Core.GPPracticeWithComm", "_cv_Core.GPPracticeWithComm");
		public boolean getGPDetailsIsNotNull()
		{
			return !cx_CoreGPDetails.getValueIsNull(context);
		}
		public ims.core.vo.GpShortVo getGPDetails()
		{
			return (ims.core.vo.GpShortVo)cx_CoreGPDetails.getValue(context);
		}
		public void setGPDetails(ims.core.vo.GpShortVo value)
		{
			cx_CoreGPDetails.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreGPDetails = new ims.framework.ContextVariable("Core.GPDetails", "_cv_Core.GPDetails");
		public boolean getGPSurgeryIsNotNull()
		{
			return !cx_CoreGPSurgery.getValueIsNull(context);
		}
		public ims.core.vo.LocSiteShortVo getGPSurgery()
		{
			return (ims.core.vo.LocSiteShortVo)cx_CoreGPSurgery.getValue(context);
		}
		public void setGPSurgery(ims.core.vo.LocSiteShortVo value)
		{
			cx_CoreGPSurgery.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreGPSurgery = new ims.framework.ContextVariable("Core.GPSurgery", "_cv_Core.GPSurgery");
		public boolean getGPPracticeIsNotNull()
		{
			return !cx_CoreGPPractice.getValueIsNull(context);
		}
		public ims.core.vo.OrgLiteVo getGPPractice()
		{
			return (ims.core.vo.OrgLiteVo)cx_CoreGPPractice.getValue(context);
		}
		public void setGPPractice(ims.core.vo.OrgLiteVo value)
		{
			cx_CoreGPPractice.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreGPPractice = new ims.framework.ContextVariable("Core.GPPractice", "_cv_Core.GPPractice");
		public boolean getFilterGpByPracticeIsNotNull()
		{
			return !cx_CoreFilterGpByPractice.getValueIsNull(context);
		}
		public ims.core.resource.place.vo.OrganisationRefVo getFilterGpByPractice()
		{
			return (ims.core.resource.place.vo.OrganisationRefVo)cx_CoreFilterGpByPractice.getValue(context);
		}
		public void setFilterGpByPractice(ims.core.resource.place.vo.OrganisationRefVo value)
		{
			cx_CoreFilterGpByPractice.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreFilterGpByPractice = new ims.framework.ContextVariable("Core.FilterGpByPractice", "_cv_Core.FilterGpByPractice");

		private ims.framework.Context context;
	}
	public final class AdminContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private AdminContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPracticeIsNotNull()
		{
			return !cx_AdminPractice.getValueIsNull(context);
		}
		public ims.core.vo.OrganisationWithSitesVo getPractice()
		{
			return (ims.core.vo.OrganisationWithSitesVo)cx_AdminPractice.getValue(context);
		}
		public void setPractice(ims.core.vo.OrganisationWithSitesVo value)
		{
			cx_AdminPractice.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_AdminPractice = new ims.framework.ContextVariable("Admin.Practice", "_cv_Admin.Practice");

		private ims.framework.Context context;
	}

	public CoreContext Core;
	public AdminContext Admin;
}
