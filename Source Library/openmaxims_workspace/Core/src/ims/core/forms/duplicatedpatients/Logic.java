//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.80 build 5465.13953)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.

package ims.core.forms.duplicatedpatients;

import ims.core.forms.duplicatedpatients.GenForm.grdPatientsRow;
import ims.core.vo.PatientLiteVo;
import ims.core.vo.PatientLiteVoCollection;
import ims.framework.enumerations.DialogResult;
import ims.framework.exceptions.PresentationLogicException;

public class Logic extends BaseLogic
{
	@SuppressWarnings("unused")
	private static final long serialVersionUID = 1L;

	@Override
	protected void onFormOpen(Object[] args) throws PresentationLogicException
	{
		open();
	}

	private void open()
	{	
		form.grdPatients().getRows().clear();
		
		PatientLiteVoCollection coll = form.getGlobalContext().Core.getDuplicatedPatients();
		
		if(coll != null)
		{
			for (int i = 0; i < coll.size(); i++)
			{
				grdPatientsRow row = form.grdPatients().getRows().newRow();
				
				row.setcolName(coll.get(i).getName().toString());
				row.setcolGender(coll.get(i).getSexIsNotNull() ? coll.get(i).getSex().getText() : "");
				row.setcolDOB(coll.get(i).getDobIsNotNull() ? coll.get(i).getDob().toString() : "");
				
				row.setValue(coll.get(i));
			}
			
			if(coll.size() == 1)
				form.grdPatients().setValue(coll.get(0));
		}
		
		//WDEV-22290
		form.btnCancel().setTooltip("Reject local patient record list and create new Local Patient Record.");
		form.btnSelect().setTooltip("Select local patient record for this PDS Record.");
		//WDEV-22290
	}

	@Override
	protected void onBtnSelectClick() throws PresentationLogicException
	{
		PatientLiteVo sel = form.grdPatients().getValue();
		
		if(sel == null)
		{
			engine.showMessage("Please select a patient record !");
			return;
		}
		
		PatientLiteVoCollection selColl = new PatientLiteVoCollection();
		selColl.add(sel);
		
		//DuplicatedPatients global context is used for selected patient !
		form.getGlobalContext().Core.setDuplicatedPatients(selColl);
		
		engine.close(DialogResult.OK);
	}

	@Override
	protected void onBtnCancelClick() throws PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
}
