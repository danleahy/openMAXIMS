//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.casenotefoldercc;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	protected void fireCustomControlValueChanged()
	{
		super.fireValueChanged();
	}
	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(384, 192);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.Core.contextMenuCaseNoteFolderMenu = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.Core.contextMenuCaseNoteFolderMenuNEW_PERMANENTItem = factory.createMenuItem(startControlID.intValue() + 1, "New PERMANENT", true, false, new Integer(102612), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770001)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuNEW_PERMANENTItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuCREATE_CASE_NOTE_FOLDERItem = factory.createMenuItem(startControlID.intValue() + 2, "Create Case Note Folder", true, false, new Integer(102612), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770015)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuCREATE_CASE_NOTE_FOLDERItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuNEW_TEMPORARYItem = factory.createMenuItem(startControlID.intValue() + 3, "New Temporary", true, false, new Integer(102613), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770010)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuNEW_TEMPORARYItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuMARK_AS_MISSINGItem = factory.createMenuItem(startControlID.intValue() + 4, "Mark As Missing", true, false, new Integer(102614), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770013)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuMARK_AS_MISSINGItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuMARKED_AS_FOUNDItem = factory.createMenuItem(startControlID.intValue() + 5, "Mark As Found", true, false, new Integer(102615), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770012)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuMARKED_AS_FOUNDItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuREQUIRES_MERGINGItem = factory.createMenuItem(startControlID.intValue() + 6, "Requires Merging", true, false, new Integer(102617), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770014)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuREQUIRES_MERGINGItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuCHANGE_FROM_TEMPORARY_TO_PERMANENTItem = factory.createMenuItem(startControlID.intValue() + 7, "Change from Temporary to Permanent", true, false, new Integer(102618), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770011)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuCHANGE_FROM_TEMPORARY_TO_PERMANENTItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuMERGE_FOLDERItem = factory.createMenuItem(startControlID.intValue() + 8, "Merge", true, false, new Integer(102619), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770007)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuMERGE_FOLDERItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuARCHIVE_FOLDERItem = factory.createMenuItem(startControlID.intValue() + 9, "Archive Folder", true, false, new Integer(102621), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770005)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuARCHIVE_FOLDERItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuSCAN_FOLDERItem = factory.createMenuItem(startControlID.intValue() + 10, "Scan Folder", true, false, new Integer(102592), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770003)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuSCAN_FOLDERItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuDESTROY_FOLDERItem = factory.createMenuItem(startControlID.intValue() + 11, "Destroy Folder", true, false, new Integer(102622), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770004)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuDESTROY_FOLDERItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuTRANSFER_FOLDERItem = factory.createMenuItem(startControlID.intValue() + 12, "Transfer Folder", true, false, new Integer(102602), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770009)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuTRANSFER_FOLDERItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuVIEW_TRANSFERSItem = factory.createMenuItem(startControlID.intValue() + 13, "View Transfers", true, false, new Integer(102598), true, true);
		contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuVIEW_TRANSFERSItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuVIEW_ALL_COMMENTSItem = factory.createMenuItem(startControlID.intValue() + 14, "View All Comments", true, false, new Integer(102624), true, false);
		contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuVIEW_ALL_COMMENTSItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuADD_COMMENTItem = factory.createMenuItem(startControlID.intValue() + 15, "Add Comment", true, false, new Integer(102625), true, true);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770008)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuADD_COMMENTItem);
		contextMenus.Core.contextMenuCaseNoteFolderMenuPRINTItem = factory.createMenuItem(startControlID.intValue() + 16, "Print", true, false, new Integer(102556), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5770006)))
			contextMenus.Core.contextMenuCaseNoteFolderMenu.add(contextMenus.Core.contextMenuCaseNoteFolderMenuPRINTItem);
		form.registerMenu(contextMenus.Core.contextMenuCaseNoteFolderMenu);


		// Dynamic Grid Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 368, 176, ims.framework.enumerations.ControlAnchoring.ALL);
		super.addControl(factory.getControl(DynamicGrid.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, contextMenus.Core.contextMenuCaseNoteFolderMenu, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE}));
	}


	public DynamicGrid dyngrdCaseNoteFolder()
	{
		return (DynamicGrid)super.getControl(0);
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_Action = new ims.framework.ContextVariable("Action", prefix + "_lv_Core.CaseNoteFolderCc.__internal_x_context__Action_" + componentIdentifier + "");
			cxl_DisplayContextMenu = new ims.framework.ContextVariable("DisplayContextMenu", prefix + "_lv_Core.CaseNoteFolderCc.__internal_x_context__DisplayContextMenu_" + componentIdentifier + "");
			cxl_IsACaseNoteFolderAlreadyCreated = new ims.framework.ContextVariable("IsACaseNoteFolderAlreadyCreated", prefix + "_lv_Core.CaseNoteFolderCc.__internal_x_context__IsACaseNoteFolderAlreadyCreated_" + componentIdentifier + "");
			cxl_IsAPermanentCaseNoteFolderMissingForFolder = new ims.framework.ContextVariable("IsAPermanentCaseNoteFolderMissingForFolder", prefix + "_lv_Core.CaseNoteFolderCc.__internal_x_context__IsAPermanentCaseNoteFolderMissingForFolder_" + componentIdentifier + "");
			cxl_Patient = new ims.framework.ContextVariable("Patient", prefix + "_lv_Core.CaseNoteFolderCc.__internal_x_context__Patient_" + componentIdentifier + "");
		}
		
		public boolean getActionIsNotNull()
		{
			return !cxl_Action.getValueIsNull(context);
		}
		public ims.core.vo.enums.CaseNoteFolderCcEvent getAction()
		{
			return (ims.core.vo.enums.CaseNoteFolderCcEvent)cxl_Action.getValue(context);
		}
		public void setAction(ims.core.vo.enums.CaseNoteFolderCcEvent value)
		{
			cxl_Action.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Action = null;
		public boolean getDisplayContextMenuIsNotNull()
		{
			return !cxl_DisplayContextMenu.getValueIsNull(context);
		}
		public Boolean getDisplayContextMenu()
		{
			return (Boolean)cxl_DisplayContextMenu.getValue(context);
		}
		public void setDisplayContextMenu(Boolean value)
		{
			cxl_DisplayContextMenu.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DisplayContextMenu = null;
		public boolean getIsACaseNoteFolderAlreadyCreatedIsNotNull()
		{
			return !cxl_IsACaseNoteFolderAlreadyCreated.getValueIsNull(context);
		}
		public Boolean getIsACaseNoteFolderAlreadyCreated()
		{
			return (Boolean)cxl_IsACaseNoteFolderAlreadyCreated.getValue(context);
		}
		public void setIsACaseNoteFolderAlreadyCreated(Boolean value)
		{
			cxl_IsACaseNoteFolderAlreadyCreated.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsACaseNoteFolderAlreadyCreated = null;
		public boolean getIsAPermanentCaseNoteFolderMissingForFolderIsNotNull()
		{
			return !cxl_IsAPermanentCaseNoteFolderMissingForFolder.getValueIsNull(context);
		}
		public Boolean getIsAPermanentCaseNoteFolderMissingForFolder()
		{
			return (Boolean)cxl_IsAPermanentCaseNoteFolderMissingForFolder.getValue(context);
		}
		public void setIsAPermanentCaseNoteFolderMissingForFolder(Boolean value)
		{
			cxl_IsAPermanentCaseNoteFolderMissingForFolder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsAPermanentCaseNoteFolderMissingForFolder = null;
		public boolean getPatientIsNotNull()
		{
			return !cxl_Patient.getValueIsNull(context);
		}
		public ims.core.patient.vo.PatientRefVo getPatient()
		{
			return (ims.core.patient.vo.PatientRefVo)cxl_Patient.getValue(context);
		}
		public void setPatient(ims.core.patient.vo.PatientRefVo value)
		{
			if(value != null && (value.getBoId() == null || value.getBoId().intValue() < 1))
				throw new ims.framework.exceptions.CodingRuntimeException("Invalid domain object id for 'Patient' RefVo context variable.");
			if(value == null)
				cxl_Patient.setValue(context, null);
			else
				cxl_Patient.setValue(context, new ims.core.patient.vo.PatientRefVo(value.getBoId(), value.getBoVersion()));
		}
		private ims.framework.ContextVariable cxl_Patient = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public CoreNamespace Core = new CoreNamespace();
		public final class CoreNamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class CaseNoteFolderMenu implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int NEW_PERMANENT = 1;
				public static final int CREATE_CASE_NOTE_FOLDER = 2;
				public static final int NEW_TEMPORARY = 3;
				public static final int MARK_AS_MISSING = 4;
				public static final int MARKED_AS_FOUND = 5;
				public static final int REQUIRES_MERGING = 6;
				public static final int CHANGE_FROM_TEMPORARY_TO_PERMANENT = 7;
				public static final int MERGE_FOLDER = 8;
				public static final int ARCHIVE_FOLDER = 9;
				public static final int SCAN_FOLDER = 10;
				public static final int DESTROY_FOLDER = 11;
				public static final int TRANSFER_FOLDER = 12;
				public static final int VIEW_TRANSFERS = 13;
				public static final int VIEW_ALL_COMMENTS = 14;
				public static final int ADD_COMMENT = 15;
				public static final int PRINT = 16;
			}
			public void disableAllCaseNoteFolderMenuMenuItems()
			{
				this.contextMenuCaseNoteFolderMenuNEW_PERMANENTItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuCREATE_CASE_NOTE_FOLDERItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuNEW_TEMPORARYItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuMARK_AS_MISSINGItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuMARKED_AS_FOUNDItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuREQUIRES_MERGINGItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuCHANGE_FROM_TEMPORARY_TO_PERMANENTItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuMERGE_FOLDERItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuARCHIVE_FOLDERItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuSCAN_FOLDERItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuDESTROY_FOLDERItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuTRANSFER_FOLDERItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuVIEW_TRANSFERSItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuVIEW_ALL_COMMENTSItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuADD_COMMENTItem.setEnabled(false);
				this.contextMenuCaseNoteFolderMenuPRINTItem.setEnabled(false);
			}
			public void hideAllCaseNoteFolderMenuMenuItems()
			{
				this.contextMenuCaseNoteFolderMenuNEW_PERMANENTItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuCREATE_CASE_NOTE_FOLDERItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuNEW_TEMPORARYItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuMARK_AS_MISSINGItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuMARKED_AS_FOUNDItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuREQUIRES_MERGINGItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuCHANGE_FROM_TEMPORARY_TO_PERMANENTItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuMERGE_FOLDERItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuARCHIVE_FOLDERItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuSCAN_FOLDERItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuDESTROY_FOLDERItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuTRANSFER_FOLDERItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuVIEW_TRANSFERSItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuVIEW_ALL_COMMENTSItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuADD_COMMENTItem.setVisible(false);
				this.contextMenuCaseNoteFolderMenuPRINTItem.setVisible(false);
			}
			private Menu contextMenuCaseNoteFolderMenu;
			public ReadOnlyMenuItem getCaseNoteFolderMenuNEW_PERMANENTItem()
			{
				return this.contextMenuCaseNoteFolderMenuNEW_PERMANENTItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuNEW_PERMANENTItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuCREATE_CASE_NOTE_FOLDERItem()
			{
				return this.contextMenuCaseNoteFolderMenuCREATE_CASE_NOTE_FOLDERItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuCREATE_CASE_NOTE_FOLDERItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuNEW_TEMPORARYItem()
			{
				return this.contextMenuCaseNoteFolderMenuNEW_TEMPORARYItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuNEW_TEMPORARYItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuMARK_AS_MISSINGItem()
			{
				return this.contextMenuCaseNoteFolderMenuMARK_AS_MISSINGItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuMARK_AS_MISSINGItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuMARKED_AS_FOUNDItem()
			{
				return this.contextMenuCaseNoteFolderMenuMARKED_AS_FOUNDItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuMARKED_AS_FOUNDItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuREQUIRES_MERGINGItem()
			{
				return this.contextMenuCaseNoteFolderMenuREQUIRES_MERGINGItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuREQUIRES_MERGINGItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuCHANGE_FROM_TEMPORARY_TO_PERMANENTItem()
			{
				return this.contextMenuCaseNoteFolderMenuCHANGE_FROM_TEMPORARY_TO_PERMANENTItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuCHANGE_FROM_TEMPORARY_TO_PERMANENTItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuMERGE_FOLDERItem()
			{
				return this.contextMenuCaseNoteFolderMenuMERGE_FOLDERItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuMERGE_FOLDERItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuARCHIVE_FOLDERItem()
			{
				return this.contextMenuCaseNoteFolderMenuARCHIVE_FOLDERItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuARCHIVE_FOLDERItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuSCAN_FOLDERItem()
			{
				return this.contextMenuCaseNoteFolderMenuSCAN_FOLDERItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuSCAN_FOLDERItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuDESTROY_FOLDERItem()
			{
				return this.contextMenuCaseNoteFolderMenuDESTROY_FOLDERItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuDESTROY_FOLDERItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuTRANSFER_FOLDERItem()
			{
				return this.contextMenuCaseNoteFolderMenuTRANSFER_FOLDERItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuTRANSFER_FOLDERItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuVIEW_TRANSFERSItem()
			{
				return this.contextMenuCaseNoteFolderMenuVIEW_TRANSFERSItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuVIEW_TRANSFERSItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuVIEW_ALL_COMMENTSItem()
			{
				return this.contextMenuCaseNoteFolderMenuVIEW_ALL_COMMENTSItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuVIEW_ALL_COMMENTSItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuADD_COMMENTItem()
			{
				return this.contextMenuCaseNoteFolderMenuADD_COMMENTItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuADD_COMMENTItem;
			public ReadOnlyMenuItem getCaseNoteFolderMenuPRINTItem()
			{
				return this.contextMenuCaseNoteFolderMenuPRINTItem;
			}
			private MenuItem contextMenuCaseNoteFolderMenuPRINTItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[145];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.CaseNoteFolderCc.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return formInfo.getLocalVariablesPrefix() + formInfo.getNamespaceName() + formInfo.getFormName() + formInfo.getFormId() + "_" + this.componentIdentifier;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private IReportField[] reportFields = null;
}
