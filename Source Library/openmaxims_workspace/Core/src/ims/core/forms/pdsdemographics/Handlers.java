//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.pdsdemographics;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbEligibilitySVUHLookup();
	abstract protected void defaultcmbEligibilitySVUHLookupValue();
	abstract protected void bindcmbProvedLookup();
	abstract protected void defaultcmbProvedLookupValue();
	abstract protected void bindcmbEligibilityLookup();
	abstract protected void defaultcmbEligibilityLookupValue();
	abstract protected void bindcmbPublicCareNeedLookup();
	abstract protected void defaultcmbPublicCareNeedLookupValue();
	abstract protected void bindcmbPatientCategoryLookup();
	abstract protected void defaultcmbPatientCategoryLookupValue();
	abstract protected void bindcmbPolicyTypeLookup();
	abstract protected void defaultcmbPolicyTypeLookupValue();
	abstract protected void bindcmbEhicInstitutionLookup();
	abstract protected void defaultcmbEhicInstitutionLookupValue();
	abstract protected void bindcmbEhicCountryLookup();
	abstract protected void defaultcmbEhicCountryLookupValue();
	abstract protected void bindcmbPreferredLanguageLookup();
	abstract protected void defaultcmbPreferredLanguageLookupValue();
	abstract protected void bindcmbConsentLookup();
	abstract protected void defaultcmbConsentLookupValue();
	abstract protected void bindcmbPreferredWrittenCommMethodLookup();
	abstract protected void defaultcmbPreferredWrittenCommMethodLookupValue();
	abstract protected void bindcmbPrefferedContactMethodLookup();
	abstract protected void defaultcmbPrefferedContactMethodLookupValue();
	abstract protected void onFormModeChanged();
	abstract protected void onMessageBoxClosed(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormClosing(CancelArgs args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtninactivateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrDetailsTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onCcGpDetailsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcDetailsValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onCcAddressValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbNOKClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnViewAddressesClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbEligibilitySVUHValueSet(Object value);
	abstract protected void onCmbEligibilitySVUHValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbProvedValueSet(Object value);
	abstract protected void oncmbEligibilityValueSet(Object value);
	abstract protected void oncmbPublicCareNeedValueSet(Object value);
	abstract protected void onChkIsChildInPublicCareValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPatientCategoryValueSet(Object value);
	abstract protected void onBtnViewCasenoteFolderClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPolicyTypeValueSet(Object value);
	abstract protected void onCmbPolicyTypeValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbEhicInstitutionValueSet(Object value);
	abstract protected void oncmbEhicCountryValueSet(Object value);
	abstract protected void onBtnEditPersonClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnAddPersonClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onGrdRelatedPersonsSelectionChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPreferredLanguageValueSet(Object value);
	abstract protected void oncmbConsentValueSet(Object value);
	abstract protected void oncmbPreferredWrittenCommMethodValueSet(Object value);
	abstract protected void oncmbPrefferedContactMethodValueSet(Object value);
	abstract protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnUpdateClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnCancelClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onBtnSaveClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onContextMenuItemClick(int menuItemID, ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormModeChangedEvent(new FormModeChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle()
			{
				onFormModeChanged();
			}
		});
		this.form.setMessageBoxClosedEvent(new MessageBoxClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(int messageBoxId, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onMessageBoxClosed(messageBoxId, result);
			}
		});
		this.form.setFormClosingEvent(new FormClosing()
		{
			private static final long serialVersionUID = 1L;
			public void handle(CancelArgs args) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormClosing(args);
			}
		});
		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.btninactivate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtninactivateClick();
			}
		});
		this.form.lyrDetails().tabPatientDetails().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabPatientDetailsActivated();
			}
		});
		this.form.lyrDetails().tabOtherDetails().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabOtherDetailsActivated();
			}
		});
		this.form.lyrDetails().tabRelatedPersons().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabRelatedPersonsActivated();
			}
		});
		this.form.lyrDetails().tabPreferences().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrDetailstabPreferencesActivated();
			}
		});
		this.form.lyrDetails().tabPatientDetails().ctnContactsAndGP().setccGpDetailsValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcGpDetailsValueChanged();
			}
		});
		this.form.lyrDetails().tabPatientDetails().setccDetailsValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcDetailsValueChanged();
			}
		});
		this.form.lyrDetails().tabPatientDetails().lyrAddress().tabPageAddress().setccAddressValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCcAddressValueChanged();
			}
		});
		this.form.lyrDetails().tabPatientDetails().lyrAddress().tabPageAddress().imbNOK().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbNOKClick();
			}
		});
		this.form.lyrDetails().tabPatientDetails().lyrAddress().tabSensitiveAddress().btnViewAddresses().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnViewAddressesClick();
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbEligibilitySVUH().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbEligibilitySVUHValueSet(value);
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbEligibilitySVUH().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbEligibilitySVUHValueChanged();
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbProved().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbProvedValueSet(value);
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbEligibility().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbEligibilityValueSet(value);
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbPublicCareNeed().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPublicCareNeedValueSet(value);
			}
		});
		this.form.lyrDetails().tabOtherDetails().chkIsChildInPublicCare().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkIsChildInPublicCareValueChanged();
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbPatientCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPatientCategoryValueSet(value);
			}
		});
		this.form.lyrDetails().tabOtherDetails().btnViewCasenoteFolder().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnViewCasenoteFolderClick();
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbPolicyType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPolicyTypeValueSet(value);
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbPolicyType().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbPolicyTypeValueChanged();
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbEhicInstitution().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbEhicInstitutionValueSet(value);
			}
		});
		this.form.lyrDetails().tabOtherDetails().cmbEhicCountry().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbEhicCountryValueSet(value);
			}
		});
		this.form.lyrDetails().tabRelatedPersons().btnEditPerson().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnEditPersonClick();
			}
		});
		this.form.lyrDetails().tabRelatedPersons().btnAddPerson().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAddPersonClick();
			}
		});
		this.form.lyrDetails().tabRelatedPersons().grdRelatedPersons().setSelectionChangedEvent(new GridSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onGrdRelatedPersonsSelectionChanged();
			}
		});
		this.form.lyrDetails().tabPreferences().cmbPreferredLanguage().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPreferredLanguageValueSet(value);
			}
		});
		this.form.lyrDetails().tabPreferences().cmbConsent().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbConsentValueSet(value);
			}
		});
		this.form.lyrDetails().tabPreferences().cmbPreferredWrittenCommMethod().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPreferredWrittenCommMethodValueSet(value);
			}
		});
		this.form.lyrDetails().tabPreferences().cmbPrefferedContactMethod().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPrefferedContactMethodValueSet(value);
			}
		});
		this.form.btnClose().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCloseClick();
			}
		});
		this.form.btnUpdate().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnUpdateClick();
			}
		});
		this.form.btnCancel().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnCancelClick();
			}
		});
		this.form.btnSave().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnSaveClick();
			}
		});
		this.form.getContextMenus().Core.getPDSRelatedPersonsMenuREMOVE_RELATIVEItem().setClickEvent(new ims.framework.delegates.MenuItemClick()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.Control sender) throws ims.framework.exceptions.PresentationLogicException
			{
				onContextMenuItemClick(GenForm.ContextMenus.CoreNamespace.PDSRelatedPersonsMenu.REMOVE_RELATIVE, sender);
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbEligibilitySVUHLookup();
		bindcmbProvedLookup();
		bindcmbEligibilityLookup();
		bindcmbPublicCareNeedLookup();
		bindcmbPatientCategoryLookup();
		bindcmbPolicyTypeLookup();
		bindcmbEhicInstitutionLookup();
		bindcmbEhicCountryLookup();
		bindcmbPreferredLanguageLookup();
		bindcmbConsentLookup();
		bindcmbPreferredWrittenCommMethodLookup();
		bindcmbPrefferedContactMethodLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbEligibilitySVUHLookup();
		bindcmbProvedLookup();
		bindcmbEligibilityLookup();
		bindcmbPublicCareNeedLookup();
		bindcmbPatientCategoryLookup();
		bindcmbPolicyTypeLookup();
		bindcmbEhicInstitutionLookup();
		bindcmbEhicCountryLookup();
		bindcmbPreferredLanguageLookup();
		bindcmbConsentLookup();
		bindcmbPreferredWrittenCommMethodLookup();
		bindcmbPrefferedContactMethodLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbEligibilitySVUHLookupValue();
		defaultcmbProvedLookupValue();
		defaultcmbEligibilityLookupValue();
		defaultcmbPublicCareNeedLookupValue();
		defaultcmbPatientCategoryLookupValue();
		defaultcmbPolicyTypeLookupValue();
		defaultcmbEhicInstitutionLookupValue();
		defaultcmbEhicCountryLookupValue();
		defaultcmbPreferredLanguageLookupValue();
		defaultcmbConsentLookupValue();
		defaultcmbPreferredWrittenCommMethodLookupValue();
		defaultcmbPrefferedContactMethodLookupValue();
	}
	private void onlyrDetailstabPatientDetailsActivated()
	{
		this.form.lyrDetails().showtabPatientDetails();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabPatientDetails());
	}
	private void onlyrDetailstabOtherDetailsActivated()
	{
		this.form.lyrDetails().showtabOtherDetails();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabOtherDetails());
	}
	private void onlyrDetailstabRelatedPersonsActivated()
	{
		this.form.lyrDetails().showtabRelatedPersons();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabRelatedPersons());
	}
	private void onlyrDetailstabPreferencesActivated()
	{
		this.form.lyrDetails().showtabPreferences();
		onlyrDetailsTabChanged(this.form.lyrDetails().tabPreferences());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
