//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.pdsdemographics;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class lyrDetailsLayer extends Layer
	{
		private static final long serialVersionUID = 1L;
		public static class tabPatientDetailsContainer extends LayerBridge
		{
			private static final long serialVersionUID = 1L;
			public static class lyrAddressLayer extends Layer
			{
				private static final long serialVersionUID = 1L;
				public static class tabPageAddressContainer extends LayerBridge
				{
					private static final long serialVersionUID = 1L;
					protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
					{
						if(form == null)
							throw new RuntimeException("Invalid form");
						if(appForm == null)
							throw new RuntimeException("Invalid application form");
						if(control == null); // this is to avoid eclipse warning only.
						if(loader == null); // this is to avoid eclipse warning only.
						if(form_images_local == null); // this is to avoid eclipse warning only.
						if(contextMenus == null); // this is to avoid eclipse warning only.
						if(startControlID == null)
							throw new RuntimeException("Invalid startControlID");
						if(designSize == null); // this is to avoid eclipse warning only.
						if(runtimeSize == null); // this is to avoid eclipse warning only.
						if(startTabIndex == null)
							throw new RuntimeException("Invalid startTabIndex");
				
				
						// Custom Controls
						ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
						RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 0, 0, 402, 299, ims.framework.enumerations.ControlAnchoring.ALL);
						ims.framework.FormUiLogic m_ccAddressForm = loader.loadComponent(102488, appForm, startControlID * 10 + 1000, anchoringHelper1.getSize(), instance1, startTabIndex.intValue() + 28, skipContextValidation);
						//ims.framework.Control m_ccAddressControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(0), new Integer(0), new Integer(402), new Integer(299), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, new Integer(startTabIndex.intValue() + 28), m_ccAddressForm, instance1 } );
						ims.framework.Control m_ccAddressControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1001),  new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL, new Integer(startTabIndex.intValue() + 28), m_ccAddressForm, instance1, Boolean.FALSE } );
						super.addControl(m_ccAddressControl);
						Menu[] menus1 = m_ccAddressForm.getForm().getRegisteredMenus();
						for(int x = 0; x < menus1.length; x++)
						{
							form.registerMenu(menus1[x]);
						}
				
						// Label Controls
						RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 9, 306, 72, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
						super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Next of Kin:", new Integer(1), null, new Integer(0)}));
				
						// TextBox Controls
						RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 80, 303, 280, 21, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
						super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), new Integer(startTabIndex.intValue() + 46), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT,Boolean.FALSE, new Integer(100), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				
						// Image Buttons Controls
						RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 366, 301, 28, 28, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
						super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), new Integer(startTabIndex.intValue() + 47), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, form_images_local.Core.NOKEnabled24, form_images_local.Core.NOKDisabled24, "NOK Details", Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
					}
		
					public ims.core.forms.pdsaddresssearch.IComponent ccAddress()
					{
						return (ims.core.forms.pdsaddresssearch.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
					}
					public void setccAddressValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
					{
						((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
					}
					public void setccAddressVisible(boolean value)
					{
						((ims.framework.Control)super.getControl(0)).setVisible(value);
					}
					public boolean isccAddressVisible()
					{
						return ((ims.framework.Control)super.getControl(0)).isVisible();
					}
					public void setccAddressEnabled(boolean value)
					{
						((ims.framework.Control)super.getControl(0)).setEnabled(value);
					}
					public boolean isccAddressEnabled()
					{
						return ((ims.framework.Control)super.getControl(0)).isEnabled();
					}
					public Label lblNOK()
					{
						return (Label)super.getControl(1);
					}
					public TextBox txtNOK()
					{
						return (TextBox)super.getControl(2);
					}
					public ImageButton imbNOK()
					{
						return (ImageButton)super.getControl(3);
					}
				}
				public static class tabSensitiveAddressContainer extends LayerBridge
				{
					private static final long serialVersionUID = 1L;
					protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
					{
						if(form == null)
							throw new RuntimeException("Invalid form");
						if(appForm == null)
							throw new RuntimeException("Invalid application form");
						if(control == null); // this is to avoid eclipse warning only.
						if(loader == null); // this is to avoid eclipse warning only.
						if(form_images_local == null); // this is to avoid eclipse warning only.
						if(contextMenus == null); // this is to avoid eclipse warning only.
						if(startControlID == null)
							throw new RuntimeException("Invalid startControlID");
						if(designSize == null); // this is to avoid eclipse warning only.
						if(runtimeSize == null); // this is to avoid eclipse warning only.
						if(startTabIndex == null)
							throw new RuntimeException("Invalid startTabIndex");
				
				
						// Button Controls
						RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 142, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
						super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), new Integer(startTabIndex.intValue() + 48), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "View Other Addresses", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
					}
		
					public Button btnViewAddresses()
					{
						return (Button)super.getControl(0);
					}
				}
		
				protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
				{
					if(form == null)
						throw new RuntimeException("Invalid form");
					if(appForm == null)
						throw new RuntimeException("Invalid application form");
					if(control == null); // this is to avoid eclipse warning only.
					if(loader == null); // this is to avoid eclipse warning only.
					if(form_images_local == null); // this is to avoid eclipse warning only.
					if(contextMenus == null); // this is to avoid eclipse warning only.
					if(startControlID == null)
						throw new RuntimeException("Invalid startControlID");
					if(designSize == null); // this is to avoid eclipse warning only.
					if(runtimeSize == null); // this is to avoid eclipse warning only.
					if(startTabIndex == null)
						throw new RuntimeException("Invalid startTabIndex");
					RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 8, 264, 410, 350, ims.framework.enumerations.ControlAnchoring.ALL);
					Container m_tabPageAddress = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1006), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"", new Integer(startControlID.intValue() + -1), new Boolean(true), new Boolean(false), new Boolean(true), new Boolean(false), new Boolean(false), new Boolean(false)});
					tabPageAddressContainer m_tabPageAddressContainer = (tabPageAddressContainer)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabPageAddressContainer.class, m_tabPageAddress, factory);
					super.addContainer(m_tabPageAddress, m_tabPageAddressContainer);
					ims.framework.utils.SizeInfo m_tabPageAddressDesignSize = new ims.framework.utils.SizeInfo(410, 350);
					ims.framework.utils.SizeInfo m_tabPageAddressRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper6.getWidth(), anchoringHelper6.getHeight());
					m_tabPageAddressContainer.setContext(form, appForm, m_tabPageAddress, loader, form_images_local, contextMenus, startControlID, m_tabPageAddressDesignSize, m_tabPageAddressRuntimeSize, startTabIndex, skipContextValidation);
					RuntimeAnchoring anchoringHelper7 = new RuntimeAnchoring(designSize, runtimeSize, 8, 264, 410, 350, ims.framework.enumerations.ControlAnchoring.ALL);
					Container m_tabSensitiveAddress = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1007), new Integer(anchoringHelper7.getX()), new Integer(anchoringHelper7.getY()), new Integer(anchoringHelper7.getWidth()), new Integer(anchoringHelper7.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL," ", new Integer(startControlID.intValue() + -1), new Boolean(false), new Boolean(false), new Boolean(true), new Boolean(false), new Boolean(false), new Boolean(false)});
					tabSensitiveAddressContainer m_tabSensitiveAddressContainer = (tabSensitiveAddressContainer)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabSensitiveAddressContainer.class, m_tabSensitiveAddress, factory);
					super.addContainer(m_tabSensitiveAddress, m_tabSensitiveAddressContainer);
					ims.framework.utils.SizeInfo m_tabSensitiveAddressDesignSize = new ims.framework.utils.SizeInfo(410, 350);
					ims.framework.utils.SizeInfo m_tabSensitiveAddressRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper7.getWidth(), anchoringHelper7.getHeight());
					m_tabSensitiveAddressContainer.setContext(form, appForm, m_tabSensitiveAddress, loader, form_images_local, contextMenus, startControlID, m_tabSensitiveAddressDesignSize, m_tabSensitiveAddressRuntimeSize, startTabIndex, skipContextValidation);
				}
				public void hide()
				{
					tabPageAddress().setVisible(false);
					tabSensitiveAddress().setVisible(false);
				}
				public void showtabPageAddress()
				{
					tabSensitiveAddress().setVisible(false);
					tabPageAddress().setVisible(true);
				}
				public void showtabSensitiveAddress()
				{
					tabPageAddress().setVisible(false);
					tabSensitiveAddress().setVisible(true);
				}
		
				public tabPageAddressContainer tabPageAddress()
				{
					return (tabPageAddressContainer)super.layers.get(0);
				}
				public tabSensitiveAddressContainer tabSensitiveAddress()
				{
					return (tabSensitiveAddressContainer)super.layers.get(1);
				}
			}
			public static class ctnContactsAndGPContainer extends ContainerBridge
			{
				private static final long serialVersionUID = 1L;
				protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
				{
					if(form == null)
						throw new RuntimeException("Invalid form");
					if(appForm == null)
						throw new RuntimeException("Invalid application form");
					if(control == null); // this is to avoid eclipse warning only.
					if(loader == null); // this is to avoid eclipse warning only.
					if(form_images_local == null); // this is to avoid eclipse warning only.
					if(contextMenus == null); // this is to avoid eclipse warning only.
					if(startControlID == null)
						throw new RuntimeException("Invalid startControlID");
					if(designSize == null); // this is to avoid eclipse warning only.
					if(runtimeSize == null); // this is to avoid eclipse warning only.
					if(startTabIndex == null)
						throw new RuntimeException("Invalid startTabIndex");
			
			
					// Custom Controls
					ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
					RuntimeAnchoring anchoringHelper8 = new RuntimeAnchoring(designSize, runtimeSize, 0, 176, 404, 144, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
					ims.framework.FormUiLogic m_ccGpDetailsForm = loader.loadComponent(102490, appForm, startControlID * 10 + 2000, anchoringHelper8.getSize(), instance1, startTabIndex.intValue() + 49, skipContextValidation);
					//ims.framework.Control m_ccGpDetailsControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1008), new Integer(0), new Integer(176), new Integer(404), new Integer(144), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, new Integer(startTabIndex.intValue() + 49), m_ccGpDetailsForm, instance1 } );
					ims.framework.Control m_ccGpDetailsControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1009),  new Integer(anchoringHelper8.getX()), new Integer(anchoringHelper8.getY()), new Integer(anchoringHelper8.getWidth()), new Integer(anchoringHelper8.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, new Integer(startTabIndex.intValue() + 49), m_ccGpDetailsForm, instance1, Boolean.FALSE } );
					super.addControl(m_ccGpDetailsControl);
					Menu[] menus1 = m_ccGpDetailsForm.getForm().getRegisteredMenus();
					for(int x = 0; x < menus1.length; x++)
					{
						form.registerMenu(menus1[x]);
					}
					ims.framework.CustomComponent instance2 = factory.getEmptyCustomComponent();
					RuntimeAnchoring anchoringHelper9 = new RuntimeAnchoring(designSize, runtimeSize, 7, 8, 393, 160, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMLEFT);
					ims.framework.FormUiLogic m_ccPatientContactsForm = loader.loadComponent(102489, appForm, startControlID * 10 + 3000, anchoringHelper9.getSize(), instance2, startTabIndex.intValue() + 26, skipContextValidation);
					//ims.framework.Control m_ccPatientContactsControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1010), new Integer(7), new Integer(8), new Integer(393), new Integer(160), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMLEFT, new Integer(startTabIndex.intValue() + 26), m_ccPatientContactsForm, instance2 } );
					ims.framework.Control m_ccPatientContactsControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1011),  new Integer(anchoringHelper9.getX()), new Integer(anchoringHelper9.getY()), new Integer(anchoringHelper9.getWidth()), new Integer(anchoringHelper9.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMLEFT, new Integer(startTabIndex.intValue() + 26), m_ccPatientContactsForm, instance2, Boolean.FALSE } );
					super.addControl(m_ccPatientContactsControl);
					Menu[] menus2 = m_ccPatientContactsForm.getForm().getRegisteredMenus();
					for(int x = 0; x < menus2.length; x++)
					{
						form.registerMenu(menus2[x]);
					}
				}
				public ims.core.forms.pdsgpdetailsindemographicscc.IComponent ccGpDetails()
				{
					return (ims.core.forms.pdsgpdetailsindemographicscc.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
				}
				public void setccGpDetailsValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
				{
					((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
				}
				public void setccGpDetailsVisible(boolean value)
				{
					((ims.framework.Control)super.getControl(0)).setVisible(value);
				}
				public boolean isccGpDetailsVisible()
				{
					return ((ims.framework.Control)super.getControl(0)).isVisible();
				}
				public void setccGpDetailsEnabled(boolean value)
				{
					((ims.framework.Control)super.getControl(0)).setEnabled(value);
				}
				public boolean isccGpDetailsEnabled()
				{
					return ((ims.framework.Control)super.getControl(0)).isEnabled();
				}
				public ims.core.forms.pdspatientcontacts.IComponent ccPatientContacts()
				{
					return (ims.core.forms.pdspatientcontacts.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(1)).getLogic();
				}
				public void setccPatientContactsValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
				{
					((CustomComponent)super.getControl(1)).setValueChangedEvent(delegate);
				}
				public void setccPatientContactsVisible(boolean value)
				{
					((ims.framework.Control)super.getControl(1)).setVisible(value);
				}
				public boolean isccPatientContactsVisible()
				{
					return ((ims.framework.Control)super.getControl(1)).isVisible();
				}
				public void setccPatientContactsEnabled(boolean value)
				{
					((ims.framework.Control)super.getControl(1)).setEnabled(value);
				}
				public boolean isccPatientContactsEnabled()
				{
					return ((ims.framework.Control)super.getControl(1)).isEnabled();
				}
			}
			public void setTabActivatedEvent(ims.framework.delegates.TabActivated delegate)
			{
				super.container.setTabActivatedEvent(delegate);
			}
			public boolean isInitialized()
			{
				return super.container.isInitialized();
			}
			protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
			{
				if(form == null)
					throw new RuntimeException("Invalid form");
				if(appForm == null)
					throw new RuntimeException("Invalid application form");
				if(control == null); // this is to avoid eclipse warning only.
				if(loader == null); // this is to avoid eclipse warning only.
				if(form_images_local == null); // this is to avoid eclipse warning only.
				if(contextMenus == null); // this is to avoid eclipse warning only.
				if(startControlID == null)
					throw new RuntimeException("Invalid startControlID");
				if(designSize == null); // this is to avoid eclipse warning only.
				if(runtimeSize == null); // this is to avoid eclipse warning only.
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex");
		
		
				// Custom Controls
				ims.framework.CustomComponent instance1 = factory.getEmptyCustomComponent();
				RuntimeAnchoring anchoringHelper10 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 808, 288, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				ims.framework.FormUiLogic m_ccDetailsForm = loader.loadComponent(102487, appForm, startControlID * 10 + 4000, anchoringHelper10.getSize(), instance1, startTabIndex.intValue() + 1, skipContextValidation);
				//ims.framework.Control m_ccDetailsControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1012), new Integer(8), new Integer(8), new Integer(808), new Integer(288), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 1), m_ccDetailsForm, instance1 } );
				ims.framework.Control m_ccDetailsControl = factory.getControl(CustomComponent.class, new Object[] { control, new Integer(startControlID.intValue() + 1013),  new Integer(anchoringHelper10.getX()), new Integer(anchoringHelper10.getY()), new Integer(anchoringHelper10.getWidth()), new Integer(anchoringHelper10.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT, new Integer(startTabIndex.intValue() + 1), m_ccDetailsForm, instance1, Boolean.FALSE } );
				super.addControl(m_ccDetailsControl);
				Menu[] menus1 = m_ccDetailsForm.getForm().getRegisteredMenus();
				for(int x = 0; x < menus1.length; x++)
				{
					form.registerMenu(menus1[x]);
				}
		
				// Layer Clasess
				lyrAddressLayer m_lyrAddressLayer = (lyrAddressLayer)LayerFlyweightFactory.getInstance().createLayer(lyrAddressLayer.class, this, factory);
				super.addLayer(m_lyrAddressLayer);
				m_lyrAddressLayer.setContext(form, appForm, control, loader, form_images_local, contextMenus, startControlID, designSize, runtimeSize, startTabIndex, skipContextValidation);
		
				// Container Clasess
				RuntimeAnchoring anchoringHelper11 = new RuntimeAnchoring(designSize, runtimeSize, 417, 288, 404, 320, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT);
				Container m_ctnContactsAndGP = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1014), new Integer(anchoringHelper11.getX()), new Integer(anchoringHelper11.getY()), new Integer(anchoringHelper11.getWidth()), new Integer(anchoringHelper11.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPBOTTOMRIGHT, null, new Boolean(false)});
				addControl(m_ctnContactsAndGP);
				ctnContactsAndGPContainer ctnContactsAndGP = (ctnContactsAndGPContainer)ContainerBridgeFlyweightFactory.getInstance().createContainerBridge(ctnContactsAndGPContainer.class, m_ctnContactsAndGP, factory);
				ims.framework.utils.SizeInfo m_ctnContactsAndGPDesignSize = new ims.framework.utils.SizeInfo(404, 320);
				ims.framework.utils.SizeInfo m_ctnContactsAndGPRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper11.getWidth(), anchoringHelper11.getHeight());
				ctnContactsAndGP.setContext(form, appForm, m_ctnContactsAndGP, loader, form_images_local, contextMenus, startControlID, m_ctnContactsAndGPDesignSize, m_ctnContactsAndGPRuntimeSize, startTabIndex, skipContextValidation);
				super.addContainer(ctnContactsAndGP);
			}

			public ims.core.forms.pdspatientdetails.IComponent ccDetails()
			{
				return (ims.core.forms.pdspatientdetails.IComponent)((ims.framework.cn.controls.CustomComponent)super.getControl(0)).getLogic();
			}
			public void setccDetailsValueChangedEvent(ims.framework.delegates.ValueChanged delegate)
			{
				((CustomComponent)super.getControl(0)).setValueChangedEvent(delegate);
			}
			public void setccDetailsVisible(boolean value)
			{
				((ims.framework.Control)super.getControl(0)).setVisible(value);
			}
			public boolean isccDetailsVisible()
			{
				return ((ims.framework.Control)super.getControl(0)).isVisible();
			}
			public void setccDetailsEnabled(boolean value)
			{
				((ims.framework.Control)super.getControl(0)).setEnabled(value);
			}
			public boolean isccDetailsEnabled()
			{
				return ((ims.framework.Control)super.getControl(0)).isEnabled();
			}
			public lyrAddressLayer lyrAddress()
			{
				return (lyrAddressLayer)super.getLayer(0);
			}
			public ctnContactsAndGPContainer ctnContactsAndGP()
			{
				return (ctnContactsAndGPContainer)super.getContainer(0);
			}
		}
		public static class tabOtherDetailsContainer extends LayerBridge
		{
			private static final long serialVersionUID = 1L;
			public static class cmbEligibilitySVUHComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.Eligibility value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.Eligibility value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.Eligibility value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.Eligibility value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.Eligibility value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.Eligibility getValue()
				{
					return (ims.core.vo.lookups.Eligibility)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.Eligibility value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbProvedComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.YesNo value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.YesNo value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.YesNo value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.YesNo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.YesNo value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.YesNo getValue()
				{
					return (ims.core.vo.lookups.YesNo)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.YesNo value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbEligibilityComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.PersonHealthActCategory value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.PersonHealthActCategory value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.PersonHealthActCategory value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.PersonHealthActCategory value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.PersonHealthActCategory value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.PersonHealthActCategory getValue()
				{
					return (ims.core.vo.lookups.PersonHealthActCategory)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.PersonHealthActCategory value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbPublicCareNeedComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.PublicCareNeed value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.PublicCareNeed value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.PublicCareNeed value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.PublicCareNeed value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.PublicCareNeed value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.PublicCareNeed getValue()
				{
					return (ims.core.vo.lookups.PublicCareNeed)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.PublicCareNeed value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbPatientCategoryComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.PatientStatus value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.PatientStatus value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.PatientStatus value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.PatientStatus value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.PatientStatus value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.PatientStatus getValue()
				{
					return (ims.core.vo.lookups.PatientStatus)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.PatientStatus value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbInsurerComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.PrivateInsuranceCompanyVo value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.PrivateInsuranceCompanyVo value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.PrivateInsuranceCompanyVo value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.PrivateInsuranceCompanyVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.PrivateInsuranceCompanyVo value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.PrivateInsuranceCompanyVo getValue()
				{
					return (ims.core.vo.PrivateInsuranceCompanyVo)super.control.getValue();
				}
				public void setValue(ims.core.vo.PrivateInsuranceCompanyVo value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbPolicyTypeComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.PrivateInsurancePolicyType value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.PrivateInsurancePolicyType value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.PrivateInsurancePolicyType value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.PrivateInsurancePolicyType value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.PrivateInsurancePolicyType value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.PrivateInsurancePolicyType getValue()
				{
					return (ims.core.vo.lookups.PrivateInsurancePolicyType)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.PrivateInsurancePolicyType value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbEhicInstitutionComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.Institution value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.Institution value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.Institution value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.Institution value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.Institution value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.Institution getValue()
				{
					return (ims.core.vo.lookups.Institution)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.Institution value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbEhicCountryComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.Country value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.Country value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.Country value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.Country value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.Country value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.Country getValue()
				{
					return (ims.core.vo.lookups.Country)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.Country value)
				{
					super.control.setValue(value);
				}
			}
			public static class grdCasenoteRow extends GridRowBridge
			{
				private static final long serialVersionUID = 1L;
				
				protected grdCasenoteRow(GridRow row)
				{
					super(row);
				}
				public void showOpened(int column)
				{
					super.row.showOpened(column);
				}
				public void setcolTypeReadOnly(boolean value)
				{
					super.row.setReadOnly(0, value);
				}
				public boolean iscolTypeReadOnly()
				{
					return super.row.isReadOnly(0);
				}
				public void showcolTypeOpened()
				{
					super.row.showOpened(0);
				}
				public String getcolType()
				{
					return (String)super.row.get(0);
				}
				public void setcolType(String value)
				{
					super.row.set(0, value);
				}
				public void setCellcolTypeTooltip(String value)
				{
					super.row.setTooltip(0, value);
				}
				public void setcolFolderReadOnly(boolean value)
				{
					super.row.setReadOnly(1, value);
				}
				public boolean iscolFolderReadOnly()
				{
					return super.row.isReadOnly(1);
				}
				public void showcolFolderOpened()
				{
					super.row.showOpened(1);
				}
				public String getcolFolder()
				{
					return (String)super.row.get(1);
				}
				public void setcolFolder(String value)
				{
					super.row.set(1, value);
				}
				public void setCellcolFolderTooltip(String value)
				{
					super.row.setTooltip(1, value);
				}
				public void setcolLocationReadOnly(boolean value)
				{
					super.row.setReadOnly(2, value);
				}
				public boolean iscolLocationReadOnly()
				{
					return super.row.isReadOnly(2);
				}
				public void showcolLocationOpened()
				{
					super.row.showOpened(2);
				}
				public String getcolLocation()
				{
					return (String)super.row.get(2);
				}
				public void setcolLocation(String value)
				{
					super.row.set(2, value);
				}
				public void setCellcolLocationTooltip(String value)
				{
					super.row.setTooltip(2, value);
				}
				public String getValue()
				{
					return (String)super.row.getValue();
				}
				public void setValue(String value)
				{
					super.row.setValue(value);
				}
			}
			public static class grdCasenoteRowCollection extends GridRowCollectionBridge
			{
				private static final long serialVersionUID = 1L;
				
				private grdCasenoteRowCollection(GridRowCollection collection)
				{
					super(collection);
				}
				public grdCasenoteRow get(int index)
				{
					return new grdCasenoteRow(super.collection.get(index));
				}
				public grdCasenoteRow newRow()
				{
					return new grdCasenoteRow(super.collection.newRow());
				}
				public grdCasenoteRow newRow(boolean autoSelect)
				{
					return new grdCasenoteRow(super.collection.newRow(autoSelect));
				}
				public grdCasenoteRow newRowAt(int index)
				{
					return new grdCasenoteRow(super.collection.newRowAt(index));
				}
				public grdCasenoteRow newRowAt(int index, boolean autoSelect)
				{
					return new grdCasenoteRow(super.collection.newRowAt(index, autoSelect));
				}
			}
			public static class grdCasenoteGrid extends GridBridge
			{
				private static final long serialVersionUID = 1L;
				
				private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
				{
					super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
				}
				public String[] getValues()
				{
					String[] listOfValues = new String[this.getRows().size()];
					for(int x = 0; x < this.getRows().size(); x++)
					{
						listOfValues[x] = this.getRows().get(x).getValue();
					}
					return listOfValues;
				}
				public String getValue()
				{
					return (String)super.grid.getValue();
				}
				public void setValue(String value)
				{
					super.grid.setValue(value);
				}
				public grdCasenoteRow getSelectedRow()
				{
					return super.grid.getSelectedRow() == null ? null : new grdCasenoteRow(super.grid.getSelectedRow());
				}
				public int getSelectedRowIndex()
				{
					return super.grid.getSelectedRowIndex();
				}
				public grdCasenoteRowCollection getRows()
				{
					return new grdCasenoteRowCollection(super.grid.getRows());
				}
				public grdCasenoteRow getRowByValue(String value)
				{
					GridRow row = super.grid.getRowByValue(value);
					return row == null?null:new grdCasenoteRow(row);
				}
				public void setcolTypeHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(0, value);
				}
				public String getcolTypeHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(0);
				}
				public void setcolFolderHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(1, value);
				}
				public String getcolFolderHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(1);
				}
				public void setcolLocationHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(2, value);
				}
				public String getcolLocationHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(2);
				}
			}
			public void setTabActivatedEvent(ims.framework.delegates.TabActivated delegate)
			{
				super.container.setTabActivatedEvent(delegate);
			}
			public boolean isInitialized()
			{
				return super.container.isInitialized();
			}
			protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
			{
				if(form == null)
					throw new RuntimeException("Invalid form");
				if(appForm == null)
					throw new RuntimeException("Invalid application form");
				if(control == null); // this is to avoid eclipse warning only.
				if(loader == null); // this is to avoid eclipse warning only.
				if(form_images_local == null); // this is to avoid eclipse warning only.
				if(contextMenus == null); // this is to avoid eclipse warning only.
				if(startControlID == null)
					throw new RuntimeException("Invalid startControlID");
				if(designSize == null); // this is to avoid eclipse warning only.
				if(runtimeSize == null); // this is to avoid eclipse warning only.
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex");
		
		
				// Panel Controls
				RuntimeAnchoring anchoringHelper12 = new RuntimeAnchoring(designSize, runtimeSize, 8, 296, 384, 160, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1015), new Integer(anchoringHelper12.getX()), new Integer(anchoringHelper12.getY()), new Integer(anchoringHelper12.getWidth()), new Integer(anchoringHelper12.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,"Medical card", new Integer(2), ""}));
				RuntimeAnchoring anchoringHelper13 = new RuntimeAnchoring(designSize, runtimeSize, 408, 296, 400, 160, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1016), new Integer(anchoringHelper13.getX()), new Integer(anchoringHelper13.getY()), new Integer(anchoringHelper13.getWidth()), new Integer(anchoringHelper13.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,"Casenote folder", new Integer(2), ""}));
				RuntimeAnchoring anchoringHelper14 = new RuntimeAnchoring(designSize, runtimeSize, 408, 8, 400, 272, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1017), new Integer(anchoringHelper14.getX()), new Integer(anchoringHelper14.getY()), new Integer(anchoringHelper14.getWidth()), new Integer(anchoringHelper14.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,"Private Insurance", new Integer(2), ""}));
				RuntimeAnchoring anchoringHelper15 = new RuntimeAnchoring(designSize, runtimeSize, 8, 128, 384, 152, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1018), new Integer(anchoringHelper15.getX()), new Integer(anchoringHelper15.getY()), new Integer(anchoringHelper15.getWidth()), new Integer(anchoringHelper15.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,"European Health Insurance Card", new Integer(2), ""}));
		
				// Label Controls
				RuntimeAnchoring anchoringHelper16 = new RuntimeAnchoring(designSize, runtimeSize, 8, 101, 61, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1019), new Integer(anchoringHelper16.getX()), new Integer(anchoringHelper16.getY()), new Integer(anchoringHelper16.getWidth()), new Integer(anchoringHelper16.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Eligibility:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper17 = new RuntimeAnchoring(designSize, runtimeSize, 16, 371, 81, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1020), new Integer(anchoringHelper17.getX()), new Integer(anchoringHelper17.getY()), new Integer(anchoringHelper17.getWidth()), new Integer(anchoringHelper17.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "medical card:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper18 = new RuntimeAnchoring(designSize, runtimeSize, 16, 328, 101, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1021), new Integer(anchoringHelper18.getX()), new Integer(anchoringHelper18.getY()), new Integer(anchoringHelper18.getWidth()), new Integer(anchoringHelper18.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Medical Card No:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper19 = new RuntimeAnchoring(designSize, runtimeSize, 16, 394, 74, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1022), new Integer(anchoringHelper19.getX()), new Integer(anchoringHelper19.getY()), new Integer(anchoringHelper19.getWidth()), new Integer(anchoringHelper19.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Expiry Date:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper20 = new RuntimeAnchoring(designSize, runtimeSize, 16, 424, 95, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1023), new Integer(anchoringHelper20.getX()), new Integer(anchoringHelper20.getY()), new Integer(anchoringHelper20.getWidth()), new Integer(anchoringHelper20.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Eligibility Proof:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper21 = new RuntimeAnchoring(designSize, runtimeSize, 232, 394, 48, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1024), new Integer(anchoringHelper21.getX()), new Integer(anchoringHelper21.getY()), new Integer(anchoringHelper21.getWidth()), new Integer(anchoringHelper21.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Proved:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper22 = new RuntimeAnchoring(designSize, runtimeSize, 16, 355, 77, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1025), new Integer(anchoringHelper22.getX()), new Integer(anchoringHelper22.getY()), new Integer(anchoringHelper22.getWidth()), new Integer(anchoringHelper22.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Eligibility for", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper23 = new RuntimeAnchoring(designSize, runtimeSize, 8, 40, 102, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1026), new Integer(anchoringHelper23.getX()), new Integer(anchoringHelper23.getY()), new Integer(anchoringHelper23.getWidth()), new Integer(anchoringHelper23.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Public care need:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper24 = new RuntimeAnchoring(designSize, runtimeSize, 8, 69, 104, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1027), new Integer(anchoringHelper24.getX()), new Integer(anchoringHelper24.getY()), new Integer(anchoringHelper24.getWidth()), new Integer(anchoringHelper24.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Patient Category:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper25 = new RuntimeAnchoring(designSize, runtimeSize, 417, 138, 91, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1028), new Integer(anchoringHelper25.getX()), new Integer(anchoringHelper25.getY()), new Integer(anchoringHelper25.getWidth()), new Integer(anchoringHelper25.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Policy Number:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper26 = new RuntimeAnchoring(designSize, runtimeSize, 416, 77, 73, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1029), new Integer(anchoringHelper26.getX()), new Integer(anchoringHelper26.getY()), new Integer(anchoringHelper26.getWidth()), new Integer(anchoringHelper26.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Policy Type:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper27 = new RuntimeAnchoring(designSize, runtimeSize, 416, 168, 88, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1030), new Integer(anchoringHelper27.getX()), new Integer(anchoringHelper27.getY()), new Integer(anchoringHelper27.getWidth()), new Integer(anchoringHelper27.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Renewal Date:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper28 = new RuntimeAnchoring(designSize, runtimeSize, 416, 48, 51, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1031), new Integer(anchoringHelper28.getX()), new Integer(anchoringHelper28.getY()), new Integer(anchoringHelper28.getWidth()), new Integer(anchoringHelper28.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Insurer:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper29 = new RuntimeAnchoring(designSize, runtimeSize, 416, 109, 78, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1032), new Integer(anchoringHelper29.getX()), new Integer(anchoringHelper29.getY()), new Integer(anchoringHelper29.getWidth()), new Integer(anchoringHelper29.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Policy Other:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper30 = new RuntimeAnchoring(designSize, runtimeSize, 16, 221, 69, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1033), new Integer(anchoringHelper30.getX()), new Integer(anchoringHelper30.getY()), new Integer(anchoringHelper30.getWidth()), new Integer(anchoringHelper30.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Institution:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper31 = new RuntimeAnchoring(designSize, runtimeSize, 16, 256, 106, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1034), new Integer(anchoringHelper31.getX()), new Integer(anchoringHelper31.getY()), new Integer(anchoringHelper31.getWidth()), new Integer(anchoringHelper31.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "EHIC Expiry Date:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper32 = new RuntimeAnchoring(designSize, runtimeSize, 16, 160, 86, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1035), new Integer(anchoringHelper32.getX()), new Integer(anchoringHelper32.getY()), new Integer(anchoringHelper32.getWidth()), new Integer(anchoringHelper32.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "EHIC Number:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper33 = new RuntimeAnchoring(designSize, runtimeSize, 16, 189, 53, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1036), new Integer(anchoringHelper33.getX()), new Integer(anchoringHelper33.getY()), new Integer(anchoringHelper33.getWidth()), new Integer(anchoringHelper33.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Country:", new Integer(1), null, new Integer(0)}));
		
				// Button Controls
				RuntimeAnchoring anchoringHelper34 = new RuntimeAnchoring(designSize, runtimeSize, 416, 423, 160, 23, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1037), new Integer(anchoringHelper34.getX()), new Integer(anchoringHelper34.getY()), new Integer(anchoringHelper34.getWidth()), new Integer(anchoringHelper34.getHeight()), new Integer(startTabIndex.intValue() + 83), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "View Casenote Folder", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		
				// TextBox Controls
				RuntimeAnchoring anchoringHelper35 = new RuntimeAnchoring(designSize, runtimeSize, 126, 326, 250, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1038), new Integer(anchoringHelper35.getX()), new Integer(anchoringHelper35.getY()), new Integer(anchoringHelper35.getWidth()), new Integer(anchoringHelper35.getHeight()), new Integer(startTabIndex.intValue() + 72), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(50), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper36 = new RuntimeAnchoring(designSize, runtimeSize, 126, 423, 250, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1039), new Integer(anchoringHelper36.getX()), new Integer(anchoringHelper36.getY()), new Integer(anchoringHelper36.getWidth()), new Integer(anchoringHelper36.getHeight()), new Integer(startTabIndex.intValue() + 76), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(255), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper37 = new RuntimeAnchoring(designSize, runtimeSize, 512, 136, 280, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1040), new Integer(anchoringHelper37.getX()), new Integer(anchoringHelper37.getY()), new Integer(anchoringHelper37.getWidth()), new Integer(anchoringHelper37.getHeight()), new Integer(startTabIndex.intValue() + 80), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(20), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.BOTH, "", ""}));
				RuntimeAnchoring anchoringHelper38 = new RuntimeAnchoring(designSize, runtimeSize, 512, 107, 280, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1041), new Integer(anchoringHelper38.getX()), new Integer(anchoringHelper38.getY()), new Integer(anchoringHelper38.getWidth()), new Integer(anchoringHelper38.getHeight()), new Integer(startTabIndex.intValue() + 79), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.BOTH, "", ""}));
				RuntimeAnchoring anchoringHelper39 = new RuntimeAnchoring(designSize, runtimeSize, 126, 157, 250, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1042), new Integer(anchoringHelper39.getX()), new Integer(anchoringHelper39.getY()), new Integer(anchoringHelper39.getWidth()), new Integer(anchoringHelper39.getHeight()), new Integer(startTabIndex.intValue() + 68), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(20), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.BOTH, "", ""}));
		
				// Date Controls
				RuntimeAnchoring anchoringHelper40 = new RuntimeAnchoring(designSize, runtimeSize, 512, 166, 140, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1043), new Integer(anchoringHelper40.getX()), new Integer(anchoringHelper40.getY()), new Integer(anchoringHelper40.getWidth()), new Integer(anchoringHelper40.getHeight()), new Integer(startTabIndex.intValue() + 81), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		
				// PartialDateBox Controls
				RuntimeAnchoring anchoringHelper41 = new RuntimeAnchoring(designSize, runtimeSize, 126, 390, 96, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(PartialDateBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1044), new Integer(anchoringHelper41.getX()), new Integer(anchoringHelper41.getY()), new Integer(anchoringHelper41.getWidth()), new Integer(anchoringHelper41.getHeight()), new Integer(startTabIndex.intValue() + 74), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, null, Boolean.FALSE, Boolean.FALSE}));
				RuntimeAnchoring anchoringHelper42 = new RuntimeAnchoring(designSize, runtimeSize, 126, 252, 129, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(PartialDateBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1045), new Integer(anchoringHelper42.getX()), new Integer(anchoringHelper42.getY()), new Integer(anchoringHelper42.getWidth()), new Integer(anchoringHelper42.getHeight()), new Integer(startTabIndex.intValue() + 71), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT, null, Boolean.FALSE, Boolean.FALSE}));
		
				// ComboBox Controls
				RuntimeAnchoring anchoringHelper43 = new RuntimeAnchoring(designSize, runtimeSize, 120, 99, 273, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbEligibilitySVUHTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1046), new Integer(anchoringHelper43.getX()), new Integer(anchoringHelper43.getY()), new Integer(anchoringHelper43.getWidth()), new Integer(anchoringHelper43.getHeight()), new Integer(startTabIndex.intValue() + 67), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbEligibilitySVUHTemp);
				cmbEligibilitySVUHComboBox cmbEligibilitySVUH = (cmbEligibilitySVUHComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbEligibilitySVUHComboBox.class, m_cmbEligibilitySVUHTemp);
				super.addComboBox(cmbEligibilitySVUH);
				RuntimeAnchoring anchoringHelper44 = new RuntimeAnchoring(designSize, runtimeSize, 288, 390, 88, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbProvedTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1047), new Integer(anchoringHelper44.getX()), new Integer(anchoringHelper44.getY()), new Integer(anchoringHelper44.getWidth()), new Integer(anchoringHelper44.getHeight()), new Integer(startTabIndex.intValue() + 75), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbProvedTemp);
				cmbProvedComboBox cmbProved = (cmbProvedComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbProvedComboBox.class, m_cmbProvedTemp);
				super.addComboBox(cmbProved);
				RuntimeAnchoring anchoringHelper45 = new RuntimeAnchoring(designSize, runtimeSize, 126, 357, 250, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbEligibilityTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1048), new Integer(anchoringHelper45.getX()), new Integer(anchoringHelper45.getY()), new Integer(anchoringHelper45.getWidth()), new Integer(anchoringHelper45.getHeight()), new Integer(startTabIndex.intValue() + 73), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.FALSE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbEligibilityTemp);
				cmbEligibilityComboBox cmbEligibility = (cmbEligibilityComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbEligibilityComboBox.class, m_cmbEligibilityTemp);
				super.addComboBox(cmbEligibility);
				RuntimeAnchoring anchoringHelper46 = new RuntimeAnchoring(designSize, runtimeSize, 120, 36, 273, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbPublicCareNeedTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1049), new Integer(anchoringHelper46.getX()), new Integer(anchoringHelper46.getY()), new Integer(anchoringHelper46.getWidth()), new Integer(anchoringHelper46.getHeight()), new Integer(startTabIndex.intValue() + 65), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbPublicCareNeedTemp);
				cmbPublicCareNeedComboBox cmbPublicCareNeed = (cmbPublicCareNeedComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPublicCareNeedComboBox.class, m_cmbPublicCareNeedTemp);
				super.addComboBox(cmbPublicCareNeed);
				RuntimeAnchoring anchoringHelper47 = new RuntimeAnchoring(designSize, runtimeSize, 120, 67, 273, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbPatientCategoryTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1050), new Integer(anchoringHelper47.getX()), new Integer(anchoringHelper47.getY()), new Integer(anchoringHelper47.getWidth()), new Integer(anchoringHelper47.getHeight()), new Integer(startTabIndex.intValue() + 66), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbPatientCategoryTemp);
				cmbPatientCategoryComboBox cmbPatientCategory = (cmbPatientCategoryComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPatientCategoryComboBox.class, m_cmbPatientCategoryTemp);
				super.addComboBox(cmbPatientCategory);
				RuntimeAnchoring anchoringHelper48 = new RuntimeAnchoring(designSize, runtimeSize, 512, 44, 280, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbInsurerTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1051), new Integer(anchoringHelper48.getX()), new Integer(anchoringHelper48.getY()), new Integer(anchoringHelper48.getWidth()), new Integer(anchoringHelper48.getHeight()), new Integer(startTabIndex.intValue() + 77), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbInsurerTemp);
				cmbInsurerComboBox cmbInsurer = (cmbInsurerComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbInsurerComboBox.class, m_cmbInsurerTemp);
				super.addComboBox(cmbInsurer);
				RuntimeAnchoring anchoringHelper49 = new RuntimeAnchoring(designSize, runtimeSize, 512, 75, 280, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbPolicyTypeTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1052), new Integer(anchoringHelper49.getX()), new Integer(anchoringHelper49.getY()), new Integer(anchoringHelper49.getWidth()), new Integer(anchoringHelper49.getHeight()), new Integer(startTabIndex.intValue() + 78), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbPolicyTypeTemp);
				cmbPolicyTypeComboBox cmbPolicyType = (cmbPolicyTypeComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPolicyTypeComboBox.class, m_cmbPolicyTypeTemp);
				super.addComboBox(cmbPolicyType);
				RuntimeAnchoring anchoringHelper50 = new RuntimeAnchoring(designSize, runtimeSize, 126, 219, 250, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbEhicInstitutionTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1053), new Integer(anchoringHelper50.getX()), new Integer(anchoringHelper50.getY()), new Integer(anchoringHelper50.getWidth()), new Integer(anchoringHelper50.getHeight()), new Integer(startTabIndex.intValue() + 70), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbEhicInstitutionTemp);
				cmbEhicInstitutionComboBox cmbEhicInstitution = (cmbEhicInstitutionComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbEhicInstitutionComboBox.class, m_cmbEhicInstitutionTemp);
				super.addComboBox(cmbEhicInstitution);
				RuntimeAnchoring anchoringHelper51 = new RuntimeAnchoring(designSize, runtimeSize, 126, 187, 250, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbEhicCountryTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1054), new Integer(anchoringHelper51.getX()), new Integer(anchoringHelper51.getY()), new Integer(anchoringHelper51.getWidth()), new Integer(anchoringHelper51.getHeight()), new Integer(startTabIndex.intValue() + 69), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbEhicCountryTemp);
				cmbEhicCountryComboBox cmbEhicCountry = (cmbEhicCountryComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbEhicCountryComboBox.class, m_cmbEhicCountryTemp);
				super.addComboBox(cmbEhicCountry);
		
				// CheckBox Controls
				RuntimeAnchoring anchoringHelper52 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 152, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(CheckBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1055), new Integer(anchoringHelper52.getX()), new Integer(anchoringHelper52.getY()), new Integer(anchoringHelper52.getWidth()), new Integer(anchoringHelper52.getHeight()), new Integer(startTabIndex.intValue() + 64), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,"Is Child in Public Care", Boolean.TRUE, null}));
		
				// Grid Controls
				RuntimeAnchoring anchoringHelper53 = new RuntimeAnchoring(designSize, runtimeSize, 416, 325, 376, 83, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				Grid m_grdCasenoteTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1056), new Integer(anchoringHelper53.getX()), new Integer(anchoringHelper53.getY()), new Integer(anchoringHelper53.getWidth()), new Integer(anchoringHelper53.getHeight()), new Integer(startTabIndex.intValue() + 82), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, Boolean.FALSE, new Integer(24), Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.TRUE});
				addControl(m_grdCasenoteTemp);
				grdCasenoteGrid grdCasenote = (grdCasenoteGrid)GridFlyweightFactory.getInstance().createGridBridge(grdCasenoteGrid.class, m_grdCasenoteTemp);
				grdCasenote.addStringColumn("Type", 0, 0, 100, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdCasenote.addStringColumn("Folder", 0, 0, 50, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdCasenote.addStringColumn("Current location", 0, 0, -1, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				super.addGrid(grdCasenote);
			}

			public Panel pnlCasenote()
			{
				return (Panel)super.getControl(1);
			}
			public Label lblEligibility()
			{
				return (Label)super.getControl(4);
			}
			public Label lblEligibility2()
			{
				return (Label)super.getControl(5);
			}
			public Label lbl3()
			{
				return (Label)super.getControl(6);
			}
			public Label lbl5()
			{
				return (Label)super.getControl(7);
			}
			public Label lbl12()
			{
				return (Label)super.getControl(8);
			}
			public Label lbl15()
			{
				return (Label)super.getControl(9);
			}
			public Label lblEligibility1()
			{
				return (Label)super.getControl(10);
			}
			public Label lblPublicCareNeed()
			{
				return (Label)super.getControl(11);
			}
			public Label lblPatientCategory()
			{
				return (Label)super.getControl(12);
			}
			public Label lbl18()
			{
				return (Label)super.getControl(13);
			}
			public Label lbl9()
			{
				return (Label)super.getControl(14);
			}
			public Label lbl10()
			{
				return (Label)super.getControl(15);
			}
			public Label lbl17()
			{
				return (Label)super.getControl(17);
			}
			public Label lbl7()
			{
				return (Label)super.getControl(18);
			}
			public Label lbl6()
			{
				return (Label)super.getControl(19);
			}
			public Label lbl11()
			{
				return (Label)super.getControl(21);
			}
			public Button btnViewCasenoteFolder()
			{
				return (Button)super.getControl(22);
			}
			public TextBox txtMedicalCardNo()
			{
				return (TextBox)super.getControl(23);
			}
			public TextBox txtEligibilityProof()
			{
				return (TextBox)super.getControl(24);
			}
			public TextBox txtPolicyNumber()
			{
				return (TextBox)super.getControl(25);
			}
			public TextBox txtPolicyOther()
			{
				return (TextBox)super.getControl(26);
			}
			public TextBox txtEhicNumber()
			{
				return (TextBox)super.getControl(27);
			}
			public DateControl dteRenewalDate()
			{
				return (DateControl)super.getControl(28);
			}
			public PartialDateBox pdtExpiryDate()
			{
				return (PartialDateBox)super.getControl(29);
			}
			public PartialDateBox pdtEhicExpiryDate()
			{
				return (PartialDateBox)super.getControl(30);
			}
			public cmbEligibilitySVUHComboBox cmbEligibilitySVUH()
			{
				return (cmbEligibilitySVUHComboBox)super.getComboBox(0);
			}
			public cmbProvedComboBox cmbProved()
			{
				return (cmbProvedComboBox)super.getComboBox(1);
			}
			public cmbEligibilityComboBox cmbEligibility()
			{
				return (cmbEligibilityComboBox)super.getComboBox(2);
			}
			public cmbPublicCareNeedComboBox cmbPublicCareNeed()
			{
				return (cmbPublicCareNeedComboBox)super.getComboBox(3);
			}
			public cmbPatientCategoryComboBox cmbPatientCategory()
			{
				return (cmbPatientCategoryComboBox)super.getComboBox(4);
			}
			public cmbInsurerComboBox cmbInsurer()
			{
				return (cmbInsurerComboBox)super.getComboBox(5);
			}
			public cmbPolicyTypeComboBox cmbPolicyType()
			{
				return (cmbPolicyTypeComboBox)super.getComboBox(6);
			}
			public cmbEhicInstitutionComboBox cmbEhicInstitution()
			{
				return (cmbEhicInstitutionComboBox)super.getComboBox(7);
			}
			public cmbEhicCountryComboBox cmbEhicCountry()
			{
				return (cmbEhicCountryComboBox)super.getComboBox(8);
			}
			public CheckBox chkIsChildInPublicCare()
			{
				return (CheckBox)super.getControl(40);
			}
			public grdCasenoteGrid grdCasenote()
			{
				return (grdCasenoteGrid)super.getGrid(0);
			}
		}
		public static class tabRelatedPersonsContainer extends LayerBridge
		{
			private static final long serialVersionUID = 1L;
			public static class grdRelatedPersonsRow extends GridRowBridge
			{
				private static final long serialVersionUID = 1L;
				
				protected grdRelatedPersonsRow(GridRow row)
				{
					super(row);
				}
				public void showOpened(int column)
				{
					super.row.showOpened(column);
				}
				public void setcolNameReadOnly(boolean value)
				{
					super.row.setReadOnly(0, value);
				}
				public boolean iscolNameReadOnly()
				{
					return super.row.isReadOnly(0);
				}
				public void showcolNameOpened()
				{
					super.row.showOpened(0);
				}
				public String getcolName()
				{
					return (String)super.row.get(0);
				}
				public void setcolName(String value)
				{
					super.row.set(0, value);
				}
				public void setCellcolNameTooltip(String value)
				{
					super.row.setTooltip(0, value);
				}
				public void setcolRoleReadOnly(boolean value)
				{
					super.row.setReadOnly(1, value);
				}
				public boolean iscolRoleReadOnly()
				{
					return super.row.isReadOnly(1);
				}
				public void showcolRoleOpened()
				{
					super.row.showOpened(1);
				}
				public String getcolRole()
				{
					return (String)super.row.get(1);
				}
				public void setcolRole(String value)
				{
					super.row.set(1, value);
				}
				public void setCellcolRoleTooltip(String value)
				{
					super.row.setTooltip(1, value);
				}
				public void setcolTypeReadOnly(boolean value)
				{
					super.row.setReadOnly(2, value);
				}
				public boolean iscolTypeReadOnly()
				{
					return super.row.isReadOnly(2);
				}
				public void showcolTypeOpened()
				{
					super.row.showOpened(2);
				}
				public String getcolType()
				{
					return (String)super.row.get(2);
				}
				public void setcolType(String value)
				{
					super.row.set(2, value);
				}
				public void setCellcolTypeTooltip(String value)
				{
					super.row.setTooltip(2, value);
				}
				public void setcolContactNoReadOnly(boolean value)
				{
					super.row.setReadOnly(3, value);
				}
				public boolean iscolContactNoReadOnly()
				{
					return super.row.isReadOnly(3);
				}
				public void showcolContactNoOpened()
				{
					super.row.showOpened(3);
				}
				public String getcolContactNo()
				{
					return (String)super.row.get(3);
				}
				public void setcolContactNo(String value)
				{
					super.row.set(3, value);
				}
				public void setCellcolContactNoTooltip(String value)
				{
					super.row.setTooltip(3, value);
				}
				public void setcolCopyCorrespondenceReadOnly(boolean value)
				{
					super.row.setReadOnly(4, value);
				}
				public boolean iscolCopyCorrespondenceReadOnly()
				{
					return super.row.isReadOnly(4);
				}
				public void showcolCopyCorrespondenceOpened()
				{
					super.row.showOpened(4);
				}
				public boolean getcolCopyCorrespondence()
				{
					return ((Boolean)super.row.get(4)).booleanValue();
				}
				public void setcolCopyCorrespondence(boolean value)
				{
					super.row.set(4, new Boolean(value));
				}
				public void setCellcolCopyCorrespondenceTooltip(String value)
				{
					super.row.setTooltip(4, value);
				}
				public void setcolNokReadOnly(boolean value)
				{
					super.row.setReadOnly(5, value);
				}
				public boolean iscolNokReadOnly()
				{
					return super.row.isReadOnly(5);
				}
				public void showcolNokOpened()
				{
					super.row.showOpened(5);
				}
				public boolean getcolNok()
				{
					return ((Boolean)super.row.get(5)).booleanValue();
				}
				public void setcolNok(boolean value)
				{
					super.row.set(5, new Boolean(value));
				}
				public void setCellcolNokTooltip(String value)
				{
					super.row.setTooltip(5, value);
				}
				public void setcolRankingReadOnly(boolean value)
				{
					super.row.setReadOnly(6, value);
				}
				public boolean iscolRankingReadOnly()
				{
					return super.row.isReadOnly(6);
				}
				public void showcolRankingOpened()
				{
					super.row.showOpened(6);
				}
				public String getcolRanking()
				{
					return (String)super.row.get(6);
				}
				public void setcolRanking(String value)
				{
					super.row.set(6, value);
				}
				public void setCellcolRankingTooltip(String value)
				{
					super.row.setTooltip(6, value);
				}
				public ims.core.vo.PatRelative getValue()
				{
					return (ims.core.vo.PatRelative)super.row.getValue();
				}
				public void setValue(ims.core.vo.PatRelative value)
				{
					super.row.setValue(value);
				}
			}
			public static class grdRelatedPersonsRowCollection extends GridRowCollectionBridge
			{
				private static final long serialVersionUID = 1L;
				
				private grdRelatedPersonsRowCollection(GridRowCollection collection)
				{
					super(collection);
				}
				public grdRelatedPersonsRow get(int index)
				{
					return new grdRelatedPersonsRow(super.collection.get(index));
				}
				public grdRelatedPersonsRow newRow()
				{
					return new grdRelatedPersonsRow(super.collection.newRow());
				}
				public grdRelatedPersonsRow newRow(boolean autoSelect)
				{
					return new grdRelatedPersonsRow(super.collection.newRow(autoSelect));
				}
				public grdRelatedPersonsRow newRowAt(int index)
				{
					return new grdRelatedPersonsRow(super.collection.newRowAt(index));
				}
				public grdRelatedPersonsRow newRowAt(int index, boolean autoSelect)
				{
					return new grdRelatedPersonsRow(super.collection.newRowAt(index, autoSelect));
				}
			}
			public static class grdRelatedPersonsGrid extends GridBridge
			{
				private static final long serialVersionUID = 1L;
				
				private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
				{
					super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
				}
				private void addBoolColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean autoPostBack, int sortOrder, boolean canGrow)
				{
					super.grid.addBoolColumn(caption, captionAlignment, alignment, width, readOnly, autoPostBack, sortOrder, canGrow);
				}
				public ims.core.vo.PatRelativeCollection getValues()
				{
					ims.core.vo.PatRelativeCollection listOfValues = new ims.core.vo.PatRelativeCollection();
					for(int x = 0; x < this.getRows().size(); x++)
					{
						listOfValues.add(this.getRows().get(x).getValue());
					}
					return listOfValues;
				}
				public ims.core.vo.PatRelative getValue()
				{
					return (ims.core.vo.PatRelative)super.grid.getValue();
				}
				public void setValue(ims.core.vo.PatRelative value)
				{
					super.grid.setValue(value);
				}
				public grdRelatedPersonsRow getSelectedRow()
				{
					return super.grid.getSelectedRow() == null ? null : new grdRelatedPersonsRow(super.grid.getSelectedRow());
				}
				public int getSelectedRowIndex()
				{
					return super.grid.getSelectedRowIndex();
				}
				public grdRelatedPersonsRowCollection getRows()
				{
					return new grdRelatedPersonsRowCollection(super.grid.getRows());
				}
				public grdRelatedPersonsRow getRowByValue(ims.core.vo.PatRelative value)
				{
					GridRow row = super.grid.getRowByValue(value);
					return row == null?null:new grdRelatedPersonsRow(row);
				}
				public void setcolNameHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(0, value);
				}
				public String getcolNameHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(0);
				}
				public void setcolRoleHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(1, value);
				}
				public String getcolRoleHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(1);
				}
				public void setcolTypeHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(2, value);
				}
				public String getcolTypeHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(2);
				}
				public void setcolContactNoHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(3, value);
				}
				public String getcolContactNoHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(3);
				}
				public void setcolCopyCorrespondenceHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(4, value);
				}
				public String getcolCopyCorrespondenceHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(4);
				}
				public void setcolNokHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(5, value);
				}
				public String getcolNokHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(5);
				}
				public void setcolRankingHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(6, value);
				}
				public String getcolRankingHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(6);
				}
			}
			public void setTabActivatedEvent(ims.framework.delegates.TabActivated delegate)
			{
				super.container.setTabActivatedEvent(delegate);
			}
			public boolean isInitialized()
			{
				return super.container.isInitialized();
			}
			protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
			{
				if(form == null)
					throw new RuntimeException("Invalid form");
				if(appForm == null)
					throw new RuntimeException("Invalid application form");
				if(control == null); // this is to avoid eclipse warning only.
				if(loader == null); // this is to avoid eclipse warning only.
				if(form_images_local == null); // this is to avoid eclipse warning only.
				if(contextMenus == null); // this is to avoid eclipse warning only.
				if(startControlID == null)
					throw new RuntimeException("Invalid startControlID");
				if(designSize == null); // this is to avoid eclipse warning only.
				if(runtimeSize == null); // this is to avoid eclipse warning only.
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex");
		
		
				// Button Controls
				RuntimeAnchoring anchoringHelper54 = new RuntimeAnchoring(designSize, runtimeSize, 151, 555, 136, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1057), new Integer(anchoringHelper54.getX()), new Integer(anchoringHelper54.getY()), new Integer(anchoringHelper54.getWidth()), new Integer(anchoringHelper54.getHeight()), new Integer(startTabIndex.intValue() + 86), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit Related Person", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
				RuntimeAnchoring anchoringHelper55 = new RuntimeAnchoring(designSize, runtimeSize, 8, 555, 136, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
				super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1058), new Integer(anchoringHelper55.getX()), new Integer(anchoringHelper55.getY()), new Integer(anchoringHelper55.getWidth()), new Integer(anchoringHelper55.getHeight()), new Integer(startTabIndex.intValue() + 85), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Add Related Person", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		
				// Grid Controls
				RuntimeAnchoring anchoringHelper56 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 808, 539, ims.framework.enumerations.ControlAnchoring.ALL);
				Grid m_grdRelatedPersonsTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1059), new Integer(anchoringHelper56.getX()), new Integer(anchoringHelper56.getY()), new Integer(anchoringHelper56.getWidth()), new Integer(anchoringHelper56.getHeight()), new Integer(startTabIndex.intValue() + 84), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,Boolean.FALSE, Boolean.FALSE, new Integer(24), Boolean.TRUE, contextMenus.Core.contextMenuPDSRelatedPersonsMenu, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.TRUE});
				addControl(m_grdRelatedPersonsTemp);
				grdRelatedPersonsGrid grdRelatedPersons = (grdRelatedPersonsGrid)GridFlyweightFactory.getInstance().createGridBridge(grdRelatedPersonsGrid.class, m_grdRelatedPersonsTemp);
				grdRelatedPersons.addStringColumn("Name", 0, 0, 210, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdRelatedPersons.setcolNameHeaderTooltip("Name");
				grdRelatedPersons.addStringColumn("Role", 0, 0, 140, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdRelatedPersons.setcolRoleHeaderTooltip("Role");
				grdRelatedPersons.addStringColumn("Type", 0, 0, 100, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdRelatedPersons.setcolTypeHeaderTooltip("Type");
				grdRelatedPersons.addStringColumn("Contact No.", 0, 0, 100, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdRelatedPersons.setcolContactNoHeaderTooltip("Contact Number");
				grdRelatedPersons.addBoolColumn("Correspondence", 0, 1, 100, true, false, 0, true);
				grdRelatedPersons.setcolCopyCorrespondenceHeaderTooltip("Copy Correspondence");
				grdRelatedPersons.addBoolColumn("NOK", 0, 1, 50, true, false, 0, true);
				grdRelatedPersons.setcolNokHeaderTooltip("Next of Kin");
				grdRelatedPersons.addStringColumn("Contact Ranking", 0, 0, -1, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdRelatedPersons.setcolRankingHeaderTooltip("Contact Ranking");
				super.addGrid(grdRelatedPersons);
			}

			public Button btnEditPerson()
			{
				return (Button)super.getControl(0);
			}
			public Button btnAddPerson()
			{
				return (Button)super.getControl(1);
			}
			public grdRelatedPersonsGrid grdRelatedPersons()
			{
				return (grdRelatedPersonsGrid)super.getGrid(0);
			}
		}
		public static class tabPreferencesContainer extends LayerBridge
		{
			private static final long serialVersionUID = 1L;
			public static class cmbPreferredLanguageComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.PDSPreferredCommunicationLanguage getValue()
				{
					return (ims.core.vo.lookups.PDSPreferredCommunicationLanguage)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.PDSPreferredCommunicationLanguage value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbConsentComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.PDSConsent value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.PDSConsent value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.PDSConsent value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.PDSConsent value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.PDSConsent value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.PDSConsent getValue()
				{
					return (ims.core.vo.lookups.PDSConsent)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.PDSConsent value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbPreferredWrittenCommMethodComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.PreferredWrittenCommunication value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.PreferredWrittenCommunication value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.PreferredWrittenCommunication value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.PreferredWrittenCommunication value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.PreferredWrittenCommunication value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.PreferredWrittenCommunication getValue()
				{
					return (ims.core.vo.lookups.PreferredWrittenCommunication)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.PreferredWrittenCommunication value)
				{
					super.control.setValue(value);
				}
			}
			public static class cmbPrefferedContactMethodComboBox extends ComboBoxBridge
			{
				private static final long serialVersionUID = 1L;
				
				public void newRow(ims.core.vo.lookups.PDSContactMethod value, String text)
				{
					super.control.newRow(value, text);
				}
				public void newRow(ims.core.vo.lookups.PDSContactMethod value, String text, ims.framework.utils.Image image)
				{
					super.control.newRow(value, text, image);
				}
				public void newRow(ims.core.vo.lookups.PDSContactMethod value, String text, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, textColor);
				}
				public void newRow(ims.core.vo.lookups.PDSContactMethod value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
				{
					super.control.newRow(value, text, image, textColor);
				}
				public boolean removeRow(ims.core.vo.lookups.PDSContactMethod value)
				{
					return super.control.removeRow(value);
				}
				public ims.core.vo.lookups.PDSContactMethod getValue()
				{
					return (ims.core.vo.lookups.PDSContactMethod)super.control.getValue();
				}
				public void setValue(ims.core.vo.lookups.PDSContactMethod value)
				{
					super.control.setValue(value);
				}
			}
			public static class grdConsentHistoryRow extends GridRowBridge
			{
				private static final long serialVersionUID = 1L;
				
				protected grdConsentHistoryRow(GridRow row)
				{
					super(row);
				}
				public void showOpened(int column)
				{
					super.row.showOpened(column);
				}
				public void setcolDateReadOnly(boolean value)
				{
					super.row.setReadOnly(0, value);
				}
				public boolean iscolDateReadOnly()
				{
					return super.row.isReadOnly(0);
				}
				public void showcolDateOpened()
				{
					super.row.showOpened(0);
				}
				public String getcolDate()
				{
					return (String)super.row.get(0);
				}
				public void setcolDate(String value)
				{
					super.row.set(0, value);
				}
				public void setCellcolDateTooltip(String value)
				{
					super.row.setTooltip(0, value);
				}
				public void setcolStatusReadOnly(boolean value)
				{
					super.row.setReadOnly(1, value);
				}
				public boolean iscolStatusReadOnly()
				{
					return super.row.isReadOnly(1);
				}
				public void showcolStatusOpened()
				{
					super.row.showOpened(1);
				}
				public String getcolStatus()
				{
					return (String)super.row.get(1);
				}
				public void setcolStatus(String value)
				{
					super.row.set(1, value);
				}
				public void setCellcolStatusTooltip(String value)
				{
					super.row.setTooltip(1, value);
				}
				public void setcolCommentsReadOnly(boolean value)
				{
					super.row.setReadOnly(2, value);
				}
				public boolean iscolCommentsReadOnly()
				{
					return super.row.isReadOnly(2);
				}
				public void showcolCommentsOpened()
				{
					super.row.showOpened(2);
				}
				public String getcolComments()
				{
					return (String)super.row.get(2);
				}
				public void setcolComments(String value)
				{
					super.row.set(2, value);
				}
				public void setCellcolCommentsTooltip(String value)
				{
					super.row.setTooltip(2, value);
				}
				public ims.core.vo.PDSConsentHistoryVo getValue()
				{
					return (ims.core.vo.PDSConsentHistoryVo)super.row.getValue();
				}
				public void setValue(ims.core.vo.PDSConsentHistoryVo value)
				{
					super.row.setValue(value);
				}
			}
			public static class grdConsentHistoryRowCollection extends GridRowCollectionBridge
			{
				private static final long serialVersionUID = 1L;
				
				private grdConsentHistoryRowCollection(GridRowCollection collection)
				{
					super(collection);
				}
				public grdConsentHistoryRow get(int index)
				{
					return new grdConsentHistoryRow(super.collection.get(index));
				}
				public grdConsentHistoryRow newRow()
				{
					return new grdConsentHistoryRow(super.collection.newRow());
				}
				public grdConsentHistoryRow newRow(boolean autoSelect)
				{
					return new grdConsentHistoryRow(super.collection.newRow(autoSelect));
				}
				public grdConsentHistoryRow newRowAt(int index)
				{
					return new grdConsentHistoryRow(super.collection.newRowAt(index));
				}
				public grdConsentHistoryRow newRowAt(int index, boolean autoSelect)
				{
					return new grdConsentHistoryRow(super.collection.newRowAt(index, autoSelect));
				}
			}
			public static class grdConsentHistoryGrid extends GridBridge
			{
				private static final long serialVersionUID = 1L;
				
				private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
				{
					super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
				}
				public ims.core.vo.PDSConsentHistoryVoCollection getValues()
				{
					ims.core.vo.PDSConsentHistoryVoCollection listOfValues = new ims.core.vo.PDSConsentHistoryVoCollection();
					for(int x = 0; x < this.getRows().size(); x++)
					{
						listOfValues.add(this.getRows().get(x).getValue());
					}
					return listOfValues;
				}
				public ims.core.vo.PDSConsentHistoryVo getValue()
				{
					return (ims.core.vo.PDSConsentHistoryVo)super.grid.getValue();
				}
				public void setValue(ims.core.vo.PDSConsentHistoryVo value)
				{
					super.grid.setValue(value);
				}
				public grdConsentHistoryRow getSelectedRow()
				{
					return super.grid.getSelectedRow() == null ? null : new grdConsentHistoryRow(super.grid.getSelectedRow());
				}
				public int getSelectedRowIndex()
				{
					return super.grid.getSelectedRowIndex();
				}
				public grdConsentHistoryRowCollection getRows()
				{
					return new grdConsentHistoryRowCollection(super.grid.getRows());
				}
				public grdConsentHistoryRow getRowByValue(ims.core.vo.PDSConsentHistoryVo value)
				{
					GridRow row = super.grid.getRowByValue(value);
					return row == null?null:new grdConsentHistoryRow(row);
				}
				public void setcolDateHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(0, value);
				}
				public String getcolDateHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(0);
				}
				public void setcolStatusHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(1, value);
				}
				public String getcolStatusHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(1);
				}
				public void setcolCommentsHeaderTooltip(String value)
				{
					super.grid.setColumnHeaderTooltip(2, value);
				}
				public String getcolCommentsHeaderTooltip()
				{
					return super.grid.getColumnHeaderTooltip(2);
				}
			}
		
			public static class Group3RadioButton extends RadioButtonBridge
			{
				private static final long serialVersionUID = 1L;
				
				protected void setContext(Integer startTabIndex, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize)
				{
					if(startTabIndex == null)
						throw new RuntimeException("Invalid startTabIndex ");
					RuntimeAnchoring anchoringHelper57 = new RuntimeAnchoring(designSize, runtimeSize, 232, 552, 51, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
					control.addButton(0, anchoringHelper57.getX(), anchoringHelper57.getY(), anchoringHelper57.getWidth(), "No", startTabIndex.intValue() + 98);
					RuntimeAnchoring anchoringHelper58 = new RuntimeAnchoring(designSize, runtimeSize, 173, 552, 51, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
					control.addButton(1, anchoringHelper58.getX(), anchoringHelper58.getY(), anchoringHelper58.getWidth(), "Yes", startTabIndex.intValue() + 97);
				}
				public void setText(Group3Enumeration option, String value)
				{
					if(option != null && option.id >= 0 && value != null)
						control.setText(option.id, value);
				}
				public Group3Enumeration getValue()
				{
					switch (super.control.getValue())
					{
						case -1: return Group3Enumeration.None;
						case 0: return Group3Enumeration.rdoOptNo;
						case 1: return Group3Enumeration.rdoOptYes;
					}
					return null;
				}
				public void setValue(Group3Enumeration value)
				{
					if(value != null)
						super.control.setValue(value.id);
					else
						super.control.setValue(Group3Enumeration.None.id);
				}
				public boolean isEnabled(Group3Enumeration option)
				{
					return super.control.isEnabled(option.id);
				}
				public void setEnabled(Group3Enumeration option, boolean value)
				{
					super.control.setEnabled(option.id, value);
				}
				public boolean isVisible(Group3Enumeration option)
				{
					return super.control.isVisible(option.id);
				}
				public void setVisible(Group3Enumeration option, boolean value)
				{
					super.control.setVisible(option.id, value);
				}
				public void setVisible(boolean value)
				{
					super.control.setVisible(value);
				}
				public void setEnabled(boolean value)
				{
					super.control.setEnabled(value);
				}
			}
			public static class Group3Enumeration implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static Group3Enumeration None = new Group3Enumeration(-1);
				public static Group3Enumeration rdoOptNo = new Group3Enumeration(0);
				public static Group3Enumeration rdoOptYes = new Group3Enumeration(1);
				private Group3Enumeration(int id)
				{
					this.id = id;
				}
				public boolean equals(Object o)
				{
					return this.id == ((Group3Enumeration)o).id;
				}
				private int id;
			}
		
			public static class Group2RadioButton extends RadioButtonBridge
			{
				private static final long serialVersionUID = 1L;
				
				protected void setContext(Integer startTabIndex, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize)
				{
					if(startTabIndex == null)
						throw new RuntimeException("Invalid startTabIndex ");
					RuntimeAnchoring anchoringHelper59 = new RuntimeAnchoring(designSize, runtimeSize, 232, 488, 51, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
					control.addButton(0, anchoringHelper59.getX(), anchoringHelper59.getY(), anchoringHelper59.getWidth(), "No", startTabIndex.intValue() + 96);
					RuntimeAnchoring anchoringHelper60 = new RuntimeAnchoring(designSize, runtimeSize, 173, 488, 51, 16, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
					control.addButton(1, anchoringHelper60.getX(), anchoringHelper60.getY(), anchoringHelper60.getWidth(), "Yes", startTabIndex.intValue() + 95);
				}
				public void setText(Group2Enumeration option, String value)
				{
					if(option != null && option.id >= 0 && value != null)
						control.setText(option.id, value);
				}
				public Group2Enumeration getValue()
				{
					switch (super.control.getValue())
					{
						case -1: return Group2Enumeration.None;
						case 0: return Group2Enumeration.rdoIRNo;
						case 1: return Group2Enumeration.rdoIRYes;
					}
					return null;
				}
				public void setValue(Group2Enumeration value)
				{
					if(value != null)
						super.control.setValue(value.id);
					else
						super.control.setValue(Group2Enumeration.None.id);
				}
				public boolean isEnabled(Group2Enumeration option)
				{
					return super.control.isEnabled(option.id);
				}
				public void setEnabled(Group2Enumeration option, boolean value)
				{
					super.control.setEnabled(option.id, value);
				}
				public boolean isVisible(Group2Enumeration option)
				{
					return super.control.isVisible(option.id);
				}
				public void setVisible(Group2Enumeration option, boolean value)
				{
					super.control.setVisible(option.id, value);
				}
				public void setVisible(boolean value)
				{
					super.control.setVisible(value);
				}
				public void setEnabled(boolean value)
				{
					super.control.setEnabled(value);
				}
			}
			public static class Group2Enumeration implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static Group2Enumeration None = new Group2Enumeration(-1);
				public static Group2Enumeration rdoIRNo = new Group2Enumeration(0);
				public static Group2Enumeration rdoIRYes = new Group2Enumeration(1);
				private Group2Enumeration(int id)
				{
					this.id = id;
				}
				public boolean equals(Object o)
				{
					return this.id == ((Group2Enumeration)o).id;
				}
				private int id;
			}
			public void setTabActivatedEvent(ims.framework.delegates.TabActivated delegate)
			{
				super.container.setTabActivatedEvent(delegate);
			}
			public boolean isInitialized()
			{
				return super.container.isInitialized();
			}
			protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
			{
				if(form == null)
					throw new RuntimeException("Invalid form");
				if(appForm == null)
					throw new RuntimeException("Invalid application form");
				if(control == null); // this is to avoid eclipse warning only.
				if(loader == null); // this is to avoid eclipse warning only.
				if(form_images_local == null); // this is to avoid eclipse warning only.
				if(contextMenus == null); // this is to avoid eclipse warning only.
				if(startControlID == null)
					throw new RuntimeException("Invalid startControlID");
				if(designSize == null); // this is to avoid eclipse warning only.
				if(runtimeSize == null); // this is to avoid eclipse warning only.
				if(startTabIndex == null)
					throw new RuntimeException("Invalid startTabIndex");
		
		
				// Panel Controls
				RuntimeAnchoring anchoringHelper61 = new RuntimeAnchoring(designSize, runtimeSize, 8, 528, 808, 56, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1060), new Integer(anchoringHelper61.getX()), new Integer(anchoringHelper61.getY()), new Integer(anchoringHelper61.getWidth()), new Integer(anchoringHelper61.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Opt out of reminders", new Integer(2), ""}));
				RuntimeAnchoring anchoringHelper62 = new RuntimeAnchoring(designSize, runtimeSize, 8, 424, 808, 96, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1061), new Integer(anchoringHelper62.getX()), new Integer(anchoringHelper62.getY()), new Integer(anchoringHelper62.getWidth()), new Integer(anchoringHelper62.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Language Communication", new Integer(2), ""}));
				RuntimeAnchoring anchoringHelper63 = new RuntimeAnchoring(designSize, runtimeSize, 8, 144, 808, 272, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1062), new Integer(anchoringHelper63.getX()), new Integer(anchoringHelper63.getY()), new Integer(anchoringHelper63.getWidth()), new Integer(anchoringHelper63.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Consent to NHS Record Sharing", new Integer(2), ""}));
				RuntimeAnchoring anchoringHelper64 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 808, 128, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
				super.addControl(factory.getControl(Panel.class, new Object[] { control, new Integer(startControlID.intValue() + 1063), new Integer(anchoringHelper64.getX()), new Integer(anchoringHelper64.getY()), new Integer(anchoringHelper64.getWidth()), new Integer(anchoringHelper64.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT,"Patient Contact Preferences", new Integer(2), ""}));
		
				// Label Controls
				RuntimeAnchoring anchoringHelper65 = new RuntimeAnchoring(designSize, runtimeSize, 16, 552, 127, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1064), new Integer(anchoringHelper65.getX()), new Integer(anchoringHelper65.getY()), new Integer(anchoringHelper65.getWidth()), new Integer(anchoringHelper65.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Opt out of reminders:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper66 = new RuntimeAnchoring(designSize, runtimeSize, 16, 488, 127, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1065), new Integer(anchoringHelper66.getX()), new Integer(anchoringHelper66.getY()), new Integer(anchoringHelper66.getWidth()), new Integer(anchoringHelper66.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Interpreter Required:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper67 = new RuntimeAnchoring(designSize, runtimeSize, 16, 456, 121, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1066), new Integer(anchoringHelper67.getX()), new Integer(anchoringHelper67.getY()), new Integer(anchoringHelper67.getWidth()), new Integer(anchoringHelper67.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Preferred Language:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper68 = new RuntimeAnchoring(designSize, runtimeSize, 16, 303, 99, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1067), new Integer(anchoringHelper68.getX()), new Integer(anchoringHelper68.getY()), new Integer(anchoringHelper68.getWidth()), new Integer(anchoringHelper68.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Consent History:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper69 = new RuntimeAnchoring(designSize, runtimeSize, 16, 235, 119, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1068), new Integer(anchoringHelper69.getX()), new Integer(anchoringHelper69.getY()), new Integer(anchoringHelper69.getWidth()), new Integer(anchoringHelper69.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Consent Comments:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper70 = new RuntimeAnchoring(designSize, runtimeSize, 16, 208, 115, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1069), new Integer(anchoringHelper70.getX()), new Integer(anchoringHelper70.getY()), new Integer(anchoringHelper70.getWidth()), new Integer(anchoringHelper70.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Date Last Changed:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper71 = new RuntimeAnchoring(designSize, runtimeSize, 16, 178, 55, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1070), new Integer(anchoringHelper71.getX()), new Integer(anchoringHelper71.getY()), new Integer(anchoringHelper71.getWidth()), new Integer(anchoringHelper71.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Consent:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper72 = new RuntimeAnchoring(designSize, runtimeSize, 16, 92, 105, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1071), new Integer(anchoringHelper72.getX()), new Integer(anchoringHelper72.getY()), new Integer(anchoringHelper72.getWidth()), new Integer(anchoringHelper72.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Preferred Written", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper73 = new RuntimeAnchoring(designSize, runtimeSize, 16, 108, 144, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1072), new Integer(anchoringHelper73.getX()), new Integer(anchoringHelper73.getY()), new Integer(anchoringHelper73.getWidth()), new Integer(anchoringHelper73.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Communication Method:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper74 = new RuntimeAnchoring(designSize, runtimeSize, 16, 64, 146, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1073), new Integer(anchoringHelper74.getX()), new Integer(anchoringHelper74.getY()), new Integer(anchoringHelper74.getWidth()), new Integer(anchoringHelper74.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Preferred Contact Times:", new Integer(1), null, new Integer(0)}));
				RuntimeAnchoring anchoringHelper75 = new RuntimeAnchoring(designSize, runtimeSize, 16, 35, 156, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1074), new Integer(anchoringHelper75.getX()), new Integer(anchoringHelper75.getY()), new Integer(anchoringHelper75.getWidth()), new Integer(anchoringHelper75.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Preferred Contact Method:", new Integer(1), null, new Integer(0)}));
		
				// TextBox Controls
				RuntimeAnchoring anchoringHelper76 = new RuntimeAnchoring(designSize, runtimeSize, 176, 235, 344, 56, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1075), new Integer(anchoringHelper76.getX()), new Integer(anchoringHelper76.getY()), new Integer(anchoringHelper76.getWidth()), new Integer(anchoringHelper76.getHeight()), new Integer(startTabIndex.intValue() + 92), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, new Integer(500), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
				RuntimeAnchoring anchoringHelper77 = new RuntimeAnchoring(designSize, runtimeSize, 176, 64, 344, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(TextBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1076), new Integer(anchoringHelper77.getX()), new Integer(anchoringHelper77.getY()), new Integer(anchoringHelper77.getWidth()), new Integer(anchoringHelper77.getHeight()), new Integer(startTabIndex.intValue() + 88), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, new Integer(40), Boolean.TRUE, Boolean.FALSE, null, null, Boolean.FALSE, ims.framework.enumerations.CharacterCasing.NORMAL, ims.framework.enumerations.TextTrimming.NONE, "", ""}));
		
				// Date Controls
				RuntimeAnchoring anchoringHelper78 = new RuntimeAnchoring(designSize, runtimeSize, 176, 205, 104, 20, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				super.addControl(factory.getControl(DateControl.class, new Object[] { control, new Integer(startControlID.intValue() + 1077), new Integer(anchoringHelper78.getX()), new Integer(anchoringHelper78.getY()), new Integer(anchoringHelper78.getWidth()), new Integer(anchoringHelper78.getHeight()), new Integer(startTabIndex.intValue() + 91), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.TRUE, null, Boolean.FALSE, null, Boolean.FALSE, null}));
		
				// ComboBox Controls
				RuntimeAnchoring anchoringHelper79 = new RuntimeAnchoring(designSize, runtimeSize, 176, 454, 344, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbPreferredLanguageTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1078), new Integer(anchoringHelper79.getX()), new Integer(anchoringHelper79.getY()), new Integer(anchoringHelper79.getWidth()), new Integer(anchoringHelper79.getHeight()), new Integer(startTabIndex.intValue() + 94), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbPreferredLanguageTemp);
				cmbPreferredLanguageComboBox cmbPreferredLanguage = (cmbPreferredLanguageComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPreferredLanguageComboBox.class, m_cmbPreferredLanguageTemp);
				super.addComboBox(cmbPreferredLanguage);
				RuntimeAnchoring anchoringHelper80 = new RuntimeAnchoring(designSize, runtimeSize, 176, 176, 344, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbConsentTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1079), new Integer(anchoringHelper80.getX()), new Integer(anchoringHelper80.getY()), new Integer(anchoringHelper80.getWidth()), new Integer(anchoringHelper80.getHeight()), new Integer(startTabIndex.intValue() + 90), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbConsentTemp);
				cmbConsentComboBox cmbConsent = (cmbConsentComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbConsentComboBox.class, m_cmbConsentTemp);
				super.addComboBox(cmbConsent);
				RuntimeAnchoring anchoringHelper81 = new RuntimeAnchoring(designSize, runtimeSize, 176, 96, 344, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbPreferredWrittenCommMethodTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1080), new Integer(anchoringHelper81.getX()), new Integer(anchoringHelper81.getY()), new Integer(anchoringHelper81.getWidth()), new Integer(anchoringHelper81.getHeight()), new Integer(startTabIndex.intValue() + 89), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbPreferredWrittenCommMethodTemp);
				cmbPreferredWrittenCommMethodComboBox cmbPreferredWrittenCommMethod = (cmbPreferredWrittenCommMethodComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPreferredWrittenCommMethodComboBox.class, m_cmbPreferredWrittenCommMethodTemp);
				super.addComboBox(cmbPreferredWrittenCommMethod);
				RuntimeAnchoring anchoringHelper82 = new RuntimeAnchoring(designSize, runtimeSize, 176, 32, 344, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				ComboBox m_cmbPrefferedContactMethodTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1081), new Integer(anchoringHelper82.getX()), new Integer(anchoringHelper82.getY()), new Integer(anchoringHelper82.getWidth()), new Integer(anchoringHelper82.getHeight()), new Integer(startTabIndex.intValue() + 87), ControlState.DISABLED, ControlState.ENABLED,ims.framework.enumerations.ControlAnchoring.TOPLEFT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
				addControl(m_cmbPrefferedContactMethodTemp);
				cmbPrefferedContactMethodComboBox cmbPrefferedContactMethod = (cmbPrefferedContactMethodComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbPrefferedContactMethodComboBox.class, m_cmbPrefferedContactMethodTemp);
				super.addComboBox(cmbPrefferedContactMethod);
		
				// Grid Controls
				RuntimeAnchoring anchoringHelper83 = new RuntimeAnchoring(designSize, runtimeSize, 176, 304, 344, 104, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
				Grid m_grdConsentHistoryTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1082), new Integer(anchoringHelper83.getX()), new Integer(anchoringHelper83.getY()), new Integer(anchoringHelper83.getWidth()), new Integer(anchoringHelper83.getHeight()), new Integer(startTabIndex.intValue() + 93), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE, Boolean.FALSE, new Integer(24), Boolean.TRUE, null, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.FALSE, Boolean.TRUE});
				addControl(m_grdConsentHistoryTemp);
				grdConsentHistoryGrid grdConsentHistory = (grdConsentHistoryGrid)GridFlyweightFactory.getInstance().createGridBridge(grdConsentHistoryGrid.class, m_grdConsentHistoryTemp);
				grdConsentHistory.addStringColumn("Date", 0, 0, 75, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdConsentHistory.addStringColumn("Consent Status", 0, 0, 100, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				grdConsentHistory.addStringColumn("Comments", 0, 0, -1, true, false, 0, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
				super.addGrid(grdConsentHistory);
		
				// RadioButton Controls
				RadioButton tmpGroup3 = (RadioButton)factory.getControl(RadioButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1083), new Integer(0), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE});
				super.addControl(tmpGroup3);
				Group3RadioButton Group3 = (Group3RadioButton)RadioButtonBridgeFlyweightFactory.getInstance().createRadioButtonBridge(Group3RadioButton.class, tmpGroup3);
				Group3.setContext(startTabIndex, designSize, runtimeSize);
				super.addRadioButton(Group3);
				RadioButton tmpGroup2 = (RadioButton)factory.getControl(RadioButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1084), new Integer(0), ControlState.DISABLED, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.TOPLEFT,Boolean.FALSE});
				super.addControl(tmpGroup2);
				Group2RadioButton Group2 = (Group2RadioButton)RadioButtonBridgeFlyweightFactory.getInstance().createRadioButtonBridge(Group2RadioButton.class, tmpGroup2);
				Group2.setContext(startTabIndex, designSize, runtimeSize);
				super.addRadioButton(Group2);
			}

			public Panel pnl6()
			{
				return (Panel)super.getControl(2);
			}
			public Label lblConsentHistory()
			{
				return (Label)super.getControl(7);
			}
			public Label lblConsentComments()
			{
				return (Label)super.getControl(8);
			}
			public Label lblDateLastChanged()
			{
				return (Label)super.getControl(9);
			}
			public Label lblConsent()
			{
				return (Label)super.getControl(10);
			}
			public TextBox txtConsentComments()
			{
				return (TextBox)super.getControl(15);
			}
			public TextBox txtPrefferedContactTimes()
			{
				return (TextBox)super.getControl(16);
			}
			public DateControl dteDateLastChanged()
			{
				return (DateControl)super.getControl(17);
			}
			public cmbPreferredLanguageComboBox cmbPreferredLanguage()
			{
				return (cmbPreferredLanguageComboBox)super.getComboBox(0);
			}
			public cmbConsentComboBox cmbConsent()
			{
				return (cmbConsentComboBox)super.getComboBox(1);
			}
			public cmbPreferredWrittenCommMethodComboBox cmbPreferredWrittenCommMethod()
			{
				return (cmbPreferredWrittenCommMethodComboBox)super.getComboBox(2);
			}
			public cmbPrefferedContactMethodComboBox cmbPrefferedContactMethod()
			{
				return (cmbPrefferedContactMethodComboBox)super.getComboBox(3);
			}
			public grdConsentHistoryGrid grdConsentHistory()
			{
				return (grdConsentHistoryGrid)super.getGrid(0);
			}
			public Group3RadioButton Group3()
			{
				return (Group3RadioButton)super.getRadioButton(0);
			}
			public Group2RadioButton Group2()
			{
				return (Group2RadioButton)super.getRadioButton(1);
			}
		}

		protected void setContext(Form form, ims.framework.interfaces.IAppForm appForm, Control control, FormLoader loader, Images form_images_local, ContextMenus contextMenus, Integer startControlID, ims.framework.utils.SizeInfo designSize, ims.framework.utils.SizeInfo runtimeSize, Integer startTabIndex, boolean skipContextValidation) throws Exception
		{
			if(form == null)
				throw new RuntimeException("Invalid form");
			if(appForm == null)
				throw new RuntimeException("Invalid application form");
			if(control == null); // this is to avoid eclipse warning only.
			if(loader == null); // this is to avoid eclipse warning only.
			if(form_images_local == null); // this is to avoid eclipse warning only.
			if(contextMenus == null); // this is to avoid eclipse warning only.
			if(startControlID == null)
				throw new RuntimeException("Invalid startControlID");
			if(designSize == null); // this is to avoid eclipse warning only.
			if(runtimeSize == null); // this is to avoid eclipse warning only.
			if(startTabIndex == null)
				throw new RuntimeException("Invalid startTabIndex");
			RuntimeAnchoring anchoringHelper84 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 832, 638, ims.framework.enumerations.ControlAnchoring.ALL);
			Container m_tabPatientDetails = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1085), new Integer(anchoringHelper84.getX()), new Integer(anchoringHelper84.getY()), new Integer(anchoringHelper84.getWidth()), new Integer(anchoringHelper84.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Patient Details", new Integer(startControlID.intValue() + 1), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(false)});
			tabPatientDetailsContainer m_tabPatientDetailsContainer = (tabPatientDetailsContainer)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabPatientDetailsContainer.class, m_tabPatientDetails, factory);
			super.addContainer(m_tabPatientDetails, m_tabPatientDetailsContainer);
			ims.framework.utils.SizeInfo m_tabPatientDetailsDesignSize = new ims.framework.utils.SizeInfo(832, 638);
			ims.framework.utils.SizeInfo m_tabPatientDetailsRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper84.getWidth(), anchoringHelper84.getHeight());
			m_tabPatientDetailsContainer.setContext(form, appForm, m_tabPatientDetails, loader, form_images_local, contextMenus, startControlID, m_tabPatientDetailsDesignSize, m_tabPatientDetailsRuntimeSize, startTabIndex, skipContextValidation);
			RuntimeAnchoring anchoringHelper85 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 832, 638, ims.framework.enumerations.ControlAnchoring.ALL);
			Container m_tabOtherDetails = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1086), new Integer(anchoringHelper85.getX()), new Integer(anchoringHelper85.getY()), new Integer(anchoringHelper85.getWidth()), new Integer(anchoringHelper85.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Additional Details", new Integer(startControlID.intValue() + 1), new Boolean(false), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(false)});
			tabOtherDetailsContainer m_tabOtherDetailsContainer = (tabOtherDetailsContainer)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabOtherDetailsContainer.class, m_tabOtherDetails, factory);
			super.addContainer(m_tabOtherDetails, m_tabOtherDetailsContainer);
			ims.framework.utils.SizeInfo m_tabOtherDetailsDesignSize = new ims.framework.utils.SizeInfo(832, 638);
			ims.framework.utils.SizeInfo m_tabOtherDetailsRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper85.getWidth(), anchoringHelper85.getHeight());
			m_tabOtherDetailsContainer.setContext(form, appForm, m_tabOtherDetails, loader, form_images_local, contextMenus, startControlID, m_tabOtherDetailsDesignSize, m_tabOtherDetailsRuntimeSize, startTabIndex, skipContextValidation);
			RuntimeAnchoring anchoringHelper86 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 832, 638, ims.framework.enumerations.ControlAnchoring.ALL);
			Container m_tabRelatedPersons = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1087), new Integer(anchoringHelper86.getX()), new Integer(anchoringHelper86.getY()), new Integer(anchoringHelper86.getWidth()), new Integer(anchoringHelper86.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Related Persons", new Integer(startControlID.intValue() + 1), new Boolean(false), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(false)});
			tabRelatedPersonsContainer m_tabRelatedPersonsContainer = (tabRelatedPersonsContainer)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabRelatedPersonsContainer.class, m_tabRelatedPersons, factory);
			super.addContainer(m_tabRelatedPersons, m_tabRelatedPersonsContainer);
			ims.framework.utils.SizeInfo m_tabRelatedPersonsDesignSize = new ims.framework.utils.SizeInfo(832, 638);
			ims.framework.utils.SizeInfo m_tabRelatedPersonsRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper86.getWidth(), anchoringHelper86.getHeight());
			m_tabRelatedPersonsContainer.setContext(form, appForm, m_tabRelatedPersons, loader, form_images_local, contextMenus, startControlID, m_tabRelatedPersonsDesignSize, m_tabRelatedPersonsRuntimeSize, startTabIndex, skipContextValidation);
			RuntimeAnchoring anchoringHelper87 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 832, 638, ims.framework.enumerations.ControlAnchoring.ALL);
			Container m_tabPreferences = (Container)factory.getControl(Container.class, new Object[] { control, new Integer(startControlID.intValue() + 1088), new Integer(anchoringHelper87.getX()), new Integer(anchoringHelper87.getY()), new Integer(anchoringHelper87.getWidth()), new Integer(anchoringHelper87.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.ALL,"Preferences and Consent", new Integer(startControlID.intValue() + 1), new Boolean(false), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(true), new Boolean(false)});
			tabPreferencesContainer m_tabPreferencesContainer = (tabPreferencesContainer)LayerBridgeFlyweightFactory.getInstance().createLayerBridge(tabPreferencesContainer.class, m_tabPreferences, factory);
			super.addContainer(m_tabPreferences, m_tabPreferencesContainer);
			ims.framework.utils.SizeInfo m_tabPreferencesDesignSize = new ims.framework.utils.SizeInfo(832, 638);
			ims.framework.utils.SizeInfo m_tabPreferencesRuntimeSize = new ims.framework.utils.SizeInfo(anchoringHelper87.getWidth(), anchoringHelper87.getHeight());
			m_tabPreferencesContainer.setContext(form, appForm, m_tabPreferences, loader, form_images_local, contextMenus, startControlID, m_tabPreferencesDesignSize, m_tabPreferencesRuntimeSize, startTabIndex, skipContextValidation);
		}
		public void hide()
		{
			tabPatientDetails().setVisible(false);
			tabOtherDetails().setVisible(false);
			tabRelatedPersons().setVisible(false);
			tabPreferences().setVisible(false);
		}
		public void settabPatientDetailsEnabled(boolean value)
		{
			tabPatientDetails().setEnabled(value);
		}
		public void settabOtherDetailsEnabled(boolean value)
		{
			tabOtherDetails().setEnabled(value);
		}
		public void settabRelatedPersonsEnabled(boolean value)
		{
			tabRelatedPersons().setEnabled(value);
		}
		public void settabPreferencesEnabled(boolean value)
		{
			tabPreferences().setEnabled(value);
		}
		public void showtabPatientDetails()
		{
			tabOtherDetails().setVisible(false);
			tabRelatedPersons().setVisible(false);
			tabPreferences().setVisible(false);
			tabPatientDetails().setVisible(true);
		}
		public void showtabOtherDetails()
		{
			tabPatientDetails().setVisible(false);
			tabRelatedPersons().setVisible(false);
			tabPreferences().setVisible(false);
			tabOtherDetails().setVisible(true);
		}
		public void showtabRelatedPersons()
		{
			tabPatientDetails().setVisible(false);
			tabOtherDetails().setVisible(false);
			tabPreferences().setVisible(false);
			tabRelatedPersons().setVisible(true);
		}
		public void showtabPreferences()
		{
			tabPatientDetails().setVisible(false);
			tabOtherDetails().setVisible(false);
			tabRelatedPersons().setVisible(false);
			tabPreferences().setVisible(true);
		}

		public tabPatientDetailsContainer tabPatientDetails()
		{
			return (tabPatientDetailsContainer)super.layers.get(0);
		}
		public tabOtherDetailsContainer tabOtherDetails()
		{
			return (tabOtherDetailsContainer)super.layers.get(1);
		}
		public tabRelatedPersonsContainer tabRelatedPersons()
		{
			return (tabRelatedPersonsContainer)super.layers.get(2);
		}
		public tabPreferencesContainer tabPreferences()
		{
			return (tabPreferencesContainer)super.layers.get(3);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
		if(!context.isValidContextType(ims.core.vo.PatientFilter.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientFilter' of the global context variable 'Core.PatientFilter' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 680);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.Core.contextMenuPDSRelatedPersonsMenu = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.Core.contextMenuPDSRelatedPersonsMenuREMOVE_RELATIVEItem = factory.createMenuItem(startControlID.intValue() + 1, "Remove Relative", true, false, new Integer(102300), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(6460001)))
			contextMenus.Core.contextMenuPDSRelatedPersonsMenu.add(contextMenus.Core.contextMenuPDSRelatedPersonsMenuREMOVE_RELATIVEItem);
		form.registerMenu(contextMenus.Core.contextMenuPDSRelatedPersonsMenu);


		// Layer Clasess
		lyrDetailsLayer m_lyrDetailsLayer = (lyrDetailsLayer)LayerFlyweightFactory.getInstance().createLayer(lyrDetailsLayer.class, this, factory);
		super.addLayer(m_lyrDetailsLayer);
		m_lyrDetailsLayer.setContext(form, appForm, control, loader, this.getImages(), contextMenus, startControlID, designSize, runtimeSize, startTabIndex, skipContextValidation);

		// Label Controls
		RuntimeAnchoring anchoringHelper88 = new RuntimeAnchoring(designSize, runtimeSize, 144, 656, 0, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1089), new Integer(anchoringHelper88.getX()), new Integer(anchoringHelper88.getY()), new Integer(anchoringHelper88.getWidth()), new Integer(anchoringHelper88.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "", new Integer(0), null, new Integer(0)}));

		// Button Controls
		RuntimeAnchoring anchoringHelper89 = new RuntimeAnchoring(designSize, runtimeSize, 605, 651, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1090), new Integer(anchoringHelper89.getX()), new Integer(anchoringHelper89.getY()), new Integer(anchoringHelper89.getWidth()), new Integer(anchoringHelper89.getHeight()), new Integer(startTabIndex.intValue() + 61), ControlState.HIDDEN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Inactivate", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper90 = new RuntimeAnchoring(designSize, runtimeSize, 765, 651, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1091), new Integer(anchoringHelper90.getX()), new Integer(anchoringHelper90.getY()), new Integer(anchoringHelper90.getWidth()), new Integer(anchoringHelper90.getHeight()), new Integer(startTabIndex.intValue() + 63), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Close", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper91 = new RuntimeAnchoring(designSize, runtimeSize, 8, 651, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1092), new Integer(anchoringHelper91.getX()), new Integer(anchoringHelper91.getY()), new Integer(anchoringHelper91.getWidth()), new Integer(anchoringHelper91.getHeight()), new Integer(startTabIndex.intValue() + 59), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Edit", Boolean.TRUE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper92 = new RuntimeAnchoring(designSize, runtimeSize, 765, 651, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1093), new Integer(anchoringHelper92.getX()), new Integer(anchoringHelper92.getY()), new Integer(anchoringHelper92.getWidth()), new Integer(anchoringHelper92.getHeight()), new Integer(startTabIndex.intValue() + 62), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Cancel", Boolean.FALSE, null, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));
		RuntimeAnchoring anchoringHelper93 = new RuntimeAnchoring(designSize, runtimeSize, 685, 651, 75, 23, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT);
		super.addControl(factory.getControl(Button.class, new Object[] { control, new Integer(startControlID.intValue() + 1094), new Integer(anchoringHelper93.getX()), new Integer(anchoringHelper93.getY()), new Integer(anchoringHelper93.getWidth()), new Integer(anchoringHelper93.getHeight()), new Integer(startTabIndex.intValue() + 60), ControlState.HIDDEN, ControlState.ENABLED, ims.framework.enumerations.ControlAnchoring.BOTTOMRIGHT, "Save", Boolean.FALSE, null, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null, ims.framework.utils.Color.Default, ims.framework.utils.Color.Default }));

		// HTML Viewer Controls
		RuntimeAnchoring anchoringHelper94 = new RuntimeAnchoring(designSize, runtimeSize, 91, 655, 508, 20, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT);
		super.addControl(factory.getControl(HTMLViewer.class, new Object[] { control, new Integer(startControlID.intValue() + 1095), new Integer(anchoringHelper94.getX()), new Integer(anchoringHelper94.getY()), new Integer(anchoringHelper94.getWidth()), new Integer(anchoringHelper94.getHeight()), new Integer(-1), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFTRIGHT, Boolean.FALSE, Boolean.FALSE, Boolean.FALSE}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public lyrDetailsLayer lyrDetails()
	{
		return (lyrDetailsLayer)super.getLayer(0);
	}
	public Label lblPDSMessageWarning()
	{
		return (Label)super.getControl(4);
	}
	public Button btninactivate()
	{
		return (Button)super.getControl(5);
	}
	public Button btnClose()
	{
		return (Button)super.getControl(6);
	}
	public Button btnUpdate()
	{
		return (Button)super.getControl(7);
	}
	public Button btnCancel()
	{
		return (Button)super.getControl(8);
	}
	public Button btnSave()
	{
		return (Button)super.getControl(9);
	}
	public HTMLViewer htmOverwritten()
	{
		return (HTMLViewer)super.getControl(10);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
			Clinical = new ClinicalForms();
			Emergency = new EmergencyForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				NOKDetails = new LocalFormName(102126);
				GPDetails = new LocalFormName(102127);
				AliasNames = new LocalFormName(102128);
				PatientSearch = new LocalFormName(102100);
				GPSelection = new LocalFormName(102137);
				OtherAddresses = new LocalFormName(102178);
				AddressSelection = new LocalFormName(102270);
				YesNoDialog = new LocalFormName(102107);
				DateOfDeathDialog = new LocalFormName(102307);
				PatientImageSelection = new LocalFormName(102328);
				CommentDialog = new LocalFormName(102319);
				AddressHistoryDlg = new LocalFormName(102372);
				AliasDialog = new LocalFormName(102374);
				BedInfoDialog = new LocalFormName(102263);
				PDSPatientSynchronisation = new LocalFormName(102449);
				PdsRelatedPersonDialog = new LocalFormName(102491);
				PatientCaseNotes = new LocalFormName(102451);
				PDSRelativesSynchronization = new LocalFormName(102501);
				DuplicatedPatients = new LocalFormName(102504);
				PDSPatientSearch = new LocalFormName(102478);
				OtherNamesDialog = new LocalFormName(102508);
			}
			public final FormName NOKDetails;
			public final FormName GPDetails;
			public final FormName AliasNames;
			public final FormName PatientSearch;
			public final FormName GPSelection;
			public final FormName OtherAddresses;
			public final FormName AddressSelection;
			public final FormName YesNoDialog;
			public final FormName DateOfDeathDialog;
			public final FormName PatientImageSelection;
			public final FormName CommentDialog;
			public final FormName AddressHistoryDlg;
			public final FormName AliasDialog;
			public final FormName BedInfoDialog;
			public final FormName PDSPatientSynchronisation;
			public final FormName PdsRelatedPersonDialog;
			public final FormName PatientCaseNotes;
			public final FormName PDSRelativesSynchronization;
			public final FormName DuplicatedPatients;
			public final FormName PDSPatientSearch;
			public final FormName OtherNamesDialog;
		}
		public final class ClinicalForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private ClinicalForms()
			{
				DeathDetails = new LocalFormName(123135);
			}
			public final FormName DeathDetails;
		}
		public final class EmergencyForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private EmergencyForms()
			{
				AttendanceDetails = new LocalFormName(129102);
			}
			public final FormName AttendanceDetails;
		}

		public CoreForms Core;
		public ClinicalForms Clinical;
		public EmergencyForms Emergency;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				ZoomInEnabled16 = new ImageHelper(102158, "Images/Core/zoom.png", new Integer(16), new Integer(16));
				ZoomInDisabled16 = new ImageHelper(102159, "Images/Core/zoom_disabled.png", new Integer(16), new Integer(16));
				FindDisabled16 = new ImageHelper(102165, "Images/Core/FindDisabled16.gif", new Integer(16), new Integer(16));
				FindEnabled16 = new ImageHelper(102164, "Images/Core/Find.gif", new Integer(16), new Integer(16));
				ClearDisabled16 = new ImageHelper(102167, "Images/Core/ClearDisabled16.gif", new Integer(16), new Integer(16));
				ClearEnabled16 = new ImageHelper(102168, "Images/Core/Clear.gif", new Integer(16), new Integer(16));
				NOKDisabled24 = new ImageHelper(102508, "Images/Core/parent_coordinator_disabled_24.png", new Integer(24), new Integer(24));
				NOKEnabled24 = new ImageHelper(102507, "Images/Core/parent_coordinator_enabled_24.png", new Integer(24), new Integer(24));
				GPDisabled24 = new ImageHelper(102510, "Images/Core/gp_disabled_24.png", new Integer(24), new Integer(24));
				GPEnabled24 = new ImageHelper(102509, "Images/Core/gp_enabled_24.png", new Integer(24), new Integer(24));
				ZoomInfoDisabled24 = new ImageHelper(102514, "Images/Core/zoom_info_disabled_24.png", new Integer(24), new Integer(24));
				ZoomInfoEnabled24 = new ImageHelper(102513, "Images/Core/zoom_info_enabled_24.png", new Integer(24), new Integer(24));
				ClearDisabled24 = new ImageHelper(102173, "Images/Core/ClearDisabled_24.png", new Integer(24), new Integer(24));
				ClearEnabled24 = new ImageHelper(102174, "Images/Core/ClearEnabled_24.png", new Integer(24), new Integer(24));
				AddFile16 = new ImageHelper(102330, "Images/Core/add-file_16x16.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image ZoomInEnabled16;
			public final ims.framework.utils.Image ZoomInDisabled16;
			public final ims.framework.utils.Image FindDisabled16;
			public final ims.framework.utils.Image FindEnabled16;
			public final ims.framework.utils.Image ClearDisabled16;
			public final ims.framework.utils.Image ClearEnabled16;
			public final ims.framework.utils.Image NOKDisabled24;
			public final ims.framework.utils.Image NOKEnabled24;
			public final ims.framework.utils.Image GPDisabled24;
			public final ims.framework.utils.Image GPEnabled24;
			public final ims.framework.utils.Image ZoomInfoDisabled24;
			public final ims.framework.utils.Image ZoomInfoEnabled24;
			public final ims.framework.utils.Image ClearDisabled24;
			public final ims.framework.utils.Image ClearEnabled24;
			public final ims.framework.utils.Image AddFile16;
		}
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_Patient = new ims.framework.ContextVariable("Patient", prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier + "");
			cxl_Context1 = new ims.framework.ContextVariable("Context1", prefix + "_lv_Core.PDSDemographics.__internal_x_context__Context1_" + componentIdentifier + "");
			cxl_DeathDetails = new ims.framework.ContextVariable("DeathDetails", prefix + "_lv_Core.PDSDemographics.__internal_x_context__DeathDetails_" + componentIdentifier + "");
			cxl_bIdentifiersEdited = new ims.framework.ContextVariable("bIdentifiersEdited", prefix + "_lv_Core.PDSDemographics.__internal_x_context__bIdentifiersEdited_" + componentIdentifier + "");
			cxl_bCommChannelsEdited = new ims.framework.ContextVariable("bCommChannelsEdited", prefix + "_lv_Core.PDSDemographics.__internal_x_context__bCommChannelsEdited_" + componentIdentifier + "");
			cxl_savedPatient = new ims.framework.ContextVariable("savedPatient", prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier + "");
			cxl_RemoveAppointmentsMessageID = new ims.framework.ContextVariable("RemoveAppointmentsMessageID", prefix + "_lv_Core.PDSDemographics.__internal_x_context__RemoveAppointmentsMessageID_" + componentIdentifier + "");
			cxl_AliasChangedMessageID = new ims.framework.ContextVariable("AliasChangedMessageID", prefix + "_lv_Core.PDSDemographics.__internal_x_context__AliasChangedMessageID_" + componentIdentifier + "");
			cxl_bSaveAliasChange = new ims.framework.ContextVariable("bSaveAliasChange", prefix + "_lv_Core.PDSDemographics.__internal_x_context__bSaveAliasChange_" + componentIdentifier + "");
			cxl_bRemovePatientAppointments = new ims.framework.ContextVariable("bRemovePatientAppointments", prefix + "_lv_Core.PDSDemographics.__internal_x_context__bRemovePatientAppointments_" + componentIdentifier + "");
			cxl_PKeyWhenTypeIsInactive = new ims.framework.ContextVariable("PKeyWhenTypeIsInactive", prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier + "");
			cxl_PDSStatusMessageID = new ims.framework.ContextVariable("PDSStatusMessageID", prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSStatusMessageID_" + componentIdentifier + "");
			cxl_bUpdatePDS = new ims.framework.ContextVariable("bUpdatePDS", prefix + "_lv_Core.PDSDemographics.__internal_x_context__bUpdatePDS_" + componentIdentifier + "");
			cxl_PCTMessageId = new ims.framework.ContextVariable("PCTMessageId", prefix + "_lv_Core.PDSDemographics.__internal_x_context__PCTMessageId_" + componentIdentifier + "");
			cxl_AliasNotFoundInPas = new ims.framework.ContextVariable("AliasNotFoundInPas", prefix + "_lv_Core.PDSDemographics.__internal_x_context__AliasNotFoundInPas_" + componentIdentifier + "");
			cxl_DemographicControlsConfig = new ims.framework.ContextVariable("DemographicControlsConfig", prefix + "_lv_Core.PDSDemographics.__internal_x_context__DemographicControlsConfig_" + componentIdentifier + "");
			cxl_IsCompanyConfigurable = new ims.framework.ContextVariable("IsCompanyConfigurable", prefix + "_lv_Core.PDSDemographics.__internal_x_context__IsCompanyConfigurable_" + componentIdentifier + "");
			cxl_PreviousGpInfo = new ims.framework.ContextVariable("PreviousGpInfo", prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier + "");
			cxl_DummyPdsError = new ims.framework.ContextVariable("DummyPdsError", prefix + "_lv_Core.PDSDemographics.__internal_x_context__DummyPdsError_" + componentIdentifier + "");
			cxl_InitialPatient = new ims.framework.ContextVariable("InitialPatient", prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier + "");
			cxl_Args = new ims.framework.ContextVariable("Args", prefix + "_lv_Core.PDSDemographics.__internal_x_context__Args_" + componentIdentifier + "");
			cxl_Action = new ims.framework.ContextVariable("Action", prefix + "_lv_Core.PDSDemographics.__internal_x_context__Action_" + componentIdentifier + "");
			cxl_MessageBoxID = new ims.framework.ContextVariable("MessageBoxID", prefix + "_lv_Core.PDSDemographics.__internal_x_context__MessageBoxID_" + componentIdentifier + "");
			cxl_Pds2LpiContext = new ims.framework.ContextVariable("Pds2LpiContext", prefix + "_lv_Core.PDSDemographics.__internal_x_context__Pds2LpiContext_" + componentIdentifier + "");
			cxl_ActivatePatientMessageBoxID = new ims.framework.ContextVariable("ActivatePatientMessageBoxID", prefix + "_lv_Core.PDSDemographics.__internal_x_context__ActivatePatientMessageBoxID_" + componentIdentifier + "");
			cxl_DecouplePatientMessageBoxID = new ims.framework.ContextVariable("DecouplePatientMessageBoxID", prefix + "_lv_Core.PDSDemographics.__internal_x_context__DecouplePatientMessageBoxID_" + componentIdentifier + "");
			cxl_FormOpenedFromNavigation = new ims.framework.ContextVariable("FormOpenedFromNavigation", prefix + "_lv_Core.PDSDemographics.__internal_x_context__FormOpenedFromNavigation_" + componentIdentifier + "");
			cxl_PDSConfiguration = new ims.framework.ContextVariable("PDSConfiguration", prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier + "");
			cxl_bSaveAddressChange = new ims.framework.ContextVariable("bSaveAddressChange", prefix + "_lv_Core.PDSDemographics.__internal_x_context__bSaveAddressChange_" + componentIdentifier + "");
			cxl_AddressChangedMessageID = new ims.framework.ContextVariable("AddressChangedMessageID", prefix + "_lv_Core.PDSDemographics.__internal_x_context__AddressChangedMessageID_" + componentIdentifier + "");
			cxl_PreDefinedFormMode = new ims.framework.ContextVariable("PreDefinedFormMode", prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreDefinedFormMode_" + componentIdentifier + "");
			cxl_RemoveRelatedPersonMessageBoxID = new ims.framework.ContextVariable("RemoveRelatedPersonMessageBoxID", prefix + "_lv_Core.PDSDemographics.__internal_x_context__RemoveRelatedPersonMessageBoxID_" + componentIdentifier + "");
			cxl_prevDateOfDeath = new ims.framework.ContextVariable("prevDateOfDeath", prefix + "_lv_Core.PDSDemographics.__internal_x_context__prevDateOfDeath_" + componentIdentifier + "");
		}
		
		public boolean getPatientIsNotNull()
		{
			return !cxl_Patient.getValueIsNull(context);
		}
		public ims.core.vo.Patient getPatient()
		{
			return (ims.core.vo.Patient)cxl_Patient.getValue(context);
		}
		public void setPatient(ims.core.vo.Patient value)
		{
			cxl_Patient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Patient = null;
		public boolean getContext1IsNotNull()
		{
			return !cxl_Context1.getValueIsNull(context);
		}
		public ims.core.vo.EpisodeofCareShortVo getContext1()
		{
			return (ims.core.vo.EpisodeofCareShortVo)cxl_Context1.getValue(context);
		}
		public void setContext1(ims.core.vo.EpisodeofCareShortVo value)
		{
			cxl_Context1.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Context1 = null;
		public boolean getDeathDetailsIsNotNull()
		{
			return !cxl_DeathDetails.getValueIsNull(context);
		}
		public ims.core.vo.DeathDetailsVo getDeathDetails()
		{
			return (ims.core.vo.DeathDetailsVo)cxl_DeathDetails.getValue(context);
		}
		public void setDeathDetails(ims.core.vo.DeathDetailsVo value)
		{
			cxl_DeathDetails.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DeathDetails = null;
		public boolean getbIdentifiersEditedIsNotNull()
		{
			return !cxl_bIdentifiersEdited.getValueIsNull(context);
		}
		public Boolean getbIdentifiersEdited()
		{
			return (Boolean)cxl_bIdentifiersEdited.getValue(context);
		}
		public void setbIdentifiersEdited(Boolean value)
		{
			cxl_bIdentifiersEdited.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bIdentifiersEdited = null;
		public boolean getbCommChannelsEditedIsNotNull()
		{
			return !cxl_bCommChannelsEdited.getValueIsNull(context);
		}
		public Boolean getbCommChannelsEdited()
		{
			return (Boolean)cxl_bCommChannelsEdited.getValue(context);
		}
		public void setbCommChannelsEdited(Boolean value)
		{
			cxl_bCommChannelsEdited.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bCommChannelsEdited = null;
		public boolean getsavedPatientIsNotNull()
		{
			return !cxl_savedPatient.getValueIsNull(context);
		}
		public ims.core.vo.Patient getsavedPatient()
		{
			return (ims.core.vo.Patient)cxl_savedPatient.getValue(context);
		}
		public void setsavedPatient(ims.core.vo.Patient value)
		{
			cxl_savedPatient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_savedPatient = null;
		public boolean getRemoveAppointmentsMessageIDIsNotNull()
		{
			return !cxl_RemoveAppointmentsMessageID.getValueIsNull(context);
		}
		public Integer getRemoveAppointmentsMessageID()
		{
			return (Integer)cxl_RemoveAppointmentsMessageID.getValue(context);
		}
		public void setRemoveAppointmentsMessageID(Integer value)
		{
			cxl_RemoveAppointmentsMessageID.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_RemoveAppointmentsMessageID = null;
		public boolean getAliasChangedMessageIDIsNotNull()
		{
			return !cxl_AliasChangedMessageID.getValueIsNull(context);
		}
		public Integer getAliasChangedMessageID()
		{
			return (Integer)cxl_AliasChangedMessageID.getValue(context);
		}
		public void setAliasChangedMessageID(Integer value)
		{
			cxl_AliasChangedMessageID.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AliasChangedMessageID = null;
		public boolean getbSaveAliasChangeIsNotNull()
		{
			return !cxl_bSaveAliasChange.getValueIsNull(context);
		}
		public Boolean getbSaveAliasChange()
		{
			return (Boolean)cxl_bSaveAliasChange.getValue(context);
		}
		public void setbSaveAliasChange(Boolean value)
		{
			cxl_bSaveAliasChange.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bSaveAliasChange = null;
		public boolean getbRemovePatientAppointmentsIsNotNull()
		{
			return !cxl_bRemovePatientAppointments.getValueIsNull(context);
		}
		public Boolean getbRemovePatientAppointments()
		{
			return (Boolean)cxl_bRemovePatientAppointments.getValue(context);
		}
		public void setbRemovePatientAppointments(Boolean value)
		{
			cxl_bRemovePatientAppointments.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bRemovePatientAppointments = null;
		public boolean getPKeyWhenTypeIsInactiveIsNotNull()
		{
			return !cxl_PKeyWhenTypeIsInactive.getValueIsNull(context);
		}
		public ims.core.vo.PatientId getPKeyWhenTypeIsInactive()
		{
			return (ims.core.vo.PatientId)cxl_PKeyWhenTypeIsInactive.getValue(context);
		}
		public void setPKeyWhenTypeIsInactive(ims.core.vo.PatientId value)
		{
			cxl_PKeyWhenTypeIsInactive.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PKeyWhenTypeIsInactive = null;
		public boolean getPDSStatusMessageIDIsNotNull()
		{
			return !cxl_PDSStatusMessageID.getValueIsNull(context);
		}
		public Integer getPDSStatusMessageID()
		{
			return (Integer)cxl_PDSStatusMessageID.getValue(context);
		}
		public void setPDSStatusMessageID(Integer value)
		{
			cxl_PDSStatusMessageID.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PDSStatusMessageID = null;
		public boolean getbUpdatePDSIsNotNull()
		{
			return !cxl_bUpdatePDS.getValueIsNull(context);
		}
		public Boolean getbUpdatePDS()
		{
			return (Boolean)cxl_bUpdatePDS.getValue(context);
		}
		public void setbUpdatePDS(Boolean value)
		{
			cxl_bUpdatePDS.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bUpdatePDS = null;
		public boolean getPCTMessageIdIsNotNull()
		{
			return !cxl_PCTMessageId.getValueIsNull(context);
		}
		public ims.framework.enumerations.DialogResult getPCTMessageId()
		{
			return (ims.framework.enumerations.DialogResult)cxl_PCTMessageId.getValue(context);
		}
		public void setPCTMessageId(ims.framework.enumerations.DialogResult value)
		{
			cxl_PCTMessageId.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PCTMessageId = null;
		public boolean getAliasNotFoundInPasIsNotNull()
		{
			return !cxl_AliasNotFoundInPas.getValueIsNull(context);
		}
		public Boolean getAliasNotFoundInPas()
		{
			return (Boolean)cxl_AliasNotFoundInPas.getValue(context);
		}
		public void setAliasNotFoundInPas(Boolean value)
		{
			cxl_AliasNotFoundInPas.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AliasNotFoundInPas = null;
		public boolean getDemographicControlsConfigIsNotNull()
		{
			return !cxl_DemographicControlsConfig.getValueIsNull(context);
		}
		public ims.core.vo.DemographicControlsConfigVoCollection getDemographicControlsConfig()
		{
			return (ims.core.vo.DemographicControlsConfigVoCollection)cxl_DemographicControlsConfig.getValue(context);
		}
		public void setDemographicControlsConfig(ims.core.vo.DemographicControlsConfigVoCollection value)
		{
			cxl_DemographicControlsConfig.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DemographicControlsConfig = null;
		public boolean getIsCompanyConfigurableIsNotNull()
		{
			return !cxl_IsCompanyConfigurable.getValueIsNull(context);
		}
		public Boolean getIsCompanyConfigurable()
		{
			return (Boolean)cxl_IsCompanyConfigurable.getValue(context);
		}
		public void setIsCompanyConfigurable(Boolean value)
		{
			cxl_IsCompanyConfigurable.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsCompanyConfigurable = null;
		public boolean getPreviousGpInfoIsNotNull()
		{
			return !cxl_PreviousGpInfo.getValueIsNull(context);
		}
		public ims.core.vo.PDSPatientGPVo getPreviousGpInfo()
		{
			return (ims.core.vo.PDSPatientGPVo)cxl_PreviousGpInfo.getValue(context);
		}
		public void setPreviousGpInfo(ims.core.vo.PDSPatientGPVo value)
		{
			cxl_PreviousGpInfo.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PreviousGpInfo = null;
		public boolean getDummyPdsErrorIsNotNull()
		{
			return !cxl_DummyPdsError.getValueIsNull(context);
		}
		public ims.core.vo.PdsErrorVo getDummyPdsError()
		{
			return (ims.core.vo.PdsErrorVo)cxl_DummyPdsError.getValue(context);
		}
		public void setDummyPdsError(ims.core.vo.PdsErrorVo value)
		{
			cxl_DummyPdsError.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DummyPdsError = null;
		public boolean getInitialPatientIsNotNull()
		{
			return !cxl_InitialPatient.getValueIsNull(context);
		}
		public ims.core.vo.Patient getInitialPatient()
		{
			return (ims.core.vo.Patient)cxl_InitialPatient.getValue(context);
		}
		public void setInitialPatient(ims.core.vo.Patient value)
		{
			cxl_InitialPatient.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_InitialPatient = null;
		public boolean getArgsIsNotNull()
		{
			return !cxl_Args.getValueIsNull(context);
		}
		public Object[] getArgs()
		{
			return (Object[])cxl_Args.getValue(context);
		}
		public void setArgs(Object[] value)
		{
			cxl_Args.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Args = null;
		public boolean getActionIsNotNull()
		{
			return !cxl_Action.getValueIsNull(context);
		}
		public Integer getAction()
		{
			return (Integer)cxl_Action.getValue(context);
		}
		public void setAction(Integer value)
		{
			cxl_Action.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Action = null;
		public boolean getMessageBoxIDIsNotNull()
		{
			return !cxl_MessageBoxID.getValueIsNull(context);
		}
		public Integer getMessageBoxID()
		{
			return (Integer)cxl_MessageBoxID.getValue(context);
		}
		public void setMessageBoxID(Integer value)
		{
			cxl_MessageBoxID.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_MessageBoxID = null;
		public boolean getPds2LpiContextIsNotNull()
		{
			return !cxl_Pds2LpiContext.getValueIsNull(context);
		}
		public ims.core.vo.Pds2LpiContextVo getPds2LpiContext()
		{
			return (ims.core.vo.Pds2LpiContextVo)cxl_Pds2LpiContext.getValue(context);
		}
		public void setPds2LpiContext(ims.core.vo.Pds2LpiContextVo value)
		{
			cxl_Pds2LpiContext.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Pds2LpiContext = null;
		public boolean getActivatePatientMessageBoxIDIsNotNull()
		{
			return !cxl_ActivatePatientMessageBoxID.getValueIsNull(context);
		}
		public Integer getActivatePatientMessageBoxID()
		{
			return (Integer)cxl_ActivatePatientMessageBoxID.getValue(context);
		}
		public void setActivatePatientMessageBoxID(Integer value)
		{
			cxl_ActivatePatientMessageBoxID.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ActivatePatientMessageBoxID = null;
		public boolean getDecouplePatientMessageBoxIDIsNotNull()
		{
			return !cxl_DecouplePatientMessageBoxID.getValueIsNull(context);
		}
		public Integer getDecouplePatientMessageBoxID()
		{
			return (Integer)cxl_DecouplePatientMessageBoxID.getValue(context);
		}
		public void setDecouplePatientMessageBoxID(Integer value)
		{
			cxl_DecouplePatientMessageBoxID.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DecouplePatientMessageBoxID = null;
		public boolean getFormOpenedFromNavigationIsNotNull()
		{
			return !cxl_FormOpenedFromNavigation.getValueIsNull(context);
		}
		public Boolean getFormOpenedFromNavigation()
		{
			return (Boolean)cxl_FormOpenedFromNavigation.getValue(context);
		}
		public void setFormOpenedFromNavigation(Boolean value)
		{
			cxl_FormOpenedFromNavigation.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_FormOpenedFromNavigation = null;
		public boolean getPDSConfigurationIsNotNull()
		{
			return !cxl_PDSConfiguration.getValueIsNull(context);
		}
		public ims.admin.vo.PDSConfigurationVo getPDSConfiguration()
		{
			return (ims.admin.vo.PDSConfigurationVo)cxl_PDSConfiguration.getValue(context);
		}
		public void setPDSConfiguration(ims.admin.vo.PDSConfigurationVo value)
		{
			cxl_PDSConfiguration.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PDSConfiguration = null;
		public boolean getbSaveAddressChangeIsNotNull()
		{
			return !cxl_bSaveAddressChange.getValueIsNull(context);
		}
		public Boolean getbSaveAddressChange()
		{
			return (Boolean)cxl_bSaveAddressChange.getValue(context);
		}
		public void setbSaveAddressChange(Boolean value)
		{
			cxl_bSaveAddressChange.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_bSaveAddressChange = null;
		public boolean getAddressChangedMessageIDIsNotNull()
		{
			return !cxl_AddressChangedMessageID.getValueIsNull(context);
		}
		public Integer getAddressChangedMessageID()
		{
			return (Integer)cxl_AddressChangedMessageID.getValue(context);
		}
		public void setAddressChangedMessageID(Integer value)
		{
			cxl_AddressChangedMessageID.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AddressChangedMessageID = null;
		public boolean getPreDefinedFormModeIsNotNull()
		{
			return !cxl_PreDefinedFormMode.getValueIsNull(context);
		}
		public ims.framework.enumerations.FormMode getPreDefinedFormMode()
		{
			return (ims.framework.enumerations.FormMode)cxl_PreDefinedFormMode.getValue(context);
		}
		public void setPreDefinedFormMode(ims.framework.enumerations.FormMode value)
		{
			cxl_PreDefinedFormMode.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PreDefinedFormMode = null;
		public boolean getRemoveRelatedPersonMessageBoxIDIsNotNull()
		{
			return !cxl_RemoveRelatedPersonMessageBoxID.getValueIsNull(context);
		}
		public Integer getRemoveRelatedPersonMessageBoxID()
		{
			return (Integer)cxl_RemoveRelatedPersonMessageBoxID.getValue(context);
		}
		public void setRemoveRelatedPersonMessageBoxID(Integer value)
		{
			cxl_RemoveRelatedPersonMessageBoxID.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_RemoveRelatedPersonMessageBoxID = null;
		public boolean getprevDateOfDeathIsNotNull()
		{
			return !cxl_prevDateOfDeath.getValueIsNull(context);
		}
		public ims.framework.utils.Date getprevDateOfDeath()
		{
			return (ims.framework.utils.Date)cxl_prevDateOfDeath.getValue(context);
		}
		public void setprevDateOfDeath(ims.framework.utils.Date value)
		{
			cxl_prevDateOfDeath.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_prevDateOfDeath = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public CoreNamespace Core = new CoreNamespace();
		public final class CoreNamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class PDSRelatedPersonsMenu implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int REMOVE_RELATIVE = 1;
			}
			public void disableAllPDSRelatedPersonsMenuMenuItems()
			{
				this.contextMenuPDSRelatedPersonsMenuREMOVE_RELATIVEItem.setEnabled(false);
			}
			public void hideAllPDSRelatedPersonsMenuMenuItems()
			{
				this.contextMenuPDSRelatedPersonsMenuREMOVE_RELATIVEItem.setVisible(false);
			}
			private Menu contextMenuPDSRelatedPersonsMenu;
			public ReadOnlyMenuItem getPDSRelatedPersonsMenuREMOVE_RELATIVEItem()
			{
				return this.contextMenuPDSRelatedPersonsMenuREMOVE_RELATIVEItem;
			}
			private MenuItem contextMenuPDSRelatedPersonsMenuREMOVE_RELATIVEItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[569];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Core.PatientImage", "BO-1028100055-ID", "ID_AppDBImage");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Core.PatientImage", "BO-1028100055-IMAGEDATA", "ImageData");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Core.PatientImage", "BO-1028100055-IMAGETYPE", "ImageType");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-ID", "ID_Gp");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Core.GPDetails", "BO-1006100001-STATUS", "Status");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ID", "ID_Patient");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SEX", "Sex");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOB", "Dob");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOD", "Dod");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-RELIGION", "Religion");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISACTIVE", "IsActive");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SCN", "SCN");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-ID", "ID_Relative");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-RELATIONSHIP", "Relationship");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-PDSUPDATEMODE", "PdsUpdateMode");
			fields[172] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-OBJECTIDENTIFIER", "Objectidentifier");
			fields[173] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-ROLE", "Role");
			fields[174] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-NHSNUM", "NhsNum");
			fields[175] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-CONTACTRANK", "ContactRank");
			fields[176] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-NOKIND", "NokInd");
			fields[177] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-CPYCORRESP", "CpyCorresp");
			fields[178] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-CALLBCKCONS", "CallbckCons");
			fields[179] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-BEFFDATECNF", "Beffdatecnf");
			fields[180] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-BETDATECNF", "Betdatecnf");
			fields[181] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-BEFFDATE", "Beffdate");
			fields[182] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-BETDATE", "Betdate");
			fields[183] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-DOB", "Dob");
			fields[184] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-ACTIVE", "Active");
			fields[185] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-PDSLANGUAGE", "PDSlanguage");
			fields[186] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[187] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-PENDING", "Pending");
			fields[188] = new ims.framework.ReportField(this.context, "_cv_Core.PdsRelatedPerson", "BO-1001100002-ISCONFIDENTIAL", "IsConfidential");
			fields[189] = new ims.framework.ReportField(this.context, "_cv_Core.GPPractice", "BO-1007100003-ID", "ID_Organisation");
			fields[190] = new ims.framework.ReportField(this.context, "_cv_Core.GPPractice", "BO-1007100003-NAME", "Name");
			fields[191] = new ims.framework.ReportField(this.context, "_cv_Core.GPPractice", "BO-1007100003-TYPE", "Type");
			fields[192] = new ims.framework.ReportField(this.context, "_cv_Core.GPPractice", "BO-1007100003-ISACTIVE", "IsActive");
			fields[193] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-ID", "ID_Location");
			fields[194] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-NAME", "Name");
			fields[195] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-ISACTIVE", "IsActive");
			fields[196] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-ISVIRTUAL", "IsVirtual");
			fields[197] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-TYPE", "Type");
			fields[198] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-DISPLAYINEDTRACKING", "DisplayInEDTracking");
			fields[199] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-CASENOTEFOLDERLOCATION", "CaseNoteFolderLocation");
			fields[200] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-SECUREACCOMMODATION", "SecureAccommodation");
			fields[201] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-TREATINGHOSP", "TreatingHosp");
			fields[202] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100007-REFERRINGHOSPITAL", "ReferringHospital");
			fields[203] = new ims.framework.ReportField(this.context, "_cv_Core.GPSurgery", "BO-1007100002-ALLSECUREACCOMMODATION", "AllSecureAccommodation");
			fields[204] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-ID", "ID_Address");
			fields[205] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE1", "Line1");
			fields[206] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE2", "Line2");
			fields[207] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE3", "Line3");
			fields[208] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE4", "Line4");
			fields[209] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-LINE5", "Line5");
			fields[210] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-POSTCODE", "PostCode");
			fields[211] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-PHONE", "Phone");
			fields[212] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-COUNTY", "County");
			fields[213] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-FAX", "Fax");
			fields[214] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-UPDATEDATE", "UpdateDate");
			fields[215] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-NOTIFICATIONDATE", "NotificationDate");
			fields[216] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-ADDRESSTYPE", "AddressType");
			fields[217] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-PCT", "PCT");
			fields[218] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-OTHERPHONE", "Otherphone");
			fields[219] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-AREAOFRESIDENCE", "AreaOfResidence");
			fields[220] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-PAFKEY", "Pafkey");
			fields[221] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-DESCRIPTION", "Description");
			fields[222] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-OBJECTIDENTIFIER", "Objectidentifier");
			fields[223] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-BEFFDATE", "Beffdate");
			fields[224] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-BEFFDATECNF", "Beffdatecnf");
			fields[225] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-BETDATE", "Betdate");
			fields[226] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-BETDATECNF", "Betdatecnf");
			fields[227] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-PDSUPDATEMODE", "PdsUpdateMode");
			fields[228] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-COUNTRY", "Country");
			fields[229] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-NOFIXEDABODE", "NoFixedAbode");
			fields[230] = new ims.framework.ReportField(this.context, "_cv_Core.NOKPersonAddress", "BO-1002100000-CAREHOME", "CareHome");
			fields[231] = new ims.framework.ReportField(this.context, "_cv_Core.DeathDetails", "BO-1003100060-ID", "ID_DeathDetails");
			fields[232] = new ims.framework.ReportField(this.context, "_cv_Core.DeathDetails", "BO-1003100060-DEATHPLACEOFDEATH", "DeathPlaceofDeath");
			fields[233] = new ims.framework.ReportField(this.context, "_cv_Core.DeathDetails", "BO-1003100060-DEATHCAUSEESTABLISHED", "DeathCauseEstablished");
			fields[234] = new ims.framework.ReportField(this.context, "_cv_Core.DeathDetails", "BO-1003100060-CANCERRELATEDDEATH", "CancerRelatedDeath");
			fields[235] = new ims.framework.ReportField(this.context, "_cv_Core.DeathDetails", "BO-1003100060-DEATHCODEDISCREPENCY", "DeathCodeDiscrepency");
			fields[236] = new ims.framework.ReportField(this.context, "_cv_Core.DeathDetails", "BO-1003100060-REFERREDTOCORRONER", "ReferredToCorroner");
			fields[237] = new ims.framework.ReportField(this.context, "_cv_Core.DeathDetails", "BO-1003100060-POSTMORTEM", "PostMortem");
			fields[238] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-ID", "ID_Relative");
			fields[239] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-RELATIONSHIP", "Relationship");
			fields[240] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-PDSUPDATEMODE", "PdsUpdateMode");
			fields[241] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-OBJECTIDENTIFIER", "Objectidentifier");
			fields[242] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-ROLE", "Role");
			fields[243] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-NHSNUM", "NhsNum");
			fields[244] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-CONTACTRANK", "ContactRank");
			fields[245] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-NOKIND", "NokInd");
			fields[246] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-CPYCORRESP", "CpyCorresp");
			fields[247] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-CALLBCKCONS", "CallbckCons");
			fields[248] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-BEFFDATECNF", "Beffdatecnf");
			fields[249] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-BETDATECNF", "Betdatecnf");
			fields[250] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-BEFFDATE", "Beffdate");
			fields[251] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-BETDATE", "Betdate");
			fields[252] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-DOB", "Dob");
			fields[253] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-ACTIVE", "Active");
			fields[254] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-PDSLANGUAGE", "PDSlanguage");
			fields[255] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[256] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-PENDING", "Pending");
			fields[257] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100002-ISCONFIDENTIAL", "IsConfidential");
			fields[258] = new ims.framework.ReportField(this.context, "_cv_Core.NOKDetails", "BO-1001100001-TEMPFIELD", "TempField");
			fields[259] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-ID", "ID_Address");
			fields[260] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-LINE1", "Line1");
			fields[261] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-LINE2", "Line2");
			fields[262] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-LINE3", "Line3");
			fields[263] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-LINE4", "Line4");
			fields[264] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-LINE5", "Line5");
			fields[265] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-POSTCODE", "PostCode");
			fields[266] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-PHONE", "Phone");
			fields[267] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-COUNTY", "County");
			fields[268] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-FAX", "Fax");
			fields[269] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-UPDATEDATE", "UpdateDate");
			fields[270] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-NOTIFICATIONDATE", "NotificationDate");
			fields[271] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-ADDRESSTYPE", "AddressType");
			fields[272] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-PCT", "PCT");
			fields[273] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-OTHERPHONE", "Otherphone");
			fields[274] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-AREAOFRESIDENCE", "AreaOfResidence");
			fields[275] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-PAFKEY", "Pafkey");
			fields[276] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-DESCRIPTION", "Description");
			fields[277] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-OBJECTIDENTIFIER", "Objectidentifier");
			fields[278] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-BEFFDATE", "Beffdate");
			fields[279] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-BEFFDATECNF", "Beffdatecnf");
			fields[280] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-BETDATE", "Betdate");
			fields[281] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-BETDATECNF", "Betdatecnf");
			fields[282] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-PDSUPDATEMODE", "PdsUpdateMode");
			fields[283] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-COUNTRY", "Country");
			fields[284] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-NOFIXEDABODE", "NoFixedAbode");
			fields[285] = new ims.framework.ReportField(this.context, "_cv_Core.PersonAddress", "BO-1002100000-CAREHOME", "CareHome");
			fields[286] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ID", "ID_Patient");
			fields[287] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SEX", "Sex");
			fields[288] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DOB", "Dob");
			fields[289] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DOD", "Dod");
			fields[290] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-RELIGION", "Religion");
			fields[291] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ISACTIVE", "IsActive");
			fields[292] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[293] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[294] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SCN", "SCN");
			fields[295] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[296] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[297] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[298] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[299] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[300] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[301] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[302] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[303] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[304] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[305] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[306] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-OCCUPATION", "Occupation");
			fields[307] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-LANGUAGE", "Language");
			fields[308] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[309] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-HOMEFOLDERLOCATION", "HomeFolderLocation");
			fields[310] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PREFCOMMLANGUAGE", "PrefCommLanguage");
			fields[311] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-COPYPATIENTONCORRESPONDENCE", "CopyPatientOnCorrespondence");
			fields[312] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-COPYPATIENTONCORRESPONDENCEDATE", "CopyPatientOnCorrespondenceDate");
			fields[313] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-HEALTHBOARD", "HealthBoard");
			fields[314] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PDSDEATHNOTIFICATIONSTATUS", "PDSDeathNotificationStatus");
			fields[315] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[316] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SCHOOL", "School");
			fields[317] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-OVERSEASVISITOR", "OverseasVisitor");
			fields[318] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-OVERSEASCLASSIFICATION", "OverseasClassification");
			fields[319] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-HASLIVEDUK", "HasLivedUK");
			fields[320] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-DECOUPLED", "Decoupled");
			fields[321] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PDSDATELASTCHECKED", "PDSDateLastChecked");
			fields[322] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-SCHOOLORCOLLEGE", "SchoolOrCollege");
			fields[323] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-ISCHILDINPUBLICCARE", "IsChildInPublicCare");
			fields[324] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-PUBLICCARENEED", "PublicCareNeed");
			fields[325] = new ims.framework.ReportField(this.context, "_cv_Core.PatientFromPDS", "BO-1001100000-TXTOCCUPATION", "TxtOccupation");
			fields[326] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ID", "ID_Patient");
			fields[327] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SEX", "Sex");
			fields[328] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DOB", "Dob");
			fields[329] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DOD", "Dod");
			fields[330] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-RELIGION", "Religion");
			fields[331] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ISACTIVE", "IsActive");
			fields[332] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[333] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[334] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SCN", "SCN");
			fields[335] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[336] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[337] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[338] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[339] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[340] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[341] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[342] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[343] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[344] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[345] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[346] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-OCCUPATION", "Occupation");
			fields[347] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-LANGUAGE", "Language");
			fields[348] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[349] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-HOMEFOLDERLOCATION", "HomeFolderLocation");
			fields[350] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PREFCOMMLANGUAGE", "PrefCommLanguage");
			fields[351] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-COPYPATIENTONCORRESPONDENCE", "CopyPatientOnCorrespondence");
			fields[352] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-COPYPATIENTONCORRESPONDENCEDATE", "CopyPatientOnCorrespondenceDate");
			fields[353] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-HEALTHBOARD", "HealthBoard");
			fields[354] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PDSDEATHNOTIFICATIONSTATUS", "PDSDeathNotificationStatus");
			fields[355] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[356] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SCHOOL", "School");
			fields[357] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-OVERSEASVISITOR", "OverseasVisitor");
			fields[358] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-OVERSEASCLASSIFICATION", "OverseasClassification");
			fields[359] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-HASLIVEDUK", "HasLivedUK");
			fields[360] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-DECOUPLED", "Decoupled");
			fields[361] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PDSDATELASTCHECKED", "PDSDateLastChecked");
			fields[362] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-SCHOOLORCOLLEGE", "SchoolOrCollege");
			fields[363] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-ISCHILDINPUBLICCARE", "IsChildInPublicCare");
			fields[364] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-PUBLICCARENEED", "PublicCareNeed");
			fields[365] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeSynchronized", "BO-1001100000-TXTOCCUPATION", "TxtOccupation");
			fields[366] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[367] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[368] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[369] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[370] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[371] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[372] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[373] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[374] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[375] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[376] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[377] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[378] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[379] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[380] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[381] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[382] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[383] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[384] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[385] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[386] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-OCCUPATION", "Occupation");
			fields[387] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-LANGUAGE", "Language");
			fields[388] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[389] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-HOMEFOLDERLOCATION", "HomeFolderLocation");
			fields[390] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PREFCOMMLANGUAGE", "PrefCommLanguage");
			fields[391] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-COPYPATIENTONCORRESPONDENCE", "CopyPatientOnCorrespondence");
			fields[392] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-COPYPATIENTONCORRESPONDENCEDATE", "CopyPatientOnCorrespondenceDate");
			fields[393] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-HEALTHBOARD", "HealthBoard");
			fields[394] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PDSDEATHNOTIFICATIONSTATUS", "PDSDeathNotificationStatus");
			fields[395] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[396] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SCHOOL", "School");
			fields[397] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-OVERSEASVISITOR", "OverseasVisitor");
			fields[398] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-OVERSEASCLASSIFICATION", "OverseasClassification");
			fields[399] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-HASLIVEDUK", "HasLivedUK");
			fields[400] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-DECOUPLED", "Decoupled");
			fields[401] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PDSDATELASTCHECKED", "PDSDateLastChecked");
			fields[402] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-SCHOOLORCOLLEGE", "SchoolOrCollege");
			fields[403] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-ISCHILDINPUBLICCARE", "IsChildInPublicCare");
			fields[404] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-PUBLICCARENEED", "PublicCareNeed");
			fields[405] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Patient_" + componentIdentifier, "BO-1001100000-TXTOCCUPATION", "TxtOccupation");
			fields[406] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Context1_" + componentIdentifier, "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[407] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Context1_" + componentIdentifier, "BO-1004100018-CARESPELL", "CareSpell");
			fields[408] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Context1_" + componentIdentifier, "BO-1004100018-SPECIALTY", "Specialty");
			fields[409] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Context1_" + componentIdentifier, "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[410] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Context1_" + componentIdentifier, "BO-1004100018-STARTDATE", "StartDate");
			fields[411] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__Context1_" + componentIdentifier, "BO-1004100018-ENDDATE", "EndDate");
			fields[412] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__DeathDetails_" + componentIdentifier, "BO-1003100060-ID", "ID_DeathDetails");
			fields[413] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__DeathDetails_" + componentIdentifier, "BO-1003100060-DEATHPLACEOFDEATH", "DeathPlaceofDeath");
			fields[414] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__DeathDetails_" + componentIdentifier, "BO-1003100060-DEATHCAUSEESTABLISHED", "DeathCauseEstablished");
			fields[415] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__DeathDetails_" + componentIdentifier, "BO-1003100060-CANCERRELATEDDEATH", "CancerRelatedDeath");
			fields[416] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__DeathDetails_" + componentIdentifier, "BO-1003100060-DEATHCODEDISCREPENCY", "DeathCodeDiscrepency");
			fields[417] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__DeathDetails_" + componentIdentifier, "BO-1003100060-REFERREDTOCORRONER", "ReferredToCorroner");
			fields[418] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__DeathDetails_" + componentIdentifier, "BO-1003100060-POSTMORTEM", "PostMortem");
			fields[419] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[420] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[421] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[422] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[423] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[424] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[425] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[426] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[427] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[428] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[429] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[430] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[431] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[432] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[433] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[434] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[435] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[436] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[437] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[438] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[439] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-OCCUPATION", "Occupation");
			fields[440] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-LANGUAGE", "Language");
			fields[441] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[442] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-HOMEFOLDERLOCATION", "HomeFolderLocation");
			fields[443] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-PREFCOMMLANGUAGE", "PrefCommLanguage");
			fields[444] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-COPYPATIENTONCORRESPONDENCE", "CopyPatientOnCorrespondence");
			fields[445] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-COPYPATIENTONCORRESPONDENCEDATE", "CopyPatientOnCorrespondenceDate");
			fields[446] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-HEALTHBOARD", "HealthBoard");
			fields[447] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-PDSDEATHNOTIFICATIONSTATUS", "PDSDeathNotificationStatus");
			fields[448] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[449] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-SCHOOL", "School");
			fields[450] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-OVERSEASVISITOR", "OverseasVisitor");
			fields[451] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-OVERSEASCLASSIFICATION", "OverseasClassification");
			fields[452] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-HASLIVEDUK", "HasLivedUK");
			fields[453] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-DECOUPLED", "Decoupled");
			fields[454] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-PDSDATELASTCHECKED", "PDSDateLastChecked");
			fields[455] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-SCHOOLORCOLLEGE", "SchoolOrCollege");
			fields[456] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-ISCHILDINPUBLICCARE", "IsChildInPublicCare");
			fields[457] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-PUBLICCARENEED", "PublicCareNeed");
			fields[458] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__savedPatient_" + componentIdentifier, "BO-1001100000-TXTOCCUPATION", "TxtOccupation");
			fields[459] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-ID", "ID_PatientId");
			fields[460] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-TYPE", "Type");
			fields[461] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-VALUE", "IdValue");
			fields[462] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-VERIFIED", "Verified");
			fields[463] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-MERGED", "Merged");
			fields[464] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-DUPLICATENHSNUM", "DuplicateNHSNum");
			fields[465] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-BEFFDATE", "Beffdate");
			fields[466] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-BEFFDATECNF", "Beffdatecnf");
			fields[467] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-BETDATE", "Betdate");
			fields[468] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PKeyWhenTypeIsInactive_" + componentIdentifier, "BO-1001100004-BETDATECNF", "Betdatecnf");
			fields[469] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-ID", "ID_PatientGP");
			fields[470] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-LKP_PROVISIONTYPE", "Lkp_provisiontype");
			fields[471] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-PRIMARYCAREIDENTIFIER", "PrimaryCareIdentifier");
			fields[472] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-OBJECTIDENTIFIER", "Objectidentifier");
			fields[473] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-BEFFDATE", "Beffdate");
			fields[474] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-BEFFDATECNF", "Beffdatecnf");
			fields[475] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-BETDATE", "Betdate");
			fields[476] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-BETDATECNF", "Betdatecnf");
			fields[477] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-GP", "Gp");
			fields[478] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PreviousGpInfo_" + componentIdentifier, "BO-1000100007-PRACTICE", "Practice");
			fields[479] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-ID", "ID_Patient");
			fields[480] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-SEX", "Sex");
			fields[481] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-DOB", "Dob");
			fields[482] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-DOD", "Dod");
			fields[483] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-RELIGION", "Religion");
			fields[484] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-ISACTIVE", "IsActive");
			fields[485] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[486] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[487] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-SCN", "SCN");
			fields[488] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[489] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[490] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[491] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[492] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[493] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[494] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[495] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[496] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[497] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[498] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[499] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-OCCUPATION", "Occupation");
			fields[500] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-LANGUAGE", "Language");
			fields[501] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-CLIENTPARENT", "ClientParent");
			fields[502] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-HOMEFOLDERLOCATION", "HomeFolderLocation");
			fields[503] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-PREFCOMMLANGUAGE", "PrefCommLanguage");
			fields[504] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-COPYPATIENTONCORRESPONDENCE", "CopyPatientOnCorrespondence");
			fields[505] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-COPYPATIENTONCORRESPONDENCEDATE", "CopyPatientOnCorrespondenceDate");
			fields[506] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-HEALTHBOARD", "HealthBoard");
			fields[507] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-PDSDEATHNOTIFICATIONSTATUS", "PDSDeathNotificationStatus");
			fields[508] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-PDSINTERPRETERREQUIRED", "PDSInterpreterRequired");
			fields[509] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-SCHOOL", "School");
			fields[510] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-OVERSEASVISITOR", "OverseasVisitor");
			fields[511] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-OVERSEASCLASSIFICATION", "OverseasClassification");
			fields[512] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-HASLIVEDUK", "HasLivedUK");
			fields[513] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-DECOUPLED", "Decoupled");
			fields[514] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-PDSDATELASTCHECKED", "PDSDateLastChecked");
			fields[515] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-SCHOOLORCOLLEGE", "SchoolOrCollege");
			fields[516] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-ISCHILDINPUBLICCARE", "IsChildInPublicCare");
			fields[517] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-PUBLICCARENEED", "PublicCareNeed");
			fields[518] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__InitialPatient_" + componentIdentifier, "BO-1001100000-TXTOCCUPATION", "TxtOccupation");
			fields[519] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-ID", "ID_PDSConfiguration");
			fields[520] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DOB_DATE_RANGE", "DOB_DATE_RANGE");
			fields[521] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DOD_DATE_RANGE", "DOD_DATE_RANGE");
			fields[522] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TRACE_ADVANCED_IGNORE_HISTORY", "TRACE_ADVANCED_IGNORE_HISTORY");
			fields[523] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TRACE_HISTORY_DATA_INDICATOR", "TRACE_HISTORY_DATA_INDICATOR");
			fields[524] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-USE_LPI_CROSSCHECK", "USE_LPI_CROSSCHECK");
			fields[525] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NO_FIXED_ABODE_POSTCODE", "NO_FIXED_ABODE_POSTCODE");
			fields[526] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-ADVANCED_SEARCH_TIMER_INTERVAL", "ADVANCED_SEARCH_TIMER_INTERVAL");
			fields[527] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_BACKOFFICE_NOTIFICATI", "PDS_BACKOFFICE_NOTIFICATI");
			fields[528] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NUMOFDAYSAPPOINTBATCHTRACE", "NumOfDaysAppointBatchTrace");
			fields[529] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NUMOFDAYSTCIBATCHTRACE", "NumOfDaysTCIBatchTrace");
			fields[530] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NUMOFDAYSFORNEXTPDSCHECK", "NumOfDaysForNextPDSCheck");
			fields[531] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-SYNCHRONISE_WITH_BACKOFFICE", "SYNCHRONISE_WITH_BACKOFFICE");
			fields[532] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-FROMPDSACCREDITEDSYSTEMID", "FromPDSAccreditedSystemId");
			fields[533] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TOPDSACCREDITEDSYSTEMID", "ToPDSAccreditedSystemId");
			fields[534] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_CONFIG_FILE", "PDS_CONFIG_FILE");
			fields[535] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_STORE_MESSAGE_LOC", "PDS_STORE_MESSAGE_LOC");
			fields[536] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_STORE_MESSAGE", "PDS_STORE_MESSAGE");
			fields[537] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-START_PDS_GATEWAY", "START_PDS_GATEWAY");
			fields[538] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_MSH_REPOSITORY", "PDS_MSH_REPOSITORY");
			fields[539] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_MSH_URL", "PDS_MSH_URL");
			fields[540] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-CREATE_BO_NOTIFICATIONS", "CREATE_BO_NOTIFICATIONS");
			fields[541] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-SDSHOST", "SDSHost");
			fields[542] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-SDSPORT", "SDSPort");
			fields[543] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_URL", "PDS_URL");
			fields[544] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_HOST", "PDS_HOST");
			fields[545] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_STORE_SYNC_MESSAGE", "PDS_STORE_SYNC_MESSAGE");
			fields[546] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_STORE_SYNC_MESSAGE_LOC", "PDS_STORE_SYNC_MESSAGE_LOC");
			fields[547] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-CONSENTCHANGEMESSAGE", "ConsentChangeMessage");
			fields[548] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-INACTIVEPATIENTRECORDBGCOLOUR", "InactivePatientRecordBgColour");
			fields[549] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DECOUPLE_ON_DECEASE", "DECOUPLE_ON_DECEASE");
			fields[550] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-NOTIFY_ON_DECEASE", "NOTIFY_ON_DECEASE");
			fields[551] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DECOUPLE_ON_SYNC_REQUIRED", "DECOUPLE_ON_SYNC_REQUIRED");
			fields[552] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_AUTHENTICATION", "PDS_AUTHENTICATION");
			fields[553] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_PDSSEARCHFORPATIENT", "RBAC_PdsSearchForPatient");
			fields[554] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_PDSSEARCHPATIENTADVANCED", "RBAC_PdsSearchPatientAdvanced");
			fields[555] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_PDSRETRIEVAL", "RBAC_PdsRetrieval");
			fields[556] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_ACCESSSENSITIVEDATA", "RBAC_AccessSensitiveData");
			fields[557] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_AMENDPATIENT", "RBAC_AmendPatient");
			fields[558] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_CONTROLCONSENT", "RBAC_ControlConsent");
			fields[559] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_AMENDPATIENTDECEASE", "RBAC_AmendPatientDecease");
			fields[560] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-RBAC_POSTCODESEARCH", "RBAC_PostcodeSearch");
			fields[561] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-PDS_DISPLAY_CONSENT", "PDS_DISPLAY_CONSENT");
			fields[562] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DOB_DATE_RANGE_TYPE", "DOB_DATE_RANGE_TYPE");
			fields[563] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-DOD_DATE_RANGE_TYPE", "DOD_DATE_RANGE_TYPE");
			fields[564] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_BOOKOUTPATIENTAPPT", "TP_BookOutpatientAppt");
			fields[565] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_BOOKWARDATTENDERAPPT", "TP_BookWardAttenderAppt");
			fields[566] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_CREATETCIANDTHEATREBOOKING", "TP_CreateTCIAndTheatreBooking");
			fields[567] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_ANYADMISSION", "TP_AnyAdmission");
			fields[568] = new ims.framework.ReportField(this.context, prefix + "_lv_Core.PDSDemographics.__internal_x_context__PDSConfiguration_" + componentIdentifier, "BO-1004100075-TP_ANYAPPTARRIVAL", "TP_AnyApptArrival");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
