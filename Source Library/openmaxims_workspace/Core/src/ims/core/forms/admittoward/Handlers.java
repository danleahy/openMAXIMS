//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.admittoward;

import ims.framework.delegates.*;

abstract public class Handlers implements ims.framework.UILogic, IFormUILogicCode
{
	abstract protected void bindcmbSourceOfEmergencyReferralLookup();
	abstract protected void defaultcmbSourceOfEmergencyReferralLookupValue();
	abstract protected void bindcmbSourceOfReferralLookup();
	abstract protected void defaultcmbSourceOfReferralLookupValue();
	abstract protected void bindcmbPatIDTypeLookup();
	abstract protected void defaultcmbPatIDTypeLookupValue();
	abstract protected void bindcmbPatientCategoryLookup();
	abstract protected void defaultcmbPatientCategoryLookupValue();
	abstract protected void bindcmbMethodOfAdmissionLookup();
	abstract protected void defaultcmbMethodOfAdmissionLookupValue();
	abstract protected void bindcmbSourceOfAdmissionLookup();
	abstract protected void defaultcmbSourceOfAdmissionLookupValue();
	abstract protected void bindcmbWardTypeLookup();
	abstract protected void defaultcmbWardTypeLookupValue();
	abstract protected void bindcmbSpecialtyLookup();
	abstract protected void defaultcmbSpecialtyLookupValue();
	abstract protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onFormDialogClosed(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbServiceValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbServiceTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbHealthyLodgerClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkHealthyLodgerValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbReferringConsultantTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSourceOfEmergencyReferralValueSet(Object value);
	abstract protected void onCmbSourceOfEmergencyReferralValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onIntAnticipatedStayValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onQmbConsultantTextSubmited(String value) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbSourceOfReferralValueSet(Object value);
	abstract protected void onCmbSourceOfReferralValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onlyrPatientTabChanged(ims.framework.LayerBridge tab);
	abstract protected void onDyngrd_ED_Pending_AdmissionsRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrd_ED_Pending_AdmissionsColumnHeaderClicked(ims.framework.controls.DynamicGridColumn column);
	abstract protected void onRadioButtonGroupPEA_WardValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearPEAClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbFindPEAClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkPEATodayOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDtePEA_FromValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDtePEA_ToValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrd_PendingEmergenciesRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrd_PendingEmergenciesColumnHeaderClicked(ims.framework.controls.DynamicGridColumn column);
	abstract protected void onRadioButtonGroupTCI_WardValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onChkTCI_TodayOnlyValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbClearTCIClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbFindTCIClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteTCI_ToValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDteTCI_FromValueChanged() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrd_TCI_AdmissionsRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrd_TCI_AdmissionsColumnHeaderClicked(ims.framework.controls.DynamicGridColumn column);
	abstract protected void onImbClearWardAttendersClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbFindWardAttendersClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrd_WardAttendersRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrd_WardAttendersColumnHeaderClicked(ims.framework.controls.DynamicGridColumn column);
	abstract protected void onDyngrdPatientSearchRowSelectionChanged(ims.framework.controls.DynamicGridRow row) throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onDyngrdPatientsColumnHeaderClicked(ims.framework.controls.DynamicGridColumn column);
	abstract protected void oncmbPatIDTypeValueSet(Object value);
	abstract protected void onImbPatientSearchClearClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void onImbPatientSearchFindClick() throws ims.framework.exceptions.PresentationLogicException;
	abstract protected void oncmbPatientCategoryValueSet(Object value);
	abstract protected void oncmbMethodOfAdmissionValueSet(Object value);
	abstract protected void oncmbSourceOfAdmissionValueSet(Object value);
	abstract protected void oncmbWardTypeValueSet(Object value);
	abstract protected void oncmbSpecialtyValueSet(Object value);
	abstract protected void onBtnAdmitClick() throws ims.framework.exceptions.PresentationLogicException;

	public final void setContext(ims.framework.UIEngine engine, GenForm form)
	{
		this.engine = engine;
		this.form = form;

		this.form.setFormOpenEvent(new FormOpen()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object[] args) throws ims.framework.exceptions.PresentationLogicException
			{
				bindLookups();
				onFormOpen(args);
			}
		});
		this.form.setFormDialogClosedEvent(new FormDialogClosed()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.FormName formName, ims.framework.enumerations.DialogResult result) throws ims.framework.exceptions.PresentationLogicException
			{
				onFormDialogClosed(formName, result);
			}
		});
		this.form.qmbService().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbServiceValueChanged();
			}
		});
		this.form.qmbService().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbServiceTextSubmited(value);
			}
		});
		this.form.imbHealthyLodger().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbHealthyLodgerClick();
			}
		});
		this.form.chkHealthyLodger().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkHealthyLodgerValueChanged();
			}
		});
		this.form.qmbReferringConsultant().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbReferringConsultantTextSubmited(value);
			}
		});
		this.form.cmbSourceOfEmergencyReferral().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceOfEmergencyReferralValueSet(value);
			}
		});
		this.form.cmbSourceOfEmergencyReferral().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSourceOfEmergencyReferralValueChanged();
			}
		});
		this.form.intAnticipatedStay().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onIntAnticipatedStayValueChanged();
			}
		});
		this.form.qmbConsultant().setSearchEvent(new ComboBoxSearch()
		{
			private static final long serialVersionUID = 1L;
			public void handle(String value) throws ims.framework.exceptions.PresentationLogicException
			{
				onQmbConsultantTextSubmited(value);
			}
		});
		this.form.cmbSourceOfReferral().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceOfReferralValueSet(value);
			}
		});
		this.form.cmbSourceOfReferral().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onCmbSourceOfReferralValueChanged();
			}
		});
		this.form.lyrPatient().tabPageED().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrPatienttabPageEDActivated();
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrPatienttabPagePendingEmergenciesActivated();
			}
		});
		this.form.lyrPatient().tabPageTCI().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrPatienttabPageTCIActivated();
			}
		});
		this.form.lyrPatient().tabPageWardAttenders().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrPatienttabPageWardAttendersActivated();
			}
		});
		this.form.lyrPatient().tabPagePatientSearch().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrPatienttabPagePatientSearchActivated();
			}
		});
		this.form.lyrPatient().tabPagePatientDetails().setTabActivatedEvent(new ims.framework.delegates.TabActivated()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onlyrPatienttabPagePatientDetailsActivated();
			}
		});
		this.form.lyrPatient().tabPageED().dyngrd_ED_Pending_Admissions().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrd_ED_Pending_AdmissionsRowSelectionChanged(row);
			}
		});
		this.form.lyrPatient().tabPageED().dyngrd_ED_Pending_Admissions().setDynamicGridColumnHeaderClickedEvent(new DynamicGridColumnHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridColumn column) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrd_ED_Pending_AdmissionsColumnHeaderClicked(column);
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().GroupPEA_Ward().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroupPEA_WardValueChanged();
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().imbClearPEA().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearPEAClick();
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().imbFindPEA().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbFindPEAClick();
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().chkPEATodayOnly().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkPEATodayOnlyValueChanged();
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().dtePEA_From().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDtePEA_FromValueChanged();
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().dtePEA_To().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDtePEA_ToValueChanged();
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().dyngrd_PendingEmergencies().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrd_PendingEmergenciesRowSelectionChanged(row);
			}
		});
		this.form.lyrPatient().tabPagePendingEmergencies().dyngrd_PendingEmergencies().setDynamicGridColumnHeaderClickedEvent(new DynamicGridColumnHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridColumn column) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrd_PendingEmergenciesColumnHeaderClicked(column);
			}
		});
		this.form.lyrPatient().tabPageTCI().GroupTCI_Ward().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onRadioButtonGroupTCI_WardValueChanged();
			}
		});
		this.form.lyrPatient().tabPageTCI().chkTCI_TodayOnly().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onChkTCI_TodayOnlyValueChanged();
			}
		});
		this.form.lyrPatient().tabPageTCI().imbClearTCI().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearTCIClick();
			}
		});
		this.form.lyrPatient().tabPageTCI().imbFindTCI().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbFindTCIClick();
			}
		});
		this.form.lyrPatient().tabPageTCI().dteTCI_To().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteTCI_ToValueChanged();
			}
		});
		this.form.lyrPatient().tabPageTCI().dteTCI_From().setValueChangedEvent(new ValueChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onDteTCI_FromValueChanged();
			}
		});
		this.form.lyrPatient().tabPageTCI().dyngrd_TCI_Admissions().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrd_TCI_AdmissionsRowSelectionChanged(row);
			}
		});
		this.form.lyrPatient().tabPageTCI().dyngrd_TCI_Admissions().setDynamicGridColumnHeaderClickedEvent(new DynamicGridColumnHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridColumn column) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrd_TCI_AdmissionsColumnHeaderClicked(column);
			}
		});
		this.form.lyrPatient().tabPageWardAttenders().imbClearWardAttenders().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbClearWardAttendersClick();
			}
		});
		this.form.lyrPatient().tabPageWardAttenders().imbFindWardAttenders().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbFindWardAttendersClick();
			}
		});
		this.form.lyrPatient().tabPageWardAttenders().dyngrd_WardAttenders().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrd_WardAttendersRowSelectionChanged(row);
			}
		});
		this.form.lyrPatient().tabPageWardAttenders().dyngrd_WardAttenders().setDynamicGridColumnHeaderClickedEvent(new DynamicGridColumnHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridColumn column) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrd_WardAttendersColumnHeaderClicked(column);
			}
		});
		this.form.lyrPatient().tabPagePatientSearch().dyngrdPatients().setDynamicGridRowSelectionChangedEvent(new DynamicGridRowSelectionChanged()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridRow row, ims.framework.enumerations.MouseButton mouseButton) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrdPatientSearchRowSelectionChanged(row);
			}
		});
		this.form.lyrPatient().tabPagePatientSearch().dyngrdPatients().setDynamicGridColumnHeaderClickedEvent(new DynamicGridColumnHeaderClicked()
		{
			private static final long serialVersionUID = 1L;
			public void handle(ims.framework.controls.DynamicGridColumn column) throws ims.framework.exceptions.PresentationLogicException
			{
				onDyngrdPatientsColumnHeaderClicked(column);
			}
		});
		this.form.lyrPatient().tabPagePatientSearch().cmbPatIDType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPatIDTypeValueSet(value);
			}
		});
		this.form.lyrPatient().tabPagePatientSearch().imbPatientSearchClear().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbPatientSearchClearClick();
			}
		});
		this.form.lyrPatient().tabPagePatientSearch().imbPatientSearchFind().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onImbPatientSearchFindClick();
			}
		});
		this.form.cmbPatientCategory().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbPatientCategoryValueSet(value);
			}
		});
		this.form.cmbMethodOfAdmission().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbMethodOfAdmissionValueSet(value);
			}
		});
		this.form.cmbSourceOfAdmission().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSourceOfAdmissionValueSet(value);
			}
		});
		this.form.cmbWardType().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbWardTypeValueSet(value);
			}
		});
		this.form.cmbSpecialty().setValueSetEvent(new ComboBoxValueSet()
		{
			private static final long serialVersionUID = 1L;
			public void handle(Object value)
			{
				oncmbSpecialtyValueSet(value);
			}
		});
		this.form.btnAdmit().setClickEvent(new Click()
		{
			private static final long serialVersionUID = 1L;
			public void handle() throws ims.framework.exceptions.PresentationLogicException
			{
				onBtnAdmitClick();
			}
		});
	}
	protected void bindLookups()
	{
		bindcmbSourceOfEmergencyReferralLookup();
		bindcmbSourceOfReferralLookup();
		bindcmbPatIDTypeLookup();
		bindcmbPatientCategoryLookup();
		bindcmbMethodOfAdmissionLookup();
		bindcmbSourceOfAdmissionLookup();
		bindcmbWardTypeLookup();
		bindcmbSpecialtyLookup();
	}
	protected void rebindAllLookups()
	{
		bindcmbSourceOfEmergencyReferralLookup();
		bindcmbSourceOfReferralLookup();
		bindcmbPatIDTypeLookup();
		bindcmbPatientCategoryLookup();
		bindcmbMethodOfAdmissionLookup();
		bindcmbSourceOfAdmissionLookup();
		bindcmbWardTypeLookup();
		bindcmbSpecialtyLookup();
	}
	protected void defaultAllLookupValues()
	{
		defaultcmbSourceOfEmergencyReferralLookupValue();
		defaultcmbSourceOfReferralLookupValue();
		defaultcmbPatIDTypeLookupValue();
		defaultcmbPatientCategoryLookupValue();
		defaultcmbMethodOfAdmissionLookupValue();
		defaultcmbSourceOfAdmissionLookupValue();
		defaultcmbWardTypeLookupValue();
		defaultcmbSpecialtyLookupValue();
	}
	private void onlyrPatienttabPageEDActivated()
	{
		this.form.lyrPatient().showtabPageED();
		onlyrPatientTabChanged(this.form.lyrPatient().tabPageED());
	}
	private void onlyrPatienttabPagePendingEmergenciesActivated()
	{
		this.form.lyrPatient().showtabPagePendingEmergencies();
		onlyrPatientTabChanged(this.form.lyrPatient().tabPagePendingEmergencies());
	}
	private void onlyrPatienttabPageTCIActivated()
	{
		this.form.lyrPatient().showtabPageTCI();
		onlyrPatientTabChanged(this.form.lyrPatient().tabPageTCI());
	}
	private void onlyrPatienttabPageWardAttendersActivated()
	{
		this.form.lyrPatient().showtabPageWardAttenders();
		onlyrPatientTabChanged(this.form.lyrPatient().tabPageWardAttenders());
	}
	private void onlyrPatienttabPagePatientSearchActivated()
	{
		this.form.lyrPatient().showtabPagePatientSearch();
		onlyrPatientTabChanged(this.form.lyrPatient().tabPagePatientSearch());
	}
	private void onlyrPatienttabPagePatientDetailsActivated()
	{
		this.form.lyrPatient().showtabPagePatientDetails();
		onlyrPatientTabChanged(this.form.lyrPatient().tabPagePatientDetails());
	}

	public void free()
	{
		this.engine = null;
		this.form = null;
	}
	protected ims.framework.UIEngine engine;
	protected GenForm form;
}
