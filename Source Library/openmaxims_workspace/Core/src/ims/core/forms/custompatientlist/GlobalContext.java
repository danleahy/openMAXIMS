//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.custompatientlist;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public void clearPatientShort()
		{
			cx_CorePatientShort.setValue(context, null);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getCustomListSearchCriteriaVoIsNotNull()
		{
			return !cx_CoreCustomListSearchCriteriaVo.getValueIsNull(context);
		}
		public ims.core.vo.CustomListSearchCriteriaVo getCustomListSearchCriteriaVo()
		{
			return (ims.core.vo.CustomListSearchCriteriaVo)cx_CoreCustomListSearchCriteriaVo.getValue(context);
		}
		public void setCustomListSearchCriteriaVo(ims.core.vo.CustomListSearchCriteriaVo value)
		{
			cx_CoreCustomListSearchCriteriaVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCustomListSearchCriteriaVo = new ims.framework.ContextVariable("Core.CustomListSearchCriteriaVo", "_cvp_Core.CustomListSearchCriteriaVo");
		public boolean getPatientToBeDisplayedIsNotNull()
		{
			return !cx_CorePatientToBeDisplayed.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientToBeDisplayed()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientToBeDisplayed.getValue(context);
		}
		public void setPatientToBeDisplayed(ims.core.vo.PatientShort value)
		{
			cx_CorePatientToBeDisplayed.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientToBeDisplayed = new ims.framework.ContextVariable("Core.PatientToBeDisplayed", "_cv_Core.PatientToBeDisplayed");
		public boolean getCustomListNameIsNotNull()
		{
			return !cx_CoreCustomListName.getValueIsNull(context);
		}
		public String getCustomListName()
		{
			return (String)cx_CoreCustomListName.getValue(context);
		}
		public void setCustomListName(String value)
		{
			cx_CoreCustomListName.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCustomListName = new ims.framework.ContextVariable("Core.CustomListName", "_cv_Core.CustomListName");
		public boolean getCustomListIsNotNull()
		{
			return !cx_CoreCustomList.getValueIsNull(context);
		}
		public ims.core.vo.CustomListVo getCustomList()
		{
			return (ims.core.vo.CustomListVo)cx_CoreCustomList.getValue(context);
		}
		public void setCustomList(ims.core.vo.CustomListVo value)
		{
			cx_CoreCustomList.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCustomList = new ims.framework.ContextVariable("Core.CustomList", "_cv_Core.CustomList");

		private ims.framework.Context context;
	}

	public CoreContext Core;
}
