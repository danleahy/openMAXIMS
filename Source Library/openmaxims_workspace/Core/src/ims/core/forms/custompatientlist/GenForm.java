//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.custompatientlist;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	public static class cmbCustomListsComboBox extends ComboBoxBridge
	{
		private static final long serialVersionUID = 1L;
		
		public void newRow(ims.core.vo.CustomListVo value, String text)
		{
			super.control.newRow(value, text);
		}
		public void newRow(ims.core.vo.CustomListVo value, String text, ims.framework.utils.Image image)
		{
			super.control.newRow(value, text, image);
		}
		public void newRow(ims.core.vo.CustomListVo value, String text, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, textColor);
		}
		public void newRow(ims.core.vo.CustomListVo value, String text, ims.framework.utils.Image image, ims.framework.utils.Color textColor)
		{
			super.control.newRow(value, text, image, textColor);
		}
		public boolean removeRow(ims.core.vo.CustomListVo value)
		{
			return super.control.removeRow(value);
		}
		public ims.core.vo.CustomListVo getValue()
		{
			return (ims.core.vo.CustomListVo)super.control.getValue();
		}
		public void setValue(ims.core.vo.CustomListVo value)
		{
			super.control.setValue(value);
		}
	}
	public static class grdDetailsRow extends GridRowBridge
	{
		private static final long serialVersionUID = 1L;
		
		protected grdDetailsRow(GridRow row)
		{
			super(row);
		}
		public void showOpened(int column)
		{
			super.row.showOpened(column);
		}
		public void setColViewedReadOnly(boolean value)
		{
			super.row.setReadOnly(0, value);
		}
		public boolean isColViewedReadOnly()
		{
			return super.row.isReadOnly(0);
		}
		public void showColViewedOpened()
		{
			super.row.showOpened(0);
		}
		public void setTooltipForColViewed(String value)
		{
			super.row.setTooltip(0, value);
		}
		public ims.framework.utils.Image getColViewed()
		{
			return (ims.framework.utils.Image)super.row.get(0);
		}
		public void setColViewed(ims.framework.utils.Image value)
		{
			super.row.set(0, value);
		}
		public void setCellColViewedTooltip(String value)
		{
			super.row.setTooltip(0, value);
		}
		public void setColSurnameReadOnly(boolean value)
		{
			super.row.setReadOnly(1, value);
		}
		public boolean isColSurnameReadOnly()
		{
			return super.row.isReadOnly(1);
		}
		public void showColSurnameOpened()
		{
			super.row.showOpened(1);
		}
		public void setTooltipForColSurname(String value)
		{
			super.row.setTooltip(1, value);
		}
		public String getColSurname()
		{
			return (String)super.row.get(1);
		}
		public void setColSurname(String value)
		{
			super.row.set(1, value);
		}
		public void setCellColSurnameTooltip(String value)
		{
			super.row.setTooltip(1, value);
		}
		public void setColForenameReadOnly(boolean value)
		{
			super.row.setReadOnly(2, value);
		}
		public boolean isColForenameReadOnly()
		{
			return super.row.isReadOnly(2);
		}
		public void showColForenameOpened()
		{
			super.row.showOpened(2);
		}
		public void setTooltipForColForename(String value)
		{
			super.row.setTooltip(2, value);
		}
		public String getColForename()
		{
			return (String)super.row.get(2);
		}
		public void setColForename(String value)
		{
			super.row.set(2, value);
		}
		public void setCellColForenameTooltip(String value)
		{
			super.row.setTooltip(2, value);
		}
		public void setColPatIdReadOnly(boolean value)
		{
			super.row.setReadOnly(3, value);
		}
		public boolean isColPatIdReadOnly()
		{
			return super.row.isReadOnly(3);
		}
		public void showColPatIdOpened()
		{
			super.row.showOpened(3);
		}
		public void setTooltipForColPatId(String value)
		{
			super.row.setTooltip(3, value);
		}
		public String getColPatId()
		{
			return (String)super.row.get(3);
		}
		public void setColPatId(String value)
		{
			super.row.set(3, value);
		}
		public void setCellColPatIdTooltip(String value)
		{
			super.row.setTooltip(3, value);
		}
		public void setColSexReadOnly(boolean value)
		{
			super.row.setReadOnly(4, value);
		}
		public boolean isColSexReadOnly()
		{
			return super.row.isReadOnly(4);
		}
		public void showColSexOpened()
		{
			super.row.showOpened(4);
		}
		public void setTooltipForColSex(String value)
		{
			super.row.setTooltip(4, value);
		}
		public String getColSex()
		{
			return (String)super.row.get(4);
		}
		public void setColSex(String value)
		{
			super.row.set(4, value);
		}
		public void setCellColSexTooltip(String value)
		{
			super.row.setTooltip(4, value);
		}
		public void setColAgeReadOnly(boolean value)
		{
			super.row.setReadOnly(5, value);
		}
		public boolean isColAgeReadOnly()
		{
			return super.row.isReadOnly(5);
		}
		public void showColAgeOpened()
		{
			super.row.showOpened(5);
		}
		public void setTooltipForColAge(String value)
		{
			super.row.setTooltip(5, value);
		}
		public String getColAge()
		{
			return (String)super.row.get(5);
		}
		public void setColAge(String value)
		{
			super.row.set(5, value);
		}
		public void setCellColAgeTooltip(String value)
		{
			super.row.setTooltip(5, value);
		}
		public void setColDOBReadOnly(boolean value)
		{
			super.row.setReadOnly(6, value);
		}
		public boolean isColDOBReadOnly()
		{
			return super.row.isReadOnly(6);
		}
		public void showColDOBOpened()
		{
			super.row.showOpened(6);
		}
		public void setTooltipForColDOB(String value)
		{
			super.row.setTooltip(6, value);
		}
		public String getColDOB()
		{
			return (String)super.row.get(6);
		}
		public void setColDOB(String value)
		{
			super.row.set(6, value);
		}
		public void setCellColDOBTooltip(String value)
		{
			super.row.setTooltip(6, value);
		}
		public void setColAddedByReadOnly(boolean value)
		{
			super.row.setReadOnly(7, value);
		}
		public boolean isColAddedByReadOnly()
		{
			return super.row.isReadOnly(7);
		}
		public void showColAddedByOpened()
		{
			super.row.showOpened(7);
		}
		public void setTooltipForColAddedBy(String value)
		{
			super.row.setTooltip(7, value);
		}
		public String getColAddedBy()
		{
			return (String)super.row.get(7);
		}
		public void setColAddedBy(String value)
		{
			super.row.set(7, value);
		}
		public void setCellColAddedByTooltip(String value)
		{
			super.row.setTooltip(7, value);
		}
		public void setColDateTimeReadOnly(boolean value)
		{
			super.row.setReadOnly(8, value);
		}
		public boolean isColDateTimeReadOnly()
		{
			return super.row.isReadOnly(8);
		}
		public void showColDateTimeOpened()
		{
			super.row.showOpened(8);
		}
		public void setTooltipForColDateTime(String value)
		{
			super.row.setTooltip(8, value);
		}
		public String getColDateTime()
		{
			return (String)super.row.get(8);
		}
		public void setColDateTime(String value)
		{
			super.row.set(8, value);
		}
		public void setCellColDateTimeTooltip(String value)
		{
			super.row.setTooltip(8, value);
		}
		public ims.core.vo.PatientCustomItemVo getValue()
		{
			return (ims.core.vo.PatientCustomItemVo)super.row.getValue();
		}
		public void setValue(ims.core.vo.PatientCustomItemVo value)
		{
			super.row.setValue(value);
		}
	}
	public static class grdDetailsRowCollection extends GridRowCollectionBridge
	{
		private static final long serialVersionUID = 1L;
		
		private grdDetailsRowCollection(GridRowCollection collection)
		{
			super(collection);
		}
		public grdDetailsRow get(int index)
		{
			return new grdDetailsRow(super.collection.get(index));
		}
		public grdDetailsRow newRow()
		{
			return new grdDetailsRow(super.collection.newRow());
		}
		public grdDetailsRow newRow(boolean autoSelect)
		{
			return new grdDetailsRow(super.collection.newRow(autoSelect));
		}
		public grdDetailsRow newRowAt(int index)
		{
			return new grdDetailsRow(super.collection.newRowAt(index));
		}
		public grdDetailsRow newRowAt(int index, boolean autoSelect)
		{
			return new grdDetailsRow(super.collection.newRowAt(index, autoSelect));
		}
	}
	public static class grdDetailsGrid extends GridBridge
	{
		private static final long serialVersionUID = 1L;
		
		private void addImageColumn(String caption, int captionAlignment, int alignment, int width, boolean canGrow, int sortOrder)
		{
			super.grid.addImageColumn(caption, captionAlignment, alignment, width, canGrow, sortOrder);
		}
		private void addStringColumn(String caption, int captionAlignment, int alignment, int width, boolean readOnly, boolean bold, int sortOrder, int maxLength, boolean canGrow, ims.framework.enumerations.CharacterCasing casing)
		{
			super.grid.addStringColumn(caption, captionAlignment, alignment, width, readOnly, bold, sortOrder, maxLength, canGrow, casing);
		}
		public void setColPatIdCaption(String value)
		{
			this.grid.setColumnCaption(3, value);
		}
		public ims.core.vo.PatientCustomItemVoCollection getValues()
		{
			ims.core.vo.PatientCustomItemVoCollection listOfValues = new ims.core.vo.PatientCustomItemVoCollection();
			for(int x = 0; x < this.getRows().size(); x++)
			{
				listOfValues.add(this.getRows().get(x).getValue());
			}
			return listOfValues;
		}
		public ims.core.vo.PatientCustomItemVo getValue()
		{
			return (ims.core.vo.PatientCustomItemVo)super.grid.getValue();
		}
		public void setValue(ims.core.vo.PatientCustomItemVo value)
		{
			super.grid.setValue(value);
		}
		public grdDetailsRow getSelectedRow()
		{
			return super.grid.getSelectedRow() == null ? null : new grdDetailsRow(super.grid.getSelectedRow());
		}
		public int getSelectedRowIndex()
		{
			return super.grid.getSelectedRowIndex();
		}
		public grdDetailsRowCollection getRows()
		{
			return new grdDetailsRowCollection(super.grid.getRows());
		}
		public grdDetailsRow getRowByValue(ims.core.vo.PatientCustomItemVo value)
		{
			GridRow row = super.grid.getRowByValue(value);
			return row == null?null:new grdDetailsRow(row);
		}
		public void setColViewedHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(0, value);
		}
		public String getColViewedHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(0);
		}
		public void setColSurnameHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(1, value);
		}
		public String getColSurnameHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(1);
		}
		public void setColForenameHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(2, value);
		}
		public String getColForenameHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(2);
		}
		public void setColPatIdHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(3, value);
		}
		public String getColPatIdHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(3);
		}
		public void setColSexHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(4, value);
		}
		public String getColSexHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(4);
		}
		public void setColAgeHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(5, value);
		}
		public String getColAgeHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(5);
		}
		public void setColDOBHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(6, value);
		}
		public String getColDOBHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(6);
		}
		public void setColAddedByHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(7, value);
		}
		public String getColAddedByHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(7);
		}
		public void setColDateTimeHeaderTooltip(String value)
		{
			super.grid.setColumnHeaderTooltip(8, value);
		}
		public String getColDateTimeHeaderTooltip()
		{
			return super.grid.getColumnHeaderTooltip(8);
		}
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.CustomListSearchCriteriaVo.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.CustomListSearchCriteriaVo' of the global context variable 'Core.CustomListSearchCriteriaVo' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		form.setDarkHeight(42);
		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(848, 632);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.Core.contextMenuRCHTCustomListMenu = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.Core.contextMenuRCHTCustomListMenuSELECTItem = factory.createMenuItem(startControlID.intValue() + 1, "Select patient", true, false, new Integer(102101), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3370001)))
			contextMenus.Core.contextMenuRCHTCustomListMenu.add(contextMenus.Core.contextMenuRCHTCustomListMenuSELECTItem);
		contextMenus.Core.contextMenuRCHTCustomListMenuREMOVEItem = factory.createMenuItem(startControlID.intValue() + 2, "Remove from list", true, false, new Integer(102100), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(3370002)))
			contextMenus.Core.contextMenuRCHTCustomListMenu.add(contextMenus.Core.contextMenuRCHTCustomListMenuREMOVEItem);
		form.registerMenu(contextMenus.Core.contextMenuRCHTCustomListMenu);


		// Label Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 16, 16, 75, 17, ims.framework.enumerations.ControlAnchoring.TOPLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPLEFT, "Custom List:", new Integer(1), null, new Integer(0)}));

		// ComboBox Controls
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 96, 14, 624, 21, ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT);
		ComboBox m_cmbCustomListsTemp = (ComboBox)factory.getControl(ComboBox.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.UNKNOWN, ControlState.UNKNOWN,ims.framework.enumerations.ControlAnchoring.TOPLEFTRIGHT ,Boolean.TRUE, Boolean.TRUE, SortOrder.NONE, Boolean.FALSE, new Integer(1), null, Boolean.FALSE, new Integer(-1)});
		addControl(m_cmbCustomListsTemp);
		cmbCustomListsComboBox cmbCustomLists = (cmbCustomListsComboBox)ComboBoxFlyweightFactory.getInstance().createComboBoxBridge(cmbCustomListsComboBox.class, m_cmbCustomListsTemp);
		super.addComboBox(cmbCustomLists);

		// Grid Controls
		RuntimeAnchoring anchoringHelper3 = new RuntimeAnchoring(designSize, runtimeSize, 16, 56, 820, 560, ims.framework.enumerations.ControlAnchoring.ALL);
		Grid m_grdDetailsTemp = (Grid)factory.getControl(Grid.class, new Object[] { control, new Integer(startControlID.intValue() + 1002), new Integer(anchoringHelper3.getX()), new Integer(anchoringHelper3.getY()), new Integer(anchoringHelper3.getWidth()), new Integer(anchoringHelper3.getHeight()), new Integer(startTabIndex.intValue() + 5), ControlState.READONLY, ControlState.EDITABLE, ims.framework.enumerations.ControlAnchoring.ALL,Boolean.TRUE, Boolean.FALSE, new Integer(24), Boolean.TRUE, contextMenus.Core.contextMenuRCHTCustomListMenu, Boolean.FALSE, Boolean.FALSE, new Integer(0), null, Boolean.TRUE, Boolean.TRUE});
		addControl(m_grdDetailsTemp);
		grdDetailsGrid grdDetails = (grdDetailsGrid)GridFlyweightFactory.getInstance().createGridBridge(grdDetailsGrid.class, m_grdDetailsTemp);
		grdDetails.addImageColumn(" ", 0, 0, 20, true, 0);
		grdDetails.addStringColumn("Surname", 0, 0, 130, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdDetails.addStringColumn("Forename", 0, 0, 130, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdDetails.addStringColumn("NHS Number", 0, 0, 100, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdDetails.addStringColumn("Sex", 0, 0, 60, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdDetails.addStringColumn("Age", 0, 0, 35, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdDetails.addStringColumn("DOB", 0, 0, 90, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdDetails.addStringColumn("Added By", 0, 0, 130, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		grdDetails.addStringColumn("Added Date/Time", 0, 0, -1, true, false, 2, 0, true, ims.framework.enumerations.CharacterCasing.NORMAL);
		super.addGrid(grdDetails);

		// Image Buttons Controls
		RuntimeAnchoring anchoringHelper4 = new RuntimeAnchoring(designSize, runtimeSize, 810, 11, 26, 26, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1003), new Integer(anchoringHelper4.getX()), new Integer(anchoringHelper4.getY()), new Integer(anchoringHelper4.getWidth()), new Integer(anchoringHelper4.getHeight()), new Integer(startTabIndex.intValue() + 4), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Admin.Gp_Add, this.getImages().Admin.User_Add_disabled, "Grant Access for Custom List", Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper5 = new RuntimeAnchoring(designSize, runtimeSize, 779, 11, 26, 26, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1004), new Integer(anchoringHelper5.getX()), new Integer(anchoringHelper5.getY()), new Integer(anchoringHelper5.getWidth()), new Integer(anchoringHelper5.getHeight()), new Integer(startTabIndex.intValue() + 3), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.Delete, this.getImages().Core.Delete2, "Inactivate Custom List", Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
		RuntimeAnchoring anchoringHelper6 = new RuntimeAnchoring(designSize, runtimeSize, 748, 11, 26, 26, ims.framework.enumerations.ControlAnchoring.TOPRIGHT);
		super.addControl(factory.getControl(ImageButton.class, new Object[] { control, new Integer(startControlID.intValue() + 1005), new Integer(anchoringHelper6.getX()), new Integer(anchoringHelper6.getY()), new Integer(anchoringHelper6.getWidth()), new Integer(anchoringHelper6.getHeight()), new Integer(startTabIndex.intValue() + 2), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.TOPRIGHT, this.getImages().Core.AddFile16, this.getImages().Core.AddFile16, "Add Custom List", Boolean.FALSE, Boolean.FALSE, Boolean.TRUE, Boolean.FALSE, null}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public cmbCustomListsComboBox cmbCustomLists()
	{
		return (cmbCustomListsComboBox)super.getComboBox(0);
	}
	public grdDetailsGrid grdDetails()
	{
		return (grdDetailsGrid)super.getGrid(0);
	}
	public ImageButton imbGrantAccess()
	{
		return (ImageButton)super.getControl(3);
	}
	public ImageButton imbRemoveList()
	{
		return (ImageButton)super.getControl(4);
	}
	public ImageButton imbNewCustomList()
	{
		return (ImageButton)super.getControl(5);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Core = new CoreForms();
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				AddToCustomListDialog = new LocalFormName(102333);
				NewCustomListDialog = new LocalFormName(102334);
				Demographics = new LocalFormName(102101);
				GrantCustomListAccess = new LocalFormName(102438);
			}
			public final FormName AddToCustomListDialog;
			public final FormName NewCustomListDialog;
			public final FormName Demographics;
			public final FormName GrantCustomListAccess;
		}

		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Core = new CoreImages();
			Admin = new AdminImages();
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				ClearDisabled24 = new ImageHelper(102173, "Images/Core/ClearDisabled_24.png", new Integer(24), new Integer(24));
				ClearEnabled24 = new ImageHelper(102174, "Images/Core/ClearEnabled_24.png", new Integer(24), new Integer(24));
				FindDisabled24 = new ImageHelper(102172, "Images/Core/FindDisabled_24.png", new Integer(24), new Integer(24));
				FindEnabled24 = new ImageHelper(102175, "Images/Core/Find_24.png", new Integer(24), new Integer(24));
				AddFile16 = new ImageHelper(102330, "Images/Core/add-file_16x16.png", new Integer(16), new Integer(16));
				Delete = new ImageHelper(102148, "Images/Core/delete.png", new Integer(16), new Integer(16));
				Delete2 = new ImageHelper(102151, "Images/Core/delete_black.png", new Integer(16), new Integer(16));
				Tick = new ImageHelper(102209, "Images/Core/tick.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image ClearDisabled24;
			public final ims.framework.utils.Image ClearEnabled24;
			public final ims.framework.utils.Image FindDisabled24;
			public final ims.framework.utils.Image FindEnabled24;
			public final ims.framework.utils.Image AddFile16;
			public final ims.framework.utils.Image Delete;
			public final ims.framework.utils.Image Delete2;
			public final ims.framework.utils.Image Tick;
		}
		public final class AdminImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private AdminImages()
			{
				Gp_Add = new ImageHelper(103139, "Images/Admin/User-Add-4.gif", new Integer(16), new Integer(16));
				User_Add_disabled = new ImageHelper(103440, "Images/Admin/User-Add-4-Disabled.gif", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Gp_Add;
			public final ims.framework.utils.Image User_Add_disabled;
		}
		public final CoreImages Core;
		public final AdminImages Admin;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_LastMessageBox = new ims.framework.ContextVariable("LastMessageBox", prefix + "_lv_Core.CustomPatientList.__internal_x_context__LastMessageBox_" + componentIdentifier + "");
			cxl_SortOrderAddedDateTime = new ims.framework.ContextVariable("SortOrderAddedDateTime", prefix + "_lv_Core.CustomPatientList.__internal_x_context__SortOrderAddedDateTime_" + componentIdentifier + "");
			cxl_ErrorMessage = new ims.framework.ContextVariable("ErrorMessage", prefix + "_lv_Core.CustomPatientList.__internal_x_context__ErrorMessage_" + componentIdentifier + "");
			cxl_SortOrderSurname = new ims.framework.ContextVariable("SortOrderSurname", prefix + "_lv_Core.CustomPatientList.__internal_x_context__SortOrderSurname_" + componentIdentifier + "");
			cxl_SortOrderForename = new ims.framework.ContextVariable("SortOrderForename", prefix + "_lv_Core.CustomPatientList.__internal_x_context__SortOrderForename_" + componentIdentifier + "");
			cxl_SortOrderIdentifier = new ims.framework.ContextVariable("SortOrderIdentifier", prefix + "_lv_Core.CustomPatientList.__internal_x_context__SortOrderIdentifier_" + componentIdentifier + "");
			cxl_SortOrderSex = new ims.framework.ContextVariable("SortOrderSex", prefix + "_lv_Core.CustomPatientList.__internal_x_context__SortOrderSex_" + componentIdentifier + "");
			cxl_SortOrderAge = new ims.framework.ContextVariable("SortOrderAge", prefix + "_lv_Core.CustomPatientList.__internal_x_context__SortOrderAge_" + componentIdentifier + "");
			cxl_SortOrderAddedBy = new ims.framework.ContextVariable("SortOrderAddedBy", prefix + "_lv_Core.CustomPatientList.__internal_x_context__SortOrderAddedBy_" + componentIdentifier + "");
			cxl_SortOrderDOB = new ims.framework.ContextVariable("SortOrderDOB", prefix + "_lv_Core.CustomPatientList.__internal_x_context__SortOrderDOB_" + componentIdentifier + "");
		}
		
		public boolean getLastMessageBoxIsNotNull()
		{
			return !cxl_LastMessageBox.getValueIsNull(context);
		}
		public Integer getLastMessageBox()
		{
			return (Integer)cxl_LastMessageBox.getValue(context);
		}
		public void setLastMessageBox(Integer value)
		{
			cxl_LastMessageBox.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_LastMessageBox = null;
		public boolean getSortOrderAddedDateTimeIsNotNull()
		{
			return !cxl_SortOrderAddedDateTime.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderAddedDateTime()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderAddedDateTime.getValue(context);
		}
		public void setSortOrderAddedDateTime(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderAddedDateTime.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderAddedDateTime = null;
		public boolean getErrorMessageIsNotNull()
		{
			return !cxl_ErrorMessage.getValueIsNull(context);
		}
		public Integer getErrorMessage()
		{
			return (Integer)cxl_ErrorMessage.getValue(context);
		}
		public void setErrorMessage(Integer value)
		{
			cxl_ErrorMessage.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ErrorMessage = null;
		public boolean getSortOrderSurnameIsNotNull()
		{
			return !cxl_SortOrderSurname.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderSurname()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderSurname.getValue(context);
		}
		public void setSortOrderSurname(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderSurname.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderSurname = null;
		public boolean getSortOrderForenameIsNotNull()
		{
			return !cxl_SortOrderForename.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderForename()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderForename.getValue(context);
		}
		public void setSortOrderForename(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderForename.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderForename = null;
		public boolean getSortOrderIdentifierIsNotNull()
		{
			return !cxl_SortOrderIdentifier.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderIdentifier()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderIdentifier.getValue(context);
		}
		public void setSortOrderIdentifier(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderIdentifier.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderIdentifier = null;
		public boolean getSortOrderSexIsNotNull()
		{
			return !cxl_SortOrderSex.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderSex()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderSex.getValue(context);
		}
		public void setSortOrderSex(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderSex.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderSex = null;
		public boolean getSortOrderAgeIsNotNull()
		{
			return !cxl_SortOrderAge.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderAge()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderAge.getValue(context);
		}
		public void setSortOrderAge(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderAge.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderAge = null;
		public boolean getSortOrderAddedByIsNotNull()
		{
			return !cxl_SortOrderAddedBy.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderAddedBy()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderAddedBy.getValue(context);
		}
		public void setSortOrderAddedBy(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderAddedBy.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderAddedBy = null;
		public boolean getSortOrderDOBIsNotNull()
		{
			return !cxl_SortOrderDOB.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getSortOrderDOB()
		{
			return (ims.framework.enumerations.SortOrder)cxl_SortOrderDOB.getValue(context);
		}
		public void setSortOrderDOB(ims.framework.enumerations.SortOrder value)
		{
			cxl_SortOrderDOB.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_SortOrderDOB = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public CoreNamespace Core = new CoreNamespace();
		public final class CoreNamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class RCHTCustomListMenu implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int SELECT = 1;
				public static final int REMOVE = 2;
			}
			public void disableAllRCHTCustomListMenuMenuItems()
			{
				this.contextMenuRCHTCustomListMenuSELECTItem.setEnabled(false);
				this.contextMenuRCHTCustomListMenuREMOVEItem.setEnabled(false);
			}
			public void hideAllRCHTCustomListMenuMenuItems()
			{
				this.contextMenuRCHTCustomListMenuSELECTItem.setVisible(false);
				this.contextMenuRCHTCustomListMenuREMOVEItem.setVisible(false);
			}
			private Menu contextMenuRCHTCustomListMenu;
			public ReadOnlyMenuItem getRCHTCustomListMenuSELECTItem()
			{
				return this.contextMenuRCHTCustomListMenuSELECTItem;
			}
			private MenuItem contextMenuRCHTCustomListMenuSELECTItem;
			public ReadOnlyMenuItem getRCHTCustomListMenuREMOVEItem()
			{
				return this.contextMenuRCHTCustomListMenuREMOVEItem;
			}
			private MenuItem contextMenuRCHTCustomListMenuREMOVEItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[172];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ID", "ID_Patient");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SEX", "Sex");
			fields[146] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOB", "Dob");
			fields[147] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DOD", "Dod");
			fields[148] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-RELIGION", "Religion");
			fields[149] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISACTIVE", "IsActive");
			fields[150] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[151] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[152] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SCN", "SCN");
			fields[153] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[154] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[155] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[156] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[157] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[158] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[159] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[160] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[161] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[162] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[163] = new ims.framework.ReportField(this.context, "_cv_Core.PatientToBeDisplayed", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[164] = new ims.framework.ReportField(this.context, "_cv_Core.CustomList", "BO-1028100050-ID", "ID_CustomList");
			fields[165] = new ims.framework.ReportField(this.context, "_cv_Core.CustomList", "BO-1028100050-LISTTYPE", "ListType");
			fields[166] = new ims.framework.ReportField(this.context, "_cv_Core.CustomList", "BO-1028100050-LISTNAME", "ListName");
			fields[167] = new ims.framework.ReportField(this.context, "_cv_Core.CustomList", "BO-1028100050-SPECIALTY", "Specialty");
			fields[168] = new ims.framework.ReportField(this.context, "_cv_Core.CustomList", "BO-1028100050-DATE", "Date");
			fields[169] = new ims.framework.ReportField(this.context, "_cv_Core.CustomList", "BO-1028100050-ISACTIVE", "IsActive");
			fields[170] = new ims.framework.ReportField(this.context, "_cv_Core.CustomList", "BO-1028100050-ISREADONLY", "IsReadOnly");
			fields[171] = new ims.framework.ReportField(this.context, "_cv_Core.CustomList", "BO-1028100050-ISFULLACCESS", "IsFullAccess");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return null;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
