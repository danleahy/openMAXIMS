//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.forms.outpatientlist;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getOutPatientSearchCriteriaIsNotNull()
		{
			return !cx_CoreOutPatientSearchCriteria.getValueIsNull(context);
		}
		public ims.core.vo.OutPatientListSearchCriteriaVo getOutPatientSearchCriteria()
		{
			return (ims.core.vo.OutPatientListSearchCriteriaVo)cx_CoreOutPatientSearchCriteria.getValue(context);
		}
		public void setOutPatientSearchCriteria(ims.core.vo.OutPatientListSearchCriteriaVo value)
		{
			cx_CoreOutPatientSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreOutPatientSearchCriteria = new ims.framework.ContextVariable("Core.OutPatientSearchCriteria", "_cvp_Core.OutPatientSearchCriteria");
		public boolean getPatientToBeDisplayedIsNotNull()
		{
			return !cx_CorePatientToBeDisplayed.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientToBeDisplayed()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientToBeDisplayed.getValue(context);
		}
		public void setPatientToBeDisplayed(ims.core.vo.PatientShort value)
		{
			cx_CorePatientToBeDisplayed.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientToBeDisplayed = new ims.framework.ContextVariable("Core.PatientToBeDisplayed", "_cv_Core.PatientToBeDisplayed");
		public boolean getSelectingPatientFormIsNotNull()
		{
			return !cx_CoreSelectingPatientForm.getValueIsNull(context);
		}
		public ims.framework.FormName getSelectingPatientForm()
		{
			return (ims.framework.FormName)cx_CoreSelectingPatientForm.getValue(context);
		}
		public void setSelectingPatientForm(ims.framework.FormName value)
		{
			cx_CoreSelectingPatientForm.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreSelectingPatientForm = new ims.framework.ContextVariable("Core.SelectingPatientForm", "_cvp_Core.SelectingPatientForm");
		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getNewDocumentStatusIsNotNull()
		{
			return !cx_CoreNewDocumentStatus.getValueIsNull(context);
		}
		public ims.core.vo.lookups.DocumentStatus getNewDocumentStatus()
		{
			return (ims.core.vo.lookups.DocumentStatus)cx_CoreNewDocumentStatus.getValue(context);
		}
		public void setNewDocumentStatus(ims.core.vo.lookups.DocumentStatus value)
		{
			cx_CoreNewDocumentStatus.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreNewDocumentStatus = new ims.framework.ContextVariable("Core.NewDocumentStatus", "_cv_Core.NewDocumentStatus");
		public boolean getOutpatientAttendanceForOrderIsNotNull()
		{
			return !cx_CoreOutpatientAttendanceForOrder.getValueIsNull(context);
		}
		public ims.core.vo.OutPatientListVo getOutpatientAttendanceForOrder()
		{
			return (ims.core.vo.OutPatientListVo)cx_CoreOutpatientAttendanceForOrder.getValue(context);
		}
		public void setOutpatientAttendanceForOrder(ims.core.vo.OutPatientListVo value)
		{
			cx_CoreOutpatientAttendanceForOrder.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreOutpatientAttendanceForOrder = new ims.framework.ContextVariable("Core.OutpatientAttendanceForOrder", "_cv_Core.OutpatientAttendanceForOrder");
		public boolean getPatientCorrespondenceIsNotNull()
		{
			return !cx_CorePatientCorrespondence.getValueIsNull(context);
		}
		public ims.core.vo.PatientDocumentVo getPatientCorrespondence()
		{
			return (ims.core.vo.PatientDocumentVo)cx_CorePatientCorrespondence.getValue(context);
		}
		public void setPatientCorrespondence(ims.core.vo.PatientDocumentVo value)
		{
			cx_CorePatientCorrespondence.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientCorrespondence = new ims.framework.ContextVariable("Core.PatientCorrespondence", "_cv_Core.PatientCorrespondence");

		private ims.framework.Context context;
	}

	public CoreContext Core;
}
