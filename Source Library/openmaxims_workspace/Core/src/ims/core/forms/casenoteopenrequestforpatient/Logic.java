//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by George Cristian Josan using IMS Development Environment (version 1.80 build 5256.13787)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.core.forms.casenoteopenrequestforpatient;

import ims.core.vo.CaseNoteRequestsColumnWidthVo;
import ims.framework.enumerations.DialogResult;



public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;


	//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
	//	Form Event handlers
	//-------------------------------------------------------------------------------------------------------------------------------------------------------------------

	@Override
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		// Initialize the form & functions
		initialize();
		
		// Present the form to screen
		open();
	}


	@Override
	protected void onCcRequestsValueChanged() throws ims.framework.exceptions.PresentationLogicException
	{
		form.ccRequests().clearComponentAction();
		
		updateControlsState();
	}


	@Override
	protected void onBtnSelectClick() throws ims.framework.exceptions.PresentationLogicException
	{
		form.getGlobalContext().Core.setSelectedPatientCaseNoteRequestToPull(form.ccRequests().getSelectedRowValue());
		
		engine.close(DialogResult.OK);
	}
	
	
	@Override
	protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}



	//-------------------------------------------------------------------------------------------------------------------------------------------------------------------
	//	Form presentation functions
	//-------------------------------------------------------------------------------------------------------------------------------------------------------------------

	private void initialize()
	{
		CaseNoteRequestsColumnWidthVo columnWidth = new CaseNoteRequestsColumnWidthVo();
		columnWidth.setColumnTypeWidth(100);
		columnWidth.setColumnRequestDateWidth(100);
		columnWidth.setColumnRequestLocationWidth(180);
		columnWidth.setColumnRequestByWidth(180);
		columnWidth.setColumnSelectWidth(80);
		
		form.ccRequests().initialize(false, false, false, columnWidth);
	}


	private void open()
	{
		form.ccRequests().setValue(form.getGlobalContext().Core.getPatientShort(), null, Boolean.TRUE);
		
		updateControlsState();
	}


	private void updateControlsState()
	{
		form.btnSelect().setEnabled(form.ccRequests().getSelectedRowValue() != null);
	}
}
