//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.domain;

// Generated from form domain impl
public interface PatientCaseNotes extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteVo getCaseNoteFolder(ims.core.clinical.vo.PatientCaseNoteRefVo caseNote);

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteVo saveCaseNoteFolder(ims.core.vo.PatientCaseNoteVo caseNote) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	public ims.core.vo.LocationLiteVoCollection listCaseNoteLocations(String value);

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteRequestVo getCaseNoteRequests(ims.core.clinical.vo.PatientCaseNoteRequestRefVo caseNoteRequests);

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteRequestVo saveCaseNoteRequest(ims.core.vo.PatientCaseNoteRequestVo caseNoteRequest) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteVo archiveScanDestroyCaseNoteFolder(ims.core.vo.PatientCaseNoteVo caseNoteFolder, ims.core.vo.lookups.CaseNoteStatus requestStatus) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteRequestForCheckingVoCollection checkIfThereAreRequests(ims.core.clinical.vo.PatientCaseNoteRefVo caseNote, ims.core.clinical.vo.PatientCaseNoteRequestRefVo currentRequest, ims.core.resource.place.vo.LocationRefVo location, ims.framework.utils.DateTime reqDate);

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteRequestVo saveCaseNoteRequest(ims.core.vo.PatientCaseNoteRequestVo request, ims.core.vo.PatientCaseNoteRequestForCheckingVoCollection requestedThatNeedsToBeCancelled) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.emergency.vo.AppFormForTrackingVo getFormMenuAction(Integer formId);

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteRequestVoCollection saveAutomaticCaseNoteRequests(ims.core.vo.PatientLiteVo patient, ims.core.vo.MemberOfStaffLiteVo mos, ims.core.vo.LocationLiteVo location, ims.framework.utils.DateTime requiredBydate, ims.scheduling.vo.Booking_AppointmentRefVo appointment, ims.RefMan.vo.TCIForPatientElectiveListRefVo tci) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	public Boolean cancelRequest(ims.core.clinical.vo.PatientCaseNoteRequestRefVo request, ims.core.resource.people.vo.MemberOfStaffRefVo mos, ims.core.vo.lookups.CaseNoteRequestCancellationReason cancellationReason) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public ims.admin.vo.CaseNoteTrackingConfigVo getTrackingConfig();

	// Generated from form domain interface definition
	public void mergeVolumes(ims.core.clinical.vo.PatientCaseNoteRefVo caseNoteFrom, ims.core.clinical.vo.PatientCaseNoteRefVo caseNoteTo) throws ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	public Boolean checkIfThereIsACaseNoteFolderCreated(ims.core.patient.vo.PatientRefVo patient, ims.core.vo.lookups.CaseNoteStatus status, ims.core.vo.lookups.FolderCaseNote folder, ims.core.clinical.vo.PatientCaseNoteRefVo selectedCaseNoteFolder);

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteVo changeFromTemporaryToPermanent(ims.core.vo.PatientCaseNoteVo caseNote) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteVoCollection getCaseNoteFolders(ims.core.patient.vo.PatientRefVo patientRef, ims.core.resource.place.vo.LocationRefVo locationRef);

	// Generated from form domain interface definition
	public ims.core.vo.PatientCaseNoteVo createAutomatedCaseNote(ims.core.patient.vo.PatientRefVo patient, ims.core.resource.people.vo.MemberOfStaffRefVo mos, ims.core.vo.LocationLiteVo location);

	// Generated from form domain interface definition
	public void createCaseNoteFolderIfNone(ims.core.patient.vo.PatientRefVo patient);

	// Generated from form domain interface definition
	public Boolean isCaseNoteRequestStale(ims.core.clinical.vo.PatientCaseNoteRequestRefVo caseNoteRequest);
}
