//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseWardViewPatientListImpl extends DomainImpl implements ims.core.domain.WardViewPatientList, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistPatients(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay, Object searchType)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForPatientsOnTheWard(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForPatientsAwaitingBed(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForPatientsOnHomeLeave(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForPatientsToBeDischargedWithin24Hours(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForPatientsWithDischargedConfirmedWithin24Hours(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForPatientsReadyToLeave(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForTransferOutPatients(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForTransferInPatients(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPendingEDEmergencyAdmission(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPatientsForElectiveAdmission(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validategetInpatientEpisodeLite(ims.core.admin.pas.vo.InpatientEpisodeRefVo inpatientEpisode)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPendingTransferLite(ims.core.admin.pas.vo.PendingTransfersRefVo transfer)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelTransfer(ims.core.vo.PendingTransfersLiteVo transfer, ims.core.resource.place.vo.LocationRefVo ward)
	{
	}

	@SuppressWarnings("unused")
	public void validategetTrackingForPendingEmergency(ims.core.admin.pas.vo.PendingEmergencyAdmissionRefVo pendingEmergency)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientShort(ims.core.patient.vo.PatientRefVo patientRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistForPatientsOnHomeLeaveWithBedsRetained(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validategetSelectedBedSpaceState(ims.core.admin.pas.vo.BedSpaceStateRefVo bedSpaceStateRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPendingEmergencyAdmissions(ims.core.resource.place.vo.LocationRefVo ward, ims.core.resource.place.vo.LocationRefVo bay)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientElectiveList(ims.RefMan.vo.PatientElectiveListRefVo patientElectiveList)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPendingTransferForInpatientEpisode(ims.core.admin.pas.vo.InpatientEpisodeRefVo voInpatRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextForPasEvent(ims.core.admin.pas.vo.PASEventRefVo pasEventRef)
	{
	}

	@SuppressWarnings("unused")
	public void validategetWardConfig(ims.core.resource.place.vo.LocationRefVo wardRef)
	{
	}

	@SuppressWarnings("unused")
	public void validateupdatePendingTransfer(ims.core.vo.PendingTransfersLiteVo pendingTransf)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCareContextForTrackingAttendance(ims.emergency.vo.EmergencyAttendanceLiteVo emergencyAttendanceRef)
	{
	}

	@SuppressWarnings("unused")
	public void validateundoReadyToLeave(ims.core.vo.InpatientEpisodeLiteVo voInpatToUpdate)
	{
	}

	@SuppressWarnings("unused")
	public void validatereturnFromHomeLeaveToWard(ims.core.vo.InpatientEpisodeLiteVo voInpat, ims.core.vo.HomeLeaveVo voHomeLeave)
	{
	}
}
