//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BasePatientCaseNotesImpl extends DomainImpl implements ims.core.domain.PatientCaseNotes, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetCaseNoteFolder(ims.core.clinical.vo.PatientCaseNoteRefVo caseNote)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveCaseNoteFolder(ims.core.vo.PatientCaseNoteVo caseNote)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistCaseNoteLocations(String value)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCaseNoteRequests(ims.core.clinical.vo.PatientCaseNoteRequestRefVo caseNoteRequests)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveCaseNoteRequest(ims.core.vo.PatientCaseNoteRequestVo caseNoteRequest)
	{
	}

	@SuppressWarnings("unused")
	public void validatearchiveScanDestroyCaseNoteFolder(ims.core.vo.PatientCaseNoteVo caseNoteFolder, ims.core.vo.lookups.CaseNoteStatus requestStatus)
	{
	}

	@SuppressWarnings("unused")
	public void validatecheckIfThereAreRequests(ims.core.clinical.vo.PatientCaseNoteRefVo caseNote, ims.core.clinical.vo.PatientCaseNoteRequestRefVo currentRequest, ims.core.resource.place.vo.LocationRefVo location, ims.framework.utils.DateTime reqDate)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveCaseNoteRequest(ims.core.vo.PatientCaseNoteRequestVo request, ims.core.vo.PatientCaseNoteRequestForCheckingVoCollection requestedThatNeedsToBeCancelled)
	{
	}

	@SuppressWarnings("unused")
	public void validategetFormMenuAction(Integer formId)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveAutomaticCaseNoteRequests(ims.core.vo.PatientLiteVo patient, ims.core.vo.MemberOfStaffLiteVo mos, ims.core.vo.LocationLiteVo location, ims.framework.utils.DateTime requiredBydate, ims.scheduling.vo.Booking_AppointmentRefVo appointment, ims.RefMan.vo.TCIForPatientElectiveListRefVo tci)
	{
	}

	@SuppressWarnings("unused")
	public void validatecancelRequest(ims.core.clinical.vo.PatientCaseNoteRequestRefVo request, ims.core.resource.people.vo.MemberOfStaffRefVo mos, ims.core.vo.lookups.CaseNoteRequestCancellationReason cancellationReason)
	{
	}

	@SuppressWarnings("unused")
	public void validatemergeVolumes(ims.core.clinical.vo.PatientCaseNoteRefVo caseNoteFrom, ims.core.clinical.vo.PatientCaseNoteRefVo caseNoteTo)
	{
	}

	@SuppressWarnings("unused")
	public void validatecheckIfThereIsACaseNoteFolderCreated(ims.core.patient.vo.PatientRefVo patient, ims.core.vo.lookups.CaseNoteStatus status, ims.core.vo.lookups.FolderCaseNote folder, ims.core.clinical.vo.PatientCaseNoteRefVo selectedCaseNoteFolder)
	{
	}

	@SuppressWarnings("unused")
	public void validatechangeFromTemporaryToPermanent(ims.core.vo.PatientCaseNoteVo caseNote)
	{
	}

	@SuppressWarnings("unused")
	public void validategetCaseNoteFolders(ims.core.patient.vo.PatientRefVo patientRef, ims.core.resource.place.vo.LocationRefVo locationRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatecreateAutomatedCaseNote(ims.core.patient.vo.PatientRefVo patient, ims.core.resource.people.vo.MemberOfStaffRefVo mos, ims.core.vo.LocationLiteVo location)
	{
	}

	@SuppressWarnings("unused")
	public void validatecreateCaseNoteFolderIfNone(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validateisCaseNoteRequestStale(ims.core.clinical.vo.PatientCaseNoteRequestRefVo caseNoteRequest)
	{
	}
}
