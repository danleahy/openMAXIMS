//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cornel Ventuneac using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2013 IMS MAXIMS. All rights reserved.

package ims.core.domain.impl;

import ims.admin.domain.OrganisationAndLocation;
import ims.admin.domain.impl.OrganisationAndLocationImpl;
import ims.core.domain.InpatientEpisodeMaintenance;
import ims.core.domain.base.impl.BaseWardConsultantSpecialtyTransferDlgImpl;
import ims.core.resource.people.domain.objects.Hcp;
import ims.core.resource.people.domain.objects.Medic;
import ims.core.resource.people.domain.objects.MemberOfStaff;
import ims.core.resource.place.vo.LocationRefVo;
import ims.core.vo.LocationLiteVo;
import ims.core.vo.LocationLiteVoCollection;
import ims.core.vo.MedicVo;
import ims.core.vo.ServiceLiteVoCollection;
import ims.core.vo.domain.MedicVoAssembler;
import ims.domain.DomainFactory;
import ims.framework.interfaces.ILocation;
import ims.vo.interfaces.IMos;

public class WardConsultantSpecialtyTransferDlgImpl extends BaseWardConsultantSpecialtyTransferDlgImpl
{

	private static final long serialVersionUID = 1L;
	//WDEV-21215
	public ims.core.vo.LocationLiteVoCollection listWardsForHospital(LocationRefVo hospRef)
	{
		OrganisationAndLocation impl = (OrganisationAndLocation) getDomainImpl(OrganisationAndLocationImpl.class);
		return impl.listActiveWardsForHospitalLite(hospRef);
	}
	
	public MedicVo getMedicVoFromIMos(IMos iMos)
	{
		if(iMos==null)
			return null;
		DomainFactory factory = getDomainFactory();
		MemberOfStaff mos =(MemberOfStaff)factory.getDomainObject(MemberOfStaff.class, iMos.getIMosId());
		Hcp hcp = mos.getHcp();
		Medic medic = (Medic)factory.getDomainObject(Medic.class, hcp.getId());
		return MedicVoAssembler.create(medic);
	}

	public ServiceLiteVoCollection listServices()
	{
		InpatientEpisodeMaintenance impl =  (InpatientEpisodeMaintenance)getDomainImpl(InpatientEpisodeMaintenanceImpl.class);
		return impl.getServices();
	}
	//WDEV-21215
	public LocationLiteVoCollection listActiveHospitals()
	{
		InpatientEpisodeMaintenance impl =  (InpatientEpisodeMaintenance)getDomainImpl(InpatientEpisodeMaintenanceImpl.class);
		return impl.listActiveHospitals();
	}
	//WDEV-21215
	public LocationLiteVo getParentHospital(ILocation iLoc)
	{
		OrganisationAndLocation impl = (OrganisationAndLocation) getDomainImpl(OrganisationAndLocationImpl.class);
		return impl.getHospitalLiteForLocation(iLoc);
	}
}
