//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Gabriel Maxim using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.

package ims.core.domain.impl;

import ims.core.domain.BedInfoDialog;
import ims.core.domain.Transfers;
import ims.core.domain.WardDataView;
import ims.core.domain.base.impl.BaseADTEditTransferDetailsDialogImpl;

public class ADTEditTransferDetailsDialogImpl extends BaseADTEditTransferDetailsDialogImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* getPendingTransfer()
	*/
	public ims.core.vo.PendingTransfersLiteVo getPendingTransfer(ims.core.admin.pas.vo.PendingTransfersRefVo voPendinTransfRef)
	{
		WardDataView impl = (WardDataView) getDomainImpl(WardDataViewImpl.class);
		return impl.getPendingTransfer(voPendinTransfRef);
	}

	public void savePendingTransfer(ims.core.vo.PendingTransfersLiteVo voPendingTransfer) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException
	{
		BedInfoDialog bedDialogImpl = (BedInfoDialog) getDomainImpl(BedInfoDialogImpl.class);
		bedDialogImpl.saveTransferOut(voPendingTransfer);
	}

	public ims.core.vo.LocationLiteVoCollection listActiveHospitals()
	{
		Transfers transfersImpl = (Transfers) getDomainImpl(TransfersImpl.class);
		return transfersImpl.listActiveHospitalsLite();
	}

	public ims.core.vo.LocationLiteVo getParentHospitalForWard(ims.core.vo.LocationLiteVo ward)
	{
		BedInfoDialog bedDialogImpl = (BedInfoDialog) getDomainImpl(BedInfoDialogImpl.class);
		return bedDialogImpl.getParentLocation(ward);
	}

	public ims.core.vo.LocationLiteVoCollection listWardsForHospital(ims.core.vo.LocationLiteVo voHospital, String value)
	{
		if (voHospital == null)
			return null;
		Transfers transfersImpl = (Transfers) getDomainImpl(TransfersImpl.class);
		return transfersImpl.listWards(voHospital.getID_Location(), value);
	}

	public ims.core.vo.ServiceLiteVoCollection listServices(String val)
	{
		BedInfoDialog bedDialogImpl = (BedInfoDialog) getDomainImpl(BedInfoDialogImpl.class);
		return bedDialogImpl.listServices(val);
	}
}
