//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Gabriel Maxim using IMS Development Environment (version 1.80 build 5214.17710)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.core.domain.impl;

import ims.core.clinical.domain.objects.PatientCaseNote;
import ims.core.clinical.vo.PatientCaseNoteRefVo;
import ims.core.domain.PatientCaseNotes;
import ims.core.domain.base.impl.BaseCaseNoteArchiveOrDestroyImpl;
import ims.core.vo.PatientCaseNoteVo;
import ims.core.vo.domain.PatientCaseNoteVoAssembler;
import ims.core.vo.enums.PatientCaseNoteFolderProcessAction;
import ims.core.vo.lookups.CaseNoteStatus;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.exceptions.CodingRuntimeException;

public class CaseNoteArchiveOrDestroyImpl extends BaseCaseNoteArchiveOrDestroyImpl
{

	private static final long serialVersionUID = 1L;

	public PatientCaseNoteVo getPatientCaseNote(PatientCaseNoteRefVo caseNoteRefVo)
	{
		if (caseNoteRefVo == null || caseNoteRefVo.getID_PatientCaseNote() == null)
			throw new CodingRuntimeException("Cannot get PatientCaseNote object for null reference.");
		
		PatientCaseNote caseNoteDo = (PatientCaseNote) getDomainFactory().getDomainObject(PatientCaseNote.class, caseNoteRefVo.getID_PatientCaseNote());
		
		return PatientCaseNoteVoAssembler.create(caseNoteDo);
		
	}
	
	public PatientCaseNoteVo saveCaseNoteAndProcessRequests(PatientCaseNoteVo caseNoteToSave, PatientCaseNoteFolderProcessAction formFunctionMode) throws StaleObjectException, DomainInterfaceException
	{
		PatientCaseNotes implCaseNotes = (PatientCaseNotes) getDomainImpl(PatientCaseNotesImpl.class);
		
		if (PatientCaseNoteFolderProcessAction.ARCHIVE.equals(formFunctionMode))
		{
			return implCaseNotes.archiveScanDestroyCaseNoteFolder(caseNoteToSave, CaseNoteStatus.ARCHIVED);
		}
		else if (PatientCaseNoteFolderProcessAction.SCAN.equals(formFunctionMode))
		{
			return implCaseNotes.archiveScanDestroyCaseNoteFolder(caseNoteToSave, CaseNoteStatus.SCANNED);
		}
		else if (PatientCaseNoteFolderProcessAction.DESTROY.equals(formFunctionMode))
		{
			return implCaseNotes.archiveScanDestroyCaseNoteFolder(caseNoteToSave, CaseNoteStatus.DESTROYED);
		}
		
		return null;
		
	}
}
