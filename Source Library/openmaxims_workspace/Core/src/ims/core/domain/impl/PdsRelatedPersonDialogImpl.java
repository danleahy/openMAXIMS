//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Vasile Purdila using IMS Development Environment (version 1.80 build 5443.18271)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.core.domain.impl;

import ims.core.domain.Demographics;
import ims.core.domain.PatientSearch;
import ims.core.domain.base.impl.BasePdsRelatedPersonDialogImpl;
import ims.core.vo.Patient;
import ims.core.vo.PatientShort;
import ims.domain.exceptions.DomainInterfaceException;
import ims.domain.exceptions.DomainRuntimeException;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.exceptions.CodingRuntimeException;

public class PdsRelatedPersonDialogImpl extends BasePdsRelatedPersonDialogImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* searchPatients
	*/
	public ims.core.vo.PatientShortCollection searchPatients(ims.core.vo.PatientFilter filter) throws ims.domain.exceptions.DomainInterfaceException
	{
		if (filter == null)
			throw new CodingRuntimeException("filter cannot be null in method searchPatients");
			
		PatientSearch impl = (PatientSearch) getDomainImpl(PatientSearchImpl.class);
		return impl.searchPatients(filter);

	}

	@Override
	public Patient getPatient(PatientShort patient) throws DomainInterfaceException, StaleObjectException
	{
		Demographics demographicsImpl = (Demographics) getDomainImpl(DemographicsImpl.class);
		
		Patient pat = null;
		try
		{
			pat = demographicsImpl.getPatient(patient);
		}
		catch (DomainRuntimeException e)
		{
			throw new DomainInterfaceException(e.getMessage());
		}

		return pat;
	}
}
