//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Gabriel Maxim using IMS Development Environment (version 1.80 build 5465.13953)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.

package ims.core.domain.impl;

import java.util.List;

import ims.core.domain.base.impl.BaseBaysOpeningTimesDlgImpl;
import ims.core.vo.BayConfigListVo;
import ims.core.vo.BayConfigListVoCollection;
import ims.core.vo.domain.BayConfigListVoAssembler;

public class BaysOpeningTimesDlgImpl extends BaseBaysOpeningTimesDlgImpl
{

	private static final long serialVersionUID = 1L;

	public ims.core.vo.BayConfigListVoCollection getConfig(ims.core.resource.place.vo.LocationRefVo wardRef)
	{
		if (wardRef == null)
			return null;

		String hql = "select baycfgs from WardBayConfig as wconfig left join wconfig.bays as baycfgs WHERE baycfgs.isActive = :ACTIVE AND wconfig.ward.isActive = :ACTIVE AND wconfig.ward.id = :WARD_ID ORDER BY baycfgs.bay.name ASC";

		List<?> bays = getDomainFactory().find(hql, new String[]{"ACTIVE", "WARD_ID"}, new Object[]{Boolean.TRUE, wardRef.getID_Location()});

		if (bays == null || bays.isEmpty())
			return null;

		BayConfigListVoCollection baysColl = BayConfigListVoAssembler.createBayConfigListVoCollectionFromBayConfig(bays);
		BayConfigListVoCollection baysFilteredColl = new BayConfigListVoCollection();
		for (BayConfigListVo bay : baysColl)
		{
			if (bay != null && bay.isBayOutOfOpeningHours())
				baysFilteredColl.add(bay);
		}		 
		return baysFilteredColl;		
	}
}
