//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.patientmedicationmultipledoses;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		Clinical = new ClinicalContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");
		public boolean getClinicalContactIsNotNull()
		{
			return !cx_CoreClinicalContact.getValueIsNull(context);
		}
		public ims.core.vo.ClinicalContactVo getClinicalContact()
		{
			return (ims.core.vo.ClinicalContactVo)cx_CoreClinicalContact.getValue(context);
		}
		public void setClinicalContact(ims.core.vo.ClinicalContactVo value)
		{
			cx_CoreClinicalContact.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreClinicalContact = new ims.framework.ContextVariable("Core.ClinicalContact", "_cv_Core.ClinicalContact");
		public boolean getTaxonomyMapIsNotNull()
		{
			return !cx_CoreTaxonomyMap.getValueIsNull(context);
		}
		public ims.core.vo.TaxonomyMap getTaxonomyMap()
		{
			return (ims.core.vo.TaxonomyMap)cx_CoreTaxonomyMap.getValue(context);
		}
		public void setTaxonomyMap(ims.core.vo.TaxonomyMap value)
		{
			cx_CoreTaxonomyMap.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreTaxonomyMap = new ims.framework.ContextVariable("Core.TaxonomyMap", "_cv_Core.TaxonomyMap");

		private ims.framework.Context context;
	}
	public final class ClinicalContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ClinicalContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentMedicationOverViewIsNotNull()
		{
			return !cx_ClinicalCurrentMedicationOverView.getValueIsNull(context);
		}
		public ims.clinical.vo.MedicationOverViewVo getCurrentMedicationOverView()
		{
			return (ims.clinical.vo.MedicationOverViewVo)cx_ClinicalCurrentMedicationOverView.getValue(context);
		}
		public void setCurrentMedicationOverView(ims.clinical.vo.MedicationOverViewVo value)
		{
			cx_ClinicalCurrentMedicationOverView.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalCurrentMedicationOverView = new ims.framework.ContextVariable("Clinical.CurrentMedicationOverView", "_cv_Clinical.CurrentMedicationOverView");
		public boolean getDialogFormNameIsNotNull()
		{
			return !cx_ClinicalDialogFormName.getValueIsNull(context);
		}
		public ims.framework.FormName getDialogFormName()
		{
			return (ims.framework.FormName)cx_ClinicalDialogFormName.getValue(context);
		}
		public void setDialogFormName(ims.framework.FormName value)
		{
			cx_ClinicalDialogFormName.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalDialogFormName = new ims.framework.ContextVariable("Clinical.DialogFormName", "_cv_Clinical.DialogFormName");
		public boolean getDiscontinueMedicationReasonValuesIsNotNull()
		{
			return !cx_ClinicalDiscontinueMedicationReasonValues.getValueIsNull(context);
		}
		public ims.clinical.vo.DiscontinueMedicationReasonValuesVo getDiscontinueMedicationReasonValues()
		{
			return (ims.clinical.vo.DiscontinueMedicationReasonValuesVo)cx_ClinicalDiscontinueMedicationReasonValues.getValue(context);
		}
		public void setDiscontinueMedicationReasonValues(ims.clinical.vo.DiscontinueMedicationReasonValuesVo value)
		{
			cx_ClinicalDiscontinueMedicationReasonValues.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalDiscontinueMedicationReasonValues = new ims.framework.ContextVariable("Clinical.DiscontinueMedicationReasonValues", "_cv_Clinical.DiscontinueMedicationReasonValues");
		public boolean getMedMultipleDosesAdmSearchCriteiaIsNotNull()
		{
			return !cx_ClinicalMedMultipleDosesAdmSearchCriteia.getValueIsNull(context);
		}
		public ims.clinical.vo.MedicationOverViewFilterVo getMedMultipleDosesAdmSearchCriteia()
		{
			return (ims.clinical.vo.MedicationOverViewFilterVo)cx_ClinicalMedMultipleDosesAdmSearchCriteia.getValue(context);
		}
		public void setMedMultipleDosesAdmSearchCriteia(ims.clinical.vo.MedicationOverViewFilterVo value)
		{
			cx_ClinicalMedMultipleDosesAdmSearchCriteia.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalMedMultipleDosesAdmSearchCriteia = new ims.framework.ContextVariable("Clinical.MedMultipleDosesAdmSearchCriteia", "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia");
		public boolean getMedMultipleDosesDisSearchCriteriaIsNotNull()
		{
			return !cx_ClinicalMedMultipleDosesDisSearchCriteria.getValueIsNull(context);
		}
		public ims.clinical.vo.MedicationOverViewFilterVo getMedMultipleDosesDisSearchCriteria()
		{
			return (ims.clinical.vo.MedicationOverViewFilterVo)cx_ClinicalMedMultipleDosesDisSearchCriteria.getValue(context);
		}
		public void setMedMultipleDosesDisSearchCriteria(ims.clinical.vo.MedicationOverViewFilterVo value)
		{
			cx_ClinicalMedMultipleDosesDisSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalMedMultipleDosesDisSearchCriteria = new ims.framework.ContextVariable("Clinical.MedMultipleDosesDisSearchCriteria", "_cvp_Clinical.MedMultipleDosesDisSearchCriteria");
		public boolean getReturnToFormCDIDescriptionIsNotNull()
		{
			return !cx_ClinicalReturnToFormCDIDescription.getValueIsNull(context);
		}
		public String getReturnToFormCDIDescription()
		{
			return (String)cx_ClinicalReturnToFormCDIDescription.getValue(context);
		}
		public void setReturnToFormCDIDescription(String value)
		{
			cx_ClinicalReturnToFormCDIDescription.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalReturnToFormCDIDescription = new ims.framework.ContextVariable("Clinical.ReturnToFormCDIDescription", "_cv_Clinical.ReturnToFormCDIDescription");
		public boolean getReturnToFormModeIsNotNull()
		{
			return !cx_ClinicalReturnToFormMode.getValueIsNull(context);
		}
		public ims.framework.enumerations.FormMode getReturnToFormMode()
		{
			return (ims.framework.enumerations.FormMode)cx_ClinicalReturnToFormMode.getValue(context);
		}
		public void setReturnToFormMode(ims.framework.enumerations.FormMode value)
		{
			cx_ClinicalReturnToFormMode.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalReturnToFormMode = new ims.framework.ContextVariable("Clinical.ReturnToFormMode", "_cv_Clinical.ReturnToFormMode");
		public boolean getReturnToFormNameIsNotNull()
		{
			return !cx_ClinicalReturnToFormName.getValueIsNull(context);
		}
		public ims.framework.FormName getReturnToFormName()
		{
			return (ims.framework.FormName)cx_ClinicalReturnToFormName.getValue(context);
		}
		public void setReturnToFormName(ims.framework.FormName value)
		{
			cx_ClinicalReturnToFormName.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalReturnToFormName = new ims.framework.ContextVariable("Clinical.ReturnToFormName", "_cv_Clinical.ReturnToFormName");
		public boolean getMedMultipleDosesOPDSearchCriteriaIsNotNull()
		{
			return !cx_ClinicalMedMultipleDosesOPDSearchCriteria.getValueIsNull(context);
		}
		public ims.clinical.vo.MedicationOverViewFilterVo getMedMultipleDosesOPDSearchCriteria()
		{
			return (ims.clinical.vo.MedicationOverViewFilterVo)cx_ClinicalMedMultipleDosesOPDSearchCriteria.getValue(context);
		}
		public void setMedMultipleDosesOPDSearchCriteria(ims.clinical.vo.MedicationOverViewFilterVo value)
		{
			cx_ClinicalMedMultipleDosesOPDSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalMedMultipleDosesOPDSearchCriteria = new ims.framework.ContextVariable("Clinical.MedMultipleDosesOPDSearchCriteria", "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria");
		public boolean getMedMultipleDosesPatSearchCriteriaIsNotNull()
		{
			return !cx_ClinicalMedMultipleDosesPatSearchCriteria.getValueIsNull(context);
		}
		public ims.clinical.vo.MedicationOverViewFilterVo getMedMultipleDosesPatSearchCriteria()
		{
			return (ims.clinical.vo.MedicationOverViewFilterVo)cx_ClinicalMedMultipleDosesPatSearchCriteria.getValue(context);
		}
		public void setMedMultipleDosesPatSearchCriteria(ims.clinical.vo.MedicationOverViewFilterVo value)
		{
			cx_ClinicalMedMultipleDosesPatSearchCriteria.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalMedMultipleDosesPatSearchCriteria = new ims.framework.ContextVariable("Clinical.MedMultipleDosesPatSearchCriteria", "_cvp_Clinical.MedMultipleDosesPatSearchCriteria");

		private ims.framework.Context context;
	}

	public CoreContext Core;
	public ClinicalContext Clinical;
}
