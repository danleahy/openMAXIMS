//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.anaestheticsignindialog;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Scheduling = new SchedulingContext(context);
		Clinical = new ClinicalContext(context);
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getTheatreSessionIsNotNull()
		{
			return !cx_SchedulingTheatreSession.getValueIsNull(context);
		}
		public ims.scheduling.vo.Sch_SessionRefVo getTheatreSession()
		{
			return (ims.scheduling.vo.Sch_SessionRefVo)cx_SchedulingTheatreSession.getValue(context);
		}
		public void setTheatreSession(ims.scheduling.vo.Sch_SessionRefVo value)
		{
			cx_SchedulingTheatreSession.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreSession = new ims.framework.ContextVariable("Scheduling.TheatreSession", "_cv_Scheduling.TheatreSession");

		private ims.framework.Context context;
	}
	public final class ClinicalContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ClinicalContext(ims.framework.Context context)
		{
			this.context = context;

			AcuteTheatreCaseTimes = new AcuteTheatreCaseTimesContext(context);
		}
		public final class AcuteTheatreCaseTimesContext implements Serializable
		{
			private static final long serialVersionUID = 1L;

			private AcuteTheatreCaseTimesContext(ims.framework.Context context)
			{
				this.context = context;
			}
			public boolean getPersistAnaestheticTimeIsNotNull()
			{
				return !cx_ClinicalAcuteTheatreCaseTimesPersistAnaestheticTime.getValueIsNull(context);
			}
			public Boolean getPersistAnaestheticTime()
			{
				return (Boolean)cx_ClinicalAcuteTheatreCaseTimesPersistAnaestheticTime.getValue(context);
			}
		public void setPersistAnaestheticTime(Boolean value)
		{
				cx_ClinicalAcuteTheatreCaseTimesPersistAnaestheticTime.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_ClinicalAcuteTheatreCaseTimesPersistAnaestheticTime = new ims.framework.ContextVariable("Clinical.AcuteTheatreCaseTimes.PersistAnaestheticTime", "_cv_Clinical.AcuteTheatreCaseTimes.PersistAnaestheticTime");
			public boolean getSignInIsNotNull()
			{
				return !cx_ClinicalAcuteTheatreCaseTimesSignIn.getValueIsNull(context);
			}
			public ims.clinical.vo.PeriOpAnaesthticSignInTimVo getSignIn()
			{
				return (ims.clinical.vo.PeriOpAnaesthticSignInTimVo)cx_ClinicalAcuteTheatreCaseTimesSignIn.getValue(context);
			}
		public void setSignIn(ims.clinical.vo.PeriOpAnaesthticSignInTimVo value)
		{
				cx_ClinicalAcuteTheatreCaseTimesSignIn.setValue(context, value);
		}

			private ims.framework.ContextVariable cx_ClinicalAcuteTheatreCaseTimesSignIn = new ims.framework.ContextVariable("Clinical.AcuteTheatreCaseTimes.SignIn", "_cv_Clinical.AcuteTheatreCaseTimes.SignIn");
			private ims.framework.Context context;
		}

		public boolean getTheatreBookingRefIsNotNull()
		{
			return !cx_ClinicalTheatreBookingRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.TheatreBookingRefVo getTheatreBookingRef()
		{
			return (ims.scheduling.vo.TheatreBookingRefVo)cx_ClinicalTheatreBookingRef.getValue(context);
		}
		public void setTheatreBookingRef(ims.scheduling.vo.TheatreBookingRefVo value)
		{
			cx_ClinicalTheatreBookingRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalTheatreBookingRef = new ims.framework.ContextVariable("Clinical.TheatreBookingRef", "_cv_Clinical.TheatreBookingRef");
		public boolean getTheatreAppointmentRefIsNotNull()
		{
			return !cx_ClinicalTheatreAppointmentRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentRefVo getTheatreAppointmentRef()
		{
			return (ims.scheduling.vo.Booking_AppointmentRefVo)cx_ClinicalTheatreAppointmentRef.getValue(context);
		}
		public void setTheatreAppointmentRef(ims.scheduling.vo.Booking_AppointmentRefVo value)
		{
			cx_ClinicalTheatreAppointmentRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalTheatreAppointmentRef = new ims.framework.ContextVariable("Clinical.TheatreAppointmentRef", "_cv_Clinical.TheatreAppointmentRef");

		public AcuteTheatreCaseTimesContext AcuteTheatreCaseTimes;
		private ims.framework.Context context;
	}

	public SchedulingContext Scheduling;
	public ClinicalContext Clinical;
}
