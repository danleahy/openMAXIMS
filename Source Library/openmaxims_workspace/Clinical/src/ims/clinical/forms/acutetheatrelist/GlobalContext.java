//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.acutetheatrelist;

import java.io.Serializable;

public final class GlobalContext extends ims.framework.FormContext implements Serializable
{
	private static final long serialVersionUID = 1L;

	public GlobalContext(ims.framework.Context context)
	{
		super(context);

		Core = new CoreContext(context);
		Scheduling = new SchedulingContext(context);
		Clinical = new ClinicalContext(context);
		RefMan = new RefManContext(context);
	}
	public final class CoreContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private CoreContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCurrentCareContextIsNotNull()
		{
			return !cx_CoreCurrentCareContext.getValueIsNull(context);
		}
		public ims.core.vo.CareContextShortVo getCurrentCareContext()
		{
			return (ims.core.vo.CareContextShortVo)cx_CoreCurrentCareContext.getValue(context);
		}
		public void setCurrentCareContext(ims.core.vo.CareContextShortVo value)
		{
			cx_CoreCurrentCareContext.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCurrentCareContext = new ims.framework.ContextVariable("Core.CurrentCareContext", "_cvp_Core.CurrentCareContext");
		public boolean getCommentDialogStringIsNotNull()
		{
			return !cx_CoreCommentDialogString.getValueIsNull(context);
		}
		public String getCommentDialogString()
		{
			return (String)cx_CoreCommentDialogString.getValue(context);
		}
		public void setCommentDialogString(String value)
		{
			cx_CoreCommentDialogString.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCommentDialogString = new ims.framework.ContextVariable("Core.CommentDialogString", "_cv_Core.CommentDialogString");
		public boolean getCommentDialogTitleIsNotNull()
		{
			return !cx_CoreCommentDialogTitle.getValueIsNull(context);
		}
		public String getCommentDialogTitle()
		{
			return (String)cx_CoreCommentDialogTitle.getValue(context);
		}
		public void setCommentDialogTitle(String value)
		{
			cx_CoreCommentDialogTitle.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CoreCommentDialogTitle = new ims.framework.ContextVariable("Core.CommentDialogTitle", "_cv_Core.CommentDialogTitle");
		public boolean getPatientShortIsNotNull()
		{
			return !cx_CorePatientShort.getValueIsNull(context);
		}
		public ims.core.vo.PatientShort getPatientShort()
		{
			return (ims.core.vo.PatientShort)cx_CorePatientShort.getValue(context);
		}
		public void setPatientShort(ims.core.vo.PatientShort value)
		{
			cx_CorePatientShort.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_CorePatientShort = new ims.framework.ContextVariable("Core.PatientShort", "_cvp_Core.PatientShort");

		private ims.framework.Context context;
	}
	public final class SchedulingContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private SchedulingContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getApptCancelStatusIsNotNull()
		{
			return !cx_SchedulingApptCancelStatus.getValueIsNull(context);
		}
		public ims.scheduling.vo.Appointment_StatusVo getApptCancelStatus()
		{
			return (ims.scheduling.vo.Appointment_StatusVo)cx_SchedulingApptCancelStatus.getValue(context);
		}
		public void setApptCancelStatus(ims.scheduling.vo.Appointment_StatusVo value)
		{
			cx_SchedulingApptCancelStatus.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingApptCancelStatus = new ims.framework.ContextVariable("Scheduling.ApptCancelStatus", "_cv_Scheduling.ApptCancelStatus");
		public boolean getTheatreTypeIsNotNull()
		{
			return !cx_SchedulingTheatreType.getValueIsNull(context);
		}
		public ims.scheduling.vo.lookups.TheatreType getTheatreType()
		{
			return (ims.scheduling.vo.lookups.TheatreType)cx_SchedulingTheatreType.getValue(context);
		}
		public void setTheatreType(ims.scheduling.vo.lookups.TheatreType value)
		{
			cx_SchedulingTheatreType.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreType = new ims.framework.ContextVariable("Scheduling.TheatreType", "_cv_Scheduling.TheatreType");
		public boolean getTheatreSessionIsNotNull()
		{
			return !cx_SchedulingTheatreSession.getValueIsNull(context);
		}
		public ims.scheduling.vo.Sch_SessionRefVo getTheatreSession()
		{
			return (ims.scheduling.vo.Sch_SessionRefVo)cx_SchedulingTheatreSession.getValue(context);
		}
		public void setTheatreSession(ims.scheduling.vo.Sch_SessionRefVo value)
		{
			cx_SchedulingTheatreSession.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreSession = new ims.framework.ContextVariable("Scheduling.TheatreSession", "_cv_Scheduling.TheatreSession");
		public boolean getTheatreServiceIsNotNull()
		{
			return !cx_SchedulingTheatreService.getValueIsNull(context);
		}
		public ims.core.vo.ServiceLiteVo getTheatreService()
		{
			return (ims.core.vo.ServiceLiteVo)cx_SchedulingTheatreService.getValue(context);
		}
		public void setTheatreService(ims.core.vo.ServiceLiteVo value)
		{
			cx_SchedulingTheatreService.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreService = new ims.framework.ContextVariable("Scheduling.TheatreService", "_cv_Scheduling.TheatreService");
		public boolean getTheatreProcedureIsNotNull()
		{
			return !cx_SchedulingTheatreProcedure.getValueIsNull(context);
		}
		public ims.core.vo.ProcedureLiteVo getTheatreProcedure()
		{
			return (ims.core.vo.ProcedureLiteVo)cx_SchedulingTheatreProcedure.getValue(context);
		}
		public void setTheatreProcedure(ims.core.vo.ProcedureLiteVo value)
		{
			cx_SchedulingTheatreProcedure.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreProcedure = new ims.framework.ContextVariable("Scheduling.TheatreProcedure", "_cv_Scheduling.TheatreProcedure");
		public boolean getTheatreConsultantIsNotNull()
		{
			return !cx_SchedulingTheatreConsultant.getValueIsNull(context);
		}
		public ims.vo.interfaces.IMos getTheatreConsultant()
		{
			return (ims.vo.interfaces.IMos)cx_SchedulingTheatreConsultant.getValue(context);
		}
		public void setTheatreConsultant(ims.vo.interfaces.IMos value)
		{
			cx_SchedulingTheatreConsultant.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreConsultant = new ims.framework.ContextVariable("Scheduling.TheatreConsultant", "_cv_Scheduling.TheatreConsultant");
		public boolean getBookingAppointmentRefIsNotNull()
		{
			return !cx_SchedulingBookingAppointmentRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentRefVo getBookingAppointmentRef()
		{
			return (ims.scheduling.vo.Booking_AppointmentRefVo)cx_SchedulingBookingAppointmentRef.getValue(context);
		}
		public void setBookingAppointmentRef(ims.scheduling.vo.Booking_AppointmentRefVo value)
		{
			cx_SchedulingBookingAppointmentRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingBookingAppointmentRef = new ims.framework.ContextVariable("Scheduling.BookingAppointmentRef", "_cv_Scheduling.BookingAppointmentRef");
		public boolean getTheatreAppointmentIsNotNull()
		{
			return !cx_SchedulingTheatreAppointment.getValueIsNull(context);
		}
		public ims.scheduling.vo.BookingAppointmentTheatreVo getTheatreAppointment()
		{
			return (ims.scheduling.vo.BookingAppointmentTheatreVo)cx_SchedulingTheatreAppointment.getValue(context);
		}
		public void setTheatreAppointment(ims.scheduling.vo.BookingAppointmentTheatreVo value)
		{
			cx_SchedulingTheatreAppointment.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_SchedulingTheatreAppointment = new ims.framework.ContextVariable("Scheduling.TheatreAppointment", "_cv_Scheduling.TheatreAppointment");

		private ims.framework.Context context;
	}
	public final class ClinicalContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private ClinicalContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getTheatreBookingRefIsNotNull()
		{
			return !cx_ClinicalTheatreBookingRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.TheatreBookingRefVo getTheatreBookingRef()
		{
			return (ims.scheduling.vo.TheatreBookingRefVo)cx_ClinicalTheatreBookingRef.getValue(context);
		}
		public void setTheatreBookingRef(ims.scheduling.vo.TheatreBookingRefVo value)
		{
			cx_ClinicalTheatreBookingRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalTheatreBookingRef = new ims.framework.ContextVariable("Clinical.TheatreBookingRef", "_cv_Clinical.TheatreBookingRef");
		public boolean getTheatreAppointmentRefIsNotNull()
		{
			return !cx_ClinicalTheatreAppointmentRef.getValueIsNull(context);
		}
		public ims.scheduling.vo.Booking_AppointmentRefVo getTheatreAppointmentRef()
		{
			return (ims.scheduling.vo.Booking_AppointmentRefVo)cx_ClinicalTheatreAppointmentRef.getValue(context);
		}
		public void setTheatreAppointmentRef(ims.scheduling.vo.Booking_AppointmentRefVo value)
		{
			cx_ClinicalTheatreAppointmentRef.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalTheatreAppointmentRef = new ims.framework.ContextVariable("Clinical.TheatreAppointmentRef", "_cv_Clinical.TheatreAppointmentRef");
		public boolean getAvailableSafetyBriefAppointmentsIsNotNull()
		{
			return !cx_ClinicalAvailableSafetyBriefAppointments.getValueIsNull(context);
		}
		public ims.clinical.vo.AcuteTheatreListBookingAppointmentVoCollection getAvailableSafetyBriefAppointments()
		{
			return (ims.clinical.vo.AcuteTheatreListBookingAppointmentVoCollection)cx_ClinicalAvailableSafetyBriefAppointments.getValue(context);
		}
		public void setAvailableSafetyBriefAppointments(ims.clinical.vo.AcuteTheatreListBookingAppointmentVoCollection value)
		{
			cx_ClinicalAvailableSafetyBriefAppointments.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalAvailableSafetyBriefAppointments = new ims.framework.ContextVariable("Clinical.AvailableSafetyBriefAppointments", "_cv_Clinical.AvailableSafetyBriefAppointments");
		public boolean getTheatreSessionStartDateTimeIsNotNull()
		{
			return !cx_ClinicalTheatreSessionStartDateTime.getValueIsNull(context);
		}
		public ims.framework.utils.DateTime getTheatreSessionStartDateTime()
		{
			return (ims.framework.utils.DateTime)cx_ClinicalTheatreSessionStartDateTime.getValue(context);
		}
		public void setTheatreSessionStartDateTime(ims.framework.utils.DateTime value)
		{
			cx_ClinicalTheatreSessionStartDateTime.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalTheatreSessionStartDateTime = new ims.framework.ContextVariable("Clinical.TheatreSessionStartDateTime", "_cv_Clinical.TheatreSessionStartDateTime");
		public boolean getAcuteTheatreListFilterVoIsNotNull()
		{
			return !cx_ClinicalAcuteTheatreListFilterVo.getValueIsNull(context);
		}
		public ims.clinical.vo.AcuteTheatreListFilterVo getAcuteTheatreListFilterVo()
		{
			return (ims.clinical.vo.AcuteTheatreListFilterVo)cx_ClinicalAcuteTheatreListFilterVo.getValue(context);
		}
		public void setAcuteTheatreListFilterVo(ims.clinical.vo.AcuteTheatreListFilterVo value)
		{
			cx_ClinicalAcuteTheatreListFilterVo.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalAcuteTheatreListFilterVo = new ims.framework.ContextVariable("Clinical.AcuteTheatreListFilterVo", "_cvp_Clinical.AcuteTheatreListFilterVo");
		public boolean getIntraOpRecoveryMannerIsNotNull()
		{
			return !cx_ClinicalIntraOpRecoveryManner.getValueIsNull(context);
		}
		public Boolean getIntraOpRecoveryManner()
		{
			return (Boolean)cx_ClinicalIntraOpRecoveryManner.getValue(context);
		}
		public void setIntraOpRecoveryManner(Boolean value)
		{
			cx_ClinicalIntraOpRecoveryManner.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_ClinicalIntraOpRecoveryManner = new ims.framework.ContextVariable("Clinical.IntraOpRecoveryManner", "_cv_Clinical.IntraOpRecoveryManner");

		private ims.framework.Context context;
	}
	public final class RefManContext implements Serializable
	{
		private static final long serialVersionUID = 1L;

		private RefManContext(ims.framework.Context context)
		{
			this.context = context;

		}

		public boolean getCatsReferralIsNotNull()
		{
			return !cx_RefManCatsReferral.getValueIsNull(context);
		}
		public ims.RefMan.vo.CatsReferralRefVo getCatsReferral()
		{
			return (ims.RefMan.vo.CatsReferralRefVo)cx_RefManCatsReferral.getValue(context);
		}
		public void setCatsReferral(ims.RefMan.vo.CatsReferralRefVo value)
		{
			cx_RefManCatsReferral.setValue(context, value);
		}

		private ims.framework.ContextVariable cx_RefManCatsReferral = new ims.framework.ContextVariable("RefMan.CatsReferral", "_cvp_RefMan.CatsReferral");

		private ims.framework.Context context;
	}

	public CoreContext Core;
	public SchedulingContext Scheduling;
	public ClinicalContext Clinical;
	public RefManContext RefMan;
}
