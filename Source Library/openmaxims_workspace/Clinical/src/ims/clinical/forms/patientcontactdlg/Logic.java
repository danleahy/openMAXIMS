//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cornel Ventuneac using IMS Development Environment (version 1.80 build 5214.17710)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.clinical.forms.patientcontactdlg;

import ims.core.vo.CommChannelVo;
import ims.core.vo.CommChannelVoCollection;
import ims.core.vo.PatientShort;
import ims.framework.enumerations.DialogResult;

public class Logic extends BaseLogic
{
	private static final long serialVersionUID = 1L;

	
	protected void onFormOpen(Object[] args) throws ims.framework.exceptions.PresentationLogicException
	{
		form.grdCommChannels().getRows().clear();
		if( args != null && args.length > 0 &&  args[0] instanceof PatientShort)
			populateScreenFromData((PatientShort) args[0]);
	}
	
	protected void onBtnCloseClick() throws ims.framework.exceptions.PresentationLogicException
	{
		engine.close(DialogResult.CANCEL);
	}
	private void populateScreenFromData(PatientShort pat)
	{
		
		CommChannelVoCollection voCommChannelColl = pat.getCommChannels();

		ims.clinical.forms.patientcontactdlg.GenForm.grdCommChannelsRow rowCommChannel;

		if (voCommChannelColl != null)
		{
			for (int i = 0; i < voCommChannelColl.size(); i++)
			{
				CommChannelVo voCommChannel = voCommChannelColl.get(i);

				if (voCommChannel.getChannelTypeIsNotNull())
				{
					rowCommChannel = form.grdCommChannels().getRows().newRow();
					rowCommChannel.setcolType(voCommChannel.getChannelType());
					rowCommChannel.setcolContactValue(voCommChannel.getCommValue());
					rowCommChannel.setValue(voCommChannel);
				}
			}

		}
	}
}
