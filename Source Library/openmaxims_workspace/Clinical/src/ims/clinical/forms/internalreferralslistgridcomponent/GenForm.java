//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.forms.internalreferralslistgridcomponent;

import ims.framework.*;
import ims.framework.controls.*;
import ims.framework.enumerations.*;
import ims.framework.utils.RuntimeAnchoring;

public class GenForm extends FormBridge
{
	private static final long serialVersionUID = 1L;

	protected void fireCustomControlValueChanged()
	{
		super.fireValueChanged();
	}
	public boolean canProvideData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).canProvideData();
	}
	public boolean hasData(IReportSeed[] reportSeeds)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields()).hasData();
	}
	public IReportField[] getData(IReportSeed[] reportSeeds)
	{
		return getData(reportSeeds, false);
	}
	public IReportField[] getData(IReportSeed[] reportSeeds, boolean excludeNulls)
	{
		return new ReportDataProvider(reportSeeds, this.getFormReportFields(), excludeNulls).getData();
	}
	private void validateContext(ims.framework.Context context)
	{
		if(context == null)
			return;
		if(!context.isValidContextType(ims.core.vo.PatientShort.class))
			throw new ims.framework.exceptions.CodingRuntimeException("The type 'ims.core.vo.PatientShort' of the global context variable 'Core.PatientShort' is not supported.");
	}
	public boolean supportsRecordedInError()
	{
		return false;
	}
	public ims.vo.ValueObject getRecordedInErrorVo()
	{
		return null;
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context) throws Exception
	{
		setContext(loader, form, appForm, factory, context, Boolean.FALSE, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, Context context, Boolean skipContextValidation) throws Exception
	{
		setContext(loader, form, appForm, factory, context, skipContextValidation, new Integer(0), null, null, new Integer(0));
	}
	protected void setContext(FormLoader loader, Form form, ims.framework.interfaces.IAppForm appForm, UIFactory factory, ims.framework.Context context, Boolean skipContextValidation, Integer startControlID, ims.framework.utils.SizeInfo runtimeSize, ims.framework.Control control, Integer startTabIndex) throws Exception
	{
		if(loader == null); // this is to avoid eclipse warning only.
		if(factory == null); // this is to avoid eclipse warning only.
		if(runtimeSize == null); // this is to avoid eclipse warning only.
		if(appForm == null)
			throw new RuntimeException("Invalid application form");
		if(startControlID == null)
			throw new RuntimeException("Invalid startControlID");
		if(control == null); // this is to avoid eclipse warning only.
		if(startTabIndex == null)
			throw new RuntimeException("Invalid startTabIndex");
		this.context = context;
		this.componentIdentifier = startControlID.toString();
		this.formInfo = form.getFormInfo();
		this.globalContext = new GlobalContext(context);
	
		if(skipContextValidation == null || !skipContextValidation.booleanValue())
		{
			validateContext(context);
		}
	
		super.setContext(form);

		ims.framework.utils.SizeInfo designSize = new ims.framework.utils.SizeInfo(768, 544);
		if(runtimeSize == null)
			runtimeSize = designSize;
		form.setWidth(runtimeSize.getWidth());
		form.setHeight(runtimeSize.getHeight());
		super.setFormReferences(FormReferencesFlyweightFactory.getInstance().create(Forms.class));
		super.setImageReferences(ImageReferencesFlyweightFactory.getInstance().create(Images.class));
		super.setGlobalContext(ContextBridgeFlyweightFactory.getInstance().create(GlobalContextBridge.class, context, false));
		super.setLocalContext(new LocalContext(context, form.getFormInfo(), componentIdentifier));

		// Context Menus
		contextMenus = new ContextMenus();
		contextMenus.Clinical.contextMenuClinicalReferralsListMenu = factory.createMenu(startControlID.intValue() + 1);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuNEWItem = factory.createMenuItem(startControlID.intValue() + 1, "New Referral Registration", true, false, new Integer(102149), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610013)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuNEWItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuVIEWItem = factory.createMenuItem(startControlID.intValue() + 2, "View Referral", true, false, new Integer(118107), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610001)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuVIEWItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuEDITItem = factory.createMenuItem(startControlID.intValue() + 3, "Edit Referral", true, false, new Integer(103102), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610002)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuEDITItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuREQ_FURTHER_INFOItem = factory.createMenuItem(startControlID.intValue() + 4, "Requires Further Information", true, false, new Integer(123100), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610004)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuREQ_FURTHER_INFOItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuREC_FURTHER_INFOItem = factory.createMenuItem(startControlID.intValue() + 5, "Record Further Information", true, false, new Integer(102150), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610006)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuREC_FURTHER_INFOItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenu_2ND_OPINION_REQItem = factory.createMenuItem(startControlID.intValue() + 6, "Requires 2nd Opinion", true, false, new Integer(111150), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610005)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenu_2ND_OPINION_REQItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuACCEPT_REQ_APPTItem = factory.createMenuItem(startControlID.intValue() + 7, "Accept - Requires Appointment", true, false, new Integer(114137), true, true);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610008)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuACCEPT_REQ_APPTItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuACCEPTItem = factory.createMenuItem(startControlID.intValue() + 8, "Accept", true, false, new Integer(114135), true, true);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610007)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuACCEPTItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuAPPT_BOOKEDItem = factory.createMenuItem(startControlID.intValue() + 9, "Appointment Booked", true, false, new Integer(103137), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610009)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuAPPT_BOOKEDItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuCOMPLETEItem = factory.createMenuItem(startControlID.intValue() + 10, "Complete and Add Note", true, false, new Integer(118134), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610015)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuCOMPLETEItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuCOMPLETE_LINK_DOCItem = factory.createMenuItem(startControlID.intValue() + 11, "Complete and Link Correspondence", true, false, new Integer(111153), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610017)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuCOMPLETE_LINK_DOCItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuSIGN_OFF_REFERRALItem = factory.createMenuItem(startControlID.intValue() + 12, "Authorise Referral", true, false, new Integer(102573), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610010)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuSIGN_OFF_REFERRALItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuREJECTItem = factory.createMenuItem(startControlID.intValue() + 13, "Reject Referral", true, false, new Integer(134140), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610011)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuREJECTItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuACK_REJECTIONItem = factory.createMenuItem(startControlID.intValue() + 14, "Acknowledge Rejection", true, false, new Integer(129154), true, false);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610014)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuACK_REJECTIONItem);
		contextMenus.Clinical.contextMenuClinicalReferralsListMenuRIEItem = factory.createMenuItem(startControlID.intValue() + 15, "Mark as RIE", true, false, new Integer(102142), true, true);
		if(factory.getUIEngine().getLoggedInRole().hasMenuActionRight(appForm, new ims.framework.MenuAction(5610012)))
			contextMenus.Clinical.contextMenuClinicalReferralsListMenu.add(contextMenus.Clinical.contextMenuClinicalReferralsListMenuRIEItem);
		form.registerMenu(contextMenus.Clinical.contextMenuClinicalReferralsListMenu);


		// Label Controls
		RuntimeAnchoring anchoringHelper1 = new RuntimeAnchoring(designSize, runtimeSize, 8, 520, 40, 17, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT);
		super.addControl(factory.getControl(Label.class, new Object[] { control, new Integer(startControlID.intValue() + 1000), new Integer(anchoringHelper1.getX()), new Integer(anchoringHelper1.getY()), new Integer(anchoringHelper1.getWidth()), new Integer(anchoringHelper1.getHeight()), ControlState.UNKNOWN, ControlState.UNKNOWN, ims.framework.enumerations.ControlAnchoring.BOTTOMLEFT, "Total :", new Integer(1), null, new Integer(0)}));

		// Dynamic Grid Controls
		RuntimeAnchoring anchoringHelper2 = new RuntimeAnchoring(designSize, runtimeSize, 8, 8, 752, 504, ims.framework.enumerations.ControlAnchoring.ALL);
		super.addControl(factory.getControl(DynamicGrid.class, new Object[] { control, new Integer(startControlID.intValue() + 1001), new Integer(anchoringHelper2.getX()), new Integer(anchoringHelper2.getY()), new Integer(anchoringHelper2.getWidth()), new Integer(anchoringHelper2.getHeight()), new Integer(startTabIndex.intValue() + 1), ControlState.READONLY, ControlState.READONLY, ims.framework.enumerations.ControlAnchoring.ALL, contextMenus.Clinical.contextMenuClinicalReferralsListMenu, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE}));
	}



	public Forms getForms()
	{
		return (Forms)super.getFormReferences();
	}

	public Images getImages()
	{
		return (Images)super.getImageReferences();
	}
	public Label lblTotal()
	{
		return (Label)super.getControl(0);
	}
	public DynamicGrid dyngrdReferrals()
	{
		return (DynamicGrid)super.getControl(1);
	}

	public static class Forms implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		protected final class LocalFormName extends FormName
		{
			private static final long serialVersionUID = 1L;
		
			private LocalFormName(int name)
			{
				super(name);
			}
		}

		private Forms()
		{
			Clinical = new ClinicalForms();
			Core = new CoreForms();
		}
		public final class ClinicalForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private ClinicalForms()
			{
				InternalReferralDialog = new LocalFormName(123287);
				InternalReferralsRejectionDialog = new LocalFormName(123279);
				InternalReferralsEditNoteDialog = new LocalFormName(123281);
				PatientDocumentSearchDialog = new LocalFormName(123294);
				InternalReferralAdminEventDialog = new LocalFormName(123292);
				InternalReferralsDocumentsView = new LocalFormName(123280);
				InternalReferralsListGridComponent = new LocalFormName(123295);
			}
			public final FormName InternalReferralDialog;
			public final FormName InternalReferralsRejectionDialog;
			public final FormName InternalReferralsEditNoteDialog;
			public final FormName PatientDocumentSearchDialog;
			public final FormName InternalReferralAdminEventDialog;
			public final FormName InternalReferralsDocumentsView;
			public final FormName InternalReferralsListGridComponent;
		}
		public final class CoreForms implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreForms()
			{
				RieConfirmationDialog = new LocalFormName(102370);
			}
			public final FormName RieConfirmationDialog;
		}

		public ClinicalForms Clinical;
		public CoreForms Core;
	}


	public static class Images implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		private final class ImageHelper extends ims.framework.utils.ImagePath
		{
			private static final long serialVersionUID = 1L;
			
			private ImageHelper(int id, String path, Integer width, Integer height)
			{
				super(id, path, width, height);
			}
		}
		private Images()
		{
			Scheduling = new SchedulingImages();
			Core = new CoreImages();
		}
		public final class SchedulingImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private SchedulingImages()
			{
				session_16 = new ImageHelper(114137, "Images/Scheduling/session16.png", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image session_16;
		}
		public final class CoreImages implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			private CoreImages()
			{
				Calendar16 = new ImageHelper(102336, "Images/Core/Calendar_schedule.bmp", new Integer(16), new Integer(16));
			}
			public final ims.framework.utils.Image Calendar16;
		}
		public final SchedulingImages Scheduling;
		public final CoreImages Core;
	}
	public GlobalContext getGlobalContext()
	{
		return this.globalContext;
	}
	public static class GlobalContextBridge extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
	}
	public LocalContext getLocalContext()
	{
		return (LocalContext)super.getLocalCtx();
	}
	public class LocalContext extends ContextBridge
	{
		private static final long serialVersionUID = 1L;
		
		public LocalContext(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			super.setContext(context);
			String prefix = formInfo.getLocalVariablesPrefix();
			cxl_InternalReferralHelper = new ims.framework.ContextVariable("InternalReferralHelper", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralHelper_" + componentIdentifier + "");
			cxl_CurrentMosUser = new ims.framework.ContextVariable("CurrentMosUser", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentMosUser_" + componentIdentifier + "");
			cxl_CurrentHcpUser = new ims.framework.ContextVariable("CurrentHcpUser", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentHcpUser_" + componentIdentifier + "");
			cxl_Action = new ims.framework.ContextVariable("Action", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__Action_" + componentIdentifier + "");
			cxl_RIEReferral = new ims.framework.ContextVariable("RIEReferral", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__RIEReferral_" + componentIdentifier + "");
			cxl_IsPatientMandatory = new ims.framework.ContextVariable("IsPatientMandatory", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__IsPatientMandatory_" + componentIdentifier + "");
			cxl_InternalReferralSettings = new ims.framework.ContextVariable("InternalReferralSettings", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralSettings_" + componentIdentifier + "");
			cxl_DOBSortOrder = new ims.framework.ContextVariable("DOBSortOrder", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__DOBSortOrder_" + componentIdentifier + "");
			cxl_PatientNameSortOrder = new ims.framework.ContextVariable("PatientNameSortOrder", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__PatientNameSortOrder_" + componentIdentifier + "");
			cxl_ReferralToSortOrder = new ims.framework.ContextVariable("ReferralToSortOrder", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__ReferralToSortOrder_" + componentIdentifier + "");
			cxl_ReferringBySortOrder = new ims.framework.ContextVariable("ReferringBySortOrder", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__ReferringBySortOrder_" + componentIdentifier + "");
			cxl_AllowedActions = new ims.framework.ContextVariable("AllowedActions", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__AllowedActions_" + componentIdentifier + "");
			cxl_DeniedActions = new ims.framework.ContextVariable("DeniedActions", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__DeniedActions_" + componentIdentifier + "");
			cxl_CurrentRecord = new ims.framework.ContextVariable("CurrentRecord", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentRecord_" + componentIdentifier + "");
			cxl_ReferralDateSortOrder = new ims.framework.ContextVariable("ReferralDateSortOrder", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__ReferralDateSortOrder_" + componentIdentifier + "");
			cxl_AppointmentBookedMsgBoxId = new ims.framework.ContextVariable("AppointmentBookedMsgBoxId", prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__AppointmentBookedMsgBoxId_" + componentIdentifier + "");
		}
		
		public boolean getInternalReferralHelperIsNotNull()
		{
			return !cxl_InternalReferralHelper.getValueIsNull(context);
		}
		public ims.clinicaladmin.helper.InternalReferralActionsHelper getInternalReferralHelper()
		{
			return (ims.clinicaladmin.helper.InternalReferralActionsHelper)cxl_InternalReferralHelper.getValue(context);
		}
		public void setInternalReferralHelper(ims.clinicaladmin.helper.InternalReferralActionsHelper value)
		{
			cxl_InternalReferralHelper.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_InternalReferralHelper = null;
		public boolean getCurrentMosUserIsNotNull()
		{
			return !cxl_CurrentMosUser.getValueIsNull(context);
		}
		public ims.core.vo.MemberOfStaffLiteVo getCurrentMosUser()
		{
			return (ims.core.vo.MemberOfStaffLiteVo)cxl_CurrentMosUser.getValue(context);
		}
		public void setCurrentMosUser(ims.core.vo.MemberOfStaffLiteVo value)
		{
			cxl_CurrentMosUser.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentMosUser = null;
		public boolean getCurrentHcpUserIsNotNull()
		{
			return !cxl_CurrentHcpUser.getValueIsNull(context);
		}
		public ims.core.vo.HcpLiteVo getCurrentHcpUser()
		{
			return (ims.core.vo.HcpLiteVo)cxl_CurrentHcpUser.getValue(context);
		}
		public void setCurrentHcpUser(ims.core.vo.HcpLiteVo value)
		{
			cxl_CurrentHcpUser.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentHcpUser = null;
		public boolean getActionIsNotNull()
		{
			return !cxl_Action.getValueIsNull(context);
		}
		public ims.clinical.vo.enums.InternalReferralGridComponentAction getAction()
		{
			return (ims.clinical.vo.enums.InternalReferralGridComponentAction)cxl_Action.getValue(context);
		}
		public void setAction(ims.clinical.vo.enums.InternalReferralGridComponentAction value)
		{
			cxl_Action.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_Action = null;
		public boolean getRIEReferralIsNotNull()
		{
			return !cxl_RIEReferral.getValueIsNull(context);
		}
		public ims.clinical.vo.ClinicalReferralsForIncomingReferralListVo getRIEReferral()
		{
			return (ims.clinical.vo.ClinicalReferralsForIncomingReferralListVo)cxl_RIEReferral.getValue(context);
		}
		public void setRIEReferral(ims.clinical.vo.ClinicalReferralsForIncomingReferralListVo value)
		{
			cxl_RIEReferral.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_RIEReferral = null;
		public boolean getIsPatientMandatoryIsNotNull()
		{
			return !cxl_IsPatientMandatory.getValueIsNull(context);
		}
		public Boolean getIsPatientMandatory()
		{
			return (Boolean)cxl_IsPatientMandatory.getValue(context);
		}
		public void setIsPatientMandatory(Boolean value)
		{
			cxl_IsPatientMandatory.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_IsPatientMandatory = null;
		public boolean getInternalReferralSettingsIsNotNull()
		{
			return !cxl_InternalReferralSettings.getValueIsNull(context);
		}
		public ims.clinicaladmin.vo.InternalReferralSettingsVo getInternalReferralSettings()
		{
			return (ims.clinicaladmin.vo.InternalReferralSettingsVo)cxl_InternalReferralSettings.getValue(context);
		}
		public void setInternalReferralSettings(ims.clinicaladmin.vo.InternalReferralSettingsVo value)
		{
			cxl_InternalReferralSettings.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_InternalReferralSettings = null;
		public boolean getDOBSortOrderIsNotNull()
		{
			return !cxl_DOBSortOrder.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getDOBSortOrder()
		{
			return (ims.framework.enumerations.SortOrder)cxl_DOBSortOrder.getValue(context);
		}
		public void setDOBSortOrder(ims.framework.enumerations.SortOrder value)
		{
			cxl_DOBSortOrder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DOBSortOrder = null;
		public boolean getPatientNameSortOrderIsNotNull()
		{
			return !cxl_PatientNameSortOrder.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getPatientNameSortOrder()
		{
			return (ims.framework.enumerations.SortOrder)cxl_PatientNameSortOrder.getValue(context);
		}
		public void setPatientNameSortOrder(ims.framework.enumerations.SortOrder value)
		{
			cxl_PatientNameSortOrder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_PatientNameSortOrder = null;
		public boolean getReferralToSortOrderIsNotNull()
		{
			return !cxl_ReferralToSortOrder.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getReferralToSortOrder()
		{
			return (ims.framework.enumerations.SortOrder)cxl_ReferralToSortOrder.getValue(context);
		}
		public void setReferralToSortOrder(ims.framework.enumerations.SortOrder value)
		{
			cxl_ReferralToSortOrder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ReferralToSortOrder = null;
		public boolean getReferringBySortOrderIsNotNull()
		{
			return !cxl_ReferringBySortOrder.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getReferringBySortOrder()
		{
			return (ims.framework.enumerations.SortOrder)cxl_ReferringBySortOrder.getValue(context);
		}
		public void setReferringBySortOrder(ims.framework.enumerations.SortOrder value)
		{
			cxl_ReferringBySortOrder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ReferringBySortOrder = null;
		public boolean getAllowedActionsIsNotNull()
		{
			return !cxl_AllowedActions.getValueIsNull(context);
		}
		public java.util.List<ims.core.vo.enums.InternalReferralStatusAction> getAllowedActions()
		{
			return (java.util.List<ims.core.vo.enums.InternalReferralStatusAction>)cxl_AllowedActions.getValue(context);
		}
		public void setAllowedActions(java.util.List<ims.core.vo.enums.InternalReferralStatusAction> value)
		{
			cxl_AllowedActions.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AllowedActions = null;
		public boolean getDeniedActionsIsNotNull()
		{
			return !cxl_DeniedActions.getValueIsNull(context);
		}
		public java.util.List<ims.core.vo.enums.InternalReferralStatusAction> getDeniedActions()
		{
			return (java.util.List<ims.core.vo.enums.InternalReferralStatusAction>)cxl_DeniedActions.getValue(context);
		}
		public void setDeniedActions(java.util.List<ims.core.vo.enums.InternalReferralStatusAction> value)
		{
			cxl_DeniedActions.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_DeniedActions = null;
		public boolean getCurrentRecordIsNotNull()
		{
			return !cxl_CurrentRecord.getValueIsNull(context);
		}
		public ims.clinical.vo.ClinicalReferralsForIncomingReferralListVo getCurrentRecord()
		{
			return (ims.clinical.vo.ClinicalReferralsForIncomingReferralListVo)cxl_CurrentRecord.getValue(context);
		}
		public void setCurrentRecord(ims.clinical.vo.ClinicalReferralsForIncomingReferralListVo value)
		{
			cxl_CurrentRecord.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_CurrentRecord = null;
		public boolean getReferralDateSortOrderIsNotNull()
		{
			return !cxl_ReferralDateSortOrder.getValueIsNull(context);
		}
		public ims.framework.enumerations.SortOrder getReferralDateSortOrder()
		{
			return (ims.framework.enumerations.SortOrder)cxl_ReferralDateSortOrder.getValue(context);
		}
		public void setReferralDateSortOrder(ims.framework.enumerations.SortOrder value)
		{
			cxl_ReferralDateSortOrder.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_ReferralDateSortOrder = null;
		public boolean getAppointmentBookedMsgBoxIdIsNotNull()
		{
			return !cxl_AppointmentBookedMsgBoxId.getValueIsNull(context);
		}
		public Integer getAppointmentBookedMsgBoxId()
		{
			return (Integer)cxl_AppointmentBookedMsgBoxId.getValue(context);
		}
		public void setAppointmentBookedMsgBoxId(Integer value)
		{
			cxl_AppointmentBookedMsgBoxId.setValue(context, value);
		}
		private ims.framework.ContextVariable cxl_AppointmentBookedMsgBoxId = null;
	}

	public final class ContextMenus implements java.io.Serializable
	{
		private static final long serialVersionUID = 1L;
		public ClinicalNamespace Clinical = new ClinicalNamespace();
		public final class ClinicalNamespace implements java.io.Serializable
		{
			private static final long serialVersionUID = 1L;
			public final class ClinicalReferralsListMenu implements java.io.Serializable
			{
				private static final long serialVersionUID = 1L;
				public static final int NEW = 1;
				public static final int VIEW = 2;
				public static final int EDIT = 3;
				public static final int REQ_FURTHER_INFO = 4;
				public static final int REC_FURTHER_INFO = 5;
				public static final int _2ND_OPINION_REQ = 6;
				public static final int ACCEPT_REQ_APPT = 7;
				public static final int ACCEPT = 8;
				public static final int APPT_BOOKED = 9;
				public static final int COMPLETE = 10;
				public static final int COMPLETE_LINK_DOC = 11;
				public static final int SIGN_OFF_REFERRAL = 12;
				public static final int REJECT = 13;
				public static final int ACK_REJECTION = 14;
				public static final int RIE = 15;
			}
			public void disableAllClinicalReferralsListMenuMenuItems()
			{
				this.contextMenuClinicalReferralsListMenuNEWItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuVIEWItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuEDITItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuREQ_FURTHER_INFOItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuREC_FURTHER_INFOItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenu_2ND_OPINION_REQItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuACCEPT_REQ_APPTItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuACCEPTItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuAPPT_BOOKEDItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuCOMPLETEItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuCOMPLETE_LINK_DOCItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuSIGN_OFF_REFERRALItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuREJECTItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuACK_REJECTIONItem.setEnabled(false);
				this.contextMenuClinicalReferralsListMenuRIEItem.setEnabled(false);
			}
			public void hideAllClinicalReferralsListMenuMenuItems()
			{
				this.contextMenuClinicalReferralsListMenuNEWItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuVIEWItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuEDITItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuREQ_FURTHER_INFOItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuREC_FURTHER_INFOItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenu_2ND_OPINION_REQItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuACCEPT_REQ_APPTItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuACCEPTItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuAPPT_BOOKEDItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuCOMPLETEItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuCOMPLETE_LINK_DOCItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuSIGN_OFF_REFERRALItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuREJECTItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuACK_REJECTIONItem.setVisible(false);
				this.contextMenuClinicalReferralsListMenuRIEItem.setVisible(false);
			}
			private Menu contextMenuClinicalReferralsListMenu;
			public ReadOnlyMenuItem getClinicalReferralsListMenuNEWItem()
			{
				return this.contextMenuClinicalReferralsListMenuNEWItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuNEWItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuVIEWItem()
			{
				return this.contextMenuClinicalReferralsListMenuVIEWItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuVIEWItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuEDITItem()
			{
				return this.contextMenuClinicalReferralsListMenuEDITItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuEDITItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuREQ_FURTHER_INFOItem()
			{
				return this.contextMenuClinicalReferralsListMenuREQ_FURTHER_INFOItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuREQ_FURTHER_INFOItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuREC_FURTHER_INFOItem()
			{
				return this.contextMenuClinicalReferralsListMenuREC_FURTHER_INFOItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuREC_FURTHER_INFOItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenu_2ND_OPINION_REQItem()
			{
				return this.contextMenuClinicalReferralsListMenu_2ND_OPINION_REQItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenu_2ND_OPINION_REQItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuACCEPT_REQ_APPTItem()
			{
				return this.contextMenuClinicalReferralsListMenuACCEPT_REQ_APPTItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuACCEPT_REQ_APPTItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuACCEPTItem()
			{
				return this.contextMenuClinicalReferralsListMenuACCEPTItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuACCEPTItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuAPPT_BOOKEDItem()
			{
				return this.contextMenuClinicalReferralsListMenuAPPT_BOOKEDItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuAPPT_BOOKEDItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuCOMPLETEItem()
			{
				return this.contextMenuClinicalReferralsListMenuCOMPLETEItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuCOMPLETEItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuCOMPLETE_LINK_DOCItem()
			{
				return this.contextMenuClinicalReferralsListMenuCOMPLETE_LINK_DOCItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuCOMPLETE_LINK_DOCItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuSIGN_OFF_REFERRALItem()
			{
				return this.contextMenuClinicalReferralsListMenuSIGN_OFF_REFERRALItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuSIGN_OFF_REFERRALItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuREJECTItem()
			{
				return this.contextMenuClinicalReferralsListMenuREJECTItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuREJECTItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuACK_REJECTIONItem()
			{
				return this.contextMenuClinicalReferralsListMenuACK_REJECTIONItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuACK_REJECTIONItem;
			public ReadOnlyMenuItem getClinicalReferralsListMenuRIEItem()
			{
				return this.contextMenuClinicalReferralsListMenuRIEItem;
			}
			private MenuItem contextMenuClinicalReferralsListMenuRIEItem;
		}
	}

	private ContextMenus contextMenus;
	public ContextMenus getContextMenus()
	{
		return this.contextMenus;
	}

	private IReportField[] getFormReportFields()
	{
		if(this.context == null)
			return null;
		if(this.reportFields == null)
			this.reportFields = new ReportFields(this.context, this.formInfo, this.componentIdentifier).getReportFields();
		return this.reportFields;
	}
	private class ReportFields
	{
		public ReportFields(Context context, ims.framework.FormInfo formInfo, String componentIdentifier)
		{
			this.context = context;
			this.formInfo = formInfo;
			this.componentIdentifier = componentIdentifier;
		}
		public IReportField[] getReportFields()
		{
			String prefix = formInfo.getLocalVariablesPrefix();
			IReportField[] fields = new IReportField[172];
			fields[0] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ID", "ID_Patient");
			fields[1] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SEX", "Sex");
			fields[2] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOB", "Dob");
			fields[3] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DOD", "Dod");
			fields[4] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-RELIGION", "Religion");
			fields[5] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISACTIVE", "IsActive");
			fields[6] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ETHNICORIGIN", "EthnicOrigin");
			fields[7] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MARITALSTATUS", "MaritalStatus");
			fields[8] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SCN", "SCN");
			fields[9] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-SOURCEOFINFORMATION", "SourceOfInformation");
			fields[10] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFDEATH", "TimeOfDeath");
			fields[11] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISQUICKREGISTRATIONPATIENT", "IsQuickRegistrationPatient");
			fields[12] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-CURRENTRESPONSIBLECONSULTANT", "CurrentResponsibleConsultant");
			fields[13] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIABREACHDATETIME", "DementiaBreachDateTime");
			fields[14] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-DEMENTIAWORKLISTSTATUS", "DementiaWorklistStatus");
			fields[15] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-MRNSTATUS", "MRNStatus");
			fields[16] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-HASSCANNEDCASENOTEFOLDERS", "HasScannedCaseNoteFolders");
			fields[17] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-ISCONFIDENTIAL", "IsConfidential");
			fields[18] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-TIMEOFBIRTH", "TimeOfBirth");
			fields[19] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientShort", "BO-1001100000-PATIENTCATEGORY", "PatientCategory");
			fields[20] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-ID", "ID_Patient");
			fields[21] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-SEX", "Sex");
			fields[22] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientFilter", "BO-1001100000-DOB", "Dob");
			fields[23] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ID", "ID_ClinicalContact");
			fields[24] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-SPECIALTY", "Specialty");
			fields[25] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CONTACTTYPE", "ContactType");
			fields[26] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-STARTDATETIME", "StartDateTime");
			fields[27] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ENDDATETIME", "EndDateTime");
			fields[28] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-CARECONTEXT", "CareContext");
			fields[29] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentClinicalContact", "BO-1004100003-ISCLINICALNOTECREATED", "IsClinicalNoteCreated");
			fields[30] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ID", "ID_Hcp");
			fields[31] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-HCPTYPE", "HcpType");
			fields[32] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISACTIVE", "IsActive");
			fields[33] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[34] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[35] = new ims.framework.ReportField(this.context, "_cvp_Core.RecordingHCP", "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[36] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ID", "ID_CareContext");
			fields[37] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-CONTEXT", "Context");
			fields[38] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ORDERINGHOSPITAL", "OrderingHospital");
			fields[39] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ESTIMATEDDISCHARGEDATE", "EstimatedDischargeDate");
			fields[40] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-STARTDATETIME", "StartDateTime");
			fields[41] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-ENDDATETIME", "EndDateTime");
			fields[42] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-LOCATIONTYPE", "LocationType");
			fields[43] = new ims.framework.ReportField(this.context, "_cvp_Core.CurrentCareContext", "BO-1004100019-RESPONSIBLEHCP", "ResponsibleHCP");
			fields[44] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ID", "ID_EpisodeOfCare");
			fields[45] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-CARESPELL", "CareSpell");
			fields[46] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-SPECIALTY", "Specialty");
			fields[47] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-RELATIONSHIP", "Relationship");
			fields[48] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-STARTDATE", "StartDate");
			fields[49] = new ims.framework.ReportField(this.context, "_cvp_Core.EpisodeofCareShort", "BO-1004100018-ENDDATE", "EndDate");
			fields[50] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[51] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALNOTE", "ClinicalNote");
			fields[52] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTETYPE", "NoteType");
			fields[53] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-DISCIPLINE", "Discipline");
			fields[54] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CLINICALCONTACT", "ClinicalContact");
			fields[55] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISDERIVEDNOTE", "IsDerivedNote");
			fields[56] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEW", "ForReview");
			fields[57] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[58] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-REVIEWINGDATETIME", "ReviewingDateTime");
			fields[59] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISCORRECTED", "IsCorrected");
			fields[60] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-ISTRANSCRIBED", "IsTranscribed");
			fields[61] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-SOURCEOFNOTE", "SourceOfNote");
			fields[62] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-RECORDINGDATETIME", "RecordingDateTime");
			fields[63] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-INHOSPITALREPORT", "InHospitalReport");
			fields[64] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[65] = new ims.framework.ReportField(this.context, "_cvp_Clinical.CurrentClinicalNote", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[66] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-ID", "ID_NAESReferral");
			fields[67] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEREFERRALRECEIVED", "DateReferralReceived");
			fields[68] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-DATEOFSURGERY", "DateOfSurgery");
			fields[69] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGHOSPITAL", "ReferringHospital");
			fields[70] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRINGDOCTOR", "ReferringDoctor");
			fields[71] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERRALREASON", "ReferralReason");
			fields[72] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-SECONDARYSURGERY", "SecondarySurgery");
			fields[73] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-UNDERLYINGREASON", "UnderlyingReason");
			fields[74] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-AFFECTEDEYE", "AffectedEye");
			fields[75] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANT", "Implant");
			fields[76] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-IMPLANTTYPE", "ImplantType");
			fields[77] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-INTERPRETERREQUIRED", "InterpreterRequired");
			fields[78] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGE", "Language");
			fields[79] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-LANGUAGEIFOTHER", "LanguageIfOther");
			fields[80] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-REFERREDBY", "ReferredBy");
			fields[81] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_6WEEKKPI", "SixWeekKPI");
			fields[82] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-_3WEEKKPI", "ThreeWeekKPI");
			fields[83] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-PREFERREDCLINIC", "PreferredClinic");
			fields[84] = new ims.framework.ReportField(this.context, "_cvp_Naes.Referral", "BO-1097100004-NOTES", "Notes");
			fields[85] = new ims.framework.ReportField(this.context, "_cvp_STHK.AvailableBedsListFilter", "BO-1014100009-ID", "ID_BedSpaceState");
			fields[86] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ID", "ID_PendingEmergencyAdmission");
			fields[87] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingEmergencyAdmissionsFilter", "BO-1014100011-ADMISSIONSTATUS", "AdmissionStatus");
			fields[88] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ID", "ID_InpatientEpisode");
			fields[89] = new ims.framework.ReportField(this.context, "_cvp_STHK.PendingDischargesListFilter", "BO-1014100000-ESTDISCHARGEDATE", "EstDischargeDate");
			fields[90] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[91] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEW", "ForReview");
			fields[92] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[93] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-NOTECLASSIFICATION", "NoteClassification");
			fields[94] = new ims.framework.ReportField(this.context, "_cvp_Clinical.ExtendedClinicalNotesListFilter", "BO-1011100000-CARECONTEXT", "CareContext");
			fields[95] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-ID", "ID_ClinicalNotes");
			fields[96] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-NOTETYPE", "NoteType");
			fields[97] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEW", "ForReview");
			fields[98] = new ims.framework.ReportField(this.context, "_cvp_Core.PatientClinicalNotesSearchCriteria", "BO-1011100000-FORREVIEWDISCIPLINE", "ForReviewDiscipline");
			fields[99] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ID", "ID_ObservationForm");
			fields[100] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-FORMTYPE", "FormType");
			fields[101] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DETAILS", "Details");
			fields[102] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTART", "DateTimeStart");
			fields[103] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-DATETIMESTOP", "DateTimeStop");
			fields[104] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-ISSTOPPED", "IsStopped");
			fields[105] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CARECONTEXT", "CareContext");
			fields[106] = new ims.framework.ReportField(this.context, "_cvp_Nursing.ObservationFormsSearchCriteria", "BO-1011100002-CLINICALCONTACT", "ClinicalContact");
			fields[107] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[108] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-TYPE", "Type");
			fields[109] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesAdmSearchCriteia", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[110] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[111] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[112] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesDisSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[113] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[114] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[115] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesOPDSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[116] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-ID", "ID_MedicationOverview");
			fields[117] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-TYPE", "Type");
			fields[118] = new ims.framework.ReportField(this.context, "_cvp_Clinical.MedMultipleDosesPatSearchCriteria", "BO-1072100034-CARECONTEXT", "CareContext");
			fields[119] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ID", "ID_Urinalysis");
			fields[120] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOABNORMALITYDETECTED", "NoAbnormalityDetected");
			fields[121] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-LEUCOCYTES", "Leucocytes");
			fields[122] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PROTEIN", "Protein");
			fields[123] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BLOOD", "Blood");
			fields[124] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-KETONES", "Ketones");
			fields[125] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ASCORBICACID", "AscorbicAcid");
			fields[126] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-GLUCOSE", "Glucose");
			fields[127] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-BILIRUBIN", "Bilirubin");
			fields[128] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-UROBILINOGEN", "Urobilinogen");
			fields[129] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NITRATE", "Nitrate");
			fields[130] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-PH", "PH");
			fields[131] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-SPECIFICGRAVITY", "SpecificGravity");
			fields[132] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-NOSAMPLE", "NoSample");
			fields[133] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-ISACTIVE", "IsActive");
			fields[134] = new ims.framework.ReportField(this.context, "_cvp_Core.UrinalysisSearchCriteria", "BO-1022100012-CARECONTEXT", "CareContext");
			fields[135] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[136] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[137] = new ims.framework.ReportField(this.context, "_cvp_Core.PDSPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[138] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-ID", "ID_Patient");
			fields[139] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-SEX", "Sex");
			fields[140] = new ims.framework.ReportField(this.context, "_cvp_Core.LocalPatientFilterSearchCriteria", "BO-1001100000-DOB", "Dob");
			fields[141] = new ims.framework.ReportField(this.context, "_cvp_Core.PasEvent", "BO-1014100003-ID", "ID_PASEvent");
			fields[142] = new ims.framework.ReportField(this.context, "_cvp_Correspondence.CorrespondenceDetails", "BO-1052100001-ID", "ID_CorrespondenceDetails");
			fields[143] = new ims.framework.ReportField(this.context, "_cvp_RefMan.CatsReferral", "BO-1004100035-ID", "ID_CatsReferral");
			fields[144] = new ims.framework.ReportField(this.context, "_cv_Clinical.ClinicalReferralRef", "BO-1072100112-ID", "ID_ClinicalReferrals");
			fields[145] = new ims.framework.ReportField(this.context, "_cv_Clinical.LinkedPatientDocument", "BO-1068100001-ID", "ID_PatientDocument");
			fields[146] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentMosUser_" + componentIdentifier, "BO-1006100006-ID", "ID_MemberOfStaff");
			fields[147] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentMosUser_" + componentIdentifier, "BO-1006100006-INITIALS", "Initials");
			fields[148] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentMosUser_" + componentIdentifier, "BO-1006100006-SIGNATUREBLOCK", "SignatureBlock");
			fields[149] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentHcpUser_" + componentIdentifier, "BO-1006100000-ID", "ID_Hcp");
			fields[150] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentHcpUser_" + componentIdentifier, "BO-1006100000-HCPTYPE", "HcpType");
			fields[151] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentHcpUser_" + componentIdentifier, "BO-1006100000-ISACTIVE", "IsActive");
			fields[152] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentHcpUser_" + componentIdentifier, "BO-1006100000-ISHCPARESPONSIBLEHCP", "IsHCPaResponsibleHCP");
			fields[153] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentHcpUser_" + componentIdentifier, "BO-1006100000-ISARESPONSIBLEEDCLINICIAN", "IsAResponsibleEDClinician");
			fields[154] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentHcpUser_" + componentIdentifier, "BO-1006100000-ISHCPAENDOSCOPIST", "IsHCPaEndoscopist");
			fields[155] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__RIEReferral_" + componentIdentifier, "BO-1072100112-ID", "ID_ClinicalReferrals");
			fields[156] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__RIEReferral_" + componentIdentifier, "BO-1072100112-REFERRALTYPE", "ReferralType");
			fields[157] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__RIEReferral_" + componentIdentifier, "BO-1072100112-URGENTREFERRAL", "UrgentReferral");
			fields[158] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__RIEReferral_" + componentIdentifier, "BO-1072100112-DATEDECISIONTOREFER", "DateDecisionToRefer");
			fields[159] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__RIEReferral_" + componentIdentifier, "BO-1072100112-REQUIRESAUTHORISATION", "RequiresAuthorisation");
			fields[160] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralSettings_" + componentIdentifier, "BO-1073100036-ID", "ID_InternalReferralSettings");
			fields[161] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralSettings_" + componentIdentifier, "BO-1073100036-NEWCONDITIONREFERRALBACKTOGP", "NewConditionReferralBackToGP");
			fields[162] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralSettings_" + componentIdentifier, "BO-1073100036-REFERRALBACKTOGPOPTIONALMESSAGE", "ReferralBackToGPOptionalMessage");
			fields[163] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralSettings_" + componentIdentifier, "BO-1073100036-REFERRALBACKTOGPMANDATORYMESSAGE", "ReferralBackToGPMandatoryMessage");
			fields[164] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralSettings_" + componentIdentifier, "BO-1073100036-URGENTREFERRALBACKGROUNDCOLOUR", "UrgentReferralBackgroundColour");
			fields[165] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralSettings_" + componentIdentifier, "BO-1073100036-ALLOWSCANIMPORT", "AllowScanImport");
			fields[166] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__InternalReferralSettings_" + componentIdentifier, "BO-1073100036-SEARCHNUMBEROFDAYS", "SearchNumberOfDays");
			fields[167] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentRecord_" + componentIdentifier, "BO-1072100112-ID", "ID_ClinicalReferrals");
			fields[168] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentRecord_" + componentIdentifier, "BO-1072100112-REFERRALTYPE", "ReferralType");
			fields[169] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentRecord_" + componentIdentifier, "BO-1072100112-URGENTREFERRAL", "UrgentReferral");
			fields[170] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentRecord_" + componentIdentifier, "BO-1072100112-DATEDECISIONTOREFER", "DateDecisionToRefer");
			fields[171] = new ims.framework.ReportField(this.context, prefix + "_lv_Clinical.InternalReferralsListGridComponent.__internal_x_context__CurrentRecord_" + componentIdentifier, "BO-1072100112-REQUIRESAUTHORISATION", "RequiresAuthorisation");
			return fields;
		}
		protected Context context = null;
		protected ims.framework.FormInfo formInfo;
		protected String componentIdentifier;
	}
	public String getUniqueIdentifier()
	{
		return formInfo.getLocalVariablesPrefix() + formInfo.getNamespaceName() + formInfo.getFormName() + formInfo.getFormId() + "_" + this.componentIdentifier;
	}
	private Context context = null;
	private ims.framework.FormInfo formInfo = null;
	private String componentIdentifier;
	private GlobalContext globalContext = null;
	private IReportField[] reportFields = null;
}
