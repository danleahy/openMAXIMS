//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Mara Iroaie using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.clinical.domain.impl;
import ims.clinical.domain.base.impl.BaseInternalReferralAdminEventDialogImpl;
import ims.clinical.domain.objects.ClinicalReferrals;
import ims.clinical.vo.ClinicalReferralForAdminEventVo;
import ims.clinical.vo.domain.ClinicalReferralForAdminEventVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.StaleObjectException;
import ims.framework.exceptions.CodingRuntimeException;

public class InternalReferralAdminEventDialogImpl extends BaseInternalReferralAdminEventDialogImpl
{

	private static final long serialVersionUID = 1L;

	public ims.clinical.vo.ClinicalReferralForAdminEventVo getReferralDetails(ims.clinical.vo.ClinicalReferralsRefVo referral)
	{
		if(referral == null )
			throw new CodingRuntimeException("ClinicalReferralsRefVo not provided");
		
		DomainFactory factory = getDomainFactory();
		ClinicalReferrals referralDO = (ClinicalReferrals) factory.getDomainObject(ClinicalReferrals.class, referral.getID_ClinicalReferrals());
		
		return  ClinicalReferralForAdminEventVoAssembler.create(referralDO);

	}

	public void saveReferral(ClinicalReferralForAdminEventVo referralDetails)throws StaleObjectException 
	{
		if(referralDetails == null)
			throw new CodingRuntimeException("Cannot save a null referralDetails");
		
		if(!referralDetails.isValidated())
			throw new CodingRuntimeException("ReferralDetails is not validated");
		
		DomainFactory factory = getDomainFactory();
		ClinicalReferrals doClinicalReferral = ClinicalReferralForAdminEventVoAssembler.extractClinicalReferrals(factory, referralDetails);
		factory.save(doClinicalReferral);		
	}
}
