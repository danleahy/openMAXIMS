//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cornel Ventuneac using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2013 IMS MAXIMS. All rights reserved.

package ims.clinical.domain.impl;

import java.util.List;

import ims.clinical.domain.base.impl.BaseDementiaAMTSFormImpl;
import ims.clinical.vo.domain.DementiaForRecordBrowserVoAssembler;
import ims.clinical.vo.domain.DementiaVoAssembler;
import ims.core.clinical.domain.objects.Dementia;
import ims.domain.DomainFactory;

public class DementiaAMTSFormImpl extends BaseDementiaAMTSFormImpl
{

	private static final long serialVersionUID = 1L;

	public ims.clinical.vo.DementiaForRecordBrowserVoCollection getDementiaForRecordBrowserVo(ims.core.patient.vo.PatientRefVo patRef)
	{
		
		if( patRef == null )
			return null;
		
		DomainFactory factory = getDomainFactory();
		
		List lst = factory.find("select d1_1 from Dementia as d1_1 left join d1_1.patient as p1_1 where (p1_1.id = :patId and d1_1.isRIE is null ) order by d1_1.systemInformation.creationDateTime desc", new String[] {"patId"}, new Object[] {patRef.getID_Patient()});
		if( lst != null && lst.size() > 0)
		{
			return DementiaForRecordBrowserVoAssembler.createDementiaForRecordBrowserVoCollectionFromDementia(lst);
		}
		
		return null;
		
		 

	}

	public ims.clinical.vo.DementiaVo getDementiaVo(ims.core.clinical.vo.DementiaRefVo dementiaRef)
	{
		DomainFactory factory = getDomainFactory();
		return DementiaVoAssembler.create((Dementia) factory.getDomainObject(Dementia.class, dementiaRef.getID_Dementia()));
	}
}
