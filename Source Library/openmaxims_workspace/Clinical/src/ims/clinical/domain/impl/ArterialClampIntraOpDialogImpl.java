//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.80 build 5465.13953)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.

package ims.clinical.domain.impl;

import ims.clinical.domain.base.impl.BaseArterialClampIntraOpDialogImpl;
import ims.clinical.domain.objects.ArterialClampIntraOp;
import ims.clinical.vo.domain.ArterialClampsIntraOpVoAssembler;
import ims.domain.DomainFactory;
import ims.domain.exceptions.DomainInterfaceException;
import ims.framework.exceptions.CodingRuntimeException;

public class ArterialClampIntraOpDialogImpl extends BaseArterialClampIntraOpDialogImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* saveArterialClamp
	*/
	public void saveArterialClamp(ims.clinical.vo.ArterialClampsIntraOpVo clamp) throws ims.domain.exceptions.StaleObjectException,DomainInterfaceException
	{
		String methodName = "saveArterialClamp";
		if (clamp == null)
			throw new CodingRuntimeException("clamp is null in method " + methodName);
		if (!clamp.isValidated())
			throw new CodingRuntimeException("clamp has not been validated in method " + methodName);

		DomainFactory factory = getDomainFactory();
		ArterialClampIntraOp doArterial = ArterialClampsIntraOpVoAssembler.extractArterialClampIntraOp(factory, clamp);
		
		//WDEV-21831
		try 
		{			
			factory.save(doArterial);
		} 
		catch (IllegalArgumentException ex)
		{
			throw new DomainInterfaceException(ex);
		}
	}

	/**
	* getArterialClamp
	*/
	public ims.clinical.vo.ArterialClampsIntraOpVo getArterialClamp(ims.clinical.vo.ArterialClampIntraOpRefVo arterialClamp)
	{
		return ArterialClampsIntraOpVoAssembler.create((ArterialClampIntraOp) getDomainFactory().getDomainObject(arterialClamp));
	}
}
