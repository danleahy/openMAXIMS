//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Cristian Belciug using IMS Development Environment (version 1.80 build 5007.25751)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.clinical.domain.impl;

import ims.clinical.domain.base.impl.BasePatientDocumentSearchDialogImpl;
import ims.clinical.vo.LinkPatientDocumentVoCollection;
import ims.clinical.vo.domain.LinkPatientDocumentVoAssembler;
import ims.core.patient.vo.PatientRefVo;
import ims.framework.utils.Date;

import java.util.ArrayList;
import java.util.List;

public class PatientDocumentSearchDialogImpl extends BasePatientDocumentSearchDialogImpl
{

	private static final long serialVersionUID = 1L;

	public LinkPatientDocumentVoCollection listPatientDocuments(PatientRefVo patient, Date from, Date to) 
	{
		ArrayList<String> paramNames = new ArrayList<String>();
		ArrayList<Object> paramValues = new ArrayList<Object>();
			
		StringBuilder query = new StringBuilder("select pd from PatientDocument as pd left join pd.currentDocumentStatus as ds left join ds.correspondenceStatus as cs where (pd.isRIE is null or pd.isRIE = 0) and pd.patient.id = :Patient_id  and (ds is null or cs.id <> :Status_id )"); //WDEV-18962
			
		paramNames.add("Patient_id");
		paramValues.add(patient.getID_Patient());
		
		//WDEV-18962
		paramNames.add("Status_id");
		paramValues.add(ims.core.vo.lookups.DocumentStatus.DRAFT.getID());
		
		if (from  != null )
		{
			query.append("and pd.recordingDateTime >= :dateFrom ");
			paramNames.add("dateFrom");
			paramValues.add(from.getDate());
				
		}
		if (to != null)
		{
			query.append("and pd.recordingDateTime < :dateTo ");
			paramNames.add("dateTo");
			paramValues.add(((Date) to.clone()).addDay(1).getDate());
		}
			
		query.append(" order by pd.recordingDateTime desc ");
			
		List<?> domainObjects = getDomainFactory().find(query.toString(), paramNames, paramValues);
			
		return LinkPatientDocumentVoAssembler.createLinkPatientDocumentVoCollectionFromPatientDocument(domainObjects);
	}

	
}
