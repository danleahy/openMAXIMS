//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Bogdan Tofei using IMS Development Environment (version 1.80 build 5256.13787)
// Copyright (C) 1995-2014 IMS MAXIMS. All rights reserved.

package ims.clinical.domain.impl;

import ims.admin.domain.OrganisationAndLocation;
import ims.admin.domain.impl.OrganisationAndLocationImpl;
import ims.clinical.domain.base.impl.BaseWardSelectionForVteConfigImpl;
import ims.core.resource.place.domain.objects.Location;
import ims.core.resource.place.vo.LocationRefVo;
import ims.core.vo.domain.LocationForVTEAssessmentVoAssembler;
import ims.core.vo.lookups.LocationType;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class WardSelectionForVteConfigImpl extends BaseWardSelectionForVteConfigImpl
{

	private static final long serialVersionUID = 1L;

	public ims.core.vo.LocationLiteVoCollection listHospitals()
	{
		OrganisationAndLocation organisationImpl = (OrganisationAndLocation) getDomainImpl(OrganisationAndLocationImpl.class);
		return organisationImpl.listActiveHospitalsLite().sort();
	}

	public ims.core.vo.LocationForVTEAssessmentVoCollection listWards(LocationRefVo hospital)
	{
		if (hospital == null || hospital.getID_Location() == null)
			throw new CodingRuntimeException("Cannot list wards for a null Hospital Id.");

		return LocationForVTEAssessmentVoAssembler.createLocationForVTEAssessmentVoCollectionFromLocation(listLocationsByParentLocation(hospital)).sort();
	}

	private List<Location> listLocationsByParentLocation(LocationRefVo hospital)
	{
		if (hospital == null || hospital.getID_Location() == null)
			return null;
		//http://jira/browse/WDEV-21222 
		OrganisationAndLocation impl = (OrganisationAndLocation)getDomainImpl(OrganisationAndLocationImpl.class);
		return impl.listLocationsByParentLocation(LocationType.WARD,hospital, Boolean.TRUE, Boolean.FALSE,null);
	}

}
