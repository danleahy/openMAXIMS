//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Daniel Laffan using IMS Development Environment (version 1.80 build 5465.13953)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.

package ims.clinical.domain.impl;

import ims.clinical.domain.IntraOperativeCaseDetailsDialog;
import ims.clinical.domain.base.impl.BaseSkinClosureIntraOpDialogImpl;
import ims.clinical.domain.objects.SkinClosureIntraOp;
import ims.clinical.vo.domain.SkinClosureIntraOpVoAssembler;
import ims.domain.DomainFactory;
import ims.framework.exceptions.CodingRuntimeException;

public class SkinClosureIntraOpDialogImpl extends BaseSkinClosureIntraOpDialogImpl
{

	private static final long serialVersionUID = 1L;

	/**
	* listIntraOpPlannedProcedureByAppointment
	*/
	public ims.clinical.vo.IntraOpPlannedProcedureVoCollection listIntraOpPlannedProcedureByAppointment(ims.scheduling.vo.Booking_AppointmentRefVo appt)
	{
		IntraOperativeCaseDetailsDialog impl = (IntraOperativeCaseDetailsDialog) getDomainImpl(IntraOperativeCaseDetailsDialogImpl.class);
		return impl.listIntraOpPlannedProcedureByAppointment(appt);
	}

	/**
	* saveSkinClosureIntraOp
	*/
	public void saveSkinClosureIntraOp(ims.clinical.vo.SkinClosureIntraOpVo skinClosure) throws ims.domain.exceptions.StaleObjectException
	{
		String methodName = "saveSkinClosureIntraOp";
		if (skinClosure == null)
			throw new CodingRuntimeException("skinClosure is null in method " + methodName);
		if (!skinClosure.isValidated())
			throw new CodingRuntimeException("skinClosure has not been validated in method " + methodName);

		DomainFactory factory = getDomainFactory();
		SkinClosureIntraOp doSkinClosure = SkinClosureIntraOpVoAssembler.extractSkinClosureIntraOp(factory, skinClosure);
		factory.save(doSkinClosure);
	}

	/**
	* getSkinClosureIntraOp
	*/
	public ims.clinical.vo.SkinClosureIntraOpVo getSkinClosureIntraOp(ims.clinical.vo.SkinClosureIntraOpRefVo skinClosure)
	{
		return SkinClosureIntraOpVoAssembler.create((SkinClosureIntraOp) getDomainFactory().getDomainObject(skinClosure));
	}
}
