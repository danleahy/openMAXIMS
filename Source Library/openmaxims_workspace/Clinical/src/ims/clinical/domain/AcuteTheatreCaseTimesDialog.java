//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.domain;

// Generated from form domain impl
public interface AcuteTheatreCaseTimesDialog extends ims.domain.DomainInterface
{
	// Generated from form domain interface definition
	/**
	* Save AnaestheticSignIn and Update Theatre Booking State
	*/
	public void saveAnaestheticSignIn(ims.clinical.vo.PeriOpAnaesthticSignInTimVo signIn, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;

	// Generated from form domain interface definition
	/**
	* getAnaestheticSignIn
	*/
	public ims.clinical.vo.PeriOpAnaesthticSignInTimVo getAnaestheticSignIn(ims.clinical.vo.PeriOpAnaesthticSignInTimVo signIn);

	// Generated from form domain interface definition
	/**
	* getSafetyBrief
	*/
	public ims.clinical.vo.PeriOpSafetyBriefTimeVo getSafetyBrief(ims.clinical.vo.PeriOpSafetyBriefTimeVo safetyBrief);

	// Generated from form domain interface definition
	/**
	* getPatientSentFor
	*/
	public ims.clinical.vo.PeriOpPatientSentTimeVo getPatientSentFor(ims.clinical.vo.PeriOpPatientSentTimeVo patientSentFor);

	// Generated from form domain interface definition
	/**
	* getPatientArrived
	*/
	public ims.clinical.vo.PeriOpPatientArrivedTimeVo getPatientArrived(ims.clinical.vo.PeriOpPatientArrivedTimeVo patientArrived);

	// Generated from form domain interface definition
	/**
	* getAnaesRFS
	*/
	public ims.clinical.vo.PeriOpReadyForSurgeryTimeVo getAnaesRFS(ims.clinical.vo.PeriOpReadyForSurgeryTimeVo anaesRFS);

	// Generated from form domain interface definition
	/**
	* getTimeOutCompleted
	*/
	public ims.clinical.vo.PeriOpTimeOutCompleteVo getTimeOutCompleted(ims.clinical.vo.PeriOpTimeOutCompleteVo timeOutCompleted);

	// Generated from form domain interface definition
	/**
	* getSurgeryStart
	*/
	public ims.clinical.vo.PeriOpSurgeryStartTimeVo getSurgeryStart(ims.clinical.vo.PeriOpSurgeryStartTimeVo surgeryStart);

	// Generated from form domain interface definition
	/**
	* getSurgeryStop
	*/
	public ims.clinical.vo.PeriOpSurgeryStopTimeVo getSurgeryStop(ims.clinical.vo.PeriOpSurgeryStopTimeVo surgeryStop);

	// Generated from form domain interface definition
	/**
	* getReadyForDischarge
	*/
	public ims.clinical.vo.PeriOpReadyForDischargeVo getReadyForDischarge(ims.clinical.vo.PeriOpReadyForDischargeVo readyForDischarge);

	// Generated from form domain interface definition
	/**
	* getPatientLeftTheatre
	*/
	public ims.clinical.vo.PeriOpPatientLeftTheatreVo getPatientLeftTheatre(ims.clinical.vo.PeriOpPatientLeftTheatreVo patientLeftTheatre);

	// Generated from form domain interface definition
	/**
	* getTimeOutOfRecovery
	*/
	public ims.clinical.vo.PeriOpTimeOutOfRecoveryVo getTimeOutOfRecovery(ims.clinical.vo.PeriOpTimeOutOfRecoveryVo timeOutOfRecovery);

	// Generated from form domain interface definition
	/**
	* Save Safety Brief and Update Theatre Booking State
	*/
	public void saveSafetyBrief(ims.clinical.vo.PeriOpSafetyBriefTimeVo safetyBrief, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* save Patient Sent For and update booking state
	*/
	public void savePatientSentFor(ims.clinical.vo.PeriOpPatientSentTimeVo patientSentFor, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* savePatientArrived
	*/
	public void savePatientArrived(ims.clinical.vo.PeriOpPatientArrivedTimeVo patientArrived, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* saveAnaesthetisedRFS and update booking state
	*/
	public void saveAnaesthetisedRFS(ims.clinical.vo.PeriOpReadyForSurgeryTimeVo anaesthetizedRFS, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* saveTimeOutCompleted and update booking state
	*/
	public void saveTimeOutCompleted(ims.clinical.vo.PeriOpTimeOutCompleteVo timeOutCompleted, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* saveSurgeryStart and update booking state
	*/
	public void saveSurgeryStart(ims.clinical.vo.PeriOpSurgeryStartTimeVo surgeryStart, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* saveSurgeryStop and update Booking state
	*/
	public void saveSurgeryStop(ims.clinical.vo.PeriOpSurgeryStopTimeVo surgeryStop, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* savePatientLeftTheatre and update booking state
	*/
	public void savePatientLeftTheatre(ims.clinical.vo.PeriOpPatientLeftTheatreVo patientLeftTheatre, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* savePatientReadyForDischarge and update booking state
	*/
	public void savePatientReadyForDischarge(ims.clinical.vo.PeriOpReadyForDischargeVo patientRFD, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* saveTimeOutOfRecovery and update booking state
	*/
	public void saveTimeOutOfRecovery(ims.clinical.vo.PeriOpTimeOutOfRecoveryVo timeOutOfRecovery, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.StaleObjectException, ims.domain.exceptions.UniqueKeyViolationException;

	// Generated from form domain interface definition
	/**
	* getTimeIntoRecovery
	*/
	public ims.clinical.vo.PeriOpTimeIntoRecoveryVo getTimeIntoRecovery(ims.clinical.vo.PeriOpTimeIntoRecoveryVo timeIntoRecovery);

	// Generated from form domain interface definition
	/**
	* saveTimeIntoRecovery and Update Theatre Booking State
	*/
	public void saveTimeIntoRecovery(ims.clinical.vo.PeriOpTimeIntoRecoveryVo timeIntoRecovery, ims.scheduling.vo.TheatreBookingRefVo theatreBooking) throws ims.domain.exceptions.DomainInterfaceException, ims.domain.exceptions.StaleObjectException;
}
