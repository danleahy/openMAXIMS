//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseEDischargeDiagnosisEtcComponentImpl extends DomainImpl implements ims.clinical.domain.EDischargeDiagnosisEtcComponent, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validategetDiagnosisVo(ims.core.clinical.vo.PatientDiagnosisRefVo patdiagrefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveDiagnosisVo(ims.core.vo.PatientDiagnosisEDischargeListVo voDiagnosis, ims.edischarge.vo.SummaryRefVo summaryVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistDiagnosis(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPreviousRecordsForPatient(ims.core.patient.vo.PatientRefVo voPatRef, ims.framework.utils.Date careContextDate, String ignore)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistPreviousComorbidity(ims.core.patient.vo.PatientRefVo patient, ims.framework.utils.Date startDate, String ignored)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistComorbidity(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistComplications(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetDischargeDetails(ims.core.admin.vo.CareContextRefVo careContextRefvo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveDischargeDetails(ims.clinical.vo.DischargeDetailsVo voDischargeDetails, ims.edischarge.vo.SummaryRefVo summaryVo, ims.clinical.vo.RTLSummaryVo rTLSummary, ims.core.vo.PatientNoDiagInfoForCCVo patientNoDiagInfo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetDischargeClinicalInformation(ims.core.admin.vo.CareContextRefVo careContext)
	{
	}

	@SuppressWarnings("unused")
	public void validatesave(ims.clinical.vo.DischargeDetailsVo dd, ims.core.vo.PatientDiagnosisEDischargeListVoCollection diags, ims.edischarge.vo.SummaryRefVo summary, ims.clinical.vo.RTLSummaryVo rTLSummaryVo, ims.core.vo.PatientNoDiagInfoForCCVo patientNoDiagInfo)
	{
		if(dd == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'dd' of type 'ims.clinical.vo.DischargeDetailsVo' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validaterieDiagnosis(ims.core.vo.PatientDiagnosisEDischargeListVo diag, ims.framework.FormName formName, ims.core.patient.vo.PatientRefVo patientRef, Integer contactId, ims.core.admin.vo.CareContextRefVo careContextRef, String rieMessage, ims.edischarge.vo.SummaryRefVo summary, Integer whatsBeingRecordedInError, ims.core.vo.EpisodeofCareShortVo episodeOfCareRef)
	{
		if(diag == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'diag' of type 'ims.core.vo.PatientDiagnosisEDischargeListVo' cannot be null.");
		if(formName == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'formName' of type 'ims.framework.FormName' cannot be null.");
		if(rieMessage == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'rieMessage' of type 'String' cannot be null.");
	}

	@SuppressWarnings("unused")
	public void validategetPIDDiagnosisInfo(ims.core.admin.vo.CareContextRefVo careContextRefVo, ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetRTLSummaryForCareContext(ims.core.admin.vo.CareContextRefVo careContextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetPatientNoDiagInfoForCareContext(ims.core.admin.vo.CareContextRefVo careContextRef)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistIncludedComorbidities(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo, ims.core.admin.vo.CareContextRefVo careContextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistRelevantComorbidities(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo, ims.core.admin.vo.CareContextRefVo careContextRefVo)
	{
	}
}
