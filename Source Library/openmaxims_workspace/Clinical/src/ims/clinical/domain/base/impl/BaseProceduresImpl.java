//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.clinical.domain.base.impl;

import ims.domain.impl.DomainImpl;

public abstract class BaseProceduresImpl extends DomainImpl implements ims.clinical.domain.Procedures, ims.domain.impl.Transactional
{
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unused")
	public void validatelistProcedureByClinalContact(ims.core.admin.vo.ClinicalContactRefVo clinicalContactRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProcedureByPatient(ims.core.patient.vo.PatientRefVo patientRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProcedure(ims.core.admin.vo.ClinicalContactRefVo clinicalContactRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validategetProcedure(ims.core.clinical.vo.PatientProcedureRefVo patientProcedureRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatesavePlannedProcedure(ims.core.vo.PatientProcedureVo voPatientProcedure, ims.core.vo.PatientShort patientShortVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProceduresByCareContext(ims.core.admin.vo.CareContextRefVo careContextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProceduresByEpisodeOfCare(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProceduresByCareSpell(ims.core.admin.vo.CareSpellRefVo careSpellRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProceduresByCareContextPatientSummary(ims.core.admin.vo.CareContextRefVo careContextRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProceduresByEpisodeOfCareShortList(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistHotlistProcedureShort(String procedureName, ims.core.vo.lookups.Specialty specialty)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProcedureByPatientAndStatus(ims.core.patient.vo.PatientRefVo patientRefVo, ims.core.vo.lookups.PatientProcedureStatus status)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProcedureByClinicalContactAndStatus(ims.core.admin.vo.ClinicalContactRefVo clinicalContactRefVo, ims.core.vo.lookups.PatientProcedureStatus status)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProceduresByCareContextPatientSummaryAndStatus(ims.core.admin.vo.CareContextRefVo careContextRefVo, ims.core.vo.lookups.PatientProcedureStatus status)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProceduresByEpisodeOfCareAndStatus(ims.core.admin.vo.EpisodeOfCareRefVo episodeOfCareRefVo, ims.core.vo.lookups.PatientProcedureStatus status)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProceduresByCareSpellAndStatus(ims.core.admin.vo.CareSpellRefVo careSpellRefVo, ims.core.vo.lookups.PatientProcedureStatus status)
	{
	}

	@SuppressWarnings("unused")
	public void validatesaveClinicalDiAssociation(ims.clinical.vo.ClinicalDIAssociationVoCollection list)
	{
	}

	@SuppressWarnings("unused")
	public void validatecheckIfClinicalCDIAssociationsExist(ims.core.clinical.vo.PatientProcedureRefVo voPatientProcedure)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistHcpLiteByName(String hcpName)
	{
	}

	@SuppressWarnings("unused")
	public void validatelistProcedureShortListVoByPatient(ims.core.patient.vo.PatientRefVo patient)
	{
	}

	@SuppressWarnings("unused")
	public void validategetIntraOperativeCareRecord(ims.core.clinical.vo.IntraOperativeCareRecordRefVo refVo)
	{
		if(refVo == null)
			throw new ims.domain.exceptions.DomainRuntimeException("The parameter 'refVo' of type 'ims.core.clinical.vo.IntraOperativeCareRecordRefVo' cannot be null.");
	}
}
